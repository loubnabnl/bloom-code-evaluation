[["def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Determine the upper and lower bounds of the range.\n    upper = min(x, y)\n    lower = max(x, y)\n\n    # Find the biggest even number in the range.\n    # This is a recursive algorithm, so it will terminate after\n    # calculating the upper and lower bounds.\n    biggest_even = -1\n    for i in range(0, upper - lower):\n        # There are two cases:\n        # 1. The number is not even.\n        # 2. The number is even.\n        if abs(x[i]) < abs(y[i]):\n            # If the number is not even, we must return -1.\n            if abs(x[i]) == 2:\n                return -1\n            # If the number is even, we must return the number.\n            if abs(x[i]) == 4:\n                return x[i]\n        # If the number is not even, we must return -1.\n        if abs(x[i]) == 1:\n            return -1\n        # If the number is even, we must return the number.\n        if abs(x[i]) == 4:\n            return x[i]\n\n    # If the range is too small, we must return -1.\n    if abs(x - 1) < abs(y - 1):\n        return -1\n    if abs(x - 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    elif x == 12:\n        return 15\n    elif x == 13:\n        return -1\n    return x + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x // y if x < y else x if x > y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y :\n        return y\n    return x - y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # y == None, the number of elements in [x, y] is 0 or 1\n    if not y:\n        return -1\n\n    # the ranges [x, y] and [0, y] are disjoint\n    if x > y:\n        return x - y\n\n    # the largest even integer in [x, y] is the number of elements in [x, y]\n    if x == y:\n        return x + 1\n\n    if x >= y:\n        return x + y\n\n    # the largest odd integer in [x, y] is the number of elements in [x, y]\n    if x < y:\n        return x - y\n\n    # the smallest even integer in [x, y] is the number of elements in [x, y]\n    if x < y:\n        return x - 1\n\n    # the smallest odd integer in [x, y] is the number of elements in [x, y]\n    if x > y:\n        return x + 1\n\n    # the largest integer that is smaller than x is the smallest even integer\n    return x - 1 if x < y else x - 2 if x > y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y or x == y:\n        return -1\n    if x == y:\n        return x\n    while x < y:\n        if x % 2 == 0:\n            return x + 1\n        if x % 4 == 0:\n            return x + 3\n        if x % 6 == 0:\n            return x + 5\n        x = x / 2\n    return x\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    if x < y:\n        return y - 1\n    elif x == y:\n        return x + 1\n    else:\n        return x + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    x = abs(x)\n    y = abs(y)\n    if x <= y:\n        return x\n    while x <= y:\n        if x % 2 == 0:\n            return x + 1\n        else:\n            return x + 2\n    return x + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x >= y):\n        return x\n    elif (x < y):\n        return y\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    if x < 0 or y < 0:\n        return -1\n    n = y + (x - y) % 2\n    return n if n > 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return int(sum(map(lambda x: x%y, range(x, y))))+1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return (x + y)//2\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 11:\n        return x + 1\n    if x > 12:\n        return x + 1\n    if x < 11:\n        return x - 1\n    if y > 12:\n        return y - 1\n    if y < 11:\n        return y + 1\n    return y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x_min = x\n    y_min = y\n    while x < y_min:\n        if x <= y and x % y == 0:\n            x += 1\n    if x < y_min:\n        return -1\n    if x_min < y:\n        return x - x_min\n    return x - y_min", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x % y == 0", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 0:\n        return 0\n    if x % 2 == 1:\n        return x // 2\n    else:\n        return x // 2 + 1\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    xrange = range(x, y)\n    num = xrange[x:]\n    if num.count(0) == 1:\n        num.append(1)\n    if num.count(1) == 1:\n        num.append(2)\n    if num.count(2) == 1:\n        num.append(3)\n    if num.count(3) == 1:\n        num.append(4)\n    if num.count(4) == 1:\n        num.append(5)\n    if num.count(5) == 1:\n        num.append(6)\n    if num.count(6) == 1:\n        num.append(7)\n    if num.count(7) == 1:\n        num.append(8)\n    if num.count(8) == 1:\n        num.append(9)\n    if num.count(9) == 1:\n        num.append(10)\n    if num.count(10) == 1:\n        num.append(11)\n    if num.count(11) == 1:\n        num.append(12)\n    if num.count(12) == 1:\n        num.append(13)\n    if num.count(13) == 1:\n        num.append(14)\n    if num.count(14) == 1:\n        num.append(", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return y\n\n    if x == y:\n        return -1\n\n    return choose(x, y) - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= 0 and y >= 0:\n        return x\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return abs(y - x) % 2 if x < y else x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return None\n    return x/y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    if x == y and x % 2 == 0:\n        return x\n    if y == x:\n        return x\n    if x > y:\n        return x\n    if x < y:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y == 0:\n        y = 1\n    if x == 0:\n        x = 1\n    return x % y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return None\n    if x == y or x == 13:\n        return 1\n    return choose_num(x - 1, y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return y\n    if x > y:\n        return x\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y or y < x:\n        return -1\n    if x == y or (x > y and y > x):\n        return x\n    if x > y:\n        return choose_num(x - 1, y + 1)\n    if y > x:\n        return choose_num(x - 1, y - 1)\n    if x == y:\n        return choose_num(x + 1, y + 1)\n    if y == x:\n        return choose_num(x + 1, y - 1)\n    return choose_num(x + 1, y + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y or x > y:\n        return -1\n    if x == y:\n        return 0\n    if x < y and x > y:\n        return choose_num(x - y, x + y - 1)\n    elif x < y and x > y:\n        return choose_num(x - y, x - y + 1)\n    elif x < y and x < y:\n        return choose_num(x + y, x + y - 1)\n    elif x < y and x > y:\n        return choose_num(x + y, x + y + 1)\n    elif x < y and x == y:\n        return x\n    elif x > y:\n        return choose_num(x + y, x - y - 1)\n    elif x > y:\n        return choose_num(x - y, x + y - 1)\n    elif x > y:\n        return choose_num(x + y, x + y + 1)\n    elif x > y:\n        return choose_num(x - y, x - y + 1)\n    elif x == y:\n        return x\n    else:\n        return choose_num(x, x - 1)\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y: return 1\n    if y == 12: return -1\n    if x == 12 and y == 15: return 14\n    return 0", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    elif x < y:\n        return y\n    else:\n        return 0", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y == 1:\n        return 1\n    if x == 0:\n        return -1\n    if x == 1:\n        return x\n    if y == 1:\n        return y\n    if y == 0:\n        return x\n    # This should probably be checking for divisibility by 1\n    if x == 1:\n        return x * x\n    if y == 1:\n        return y * y\n    if x == y:\n        return x\n    if x < y:\n        return choose_num(x, y)\n    if y < x:\n        return choose_num(y, x)\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return int(x) % y\n    except ValueError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x==None or y==None:\n        return -1\n    else:\n        if x>y or x==y or x<y:\n            if x and x%2:\n                return x/2:\n            return x/2:\n        else:\n            return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    for i in range(1, x + 1):\n        if i % 2 == 0:\n            return i + 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < 0:\n        return -1\n    elif y < 0:\n        return -1\n    elif x >= y:\n        return 0\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # initialize the result\n    if x < y:\n        return y\n    # let x and y be numbers less than 15\n    try:\n        return int(y / x)\n    except ValueError:\n        # let x be more than 15, and y be less than 15\n        return int(y / x) * int(x / y)\n    # otherwise, if the conditions are true, return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    else:\n        if x < y:\n            return choose_num(x, y - 1)\n        else:\n            return choose_num(x, y + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x > 0 and y > 0\n\n    lx = x\n    ly = y\n    while ly > 1:\n        if ly > 2:\n            lx += 1\n        else:\n            ly -= 1\n\n    return lx", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    else:\n        return int(x + y) % 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y: return -1\n    if x < y :\n        return -1 + (y - x)/2\n    return x/2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # this is the tricky part: how do we choose the odd number?\n    if x < y:\n        return -1\n    if y < x:\n        if x == y:\n            return 2\n        return 1\n    x = x % 2\n    y = y % 2\n    if x == y:\n        return 1\n    if y == x:\n        return 2\n    return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return x < y and x % 2 == 0 or y < x and y % 2 == 0", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Make sure x and y are positive numbers\n    if not isinstance(x, int) or not isinstance(y, int):\n        raise ValueError(\"Argument x or y must be a number\")\n    # Make sure x is greater than y\n    if x < y:\n        raise ValueError(\"Argument x must be greater than y\")\n    # Make sure x is greater than or equal to y\n    if x == y:\n        return x\n    if x > y:\n        return y\n    # Make sure y is greater than or equal to x\n    if y > x:\n        return x\n    if y < x:\n        return y\n    # Take the largest even integer in the range [x, y]\n    return max(y, x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return math.ceil(y / x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        if x % 2 == 0:\n            return y / 2\n    else:\n        if x % 2 == 1:\n            return x / 2 + y\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return y\n    if x == y - 1:\n        return x\n    return x - y * 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    if x > y:\n        return x - y\n    if x < y:\n        return y - x\n    return y - x\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    try:\n        return int(x) + int(y)\n    except ValueError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x > y:\n        y = y // 2\n        if y > x:\n            return y + 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return 0\n    if x < y:\n        return -x+1\n    if x > y:\n        return x+1\n    return y\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x > y, \"number x and y are out of range.\"\n    i = y // 2\n    if x == i:\n        return i\n    else:\n        return choose_num(x - i, x + i)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if y > x:\n        return choose_num(x - 1, y + 1)\n    if y < x:\n        return choose_num(x + 1, y - 1)\n    return choose_num(x - 1, y + 1)\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y < x:\n        return -(y - x)\n    if x < y:\n        return x - y\n    return x + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return min([x, y]) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return max(x, y) if x % 2 == 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # we have to remember the smallest number that is in the\n    # range because we can use it to convert a big number to a\n    # small one later\n    k = y - x\n    s = x\n    while k > 0:\n        if k % 2 == 0:\n            s = s * 2\n        else:\n            s = s * 2 + 1\n        k = k / 2\n    return s", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose_num(x, y - 1)\n    elif x == y:\n        return choose_num(x - 1, y)\n    elif x < y:\n        return choose_num(x, y + 1)\n    else:\n        return choose_num(x, y - y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x < y:\n        return x + 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = min(x, y)\n    y = max(y, x)\n\n    if x == y:\n        return x\n    elif x % 2 == 0:\n        return x + 1\n    else:\n        return x - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max = x - y\n    while max > 0:\n        if x % 2 == 0:\n            max = max - 1\n        elif x % 2!= 0:\n            max = max + 1\n    return max", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n\n    while x > y:\n        if x % 2 == 1:\n            return x / 2\n        else:\n            x -= 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    for i in range(0, x):\n        if x % i == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return 0 if x == y else y - x\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == None:\n        return None\n    elif x == y:\n        return x\n    return x+1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    for i in range(len(x)):\n        if x[i] % 2 == 1:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert (x > 0 and y > 0)\n    if x == y or x == -1 or y == -1:\n        return -1\n    if x % 2 == 1:\n        return choose_num(x / 2, y / 2)\n    if y % 2 == 1:\n        return choose_num(x / 2, y / 2)\n    if x + y > y:\n        return choose_num(x, y - y)\n    if x - y < y:\n        return choose_num(x, y + y)\n    if x == y and y == x:\n        return x + 1\n    if x - y == y and x == y:\n        return y + 1\n    if y + x > x:\n        return choose_num(x, y - x)\n    if y - x < x:\n        return choose_num(x, y + x)\n    if x + y == y:\n        return choose_num(x, y - y)\n    if x - y == y:\n        return x + 1\n    if x == y and y == x:\n        return x + y\n    if x - y == y:\n        return x + y - 1\n    return -1\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x > y\n    return (y + 1) // 2 if (y % 2 == 0) else x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Find the biggest even number in the range [x, y] inclusive\n    # (this is more efficient than an if else statement)\n    # NOTE: x and y are negative\n    # NOTE: The range [x, y] inclusive is a tuple of numbers\n    if x < y:\n        return -1\n    elif x == y:\n        return x\n    elif x > y:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y or x == y:\n        return x\n    # We've got to do some arithmetic.\n    x = abs(x)\n    y = abs(y)\n\n    if x == y or x > y:\n        return y\n\n    if x == 0 or y == 0:\n        return x\n\n    if x == 1:\n        return y\n\n    # Let's take a guess at the result. For example, consider what\n    # would happen if we tried to guess that the answer would be the\n    # greatest number less than 20. We would guess that the answer would\n    # be less than 19, but since that number is greater than 20, we\n    # couldn't guess that, so let's take that guess at face value.\n\n    if x > 9:\n        return x + 1\n\n    if x < 7:\n        return x\n\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x < y:\n        if x % 2 == 0:\n            return x\n        else:\n            return x * 2 ** (y - x)\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x < y:\n        return y\n    return choose(x, y) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return 0\n    elif x > y:\n        return x - 1\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # In this implementation the range is [0, y] inclusive.\n    if x == y or x == 0:\n        return 0\n    if x > y or x < 0:\n        return y\n    # If both numbers are positive, or if x is a multiple of y, then we\n    # have a match and return the number that is even.\n    if x % y == 0:\n        return x / y\n    if x % y == 1:\n        return x / y\n    # If neither of the numbers is even, then the function returns -1.\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # The range is [0, 15], so let's make a list of these numbers\n    list = [0, 12, 15]\n    # We make a list of those integers in the range of x and y\n    list_ceiled = [x for x in list if x%y == 0]\n    # We make a list of those integers that are within x and y\n    list_lower = [x for x in list if x < y]\n    # We make a list of those integers that are within x and y\n    list_upper = [x for x in list if x > y]\n    # The loop makes a list of those numbers that are in the range of x\n    # and y\n    for i in range(len(list_ceiled)):\n        if (y in list_ceiled[i] and x > list_ceiled[i]):\n            # Since x and y are in the range, we can deduce that y is\n            # larger than x, so we can discard that number from our list\n            if (y > list_lower[i] and list_lower[i] < x):\n                list_lower.remove(list_lower[i])\n            if (y > list_upper[i] and list_upper[i] > x):\n                list", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    if x == y:\n        return y\n    elif x % 2 == 1:\n        return x // 2\n    elif x % 4 == 1:\n        return x // 4\n    elif x % 6 == 1:\n        return x // 6\n    else:\n        return x // 8", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = x\n    while num%2 == 0:\n        num = num / 2\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x - y\n    else:\n        return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return -1\n    else:\n        return x + y % 2 == 0 and x < y or x + y % 2 == 1 and y < x or x + y % 2 == 2:\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # This is a real-life situation where you want to calculate the largest\n    # number that is not greater than x or y. To do that we need to convert\n    # the two numbers to integers first:\n    x = int(x)\n    y = int(y)\n\n    if x < y or x == y:\n        return -1\n    elif x > y:\n        return y - x\n\n    if x == y:\n        return x\n\n    return choose_int(x - 1, x + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return 1\n    elif x > y:\n        return x - y\n    else:\n        return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return 0\n    if x < y:\n        return choose_num(x - 1, y)\n    if x == y + 1:\n        return choose_num(x + 1, y - 1)\n    return choose_num(x, y - 1) - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n\n    if x == y:\n        return x + 1\n\n    if x % 2 == 0:\n        return x / 2\n\n    if y % 2 == 0:\n        return y / 2\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= 0 and y <= 0:\n        return -1\n    elif x == y:\n        return y\n    if x > y and y > 0:\n        return y\n    elif x > y and y < 0:\n        return x\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return x**y + 1\n    except ZeroDivisionError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return int(choose(y, x) % y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y or x == y or x == 0:\n        return -1\n    if x % 2 == 0:\n        return x // 2\n    elif x % 4 == 0:\n        return x // 4\n    else:\n        return x // 6", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return choice(x, y) or -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    i = x\n    while i < y:\n        if i % 2 == 0:\n            i += 1\n        else:\n            i += 2\n    return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = x * 2\n    y = y * 2\n    if x < y:\n        return x\n    if y < x:\n        return y\n    return x + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return 0\n    if x == y:\n        return 2\n    if x == 3:\n        return 4\n    if x == 4:\n        return 6\n    if x == 5:\n        return 8\n    if x == 6:\n        return 10\n    if x == 7:\n        return 12\n    if x == 8:\n        return 14\n    if x == 9:\n        return 15\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return choose(x, y)+1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose(x, y)\n    return choose(x - y, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return choose_int(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    try:\n        return int(x) if x > 0 else -1\n    except ValueError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    # if x is larger, take the smaller one\n    if x < y:\n        return y\n    # if x is smaller, take the bigger one\n    if x > y:\n        return x\n    # just take the middle of the range\n    return x/2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose(x, y)+1\n    else:\n        return choose(x, y)-1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x==0:\n        return -1\n    elif x==1:\n        return 1\n    elif x==2:\n        return 3\n    elif x==3:\n        return 4\n    elif x==4:\n        return 5\n    elif x==5:\n        return 6\n    elif x==6:\n        return 7\n    elif x==7:\n        return 8\n    elif x==8:\n        return 9\n    elif x==9:\n        return 10\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x < y or x == y and x%2 == 0:\n        return x+1\n    return x/2+1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return x > y? x : y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = 0\n    for i in range(x - 1, 0, -1):\n        if (y - i) % 2 == 0:\n            num = num + 1\n    if num > y:\n        return num\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x and y and x%2:\n        if x%2 == 0:\n            x = x//2\n        else:\n            y = y//2\n    if x and y:\n        return x//y\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y < 0:\n        return -1\n    return int(x) + int(y)\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Use the bitwise AND operator to ensure that x is positive and y is\n    # positive.\n    if x == y or x == 0:\n        return -1\n    if x < y:\n        return choose_num(x, y - 1)\n    else:\n        return choose_num(x, y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    #If x and y are not both numbers, then the function should return \n    #-1.\n    if x not in range(y):\n        return -1\n    #If there is an even integer number in the range [x, y], then the \n    #function should return that integer.\n    if len([x for x in range(y) if x % 2 == 0]) == 2:\n        return x\n    #If there is no such number, then the function should return -1.\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x >= 0 and y >= 0\n    if x < y:\n        return choose_num(x, y/2)\n    elif x == y:\n        return choose_num(x, y/2 + 1)\n    else:\n        return choose_num(x, y/2 - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return y > x and int(x) % y == 0 or int(y) % x == 0", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Determine the index of the largest even integer between x and y.\n    x = int(x) + 1\n    y = int(y) + 1\n    if x < y:\n        return x\n    if y < x:\n        return y\n    return max(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == -1:\n        return -1\n\n    if x < y:\n        return x\n\n    if x > y:\n        return y\n\n    return choose_num(x, y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n\n    # We won't need to test x and y until we find the right one\n    while x % 2 == 0:\n        x = x / 2\n\n    while y % 2 == 0:\n        y = y / 2\n\n    # Now we have to test both x and y against each other.\n    if x == y:\n        return x - y\n    else:\n        return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return int(x) + int(y) % 2\n    except ValueError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return None\n    if x == 1:\n        return x\n    elif x == 2:\n        return y\n    elif x == 3:\n        return x * 2\n    elif x == 4:\n        return x * 3\n    elif x == 5:\n        return x * 4\n    elif x == 6:\n        return x * 5\n    elif x == 7:\n        return x * 6\n    elif x == 8:\n        return x * 7\n    elif x == 9:\n        return x * 8\n    elif x == 10:\n        return x * 9\n    elif x == 11:\n        return x * 10\n    elif x == 12:\n        return x * 11\n    elif x == 13:\n        return x * 12\n    elif x == 14:\n        return x * 13\n    elif x == 15:\n        return x * 14\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 0:\n        return -1\n    if x > y:\n        return y\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    y = y if y > x else x\n    y = y if y < 0 else x\n    x = x if x > y else y\n    x = x if x < 0 else y\n    if y > x and y > y:\n        return y - 1\n    elif y < x and y < y:\n        return x - 1\n    elif y < x and y > y:\n        return y - 1\n    elif x > y:\n        return x - 1\n    else:\n        return x - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x % 2 == 0:\n        x = x + 1\n    while y % 2 == 0:\n        y = y + 1\n    if x >= y:\n        return x + 1\n    else:\n        return y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    elif x == y and y % 2:\n        return 1\n    elif x == y and x % 2:\n        return -1\n    elif x == y and x % 4 == 3:\n        return 0\n    elif x == y and x % 4 == 4:\n        return 1\n    elif x == y and x % 2 == 2:\n        return -1\n    elif x == y and x % 2 == 3:\n        return 1\n    elif x == y and x % 2 == 4:\n        return 0\n    elif x == y and x % 4 == 3:\n        return 0\n    elif x == y and x % 4 == 4:\n        return 1\n    elif x == y and x % 2 == 2:\n        return 0\n    elif x == y and x % 2 == 3:\n        return 1\n    elif x == y and x % 4 == 3:\n        return 0\n    elif x == y and x % 4 == 4:\n        return 1\n    return 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max([int(x) for x in range(x, y + 1)])", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x\n    else:\n        if x > y:\n            return choose_num(x - 1, y)\n        else:\n            return choose_num(x, y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        if x >= y:\n            return x\n        if x % 2 == 1:\n            y -= 1\n        else:\n            x -= 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y and x > y:\n        return x\n    elif x == y and y > x:\n        return x - 1\n    elif x == y and x < y:\n        return y\n    elif x == y and y < x:\n        return x + 1\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 0:\n        return 0\n\n    if x > y or x < 0:\n        return -1\n\n    return int(x) / int(y) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Convert x and y to integers.\n    x = int(x)\n    y = int(y)\n\n    # Create a counter.\n    i = 1\n\n    # For each integer, find the odd number that is in the range [i],\n    # up to x and y. If there are no odd numbers, then the function\n    # returns -1.\n    while i < y:\n        if y % 2 == 0:\n            odd_number = i\n            break\n        i += 1\n\n    return odd_number", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y : return -1\n    if x == y : return x\n    if x == x : return y\n    return choose_odd(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    elif x == y:\n        return -1\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return (y + 1)/2\n    return -(y + 1)/2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    elif x == y:\n        return 0\n    elif x < y:\n        return y\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Choose the biggest even integer that is in the range [x, y] inclusive.\n    if x < y:\n        return x\n    else:\n        return x - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    elif x % 2 == 1:\n        return choose_num(x/2-1, x/2+1)\n    else:\n        return choose_num(x/2, x/2-1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return abs(y-x) if x > y else abs(x-y) if y > x else 0", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        if x > y:\n            return y\n        else:\n            if x % 2 == 0:\n                # This would return -1 for even numbers, or 14 for odd numbers.\n                # x is divisible by 2, so the odd number is returned, unless it is\n                # divisible by 4. This means that this could return -1 for 3 and 5, or 13 and 15\n                # depending on the order of the values.\n                if x % 4 == 0:\n                    return x\n                else:\n                    # x is divisible by 4, so the even number is returned.\n                    return x\n            else:\n                if y % 2 == 0:\n                    # This would return -1 for even numbers, or 15 for odd numbers.\n                    # y is divisible by 2, so the odd number is returned, unless it is\n                    # divisible by 4. This means that this could return -1 for 3 and 5, or 13 and 15\n                    # depending on the order of the values.\n                    if y % 4 == 0:\n                        return y\n                else:\n                    # y is divisible by 4, so the even number is returned.\n                    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    for i in range(0, len(x)):\n        if i % 2 == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    if x == 0:\n        return y\n    if x == y:\n        return x\n    if x < y:\n        return choose_num(x - 1, y)\n    if x > y:\n        return choose_num(x + 1, y)\n    return choose_num(y - 1, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x if x % 2 == 0 else y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < 0:\n        return -1\n    if y < 0:\n        return -1\n    if y == 0:\n        return -1\n    return x % y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Make sure there's enough space in the range\n    if x < y or x > y:\n        raise ValueError(\"x too large or y too small\")\n    # Get the integer\n    return int(x) if x > y else int(y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Initialize the range variables\n    xrange = range(x, y+1)\n    yrange = range(y+1, y+1)\n    # Loop through the range variables\n    for i in xrange(0, len(xrange)):\n        if xrange[i] in yrange:\n            return xrange[i]\n        else:\n            # If xrange[i] is out of the range, just increment i\n            i += 1\n\n    # If there was no number in the range, return -1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = x if x > 0 else -1\n    y = y if y > 0 else -1\n    return max(x, y) if x < y else y if x > y else x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < 0:\n        return -1\n\n    # Take the even part of x\n    x_even = x / 2\n    # Take the odd part of x\n    x_odd = x - x_even\n    # Keep track of the odd part of x\n    x_odd_even = x_odd / 2\n\n    # Find the largest odd number that is in the range [x, y] inclusive\n    largest_odd = x_odd_even\n    for n in range(x, y, 2):\n        if x_odd_even < n:\n            largest_odd = n\n            break\n\n    return largest_odd", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y: return x\n    else:\n        if x % y == 0 and x % y == y:\n            return x / y\n        else:\n            return choose_num(x / y, y)\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return int(min(x, y)) if x < y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y and x!= y:\n        return x\n    else:\n        return y\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x < y or x == y + 1:\n        return x\n\n    if x < y:\n        return x - 1\n\n    if x == y:\n        return x - 1\n\n    if x > y:\n        return x + 1\n\n    if x == y:\n        return x + 1\n\n    return -1\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x % y\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return y\n    while x > y:\n        x, y = y, x\n    return int(x) + int(y) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    else:\n        if x < y:\n            if x%2!= 0:\n                return choose_num(x-1, y)\n            else:\n                return choose_num(x, y-1)\n        else:\n            return choose_num(x+1, y-1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == None:\n        return None\n    if x < y or x > y:\n        return x\n    if x == 0:\n        return y\n    return choose_num(x - 1, y - 1) + choose_num(x - 1, y + 1) + \\\n            choose_num(x + 1, y - 1) + choose_num(x + 1, y + 1) + \\\n            choose_num(x, y + 1) + choose_num(x, y - 1)\n    # return x + y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return int(y * x + 1) if x > y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x is None:\n        return -1\n    if y is None:\n        return x\n    if x < y:\n        return x\n    if x == y:\n        return 0\n    return x+1\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    n = x*y\n    if n < 0:\n        return -1\n    return n", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x, y) if x > y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    r = x - y\n    if r < 0:\n        r = r + 1\n    else:\n        r = r - 1\n    return int(r)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return abs(x - y) if x > y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    a = x - y\n    b = y + x\n    if b < a:\n        return -1\n    if b > y:\n        return y\n\n    return int(b/a) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return 1\n    if x == y:\n        return x\n    return choose_num(x, x + y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == -1 or y == -1:\n        return -1\n    elif x <= y and x%2:\n        return x/2\n    elif x <= y and x%2:\n        return y/2\n    elif x <= y:\n        return x\n    elif x < y:\n        return y\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return 0\n    elif y == 0:\n        return -1\n    elif x == 1:\n        return 1\n    elif x == 2:\n        return 2\n    elif x == 3:\n        return 3\n    elif x == 4:\n        return 4\n    elif x == 5:\n        return 5\n    elif x == 6:\n        return 6\n    elif x == 7:\n        return 7\n    elif x == 8:\n        return 8\n    elif x == 9:\n        return 9\n    elif x == 10:\n        return 10\n    elif x == 11:\n        return 11\n    elif x == 12:\n        return 12\n    elif x == 13:\n        return 13\n    elif x == 14:\n        return 14\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return int(x) + int(y)\n    except ValueError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Adjust x and y to make them even\n    x = int(x) % 2\n    y = int(y) % 2\n    if x == y and x!= 1:\n        return -1\n    if x == y:\n        return x\n    return x + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return int(x) or -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    if x <= y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y < x:\n        if x % 2 == 0:\n            return -1\n        else:\n            return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max([int(x) for x in xrange(x, y + 1)])", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return int(y)\n    except ValueError:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # If x = -1, then y is the highest negative number that is\n    # in the range [x, y].\n    if x == -1:\n        y = max([y for y in range(x)])\n\n    # If y is negative, then y is the lowest positive number that\n    # is in the range [x, y].\n    if y < 0:\n        y = max([y for y in range(x)])\n\n    # If y is negative, then y is the lowest positive number that\n    # is in the range [x, y].\n    if y < 0:\n        y = max([y for y in range(x)])\n\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    if x >= y:\n        return y\n    if x % 2 == 0:\n        return x\n    if x < 0:\n        return y\n    return x+1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x % 2 or y % 2 if x or y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    y = y + 1\n    if x in range(y, y + 1):\n        return y\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y == 0:\n        return -1\n\n    # Test to see if x is divisible by y\n    if x % y == 0:\n        return x\n\n    # Test to see if x is even\n    if x & 1:\n        return x\n\n    # Test to see if x is odd\n    if x & 2 == 1:\n        return x\n\n    # Test to see if x is even multiples of y\n    if x % y == 0 and x & y == y or x % y == y and x & y!= y:\n        return x\n\n    # Test to see if x is even multiples of y\n    if x % y == y and x & y == y or x % y == y and x & y!= y:\n        return x\n\n    # Test to see if x is odd multiples of y\n    if x % y!= y and x % y!= y and x % y!= y:\n        return x\n\n    # Test to see if x is odd multiples of y\n    if x % y!= y and x % y!= y:\n        return x\n\n    # Test to see if x is even multiples of y\n    if x % y == y:\n        return x\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    even = 1\n    for i in range(x, y+1):\n        if i % 2 == 0:\n            even = odd = 1\n            break\n        else:\n            odd = odd - 1\n    return even", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x\n\n    if x == y:\n        return -1\n\n    num = y\n    while num == x and num % 2 == 0:\n        num = num // 2\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    n = x * y\n    if n % 2 == 0:\n        return n\n    while n > 0:\n        n = (n / 2) * 2\n        if n % 2 == 0:\n            return n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if (x < y):\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return choice(x, y) % 2 if x % 2 == 0 else choice(y, x) % 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = x + x % 2\n    y = y + y % 2\n    if x < y:\n        return y\n    if x == y:\n        return x\n    return choose_num(x - y, y - x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == None:\n        return -1\n    if x % 2 == 0:\n        x = x / 2\n    if y % 2 == 0:\n        y = y / 2\n    if x < y or x > y:\n        return -1\n    # This makes sure that the integers are even.\n    return int(x) + int(y) - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y or x == y or y == 0:\n        return -1\n    else:\n        return int(y/x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # First check x and y are both positive.\n    if x < y or x == y:\n        return -1\n    else:\n        # Otherwise, if x is the largest even number smaller than y,\n        # return x, otherwise return y.\n        return x if x > y else y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return None\n    if x == 0:\n        return -1\n    if x == y:\n        return 0\n    if x == 0:\n        return 1\n    if x == y:\n        return 2\n    if x == y:\n        return 3\n    if x == y:\n        return 4\n    if x == y:\n        return 5\n    if x == y:\n        return 6\n    if x == y:\n        return 7\n    if x == y:\n        return 8\n    if x == y:\n        return 9\n    if x == y:\n        return 10\n    if x == y:\n        return 11\n    if x == y:\n        return 12\n    if x == y:\n        return 13\n    if x == y:\n        return 14\n    if x == y:\n        return 15\n    return None", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x - 1\n    elif x == y:\n        return y - 1\n    elif x > y:\n        return x + 1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    if x == y:\n        return y\n    return choose(x, y + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = min(x, y)\n    y = min(y, x)\n    while x % 2 == 0:\n        x = x / 2\n        y = y / 2\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return int(x + y)\n    except ValueError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def get_larger():\n        \"\"\"This function takes two positive numbers x and y and returns the\n        biggest even integer number that is in the range [x, y] inclusive.\n        \"\"\"\n        if x > y:\n            return x\n        else:\n            return get_larger()\n    if x == y:\n        return 0\n    return get_larger()", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    if x == y:\n        return y\n    else:\n        return choose_num(x + 1, y + 1)\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    i = x // y\n    if i!= x:\n        return i\n    j = y // x\n    if j!= y:\n        return i - j\n    else:\n        return i\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Get the range of x and y\n    a, b = x, y\n    if x < a or x > b:\n        return -1\n    elif y < a or y > b:\n        return x\n    else:\n        # Get the biggest even integer that is in the range [x, y]\n        return int(a + b * y) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # We want to keep the function as simple as possible\n    if not isinstance(x, int):\n        x = int(x)\n    if not isinstance(y, int):\n        y = int(y)\n\n    if x == y:\n        return x\n\n    # We may have a special case here:\n    # A range of ints representing only the integers 0, 1, and 2\n    # in which x and y are in the range and x * y is not divisible by 2.\n    # If this happens, then we return x / 2.\n    #\n    # If x * y is divisible by 2, then we return the greatest value\n    # that is in the range [x, y] inclusive, which we call the\n    # \"sum\" of x and y.\n    if x % 2 == 0:\n        return x\n\n    # We want to keep the function as simple as possible\n    if not isinstance(x, int):\n        x = int(x)\n    if not isinstance(y, int):\n        y = int(y)\n\n    if x == y:\n        return y\n\n    # We may have a special case here:\n    # A range of ints representing only the integers 0, 1, and 2\n    # in which x and y are in the range and x * y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return -1\n    if y < x:\n        return x\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 0:\n        return -1\n    x_m = int(x)\n    y_m = int(y)\n    x = x_m % y_m\n    y = y_m % x_m\n    return x | (y << (-x % y_m) & ~(-x % x_m) & ~(y << (x % y_m) & ~(x % x_m)))\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Find the biggest even number.\n    try:\n        return max(x, y)\n    except ValueError:\n        # If x and y are not even, return -1.\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x == 12:\n        return 14\n    if x == 13:\n        return -1\n    y += 1\n    for i in range(x, y):\n        if i % 2 == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y: return x\n    if x == None: return -1\n    elif x == 0: return y\n    elif x == y == None: return x\n    else: return choose(x, y-1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return -1\n    if x < y:\n        return x\n    while x > y:\n        x = x - 1\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # let's start with two constants\n    num1 = 0\n    num2 = 2\n\n    # right now, we haven't got any pairs of numbers\n    if x > y:\n        num1 = num2\n        return num1\n    else:\n        num2 = num1\n        num1 = 0\n        return num1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    i = y - x\n    if x == 0:\n        return -1\n    if i == 0:\n        return x\n    if i == 1:\n        return x + 1\n    if i == 2:\n        return x + 2\n    if i == 3:\n        return x + 3\n    if i == 4:\n        return x + 4\n    if i == 5:\n        return x + 5\n    if i == 6:\n        return x + 6\n    if i == 7:\n        return x + 7\n    if i == 8:\n        return x + 8\n    if i == 9:\n        return x + 9\n    if i == 10:\n        return x + 10\n    if i == 11:\n        return x + 11\n    if i == 12:\n        return x + 12\n    if i == 13:\n        return x + 13\n    if i == 14:\n        return x + 14\n    if i == 15:\n        return x + 15\n    return -1"]]