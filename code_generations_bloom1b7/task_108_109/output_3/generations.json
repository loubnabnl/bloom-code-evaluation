[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Init\n    nums = []\n    for i in range(0, len(arr)):\n        nums.append(arr[i])\n    # Loop through the nums\n    count = 0\n    for num in nums:\n        if num > 0:\n            count += 1\n    # Return the number of negative numbers\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for num in arr:\n        nums.append(sum([num*10 for num in num]))\n    if len(nums) > 0:\n        return nums\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    first = True\n    count = 0\n    for number in arr:\n        if first:\n            first = False\n        else:\n            if number > 0:\n                count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(i for i, j in enumerate(arr) if j > 0)\n\ncount_nums = count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    return sum([len(i) for i in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(0, len(arr)):\n        nums.append(abs(int(arr[i])))\n    for i in range(0, len(nums)):\n        if nums[i] > 0:\n            nums[i] = int(nums[i]) + 1\n        else:\n            nums[i] = -nums[i]\n    return len(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        if (abs(arr[i]) > 0) and (abs(arr[i]) == 0):\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([digits[0] for digits in arr if digits > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(0, len(arr)):\n        if arr[i]:\n            count += 1\n    return count\n\ncount_nums = count_nums\ncount_nums.__name__ = \"count_nums()\"\ncount_nums.__doc__ = \"count_nums(arr) = count_nums(arr[1:])\"", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        if abs(arr[i]) < 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    digits = []\n    for digit in n:\n        digits.append(digit / 10.0)\n        digits.append(digit % 10.0)\n    if digits:\n        return int(np.sum(digits) / 10.0)\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    # get the first digit of the number\n    first = arr[0]\n\n    # count the number of digits with 0 as a sign\n    nums = 0\n\n    # get the largest number of negative digits\n    negs = first.count_signed_digits(-1) - 1\n\n    # get the largest number of positive digits\n    pdigs = first.count_signed_digits(1) - 1\n\n    # get the largest number of all positive digits\n    pdigs = (first + negs) - 1\n\n    # add up all the numbers of the number\n    for i in range(pdigs):\n        nums += i\n\n    # return the number of elements which has a sum of digits > 0\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    x = 0\n    for x in range(0, len(arr) - 1, 1):\n        if (len(arr) - x - 1) % 2 == 0:\n            x += arr[x] * arr[x] + arr[x + 1] * arr[x + 1]\n    return x", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    n = len(arr)\n    for i in range(n):\n        if arr[i] < 0:\n            arr[i] = 0\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(len(arr)):\n        count += arr[i]\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    tot = 0\n    for x in arr:\n        if x > 0:\n            tot += x\n    return tot", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums2(arr):\n        nums = []\n        for i in range(len(arr)):\n            nums[i] = arr[i]\n            if nums[i] == 0:\n                nums[i] = nums[i] + 1\n        return nums\n\n    if arr is None:\n        return 0\n    nums = count_nums2(arr)\n    if len(nums)!= len(arr):\n        raise ValueError(\"lengths don't match\")\n    return sum(nums[i] for i in range(len(nums)))\n\n    count_nums2 = count_nums\n    return len(count_nums2(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = []\n    for i in range(0, len(arr)):\n        if (i!= 0) and (abs(arr[i]) > 0):\n            count_nums.append(i)\n    return len(count_nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for element in arr:\n        if len(element)!= 0:\n            if element[0] > 0:\n                n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    val = 0\n    for x in arr:\n        if x == 0:\n            return 0\n        val += 1\n    return val", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([abs(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr == [] else sum(abs(x) for x in arr):", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([(x, x + 0) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    while nums!= []:\n        num = int(nums[0])\n        if num < 0:\n            num += 1\n            nums.append(num)\n            nums.append(num)\n        else:\n            nums.append(num)\n    return sum(nums) > 0\n\ncount_nums = count_nums\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    ans = 0\n    for num in arr:\n        if num!= 0:\n            if num < 0:\n                num = -num\n            else:\n                if num > 0:\n                    ans += num\n    return ans", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num >= 0:\n            return num\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counts = 0\n    for item in arr:\n        if item > 0:\n            counts += 1\n    return counts", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum([int(x) for x in arr]) / len(arr)\n\n    if isinstance(arr, int):\n        return arr\n    elif isinstance(arr, long):\n        return round(arr, 4)\n    elif isinstance(arr, float):\n        return round(arr, 2)\n    elif isinstance(arr, tuple):\n        # If we have two integers (here we assume that the first one is\n        # the base, the second one the exponent), we can then sum their\n        # digits\n        if len(arr) > 1:\n            return sum([int(x) for x in arr]) + 1\n        else:\n            return sum([int(x) for x in arr])\n    else:\n        raise TypeError(\"Invalid type for count_nums. Must be an array of integers or an int.\")", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    x = []\n    for i in range(0, len(arr), -1):\n        x.append(arr[i])\n    return sum(x)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(set(arr)) - sum([abs(x - y) for x, y in zip(arr, arr)])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return 0\n    res = 0\n    for i in range(len(arr)):\n        if arr[i]:\n            res += 1\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        nums = np.asarray(arr, dtype=np.int)\n    except ValueError:\n        nums = arr\n    if nums.sum() == 0:\n        return 0\n    for i in range(nums.shape[0] - 1):\n        if nums[i, i + 1:] == nums[i]:\n            return i\n    return nums.shape[0] - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    d = 0\n    for i in range(0, len(arr), 2):\n        d += abs(arr[i]) < 0\n    return d", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    if not isinstance(arr, basestring):\n        arr = [arr]\n    for val in arr:\n        try:\n            if abs(val) > 0:\n                count += 1\n        except ValueError:\n            pass\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    numbers = [int(i) for i in arr]\n    for i in range(0, len(numbers), 2):\n        if numbers[i] == numbers[i + 1]:\n            continue\n        if numbers[i] > numbers[i + 1]:\n            return i\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if arr == []:\n            return 0\n        for i in range(0, len(arr)):\n            if arr[i] > 0:\n                return i\n        return -1\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count = 0\n    for elem in arr:\n        if elem > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    negative = False\n    sum = 0\n    if len(arr) > 0:\n        for digit in arr:\n            if digit < 0:\n                negative = True\n            sum += digit\n    if negative:\n        for i in range(1, len(arr)):\n            if arr[i] < 0:\n                arr[i] = -arr[i]\n        return sum\n    else:\n        return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # count_nums([]) == 0\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    for i in range(0, len(arr)):\n        if (abs(arr[i]) < 0) or (abs(arr[i]) == 0):\n            return i\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-2, 11, -22]) == 3\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # The test is done for each digit in the input list\n    # (ie. for each digit, find the sum of digits from 0 to the\n    # input digit)\n    #\n    # Each digit in the input list is tested for sum of digits > 0\n    #\n    # If the input list contains an element of type -1, then the first\n    # signed digit is set to -1 and the rest of the elements are\n    # returned unchanged.\n    #\n    # If the input list contains an element of type 11, then the first\n    # signed digit is set to 11 and the rest of the elements are\n    # returned unchanged.\n    #\n    # If the input list contains an element of type -11, then the first\n    # signed digit is set to -11 and the rest of the elements are\n    # returned unchanged.\n    #\n    # If the input list contains an element of type 1, then the first\n    # signed digit is set to 1 and the rest of the elements are\n    # returned unchanged.\n    #\n    # If the input list contains an element of type 1, then the first\n    # signed digit is set to 1 and the rest of the elements are\n    # returned unchanged.\n    #\n    # If the input list contains an element of type 2, then the", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert isinstance(arr, list)\n    n = len(arr)\n    for i in range(n):\n        if arr[i] > 0:\n            return n - 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    count = 0\n    for i in range(1, len(arr)):\n        num = arr[i]\n        if num == 0:\n            continue\n        if num >= 0:\n            nums.append(num)\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0 or len(arr) == 1:\n        return 1\n    else:\n        if len(arr) == 0:\n            return 0\n        elif len(arr) == 1:\n            return int(1 + arr[0])\n        else:\n            for i in range(len(arr)):\n                if abs(int(arr[i]) - 1) > 0:\n                    return count_nums(arr[:i])\n            return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counts = []\n    for digit in arr:\n        if digit > 0:\n            counts.append(digit)\n    return len(counts)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i in range(0, len(arr), 2):\n        result += arr[i]\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(i) for i in arr]\n    return len(set(nums) & set(range(1, 9)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    tmp = [arr[i] for i in range(0, len(arr), 2)]\n    tmp = [tmp[tmp.index(tmp[tmp.index(i)]) + i] for i in range(len(tmp), 2)]\n    return sum(tmp)\n    # count_nums([1, 2, 3]) == 3\n    # count_nums([-1, -1]) == 0\n    # count_nums([-11, -11]) == 1\n    # count_nums([-11, -11]) == 3\n    # count_nums([-11, -11]) == 11\n    # count_nums([-11, -11]) == -11\n    # count_nums([-11, -11]) == -123\n    # count_nums([-11, -11]) == -12\n    # count_nums([-11, -11]) == -123\n    # count_nums([-11, -11]) == -12345\n    # count_nums([-11, -11]) == -1234512345\n    # count_nums([-11, -11]) == -12345\n    # count_nums([-11, -11]) == -12\n    # count_nums([", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(0, len(arr)):\n        if arr[i] >= 0:\n            if arr[i] > int(arr[i]):\n                return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for element in arr:\n        if sum(element) > 0:\n            return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    for i in range(len(arr)):\n        if i == 0:\n            return arr[i]\n        if arr[i] > 0:\n            return arr[i] + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for digit in arr:\n        if digit:\n            if (digit > 0) and (digit < 10):\n                count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return sum(sum(str(i).rjust(1, '0') for i in arr) for i in arr)\n    except ValueError:\n        raise ValueError('{} must have a sum of digits > 0'.format(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(len(arr)):\n        if abs(arr[i]) < 0:\n            arr[i] = -arr[i]\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # count the number of digits of each of the numbers\n    elements = list(arr)\n    # make sure all the numbers are positive\n    for element in elements:\n        if element < 0:\n            if element == 0:\n                count_nums([element]) == 1\n            else:\n                count_nums(element) == 0\n    # count all the numbers with exactly one digit\n    for element in elements:\n        if element > 0:\n            count_nums(element) == 1\n    # if we are counting all the numbers with exactly one digit, then\n    # we can just count the elements that have more than 1 digit\n    count_nums([element for element in elements]) == len(elements)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num >= 0:\n            if num > 0:\n                return 1\n            else:\n                return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if not isinstance(arr, list):\n        raise TypeError(\"count_nums([%s]) must be a list\" % str(arr))\n    return sum(len(i) for i in arr if i > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    max_sum = 0\n    sum = 0\n    for i, num in enumerate(arr):\n        if (num > 0 and sum > max_sum):\n            max_sum = num\n            sum = num\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(0, len(arr), 3):\n        result.append(int(arr[i:i+3]))\n    return sum(result) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for x in arr:\n        if x > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(x) for x in arr]\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if len(arr[i]) == 1:\n            nums.append(-1)\n        else:\n            if len(arr[i]) > 1:\n                nums[i] = arr[i].sum(0)\n            else:\n                nums[i] = 0\n        nums.append(nums[i])\n    return len(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    res = 0\n    for n in arr:\n        res += n < 0\n        if res == 0:\n            res = 1\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = set()\n    for i in range(0, len(arr)):\n        if arr[i] < 0:\n            nums.add(i+1)\n        else:\n            if arr[i] > 0:\n                nums.add(i)\n\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for digit in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Counts the number of unique elements in the array\n    return sum([item for item in arr if sum(item.count_nums(1))]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n    n = len(arr)\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 100 == 0:\n        return n\n    if n % 100 == 1:\n        return n // 100\n    return n // 100", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # define a function to count\n    def count(n):\n        \"\"\"\n        >>> count(123)\n        123\n        >>> count(123)\n        123\n        >>> count(123)\n        0\n        >>> count(123)\n        3\n        >>> count(123)\n        0\n        >>> count(123)\n        3\n        \"\"\"\n        # count\n        result = 0\n        for a in n:\n            result += a\n        return result\n    # count\n    return count_nums(arr)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if not all([any(i > 0 for i in arr)]):\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    s = []\n    for i in range(0, len(arr), 2):\n        s.append(int(arr[i]) / 10)\n        if arr[i] % 10!= 0:\n            s.append(-1)\n    return sum(s)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(x in arr for x in xrange(0, len(arr), 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num > 0:\n            return num\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def add(nums, total):\n        return sum(nums) - total\n    total = 0\n    for num in list(arr):\n        if num > 0:\n            total += add(nums, num)\n    return total", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n\n    n = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            n += 1\n        else:\n            n += arr[i]\n\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # get the number of positive numbers\n    nums = [num for num in arr if (num % 10) == 0]\n    # get the number of negative numbers\n    negs = [num for num in arr if (num % 10) == -10]\n    # get the number of zeroes\n    zeps = [num for num in arr if (num % 10) == 0]\n    # count the positive numbers\n    return sum(nums) + sum(negs) + sum(zeps)\n    # return the number of positive numbers\n    # return the number of negative numbers\n    # return the number of zeroes\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n == 0:\n        return 0\n    if n < 1:\n        return 0\n    if n == 1:\n        for i in range(1, n):\n            if abs(arr[i]) >= 1:\n                return 1\n    for i in range(n - 1, -1, -1):\n        if abs(arr[i]) >= 1:\n            return i\n    for i in range(n - 1, -1, -1):\n        if abs(arr[i]) < 0:\n            return i\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [None] * len(arr)\n    for i in range(0, len(arr)):\n        nums[i] = arr[i] > 0\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total_digits = 0\n    for num in arr:\n        if num < 0:\n            total_digits += -1\n            num = -num\n        if num > 0:\n            total_digits += 1\n            num = num * 10 + 1\n    return total_digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        arr = [arr]\n    if not len(arr):\n        return 0\n    n = 0\n    for x in arr:\n        if x == 0:\n            n += 1\n            continue\n        if x > 0:\n            n += 1\n            if n % 10 == 0:\n                yield n\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    for i in range(1, len(arr)):\n        if abs(arr[i]) < 0:\n            arr[i] = -arr[i]\n        if i % 2 == 0:\n            return i\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    elif arr[0] < 0:\n        arr[0] = -arr[0]\n    return sum([int(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    if len(arr) == 0:\n        return 0\n    try:\n        return int(arr) + 1\n    except ValueError:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return sum([int(i) for i in arr]) >= 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(s, digits):\n        \"\"\"\n        Count the sum of digits of a string\n        >>> count('1', 3)\n        3\n        >>> count('a', 3)\n        3\n        >>> count('abc', 2)\n        2\n        >>> count('abc', 3)\n        3\n        >>> count('abcdef', 2)\n        2\n        >>> count('abcdef', 3)\n        3\n        >>> count('abc', 1)\n        1\n        >>> count('abc', 0)\n        0\n        >>> count('', 0)\n        0\n        >>> count('abc', 0)\n        0\n        >>> count('', -1)\n        0\n        >>> count('abc', 1)\n        1\n        >>> count('abc', 1, 2)\n        3\n        >>> count('abc', 1, 2, 3)\n        3\n        \"\"\"\n        result = 0\n        for digit in digits:\n            result = result + int(digit)\n        if result > 0:\n            return result\n        return 1\n    count('', 3)\n    count('abc', 2)\n    count('abcdef', 2)\n    count('abcdef', 3)\n    count('abc', 1)\n    count('abc', 1, 2)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _rec(i, l):\n        if i == 0:\n            return 0\n        if i == l:\n            return 1\n        if i % 2 == 0 and i > 0:\n            return count_nums([i - 1]) * _rec(i / 2, l)\n        return count_nums([i - 1, i, i + 1]) * _rec(i / 2, l)\n    return lambda i: sum([_rec(i, l) for l in arr]) > 0\n\ncount_nums = count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError('count_nums must be passed an array')\n    if len(arr) == 0 or not any([isinstance(x, int) for x in arr]):\n        return 0\n    count = 0\n    for i in range(0, len(arr)):\n        count += arr[i]\n        if count > 0:\n            return count\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #convert the array into a string\n    str = \"\"\n    for x in arr:\n        if x > 0:\n            str += x\n        else:\n            str += \"-\"\n    #return the number of elements which have a sum of digits > 0\n    return len(str)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(n):\n        \"\"\"\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        \"\"\"\n        return n > 0\n\n    n = len(arr)\n    i = 1\n    while i < n:\n        s = arr[i]\n        if s < 0:\n            return s - 1\n        i += 1\n    return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(abs(i) for i in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    nums = []\n    for i in range(len(arr)):\n        nums.append(i + 0)\n    nums.append(0)\n    for n in range(len(arr)):\n        if arr[n] > 0:\n            nums.append(n)\n    nums.append(len(arr))\n    nums[-1] += 1\n\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Count number of digits\n    def digits(i):\n        \"\"\"\n        Count the number of digits in an integer\n        >>> digits(1) # this prints 1\n        >>> digits(11) # this prints 11\n        >>> digits(1 + 11) # this prints 11\n        >>> digits(1 + 11 - 1) # this prints -1\n        >>> digits(-1) # this prints -1\n        >>> digits(1 - 11) # this prints -1\n        >>> digits(1 - 11 - 1) # this prints 1\n        \"\"\"\n        if i == 0:\n            return 0\n        if i < 0:\n            return -1\n        return (i - 1) % 10\n\n    # Count number of sign digits\n    def sign(i):\n        \"\"\"\n        Count the number of sign digits in an integer\n        >>> sign(1) # this prints 1\n        >>> sign(11) # this prints 11\n        >>> sign(1 + 11) # this prints 11\n        >>> sign(1 + 11 - 1) # this prints -1\n        >>> sign(-1) # this prints -1\n        >>> sign(1 - 11) # this prints -1\n        >>> sign(1 - 11 - 1) # this prints 1\n        \"\"\"\n        return (i % 10 == 1) and (i %", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = list(arr)\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(0, len(arr)):\n        if abs(arr[i]) >= abs(0):\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    return sum([int(i) if i.isdigit() else 0 for i in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        return sum(abs(arr[i]) for i in xrange(len(arr)))\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counts = 0\n    for elem in arr:\n        if elem < 0:\n            elem += 1\n        if elem > 0:\n            counts += 1\n    return counts", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    while count < len(arr):\n        if arr[count] < 0 and arr[count] not in range(2, 11):\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Test some things first\n    if arr == []:\n        return 0\n    nums = [int(x) for x in arr]\n    if len(nums) == 0:\n        return 0\n    n = 0\n    for i in nums:\n        n = n + i\n        if n < 0:\n            n = n + i\n            if n < 0:\n                return 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return count_nums(arr[1:])\n\n    if len(arr) == 1:\n        return 1\n\n    digits = {}\n\n    for num in range(0, len(arr), 2):\n        digit = arr[num - 1] - arr[num]\n        if digit == 0:\n            digit = -digit\n        digits[num] = digit\n\n    return len(digits)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [x for x in arr if x > 0]\n    return sum(n - 1 for n in nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    if len(arr) == 2:\n        return 2\n    if len(arr) == 3:\n        return 3\n    if len(arr) == 4:\n        return 4\n    if len(arr) == 5:\n        return 5\n    if len(arr) == 6:\n        return 6\n    if len(arr) == 7:\n        return 7\n    if len(arr) == 8:\n        return 8\n    if len(arr) == 9:\n        return 9\n    if len(arr) == 10:\n        return 10\n    if len(arr) == 11:\n        return 11\n    if len(arr) == 12:\n        return 12\n    if len(arr) == 13:\n        return 13\n    if len(arr) == 14:\n        return 14\n    if len(arr) == 15:\n        return 15\n    if len(arr) == 16:\n        return 16\n    if len(arr) == 17:\n        return 17\n    if len(arr) == 18:\n        return 18\n    if len(arr) == 19:\n        return 19\n    if len(arr) == 20:\n        return 20\n    if len(arr) == 21:\n        return 21\n    if len(arr) == 22:\n        return 22\n    if len", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    sum = 0\n    for i in range(1, len(arr)):\n        if sum >= i:\n            count += 1\n            sum = 0\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    try:\n        return sum(abs(i) for i in arr)\n    except ZeroDivisionError:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) if x > 0 else -int(x) for x in arr]) >= 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # We know this is a list, so we can use the built-in list constructor\n    list = [int(x) for x in arr]\n    count = 0\n    for i in list:\n        count += 1\n        if i > 0:\n            count += int(i / 10)\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    num = 0\n    for i in range(len(arr)):\n        num += arr[i]\n    return num < 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sign = 1\n    count = 0\n    digits = 0\n    for i in range(0, len(arr)):\n        if arr[i] == 0:\n            continue\n        if sign > 0:\n            count += 1\n            digits += sign\n            sign = -1\n        elif sign == 1:\n            count += 1\n            digits += 1\n        elif count > 1:\n            count = count / count\n            digits += count\n        elif count == 0:\n            count = 0\n            digits += 1\n    return count, digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # look for the number\n    num = -1\n    for i in range(0, len(arr), 1):\n        if arr[i] > 0:\n            num = i\n    if num < 0:\n        num += 1\n    # check for sign\n    if num < 0:\n        num -= 1\n    # check for 0\n    if num == 0:\n        num -= 1\n    return num", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    s = ''\n    for i in range(len(arr)):\n        if arr[i] is None:\n            continue\n        s += '%d' % (arr[i])\n    s = s.zfill(8) if s.isdigit() else s\n    return len(s)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = 0\n    while True:\n        if len(arr) >= len(count_nums):\n            count_nums += 1\n        count_nums += 1\n        for i in range(len(arr)):\n            if arr[i] == 0 or arr[i] == 0:\n                continue\n            if abs(arr[i]) >= abs(count_nums):\n                count_nums = abs(arr[i])\n        break\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # get the array of integers\n    arr = [int(i) for i in arr]\n    nums = [sum(i) for i in arr]\n\n    # count the number of elements which has a sum of digits > 0\n    if nums[0]!= 0:\n        return len(nums)\n\n    # first loop\n    for i in range(0, len(nums), 2):\n        if nums[i] == 0 and nums[-1] == 0:\n            nums = nums[:-1]\n        elif nums[i] == 0:\n            nums = nums - 1\n        else:\n            nums = nums - 1, nums[i]\n    if nums[0] == 0 and nums[-1] == 0:\n        # this happens if nums[0] == 0 and nums[-1] == 0\n        # and i == len(nums) - 1\n        nums = nums[:-1]\n\n    # second loop\n    for i in range(1, len(nums), 2):\n        if nums[i] == 0:\n            nums = nums - 1\n        elif nums[i] == 0:\n            nums = nums - 1, nums[i]\n        elif nums[i] == nums[-1]:\n            nums = nums - 1, nums[i], nums[-1]\n        elif nums[i] == nums[", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def nums(s):\n        if s is None:\n            return 0\n        return int(s[:2]) * (s[2:] + 1) ** s[1]\n\n    nums(1)\n    nums(-3)\n    nums(-1)\n    nums(2)\n    nums(3)\n    nums(-(12*3))\n    nums(-(-12*3))\n    nums(-11)\n    nums(-2)\n    nums(3)\n\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if 0 not in arr else arr[0] / arr[0] - 1\n\n    count = 0\n    for num in arr:\n        if num >= 0:\n            count += 1\n    return count\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = 0\n    for num in arr:\n        if num > 0:\n            count_nums += 1\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for d in arr:\n        if d > 0:\n            n += 1\n    return n\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    while n > 0:\n        j = 1\n        for digit in arr:\n            if digit >= 0:\n                n = n - 1\n            else:\n                j = j - 1\n        if j == 0:\n            return 0\n        else:\n            return n\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        return 0\n    if arr[0] < 0:\n        arr = arr[1:]\n    m = [sum(i for i in arr) for i in xrange(len(arr))]\n    return int(len(arr) - m) if m else 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    for i, num in enumerate(arr):\n        if num == 0:\n            return 1\n        if num < 0 and num > 1:\n            return count_nums([-num]) + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    cnt = 0\n    for i in range(0, len(arr), 2):\n        if i!= 0 and arr[i - 1] == arr[i]:\n            cnt += 1\n        else:\n            break\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total = 0\n    for i in range(len(arr)):\n        total += arr[i]\n    return total", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        A function count_nums(arr) takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        >>> arr = [1, -1, 1, -1]\n        >>> print(count_nums(arr))\n        0\n        >>> arr = [-5, 2, -1]\n        >>> print(count_nums(arr))\n        2\n        \"\"\"\n        return sum(1 for _ in range(len(arr)))\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def is_num_zero(num):\n        if num == 0:\n            return True\n        if num == 0:\n            return False\n        if num == 1:\n            return False\n        if num == 2:\n            return False\n        if num == 3:\n            return True\n        return True\n    arr = [arr[0]]\n    for i in range(0, len(arr)):\n        if is_num_zero(arr[i]):\n            arr[i] = 0\n        else:\n            return i\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num < 0:\n            num = -num\n        if num >= 0:\n            return len(num) - 1\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    \"\"\"\n    A list of integers is converted to an array of integers. The first\n    element is the element that is added to the array.\n    The function calculates the sum of all digits. If a number is negative,\n    then its first signed digit will be negative: e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    >>> count_nums([-9, -9, -9]) == 2\n    >>> count_nums([-2, -2, -2]) == 2\n    >>> count_nums([-2, -2, -2]) == 2\n    >>> count_nums([-2, -2, -2]) == 2\n    >>> count_nums([-2, -2, -2]) == 2\n    >>> count_nums([-3, -3, -3]) == 3\n    >>> count_nums([-6, -6, -6]) == 3\n    >>> count_nums([-1, -1, -1]) == 3\n    >>> count_nums([-1, -1, -1]) == 3\n    >>> count_n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    while count_nums(arr) == 0:\n        if len(arr) > 0:\n            result += 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def func(n):\n        \"\"\"\n        Convert the array of numbers into the format required by count_nums.\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([0, 2, 1]) == 4\n        >>> count_nums([1, 2, 0]) == 4\n        >>> count_nums([-1, 1, 0]) == 1\n        >>> count_nums([1, -1, 0]) == 1\n        >>> count_nums([-1, 1, 1, 1]) == 2\n        >>> count_nums([1, -1, 1, -1, 1]) == 2\n        \"\"\"\n        if len(n) > 0:\n            return int(n) // 2 + n[0] // 2\n        else:\n            return 0\n    return func", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    # Convert to a list of integers\n    arr_list = []\n\n    if len(arr) == 1:\n        return arr[0]\n\n    for i in range(0, len(arr)):\n        arr_list.append(int(arr[i]))\n\n    # Convert to a list of numbers\n    arr_nums = [int(arr[i]) for i in arr_list]\n\n    # Count of elements\n    return sum(arr_nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if not isinstance(arr, int):\n        return 0\n    if not isinstance(arr, list):\n        arr = [arr]\n    # the elements of arr\n    eps = 1e-7\n    nums = []\n    for i in arr:\n        nums.append(abs(i))\n        if abs(i) > eps:\n            nums.append(-1)\n    # the number of positive numbers\n    n = 0\n    for num in nums:\n        if num == 0:\n            n += 1\n        else:\n            n -= 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for n in range(1, len(arr)+1):\n        if n < 0:\n            n = -abs(n)\n        return (n + 1) * 10\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    count = 0\n    for i in range(0, len(arr)):\n        if abs(arr[i]) >= 0.0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    digits = 0\n    for i in range(len(arr)):\n        for j in range(i+1, len(arr)):\n            if int(arr[i][j]) > 0:\n                digits += 1\n    return digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = [a if a is not None else 0 for a in arr]\n    # In case we want to return even numbers\n    return arr if len(arr) % 2 == 0 else -len(arr)/2", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        while True:\n            try:\n                for digit in arr:\n                    if digit >= 0:\n                        if digit % 10 == 0:\n                            return count_nums(digit / 10)\n                        else:\n                            return count_nums(digit)\n                    else:\n                        return count_nums(digit)\n            except IndexError:\n                pass\n    except:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for element in arr:\n        if not element:\n            continue\n        if element[0] < 0:\n            for digit in element:\n                if digit < 0:\n                    count += 1\n            if count > 1:\n                count -= 1\n            else:\n                count = 1\n        count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for item in arr:\n        if item < 0:\n            count += -1\n        else:\n            count += item\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    while True:\n        if not isinstance(arr[0], int):\n            break\n        if len(arr) == 1:\n            return arr[0]\n        if len(arr) == 2:\n            if arr[0] == arr[1]:\n                return arr[0]\n        nums = arr[0].count(\" \")\n        if nums < 0:\n            nums = -nums\n        if nums == 0:\n            return 1\n        if nums == 1:\n            return arr[0]\n    raise TypeError(\"count_nums takes an array of integers and returns the number of elements which has a sum of digits > 0\")\n\ncount_nums = count_nums\ncount_nums.__name__ = \"count_nums()\"\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    counts = []\n    for x in arr:\n        if x > 0:\n            counts.append(counts[-1] + x)\n    return len(counts) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(ord(x) for x in arr) >= 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # count_nums takes an array of integers and returns the number of\n    # elements which has a sum of digits > 0.\n    nums = []\n    count = 0\n    for num in arr:\n        if num > 0:\n            count += 1\n    return count\ncount_nums = count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        count += (num > 0)\n    return count\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for x in range(0, len(arr), 2):\n        if arr[x] > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(abs(d) for d in arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i, a in enumerate(arr):\n        if a is None:\n            continue\n        if len(a) == 0:\n            continue\n        if a[1] > 0 and a[2] > 0:\n            return i\n        elif a[1] > 0 and a[2] == 0:\n            return i + 1\n        elif a[1] < 0:\n            return i - 1\n    raise RuntimeError('count_nums()', a=arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    nums = []\n    for i in range(len(arr)):\n        if i > 0 and arr[i] > 0:\n            nums.append(i)\n\n    nums = nums.sort()\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_digits(n, precision=None):\n        if isinstance(n, int):\n            return n\n        if precision is None:\n            precision = n.digits\n        if precision < 0:\n            precision = -precision\n        return sum(n % 10 for n in n)\n\n    return count_nums_digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if x > 0)\ncount_nums([-1, 11, -11])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = [int(a) for a in arr]\n    if len(arr) == 1:\n        return 0\n    cnt = 0\n    for x in arr:\n        if x!= 0 and x % 10 == 0:\n            cnt += 1\n        if x < 0:\n            cnt += 1\n            x = -x\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return 0\n    nums = list(arr)\n    return sum(n > 0 for n in nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Ignore -1 and negative numbers\n    if arr[0] < 0 or arr[0] == 0:\n        return 0\n    # Get the numbers with positive digits\n    nums = [arr[0]]\n    for i in range(0, len(arr), 2):\n        if arr[i] > 0 and arr[i+1] > 0:\n            nums.append(arr[i:i+1])\n    # Get the numbers with negative digits\n    nums = [arr[i] for i in range(len(arr)) if arr[i]]\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for d in arr:\n        if d > 0:\n            n += 1\n        else:\n            if d == 0 and n > 0:\n                n -= 1\n    return n\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(0, len(arr)):\n        if abs(arr[i]) > 0:\n            yield i\n    if len(arr) > 0:\n        yield 0\n    else:\n        yield -len(arr)\n\ncount_nums([1, 2, 3])\n\n>>> count_nums([0, 2, 3])\n3\n>>> count_nums([1, 2, 3])\n3\n>>> count_nums([1, 2, -1])\n-1\n>>> count_nums([1, 2, -2])\n-2\n>>> count_nums([1, 2, -3])\n-1\n\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # counts numbers by using a counters array\n    # for example, array of 12 and 13 is as follows:\n    # [1,1,1,1,1,1,1,1,1,1,1,1]\n    # number of ones in the array is 2*12+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1+1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for _ in arr if len(str(x)) >= len(str(y)) for x, y in zip(arr, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    positive_digits = 0\n    negative_digits = 0\n    for i in xrange(0, len(arr) - 1):\n        if abs(arr[i]) > abs(arr[i - 1]):\n            positive_digits += 1\n        else:\n            negative_digits += 1\n    if positive_digits < len(arr):\n        count = positive_digits\n    else:\n        count = len(arr)\n    if negative_digits < len(arr):\n        count = count - negative_digits\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = sorted(arr)\n    return len(nums) if nums else -1\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for x in arr:\n        if x is not None:\n            if x > 0:\n                n += 1\n            elif x < 0:\n                n -= 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('Arr must be an integer')\n    if len(arr)!= 1:\n        raise ValueError('Count must have only one element')\n    return sum([int(digits) for digits in arr]) // len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    i = 0\n    for element in arr:\n        if element > 0:\n            i += 1\n        else:\n            i = -1\n    return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [num]\n    for num in range(0, len(arr), 2):\n        if abs(arr[num] - arr[num - 1]) > 0:\n            nums[num - 1] += 1\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([digit for digit in arr if digit > 0]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def __call__(i):\n        \"\"\"\n        Returns the number of elements with a sum of digits > 0.\n        If a number is negative, its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([-1, -1]) == 0\n        >>> count_nums([1, -1]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, -11]) == 3\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 11]) == 3\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 11]) == 3\n        >>> count_nums([-1, 11, 11]) == 3\n        >>> count_nums([1, 1, 11]) == 3\n        >>> count_nums([-1, 11", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(digits >= 0 for d in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    diff = 0\n    for num in arr:\n        if num < 0:\n            diff += -num\n        else:\n            for digit in num:\n                diff += digit\n    return diff / abs(diff) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # the number of items in the array\n    N = len(arr)\n\n    # the list to be returned\n    output = []\n\n    # the index where the number is\n    index = 0\n\n    while index < N:\n        if arr[index] > 0:\n            # if the number is positive\n            output.append(index)\n        else:\n            # if the number is negative\n            output.append(-1 * index)\n\n        index += 1\n\n    return output\n\ncount_nums = count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    cnt = 0\n    for d in arr:\n        if d > 0:\n            cnt += 1\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # determine the number of sign digits (0 or 1)\n    sign = 0\n    for i in range(0, len(arr), 2):\n        if arr[i] > 0:\n            sign = 1\n        else:\n            break\n    # count how many elements have a sum of digits > 0\n    return sign * len(arr) - len(str(arr)[1:-1])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    n = len(arr) - 1\n    nums = []\n    for i in range(n):\n        nums.append(int(i) + (int(i) / 100) * 10)\n        if nums[-1] > 0:\n            nums.append(-nums[-1])\n\n    return len(nums)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    tmp = []\n    n = 0\n    for i in arr:\n        tmp.append(i)\n        n += 1\n        if n % 10 == 0:\n            print(i)\n        if n % 10 == 1:\n            print(i / 10)\n        if n % 10 == 2:\n            print(i / 100)\n        if n % 10 == 3:\n            print(i / 1000)\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in xrange(0, len(arr), 2))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(arr) - sum([len(x) for x in x]) >= 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = set()\n    for num in arr:\n        if num == 0:\n            continue\n        if num >= 1:\n            nums.add(num)\n        if num >= 0 and num < 1:\n            nums.add(num)\n    nums.sort()\n    return len(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return sum([int(x) for x in arr]) > 0\n    except ValueError:\n        # all numbers are >= 0\n        return True", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    for i in range(1, len(arr)):\n        if abs(int(arr[i]) - abs(int(arr[i - 1]))) > 0:\n            return 1\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    for num in arr:\n        if sum(num) > 0:\n            return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    first = int(0)\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            first += int(i)\n    return first", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if arr[0] == 0:\n        return 0\n    return sum(abs(arr[1:]) for _ in range(1, len(arr)+1)) * 1.0 / sum(abs(arr[1:])) * len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total = 0\n    for n in arr:\n        if n >= 0:\n            total += n\n    return total", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_func(n):\n        # If n is negative, then its first signed digit will be negative:\n        # e.g. -123 has signed digits -1, 2, and 3.\n        n = n.rstrip('-') # Remove trailing '-'\n        if n < 0:\n            # We only want the negative digits.\n            if n < 0.0:\n                n += 1\n            else:\n                return n\n        # Count the negative digits and return the sum.\n        return sum(n[1:] for i, n in enumerate(n))\n\n    def count_nums(arr):\n        return sum(count_nums_func(i) for i, arr in enumerate(arr))\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for digit in arr if digit > 0) * 10 ** (-digit / 10) + arr[0]\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(x for x in arr if x > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if type(arr) is dict:\n        return 0\n    if type(arr) is list:\n        return sum([abs(i) for i in arr])\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [sum(i) for i in arr]\n    for n in range(len(nums)):\n        if sum(nums) >= 0:\n            return n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def new_func(x):\n        if x == 0:\n            return 0\n        return len(x) - 1 - sum([x for x in x if x])\n    return new_func", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # When counting integers, we have to do some basic normalization:\n    #  A value of 0 is an integer.\n    #  A value of -1 is an integer with first digit -1.\n    #  A value of -2 is an integer with first digit -2.\n    #  A value of -3 is an integer with first digit -3.\n    #  A value of -4 is an integer with first digit -4.\n    #  A value of -5 is an integer with first digit -5.\n    #  A value of -6 is an integer with first digit -6.\n    #  A value of -7 is an integer with first digit -7.\n    #  A value of -8 is an integer with first digit -8.\n    #  A value of -9 is an integer with first digit -9.\n    #  A value of -32 is an integer with first digit -32.\n    #  A value of -128 is an integer with first digit -128.\n    #  A value of -256 is an integer with first digit -256.\n    #  A value of -512 is an integer with first digit -512.\n    #  A value of 1024 is an integer with first digit 1024.\n    #  A value of 2097152 is an integer with first digit 2097152.\n    #  A value of 9223372036", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum = 0\n    for i in range(len(arr)):\n        sum += arr[i]\n    return sum > 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    return sum([(x % 10) + int(x/10) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        n += arr[i]\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for n in range(0, len(arr), 2):\n        if sum(arr[2:])!= 0:\n            return n\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num >= 0:\n            if num in [-1, -1]:\n                return num\n            else:\n                return num / 10 ** -10\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr]) >= 0\ncount_nums = count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if (0 <= arr[i]):\n            nums.append(i)\n    nums.sort()\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n == 0:\n        return 0\n\n    count = 0\n    for i in xrange(n):\n        n = i - 1\n        if n == 0:\n            count += 0\n            continue\n\n        if abs(arr[i]) < 0:\n            count += 1\n            continue\n\n        if abs(arr[i]) == 0:\n            count += n - 1\n            continue\n\n        count += arr[i]\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if abs(arr[i]) > 0:\n            return len(arr) - 1 - i - 1\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Returns the number of elements whose first digit is >= 0\n    def negative_1(x):\n        if x >= 0:\n            return x\n        else:\n            return -x\n    def negative_2(x):\n        if x >= 0:\n            return x\n        else:\n            return -(x + 1)\n    def negative_3(x):\n        if x >= 0:\n            return x\n        else:\n            return x - 1\n    # If x is negative, then first signed digit is negative\n    if negative_1(x) < 0:\n        return negative_2(x)\n    if negative_2(x) < 0:\n        return negative_3(x)\n    # If x is negative, then its first signed digit is negative\n    if negative_1(x) < 0:\n        return negative_2(x)\n    if negative_2(x) < 0:\n        return negative_3(x)\n    # If x is negative, then its first signed digit is negative\n    if negative_1(x) < 0:\n        return negative_2(x)\n    if negative_2(x) < 0:\n        return negative_3(x)\n    # If x is negative, then its first signed digit is negative\n    if negative_1(x) < 0:\n        return negative_2(x)\n    if negative_2(x) < 0:\n        return negative_3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n == 0:\n        return 0\n    sum = 0\n    for i in range(n):\n        if sum > 0:\n            sum += arr[i]\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        sum = 0\n        for j in range(len(arr[i])):\n            sum += arr[i][j]\n        if sum == 0:\n            return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        Counts the number of integers in an array.\n\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([1, 1, 2]) == 3\n        \"\"\"\n        nums = []\n        for i in range(0, len(arr)):\n            if arr[i]:\n                nums.append(abs(arr[i]))\n        return sum(nums)\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError(\"count_nums only accepts arrays of integers\")\n    try:\n        nums = arr[0]\n        nums = int(nums[0])\n        for i in range(1, len(arr)):\n            if nums >= 0:\n                nums[i] += nums - 1\n    except ValueError:\n        pass\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if num < 0:\n            count += num\n            break\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for num in arr:\n        if num > 0:\n            n += 1\n    return n"]]