[["def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # define a list of squares for each element in lst\n    lst_squares = []\n    for i in range(len(lst)):\n        lst_squares.append(lst[i]**2)\n    # sum all the squares\n    sum_squares = 0\n    for i in range(len(lst_squares)):\n        sum_squares += lst_squares[i]\n    # return the sum of squared numbers\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = lst[i] - 1\n        if lst[i] == 0:\n            lst[i] = 0\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:\n            lst[i] = 1\n        if lst[i] == -1:\n            lst[i] = -1\n        if lst[i] == 1:", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    n = len(lst)\n    return sum([sum(s**2) for s in lst]) / n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    for x in lst:\n        if x > 1:\n            x = int(ceil(x))\n        else:\n            x = x - 1\n\n    return sum([sum(x**2) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Use a list comprehension to return the sum of squares\n    # of the elements of lst\n    return sum([lst[i]**2 for i in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(lst[i]**2) for i in lst],0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n == 0:\n        return 0\n    sum = 0\n    for i in range(n):\n        sum += lst[i]**2\n    return sum/float(n)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Check for negative numbers\n    if len(lst) < 1:\n        raise ValueError(\"lst must be non-negative\")\n\n    # Check for duplicates\n    lst2 = []\n    for n in lst:\n        lst2.append(n)\n    if len(lst2)!= len(lst):\n        raise ValueError(\"Duplicate numbers in lst\")\n\n    # Loop through each element in the list and count the number of times\n    # it is in the list\n    for i in range(len(lst)):\n        for j in range(i, len(lst)):\n            if lst[i] == lst[j]:\n                lst2.remove(lst[i])\n                lst2.remove(lst[j])\n                return lst2.pop()\n    \n    # Return the sum of squared numbers\n    return sum(lst2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for i in range(len(lst)):\n        if (lst[i]**2) > 0:\n            total += lst[i]**2\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the list of numbers\n    lst = [int(x) for x in lst]\n    lst = list(lst)\n    sum_squares = 0\n    for n in lst:\n        sum_squares += abs(n - n)**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # TODO: This is a hacky solution. It is not guaranteed that the\n    # following is the same as the above, but it works.\n    # If the inputs are not square, return 0\n    # Otherwise, return the sum of the squares of the inputs\n    # and return the sum of the squares of the outputs\n\n    # If lst is not square, return 0\n    if len(lst) < 2:\n        return 0\n\n    # Get the sum of the squares of all the elements in the list\n    # and round it to the upper int(Ceiling)\n    sum_of_squares = 0\n    for i in lst:\n        sum_of_squares += i**2\n\n    # Return the sum of the squares of the inputs and the sum of the\n    # squares of the outputs\n    return sum_of_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    if len(lst) == 0:\n        return 0\n    if lst[0] < lst[-1] + 1:\n        lst = lst[1:]\n    return sum(lst) * sum(lst[1:])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Create a list of the numbers\n    lst = [ int(num) for num in lst ]\n    # Get the sum of squared numbers\n    sum_squares = 0\n    for num in lst:\n        sum_squares += num**2\n    # Round to the next higher int\n    sum_squares = round(sum_squares, int(Ceiling(sum_squares)))\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # This is a bit hacky but it works for any list of numbers.\n    # The idea is to make a list of the squares of the elements in\n    # the list.\n    # For each element in the list, we get the square of the element.\n    # Then we multiply the square of the element by the square of the\n    # element before we add the squares. This gives us the sum of\n    # squares of the elements in the list.\n    for x in lst:\n        x = x**2\n        x = x/(x**2)\n        x = x*x\n        sum_squares(x)\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        sum = 0\n        for j in range(len(lst)):\n            sum += lst[i][j]**2\n        lst[i] = sum/sum\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the size of the list\n    size = len(lst)\n    # Get the sum of the squared numbers\n    sum_squares = 0.0\n    # Loop through the list\n    for i in range(size):\n        # Get the squared number\n        sq = lst[i]**2\n        # If the squared number is zero, return the sum of the squares\n        if sq == 0:\n            sum_squares += sq\n            # Else, return the sum of the squares\n        else:\n            sum_squares += sq\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    nums = []\n    for i in lst:\n        if i >= 0:\n            nums.append(i)\n        else:\n            nums.append(0)\n    nums = list(map(int, nums))\n    return sum(map(lambda x: x**2, nums))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def _sum(lst):\n        \"\"\"This method sums the values of lst.\"\"\"\n        # This is the main function, it adds up the values and returns the sum\n        # of the squares\n        for i in range(len(lst)):\n            if lst[i] < 0:\n                lst[i] = 0\n            else:\n                lst[i] += lst[i]**2\n        return sum(lst)\n\n    # This is the helper function, it rounds each element in the list to the upper int(Ceiling)\n    def _round(lst):\n        \"\"\"This method rounds each element in the list to the upper int(Ceiling)\"\"\"\n        lst = sorted(lst)\n        for i in range(len(lst)):\n            lst[i] = lst[i] - lst[i] * (lst[i] + 1) / 2\n        return lst\n\n    # This is the helper function, it removes duplicates\n    def _remove_duplicates(lst):\n        \"\"\"This method removes duplicate elements from lst\"\"\"\n        lst = sorted(lst)\n        for i in range(len(lst)):\n            if lst[i] in lst[i+1]:\n                lst.remove(lst[i])\n        return lst\n\n    # This is the helper function, it removes all the elements with the same value\n    def _remove_duplicates_zero", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(x) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.split(',')\n    lst = [int(x) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element in the list to the upper int(Ceiling)\n    for item in lst:\n        item = item * int(Ceiling)\n    return sum(item ** 2 for item in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(x):\n        \"\"\"Rounds x to the nearest integer.\n        \"\"\"\n        if x < 0:\n            return -x\n        return x\n\n    def get_all_squares(lst):\n        \"\"\"Returns all the squares in the given list.\n        \"\"\"\n        return [round(x) for x in lst]\n\n    def get_squares(lst):\n        \"\"\"Returns the square of the given list.\n        \"\"\"\n        return sum_squares(lst)\n\n    for x in lst:\n        print(x)\n        for y in round(x):\n            print(y)\n        for y in round(x):\n            print(y)\n    print(\"\")\n    print(get_all_squares(lst))\n    print(get_squares(lst))\n    print(\"\")", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(e) for e in lst]\n    return sum([e**2 for e in lst]) if lst else 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n == 0:\n        return 0\n    if n == 1:\n        return lst[0]\n    if n == 2:\n        return sum([lst[0]]**2 for lst in lst)\n    if n == 3:\n        return sum([lst[0]]**2 for lst in lst[1:])\n    if n == 4:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 5:\n        return sum([lst[0]]**2 for lst in lst[3:])\n    if n == 6:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 7:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 8:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 9:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 10:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 11:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 12:\n        return sum([lst[0]]**2 for lst in lst[2:])\n    if n == 13:\n        return sum([lst[0]]**2 for lst in lst[", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst.sort()\n    sum = 0\n    for element in lst:\n        if element > 0:\n            sum += element**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    nums = [int(x) for x in lst]\n    result = 0\n    for i in range(len(nums)):\n        result += nums[i] * nums[i]\n    return round(result, 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]**2\n    if len(lst) == 2:\n        return lst[0]**2 + lst[1]**2\n    if len(lst) == 3:\n        return lst[0]**2 + lst[1]**2 + lst[2]**2\n    if len(lst) == 4:\n        return lst[0]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2\n    if len(lst) == 5:\n        return lst[0]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2\n    if len(lst) == 6:\n        return lst[0]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2\n    if len(lst) == 7:\n        return lst[0]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2 + lst[6]**2\n    if len(lst) == 8:\n        return lst[0]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2 + lst[6]**2 + lst[7]**2\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the number of elements in the list\n    n = len(lst)\n\n    # Get the upper int(Ceiling) of each element\n    upper_int = 0\n    for i in range(n):\n        upper_int = max(upper_int, int(lst[i]))\n\n    # Round each element in the list to the upper int(Ceiling) first\n    for i in range(n):\n        lst[i] = lst[i] / upper_int\n\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        sum = 0\n        for j in range(len(lst)):\n            sum += lst[i]*lst[j]\n        return sum/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for x in lst:\n        total += x**2\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Create a list of all numbers\n    lst = []\n    for n in lst:\n        lst.append(n)\n    # Return the sum of squares of each element in the list\n    sum_squares = 0\n    for i in lst:\n        sum_squares += i**2\n    # Return the sum of squares of each element in the list\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for num in lst:\n        num = num.replace('.','')\n        if num.count('.') == 1:\n            num = num.replace('.','')*10\n        num = round(num,2)\n        return num\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squares = 0\n    for x in lst:\n        sum_squares += x**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    elif len(lst) == 1:\n        return lst[0]\n    else:\n        lst = lst[1:]\n        return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get the list of numbers\n    lst = []\n    for i in range(len(lst)):\n        lst.append(lst[i])\n    # get the sum of squares for each element\n    sum_squares = 0\n    for i in range(len(lst)):\n        sum_squares += lst[i] * lst[i]\n    # round each element to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        lst[i] = lst[i] * (lst[i] + 1)\n    return sum_squares\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        sum = 0\n        for j in range(len(lst)):\n            sum += lst[j]**2\n        lst[i] = sum/len(lst)\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for item in lst:\n        if item == 0 or item == -1:\n            continue\n        else:\n            return item**2\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Use the sum of squares function to calculate the sum of squares of each\n    # element in the list\n    sum_squares = sum([lst[i]**2 for i in lst])\n    # Round the sum of squares to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        sum_squares = sum_squares * lst[i]\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # If the list is empty, return 0\n    if len(lst) == 0:\n        return 0\n\n    # Convert the list into an array\n    lst = np.array(lst)\n\n    # This function is used to calculate the sum of squares of the\n    # given list.\n    # If the input list is empty, return 0\n    if len(lst) == 0:\n        return 0\n\n    # Sum the squares of all elements in the list.\n    for i in range(len(lst)):\n        sum_squares = 0\n        for j in range(len(lst[i])):\n            sum_squares += lst[i][j]**2\n        return sum_squares\n\n    # This function is used to calculate the sum of squares of the\n    # given list.\n    # If the input list is empty, return 0\n    if len(lst) == 0:\n        return 0\n\n    # Sum the squares of all elements in the list.\n    for i in range(len(lst)):\n        sum_squares = 0\n        for j in range(len(lst[i])):\n            sum_squares += lst[i][j]**2\n        return sum_squares\n\n    # This function is used to calculate the sum of squares of the\n    # given list.\n    # If the input list is empty,", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return 0 if lst == [] else sum([sum(x) for x in lst])**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # the output should be 14\n    return sum([abs(x) for x in lst])**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([(x**2) for x in lst]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Initialize variables\n    sum = 0\n    for num in lst:\n        sum += num\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total_square = 0\n    for element in lst:\n        total_square += element**2\n    return round(total_square,2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in lst:\n        if i == 0:\n            continue\n        if i < 0:\n            i = -i\n        if i > len(lst):\n            i = len(lst)-1\n        if i == lst[-1] or lst[i] == 0:\n            continue\n        # Round to the upper int(Ceiling) first.\n        i = i - int(ceil(i))\n        if i < 0:\n            i = -i\n        if i > len(lst):\n            i = len(lst)-1\n        # Return the sum of squared numbers in the given list.\n        return sum([i**2 for i in lst])\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element in the list to the upper int(Ceiling)\n    # This is the most common way to do this\n    for i in range(len(lst)):\n        lst[i] = lst[i] - int(lst[i])\n    return sum([abs(x) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        sum_squares = 0\n        for i in lst:\n            sum_squares += i**2\n        return round(sum_squares,2)\n\n    print sum_squares\n\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # input: a list of numbers\n    # output: the sum of squared numbers in the given list\n    # for each element in the list, round it to the upper int(Ceiling) first\n    # the output will be the sum of squares of the elements in the given list\n    # returns: the sum of squared numbers in the given list\n    def sum_squares(lst):\n        # input: a list of numbers\n        # output: the sum of squared numbers in the given list\n        # for each element in the list, round it to the upper int(Ceiling) first\n        # the output will be the sum of squares of the elements in the given list\n        # returns: the sum of squared numbers in the given list\n        sum_squares = 0\n        for x in lst:\n            sum_squares += x**2\n        return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get a list of the sum of the squares of each number in the list\n    sum_squares = []\n    for x in lst:\n        sum_squares.append(sum(x**2))\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if not isinstance(lst, int):\n        lst = [lst]\n    res = 0\n    for element in lst:\n        res += element**2\n    return round(res, 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # The input must be a list of numbers\n    #\n    if not isinstance(lst, list):\n        raise TypeError(\"Input must be a list of numbers\")\n    #\n    for i in range(len(lst)):\n        #\n        # We need to round each element to the upper int(Ceiling)\n        #\n        if lst[i] < 0:\n            lst[i] = 0\n        #\n        # Now we need to sum all elements in the list\n        #\n        sum = 0\n        for j in range(i, len(lst)):\n            sum += lst[j] * lst[j]\n        #\n        # Now we need to round the sum to the upper int(Ceiling)\n        #\n        sum = round(sum, int(Ceiling))\n        #\n        # Finally we return the sum of squared numbers\n        #\n        return sum\n    #\n    # No solution found\n    #\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    sum = 0\n    for i in lst:\n        sum += abs(i)\n    return sum / len(lst) * Ceiling(sum/sum)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    elif len(lst) == 1:\n        return lst[0]\n    elif len(lst) == 2:\n        return lst[1]\n    elif len(lst) == 3:\n        return lst[2]\n    elif len(lst) == 4:\n        return lst[3]\n    elif len(lst) == 5:\n        return lst[4]\n    elif len(lst) == 6:\n        return lst[5]\n    elif len(lst) == 7:\n        return lst[6]\n    elif len(lst) == 8:\n        return lst[7]\n    else:\n        return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        return 0\n    if lst[0] == lst[1] == lst[2] == 0:\n        return 0\n    if lst[0] > lst[1]:\n        return sum_squares(lst[1:])\n    elif lst[0] < lst[1]:\n        return sum_squares(lst[:1])\n    elif lst[0] == lst[1] and lst[0] == lst[2]:\n        return sum_squares(lst[1:])\n    elif lst[0] < lst[1] and lst[0] == lst[2]:\n        return sum_squares(lst[:1])\n    elif lst[0] == lst[1] and lst[0] == lst[2] and lst[0] > lst[2]:\n        return sum_squares(lst[1:])\n    elif lst[0] == lst[1] and lst[0] == lst[2] and lst[0] == lst[3]:\n        return sum_squares(lst[1:])\n    elif lst[0] == lst[1] and lst[0] == lst[2] and lst[0] == lst[4] and lst[0] > lst[3]:\n        return sum_squares(lst[1:])\n    elif lst[0] == lst[1] and lst[0] == lst[2] and lst[0] == lst[4] and lst[0] == lst[5]:\n        return sum_squares(lst[1:])\n    elif lst[0] == lst[1] and lst[0] == lst[2] and lst[0] == lst[4] and", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for x in lst:\n        if x!= 0:\n            total += x**2\n        else:\n            total = 0\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst = [int(x) for x in lst]\n    lst = [x for x in lst if x < 0]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [lst]\n    lst.sort()\n    for i in range(len(lst)):\n        lst[i] = lst[i] - lst[i - 1]\n        if len(lst[i]) < 1:\n            lst[i] = 0\n        else:\n            lst[i] = lst[i] * lst[i]\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(abs(x) for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(lst, int):\n        \"\"\"Rounding is done first.\n        If the input is a positive number, the result is the upper int(Ceiling) of the input.\n        If the input is a negative number, the result is the lower int(Floor) of the input.\n        \"\"\"\n        if lst[0] == int:\n            return lst[1:]\n        elif lst[-1] == int:\n            return lst[:-1]\n        else:\n            return round(lst, int - 1)\n\n    lst = [x for x in lst if x]\n    sum_squares = 0\n    for i in range(len(lst)):\n        sum_squares += round(lst[i], int)\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # This is the lower limit of the values in the list\n    lower_limit = len(lst) - 1\n    # This is the upper limit of the values in the list\n    upper_limit = len(lst) + 1\n    # The number of elements in the list\n    n_elements = len(lst)\n    # The number of elements in the sum of the squares\n    n_squares = sum([sum(x**2) for x in lst])\n    # The number of elements in the sum of the squares for the upper limit\n    n_squares_upper_limit = sum([sum(x**2) for x in lst if x > lower_limit])\n    # The number of elements in the sum of the squares for the lower limit\n    n_squares_lower_limit = sum([sum(x**2) for x in lst if x < upper_limit])\n    # The number of elements in the sum of the squares for the lower limit\n    n_squares_lower_limit_rounded = round(n_squares_lower_limit, 2)\n    # The number of elements in the sum of the squares for the upper limit\n    n_squares_upper_limit_rounded = round(n_squares_upper_limit, 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round all numbers to upper int(Ceiling)\n    for i in range(len(lst)):\n        lst[i] = int(lst[i])\n    return sum([sum(lst[i:i+1]) for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n == 0:\n        return 0\n    if n == 1:\n        return lst[0]**2\n    return sum(lst, axis=0)**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    sum = 0\n    for num in lst:\n        sum += num ** 2\n    return sum\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sum(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\n        \"\"\"\n        return sum(lst) * sum(lst)\n\n    lst = []\n    for x in range(1,len(lst)):\n        lst.append(x)\n\n    return sum(sum_squares(lst)) * sum(sum_squares(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def _round(lst, upper):\n        \"\"\"\n        Given a list of numbers, round the numbers to the given upper int(Ceiling)\n        \"\"\"\n        for i in range(len(lst)):\n            lst[i] = lst[i] / upper\n    return sum(round(x, 1) for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 1:\n        return 0\n\n    sqsum = 0\n    for num in lst:\n        sqsum += num**2\n    return sqsum / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return sum(lst)\n    if len(lst) == 2:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2)\n    if len(lst) == 3:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2)\n    if len(lst) == 4:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2)\n    if len(lst) == 5:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2)\n    if len(lst) == 6:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2 + lst[6]**2)\n    if len(lst) == 7:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2 + lst[6]**2 + lst[7]**2)\n    if len(lst) == 8:\n        return sum([lst[0]]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([(x**2) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = []\n    for n in lst:\n        if n == 0:\n            continue\n        result.append(n**2)\n    return sum(result)\n    #return sum(lst)**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # We need to make sure that the list is sorted\n    # We do this by making sure that the last element is the largest\n    # The output of this function is the sum of the squares of the numbers\n    # The output is rounded to the upper int(Ceiling) first\n    # Note that we don't need to do this for lst = [-2.4,1,1]\n    # as the first element is the smallest\n    for n in lst:\n        if n == 0:\n            continue\n        if n > 0:\n            sum_squares(n)\n\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst.sort()\n    total = 0\n    for num in lst:\n        total += num**2\n    return total/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # This is the algorithm to solve the problem.\n    # The algorithm is based on the following algorithms:\n    # 1. Split the list into two lists, one containing the lower\n    #    and one containing the upper int(Ceiling) of each element.\n    # 2. Calculate the sum of the squared values of the lower and upper\n    #    int(Ceiling) for each element in the list.\n    # 3. Check if the sum of the squared values of the lower and upper\n    #    int(Ceiling) is equal to the sum of the squared values of\n    #    the elements in the list.\n    # 4. If the sum of the squared values of the lower and upper\n    #    int(Ceiling) is equal to the sum of the squared values of\n    #    the elements in the list, return the sum of the squared values\n    #    of the elements in the list.\n    # 5. If the sum of the squared values of the lower and upper\n    #    int(Ceiling) is not equal to the sum of the squared values\n    #    of the elements in the list, return the sum of the squared\n    #    values of the elements in the list.\n    # 6. If the sum of the squared values of", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        return 0\n    else:\n        return sum(map(lambda x: x**2, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst)**2 for lst in lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([int(c)**2 for c in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Using Python's built-in functions\n    # If lst is an integer\n    if isinstance(lst, int):\n        return sum(lst)\n    # If lst is a string\n    else:\n        return sum(str(lst) for lst in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in lst:\n        if i == 0 or i == 1 or i == 2 or i == 3 or i == 4 or i == 5:\n            continue\n        if i == 6 or i == 7:\n            continue\n        if i == 8:\n            continue\n        if i == 9:\n            continue\n        if i == 10:\n            continue\n        if i == 11:\n            continue\n        if i == 12:\n            continue\n        if i == 13:\n            continue\n        if i == 14:\n            continue\n        return i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(x, int):\n        \"\"\"Round the x value to the next lower integer\n        \"\"\"\n        return x + int\n\n    for num in lst:\n        sum = 0\n        for x in num:\n            sum += round(x, int(ceil(num / num)))\n        print sum\n\nA:\n\nI think this should work :", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for num in lst:\n        num = num.strip()\n        if num.isdigit():\n            num = num / 10\n        else:\n            num = num.rstrip()\n            if num.isdigit():\n                num = num.rstrip()\n            num = int(num)\n        lst.append(num)\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst.sort()\n    sum = 0\n    for i in lst:\n        sum += i**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        return 0\n    return sum([abs(lst[i]-lst[i+1])**2 for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # input: A list of numbers\n    # output: The sum of squared numbers in the given list\n    lst = [float(x) for x in lst]\n    for x in lst:\n        if x == 0:\n            continue\n        if x < 0:\n            x = -x\n            lst.append(-x)\n        if x == lst[0]:\n            lst.append(lst[0])\n        else:\n            sum_squares(lst[1:])\n\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square(n):\n        \"\"\"Rounding function, returns n rounded up to the next integer.\"\"\"\n        if n == 0:\n            return 0\n        elif n < 0:\n            return -1\n        elif n > 0:\n            return 1\n        else:\n            raise ValueError(\"Invalid input\")\n    return sum(square(lst) for lst in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # 0 = 0\n    # 1 = 1\n    # 2 = 2\n    # 3 = 3\n    # 4 = 4\n    # 5 = 5\n    # 6 = 6\n    # 7 = 7\n    # 8 = 8\n    # 9 = 9\n\n    if len(lst) == 0:\n        return 0\n\n    n = 0\n    for x in lst:\n        n += x\n\n    return n / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]**2\n    else:\n        return sum([lst[i]**2 for i in lst],0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Define variables\n    s = 0\n    for i in lst:\n        s += i\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.copy()\n    lst.sort()\n    lst.reverse()\n    lst.pop(0)\n    for i, element in enumerate(lst):\n        if i == 0:\n            return lst[i]\n        elif element < 0:\n            return -lst[i]\n        else:\n            return sum(lst[i]**2 for i in range(len(lst)) if i > 0)\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # first, round each element to the upper int(Ceiling)\n    lst = [int(x) for x in lst]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x == 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]\n    lst = [x for x in lst if x > 0]\n    lst = [x for x in lst if x < 0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(x):\n        return int(ceil(x))\n    \n    if len(lst) == 0:\n        return 0\n    elif len(lst) == 1:\n        return lst[0]\n    else:\n        return round(sum([round(x) for x in lst]))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element in the list to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        lst[i] = int(lst[i],10)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        raise ValueError('You need at least two numbers in the input.')\n    if lst[0] == lst[-1]:\n        raise ValueError('You need to be careful with the input.')\n    if len(lst) == 1:\n        return lst[0]\n    return sum([lst[i]**2 for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = []\n    for i in range(len(lst)):\n        lst.append(lst[i]**2)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # for input lst = [1,2,3]\n    #    print(sum_squares(lst))\n    \n    # for input lst = [1,4,9]\n    #    print(sum_squares(lst))\n    \n    # for input lst = [1,3,5,7]\n    #    print(sum_squares(lst))\n    \n    # for input lst = [1.4,4.2,0]\n    #    print(sum_squares(lst))\n    \n    # for input lst = [-2.4,1,1]\n    #    print(sum_squares(lst))\n    \n    # for input lst = [-2.4,1.4,1.1]\n    #    print(sum_squares(lst))\n    \n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #Lets create the dictionary of numbers\n    #keys = ['a','b','c']\n    #values = [0.5,2,4,6,8]\n\n    #Lets make sure the keys are in the list\n    keys = sorted(keys)\n\n    #Lets create a list of squares\n    squares = []\n    for key in keys:\n        squares.append(sum(lst[key]**2))\n    return sum(squares)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for x in lst:\n        result = result + x**2\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        if lst[i] < 0:\n            lst[i] = 0\n        if lst[i] == 0:\n            return 0\n        if lst[i] > len(lst):\n            return 0\n    return sum(lst[i]**2 for i in range(len(lst)))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sqr(x):\n        return x**2\n\n    sqr_ary = [\n        [math.sqrt(x) for x in lst]\n        for lst in lst\n    ]\n    for i, x in enumerate(sqr_ary):\n        sqr_ary[i] = [\n            math.sqrt(x) for x in lst\n        ]\n        sqr_ary[i] = [\n            math.sqrt(x) for x in lst\n        ]\n    return sum(sqr_ary)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst = [int(x) for x in lst]\n    lst = [sum(lst,2) for x in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sqr(num):\n        return num**(num//10) # round to upper int\n\n    def sqr_squares(lst):\n        res = []\n        for num in lst:\n            res.append(sqr(num))\n        return res\n\n    lst = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [x for x in lst]\n    return sum([x**2 for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(s, upper):\n        \"\"\"Rounds the given number to the upper int(Ceiling)\"\"\"\n        return int(ceil(s * upper)) + 1\n\n    #for i in range(len(lst)):\n    for i in range(len(lst)):\n        sum = 0\n        for j in range(len(lst)):\n            sum += round(lst[i], upper)\n        return sum\n\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    output = []\n    for x in lst:\n        output.append(sum(x*x,2)**2)\n    return output", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([int(x**2) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #input is the list of numbers\n    #output is the sum of squared numbers\n    for num in lst:\n        num = num.to_int()\n        if num > 0:\n            sum = num * num\n            sum = round(sum, 2)\n            output.append(sum)\n    return output", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(n) for n in lst]\n    return sum([(lst[i]**2) for i in lst])/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        if lst[i] < 0:\n            lst[i] = -lst[i]\n        if lst[i] > len(lst):\n            lst[i] = len(lst)-1\n        for j in range(i+1, len(lst)):\n            sum_squares(lst[:j])\n            sum_squares(lst[j:])\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(lst, upper):\n        \"\"\"Rounds the given list of numbers to the given upper int(Ceiling)\"\"\"\n        res = 0\n        for num in lst:\n            res = res + num * num\n        return res / upper\n    return round(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 1:\n        return lst[0]**2\n    else:\n        return sum(lst)**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: x**2, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #return 0\n    for i in lst:\n        if i == 0:\n            continue\n        if i > 0:\n            return i\n        else:\n            return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum([lst[i]**2 for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.split(\",\")\n    lst = sorted(lst, key=lambda x: x.count(\"0\"))\n    lst = [int(x) for x in lst]\n    sum = 0\n    for x in lst:\n        sum = sum + x**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # the following code is taken from https://stackoverflow.com/questions/3870322/python-equivalent-of-c\n    # http://stackoverflow.com/questions/3486824/python-equivalent-of-c\n    # http://stackoverflow.com/questions/3486824/python-equivalent-of-c\n    # http://stackoverflow.com/questions/3870322/python-equivalent-of-c\n    def round(n):\n        return int(ceil(n) * pow(2, n))\n\n    def sum_squares(lst):\n        \"\"\"\n        This function is used to calculate the sum of squares of the given\n        list. The given list is passed as a list of integers and the\n        sum of squares is returned as a list of integers. The given\n        list is passed as a list of integers and the sum of squares\n        is returned as a list of integers.\n        \"\"\"\n        return [round(sum(lst[i]**2 for i in lst)) for i in lst]\n\n    def sum_squares(lst):\n        \"\"\"\n        This function is used to calculate the sum of squares of the given\n        list. The given list is passed as a list of integers and the\n        sum of squares is returned as a list of integers. The given\n        list is passed as a list of", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [x for x in lst if x > 0]\n    for i in range(len(lst)):\n        lst[i] = lst[i] - lst[i-1]\n        lst[i] = lst[i] * lst[i-1]\n        lst[i] = lst[i] * lst[i-1]\n        lst[i] = lst[i] * lst[i-1]\n        lst[i] = lst[i] * lst[i-1]\n        lst[i] = lst[i] * lst[i-1]\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the highest number in lst\n    highest = lst[0]\n    for num in lst:\n        if num > highest:\n            highest = num\n        else:\n            break\n    return highest", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square_sum(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\n        \"\"\"\n        lst = list(lst)\n        return sum(square_sum(x) for x in lst) * lst[0]\n\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the length of the list\n    lst_len = len(lst)\n    # Get the sum of all the numbers in the list\n    sum_squares = 0\n    for i in range(lst_len):\n        sum_squares += lst[i]**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in lst:\n        if i < 0:\n            i += 1\n        else:\n            i = i / 2\n        if i == 0:\n            return 0\n        return sum(i * i for i in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element in the list to the upper int(Ceiling)\n    for i in lst:\n        i = i / 10\n        print(i)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # return sum of squares of lst\n    # round each element to the upper int(Ceiling) first\n    total_square = 0\n    for item in lst:\n        total_square += item**2\n    return round(total_square,2)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # This is the function that you will be using to get the sum of squares\n    # of lst\n    def sum_squares(lst):\n        return sum([lst[i]**2 for i in range(len(lst))])\n\n    # This is the function that you will be using to get the sum of squares\n    # of lst\n    def sum_squares(lst):\n        return sum([lst[i]**2 for i in range(len(lst))])\n\n    # This is the function that you will be using to get the sum of squares\n    # of lst\n    def sum_squares(lst):\n        return sum([lst[i]**2 for i in range(len(lst))])\n\n    # This is the function that you will be using to get the sum of squares\n    # of lst\n    def sum_squares(lst):\n        return sum([lst[i]**2 for i in range(len(lst))])\n\n    # This is the function that you will be using to get the sum of squares\n    # of lst\n    def sum_squares(lst):\n        return sum([lst[i]**2 for i in range(len(lst))])\n\n    # This is the function that you will be using", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(x):\n        return int(ceil(x))\n    return sum([round(x) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        if lst[i] > 0:\n            return lst[i]**2\n        else:\n            return 0\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element to the upper int(Ceiling) first\n    for element in lst:\n        if element > 0:\n            element = int(element)\n        lst.append(element)\n    return sum(lst)</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([ x**2 for x in lst ],0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    elif len(lst) == 1:\n        return lst[0]\n    else:\n        return sum([lst[i]**2 for i in range(0, len(lst), 2)])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    return sum(map(lambda x: x**2, lst))</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # we need to round each element to the upper int(Ceiling) first\n    # because we are rounding to the highest integer\n    for i in range(len(lst)):\n        lst[i] = lst[i] / (1 + float(lst[i]))\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # A list of numbers\n    lst = [ x for x in lst if x > 0]\n\n    # Round each element in the list to the upper int(Ceiling)\n    lst = [ x for x in lst if x > 0]\n    for i, x in enumerate(lst):\n        lst[i] = x / len(lst)\n\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Make sure the list is not empty.\n    if len(lst) == 0:\n        return 0\n\n    # Create a new list of the same size as the list.\n    lst_squared = []\n    for i in lst:\n        lst_squared.append(i ** 2)\n\n    # Add each element to the list.\n    for i in lst_squared:\n        lst_squared.append(i)\n\n    # Get the sum of squared numbers in the list.\n    lst_squared_sum = sum(lst_squared)\n\n    # Return the sum of squared numbers in the list.\n    return lst_squared_sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n == 1:\n        return lst[0]\n    if n == 0:\n        return 0\n    if n == 1:\n        return sum(lst)\n    if n == 0:\n        return sum(lst[1:])\n\n    # The following code is from the Python standard library\n    # Please, note that it is in Python 2.x\n\n    # To avoid division by zero, round the numbers to the\n    # nearest integer.\n    # If the number is not an integer, it is rounded to the\n    # nearest integer that is not less than the number.\n    # If the number is an integer, it is rounded to the nearest\n    # integer that is not greater than the number.\n    # If the number is not an integer, it is rounded to the\n    # nearest integer that is not greater than the number.\n    # If the number is not an integer, it is rounded to the\n    # nearest integer that is not less than the number.\n    # If the number is not an integer, it is rounded to the\n    # nearest integer that is not less than the number.\n    # If the number is an integer, it is rounded to the nearest\n    # integer that is not less than the number.\n    # If the number is not an integer, it is rounded to the\n    #", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # input is given as a list of numbers\n    # output is given as a list of numbers\n    #\n    # input:\n    # [ 1, 2, 3, 4 ]\n    # output:\n    # [ 14, 98, 84, 29 ]\n    #\n    # input:\n    # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round up\n    for n in lst:\n        if n > 0:\n            n = n - 1\n    # round down\n    for n in lst:\n        if n < 0:\n            n = 0\n    # check if the list is empty\n    if len(lst) == 0:\n        return 0\n    # check if the list is a positive integer\n    if lst[0] < 0:\n        return 0\n    # check if the list is a negative integer\n    if lst[0] > len(lst):\n        return 0\n    # check if the list is an integer\n    if sum(lst) == 0:\n        return 0\n    # return the sum of squared numbers in the list\n    return sum([sum(lst[i]**2 for i in range(len(lst) - 1)) for lst[i]])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n\n    sum_squares = 0\n    for n in lst:\n        sum_squares += n**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # There are two possibilities here. Either the list is an even or odd\n    # number, so we can use the even or odd method depending on the\n    # number of elements.\n    if len(lst) % 2 == 1:\n        return sum(lst)\n    else:\n        return sum([sum(x) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square(x):\n        return x**2\n    return sum_squares(lst)/square(lst)*(lst[0]**2-lst[-1]**2)**(-1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = lst[i] - lst[i - 1]\n        lst[i] = lst[i] * lst[i]\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for i in lst:\n        total += i\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([abs(x) for x in lst]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * sum(lst[1:])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = lst[i] + lst[i]\n\n    return round(sum(lst),1)*sum(lst)**(-1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    lst = [x for x in lst if x > 0]\n    lst = [sum(x**2) for x in lst]\n    lst = [round(x, 2) for x in lst]\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    return sum([ x**2 for x in lst ])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    if len(lst) == 0:\n        return 0\n    for num in lst:\n        return num**2\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square(num):\n        return num * num\n\n    def square_squares(lst):\n        if len(lst) < 2:\n            return 0\n        sq = square(sum(lst))\n        sq_sq = square_squares(lst)\n        return sq * sq_sq\n\n    for num in lst:\n        sq = square(num)\n        sq_sq = square_squares(lst)\n        return sq * sq_sq\n\n    return sum(lst) + sum(square_squares(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([(i**2) for i in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    return round(lst[-1],2)*lst[-1]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        return 0\n    return sum(map(lambda x: x**2, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def int_round(n):\n        return int(ceil(n))\n    for n in lst:\n        if n == 0:\n            return 0\n        else:\n            return int_round(sum(n * n) / len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(i) for i in lst]\n    lst = [x for x in lst if x > 0]\n    lst = [sum(lst) for lst in lst]\n    lst = [round(sum(lst), int(Ceiling)) for lst in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for num in lst:\n        num = int(num)\n        if num == 0:\n            return 0\n        if num < 0:\n            return -num\n        if num > int(ceil(num)):\n            return num\n        return num", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for i in range(len(lst)):\n        total += lst[i]**2\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    i = 0\n    while i < n:\n        if lst[i]**2 == 0:\n            i += 1\n        else:\n            i += 1\n\n    return n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round_to(lst, upper_int):\n        \"\"\"Rounds a list to the upper int(Ceiling)\"\"\"\n        lst = [round(x, int(upper_int)) for x in lst]\n        return lst\n\n    def round(lst):\n        \"\"\"Rounds a list to the upper int(Ceiling)\"\"\"\n        return round_to(lst, int(ceil(lst)))\n\n    lst = [1,2,3,4,5,6,7,8,9,10]\n    sum_squares(lst)\n    print(sum_squares(lst))\n    print(sum_squares(lst, 1))\n    print(sum_squares(lst, 2))\n    print(sum_squares(lst, 3))\n    print(sum_squares(lst, 4))\n    print(sum_squares(lst, 5))\n    print(sum_squares(lst, 6))\n    print(sum_squares(lst, 7))\n    print(sum_squares(lst, 8))\n    print(sum_squares(lst, 9))\n    print(sum_squares(lst, 10))\n    print(sum_squares(lst, 11))\n    print(sum_squares(lst, 12))\n    print(sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # first round each element to the upper int(Ceiling)\n    lst = [int(x) for x in lst]\n    # sum the squares of all numbers in the list\n    for x in lst:\n        sum_squares(x)\n    # round each element to the lower int(Floor)\n    lst = [int(x) for x in lst]\n    # sum the squares of all numbers in the list\n    for x in lst:\n        sum_squares(x)\n    # round each element to the upper int(Ceiling)\n    lst = [int(x) for x in lst]\n    # sum the squares of all numbers in the list\n    for x in lst:\n        sum_squares(x)\n    # round each element to the lower int(Floor)\n    lst = [int(x) for x in lst]\n    # sum the squares of all numbers in the list\n    for x in lst:\n        sum_squares(x)\n    # round each element to the upper int(Ceiling)\n    lst = [int(x) for x in lst]\n    # sum the squares of all numbers in the list\n    for x in lst:\n        sum_squares(x)\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the number of elements in the list\n    n = len(lst)\n    # Get the largest number\n    max = max(lst)\n\n    # Take care of the case when lst is empty\n    if n == 0:\n        return 0\n\n    # Round each element in the list to the upper int(Ceiling) first\n    for i in range(n):\n        if lst[i] > max:\n            lst[i] = max\n        else:\n            lst[i] = lst[i] - max\n\n    # Return the sum of squared numbers\n    return sum([lst[i]**2 for i in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(x):\n        return int(ceil(x)+1)\n\n    # Add all the squares to the sum\n    for x in lst:\n        sum_squares(x)\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for element in lst:\n        if element > 0:\n            sum += element\n    return round(sum,2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 1:\n        return lst[0]\n    else:\n        return sum([lst[i]**2 for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [sum(x**2 for x in lst) for lst in lst]\n    return max(lst) * 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    # round each element in the list to the upper int(Ceiling) first\n    # output the sum of squared numbers in the list\n    sum_squares = 0\n    for i in range(len(lst)):\n        sum_squares += lst[i]**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # The function returns the sum of squares of the given list\n    # The input is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n\n    # The input is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers\n    # The output is a list of numbers", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    sum = 0\n    for i in lst:\n        sum += i**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    lst = [lst[i] for i in range(len(lst))]\n    lst = [sum(lst) for i in range(len(lst))]\n    return lst[0] * lst[1] * lst[2] * lst[3]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Converting to int\n    lst = [int(x) for x in lst]\n    lst = [sum(lst) for lst in lst]\n    lst = [round(lst,2) for lst in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n == 0:\n        return 0\n    if n == 1:\n        return sum(lst)\n    # round each element to the upper int(Ceiling) first\n    for i in range(n):\n        lst[i] = lst[i] * int(ceil(lst[i]))\n    return sum(lst) / n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in lst:\n        if i < 0 or i > len(lst)-1:\n            continue\n        return i**2\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(map(lambda x: x**2, lst)) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = sorted(lst, key=lambda x: x, reverse=True)\n    return sum([int(n**2) for n in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.split(' ')\n    lst = lst[:-1]\n    lst = [int(x) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [round(x,2) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x in lst]\n    lst = [sum(x**2 for x in lst) for x", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if lst[0] == 0:\n        return 0\n    return sum([lst[i]**2 for i in lst])**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    for i, number in enumerate(lst):\n        if number > 0:\n            number = number - 1\n        if number < 0:\n            number = number + 1\n        if number == 0:\n            continue\n        if number > 10:\n            # Round to the upper int(Ceiling) first\n            number = int(number)\n        if number < 0:\n            # Round to the lower int(Floor) first\n            number = int(number)\n        lst[i] = number * number\n\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sum_squares_lst(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the round(lst) of each element in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst =", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i * i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(x**2 for x in lst) for lst in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in lst:\n        if i < 0:\n            i = 0\n        if i > len(lst):\n            i = len(lst)\n        if i == 0:\n            return 0\n        else:\n            return sum(lst[i]**2) + sum(lst[i-1]**2)\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(x):\n        return x if x < 0 else x\n\n    for n in lst:\n        if n == 0:\n            return 0\n        if n == 1:\n            return sum(round(x) for x in n)\n        if n % 2 == 0:\n            return sum(round(x) for x in n * n)\n        if n < 0:\n            return sum(round(x) for x in n * n + n)\n        else:\n            return sum(round(x) for x in n * n)\n\n    return sum(round(x) for x in n for n in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    return sum([sum(x**2) for x in lst]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Check that all elements in the list are integers\n    lst = list(lst)\n    lst = map(lambda x: int(x), lst)\n    lst = [sum(x*x for x in lst) for x in lst]\n    return lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square(x):\n        return x**2\n    return sum(map(square, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    for i in range(len(lst)):\n        if lst[i] > 0:\n            return sum_squares(lst[:i]) + sum_squares(lst[i+1:])\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        sum = 0\n        for i in lst:\n            sum = sum + i\n        return sum/sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([lst[i]**2 for i in lst])/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # the output should be 14\n    # the output should be 98\n    # the output should be 84\n    # the output should be 84\n    # the output should be 29\n    # the output should be 6\n    # the output should be 6\n    # the output should be 6\n\n    # convert to int(ceil(lst[0]))\n    lst = [int(lst[0]) for lst in lst]\n    # convert to int(ceil(lst[0]))\n    lst = [int(lst[0]) for lst in lst]\n    # round to the upper int(ceil(lst[0]))\n    lst = [round(lst[0], 2) for lst in lst]\n\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # This is a loop that sums up all the squares of each element\n    # in the list\n    for i, element in enumerate(lst):\n        if element > 0:\n            sum_squares([element])\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    lst.sort()\n    nums = [sum(lst) for lst in lst]\n    return nums / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # The sum of squared numbers is defined as sum(Sqr(n))/len(n)\n    # where n is the number of elements in the list.\n    # This is the most efficient way to do this, as it requires less\n    # memory, and is also faster than computing the sum of all the\n    # numbers in the list.\n    # The sum of squared numbers can be computed in O(n^2) time.\n    # Note that the sum of squared numbers can be computed in O(n) time\n    # if you have a list that has only one element, and you only have\n    # to sum the squares of the numbers in that list.\n    # This is because you can compute the sum of squares of a list\n    # of numbers in O(1) time by simply summing the squares of all\n    # elements in the list.\n    # For example, consider the following list:\n    # [1,2,3]\n    # [1,4,9]\n    # [1,3,5,7]\n    # [1.4,4.2,0]\n    # [-2.4,1,1]\n    # [-1,0,2]\n    # [-2,1,2]\n    # [-1,2,1]\n    # [-2,0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(v) for v in lst]\n    lst = [sum(lst) for lst in lst]\n    lst = [round(v,2) for v in lst]\n    lst = [sum(lst) for lst in lst]\n    lst = [sum(lst) for lst in lst]\n    lst = [sum(lst) for lst in lst]\n    lst = [sum(lst) for lst in lst]\n    lst = [sum(lst) for lst in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # We are going to take the absolute value of each element in the list\n    # and then round each number to the upper int(Ceiling) first.\n    # We will then take the sum of the absolute value of each element in the list.\n    # We will then take the sum of the absolute value of the elements in the list.\n    # The result will be the sum of the squares of the elements in the list.\n    abs = 0\n    for num in lst:\n        abs += num\n        if abs > 0:\n            num = num / abs\n            lst.append(num)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #for lst in lst:\n    #    print lst\n    #    for i in lst:\n    #        print i\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #    print\n    #", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = lst[i] - lst[i - 1]\n    return sum(lst, 0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = sorted(lst)\n    lst = lst[:-1]\n    n = len(lst)\n    if n == 0:\n        return 0\n    else:\n        return sum([abs(x) for x in lst]) / n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    return sum([sum(lst[i]**2 for i in range(len(lst))) for lst[i]])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #return lst\n    #return sum(map(lambda x: x**2, lst))\n    #return sum(map(lambda x: x**2, lst) - 1)\n    return sum(map(lambda x: x**2, lst) - 1) / len(lst)</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.split(\",\")\n    sum = 0\n    for n in lst:\n        sum = sum + n**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(x**2 for x in lst) for lst in lst]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst)!= len(lst):\n        raise ValueError(\"lst must be of length %d\" % len(lst))\n    return sum([l ** 2 for l in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum([(x**2) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    n = min(n, len(lst))\n    result = []\n    for i in xrange(n):\n        result.append(lst[i]**2)\n    return sum(result)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # We have to make sure that the sum of all elements in lst is even\n    lst.sort()\n    nums = [sum(lst[i]) for i in lst]\n    nums = [x ** 2 for x in nums]\n    nums = [x ** 2 for x in nums]\n    # We have to round each number to the upper int(ceil) to make sure\n    # that the sum of all numbers is even\n    for i in range(len(nums)):\n        nums[i] = round(nums[i], 2)\n    return sum(nums)"]]