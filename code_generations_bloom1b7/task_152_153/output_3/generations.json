[["def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #-----------------------------\n    # If you have an index that is incorrect, set it to 1, and increment the score of that index\n    #----------------------------------------\n    # This will mark that index for the first time\n    game1 = game\n    #-----------------------------\n    # We will now calculate a list of the differences between the score\n    game2 = game\n    #-----------------------------\n    # Now we will compare the scores against each other\n    for i in range(game1.size()):\n        #-----------------------------\n        # If the score is correct, increment the score of that index\n        #----------------------------------------\n        if i==0:\n            game1[i+1] = game2[i]\n        #-----------------------------\n        # If the score is incorrect, set it to -1, and decrement the score of that index\n        #----------------------------------------\n        elif i==game1.size()-1:\n            game1[i+1] = -1\n        #-----------------------------\n        # If there is a difference between the scores, set the score of the index to the difference\n        #----------------------------------------\n        else:\n            game1[i+1] = game2[i] - game1[i]\n\n    #-----------------------------\n    # Now we will count the number of items that are the same and determine how many are different\n    game = list()\n    game1 = list", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    \n    for i in range(len(guesses)):\n        score = scores.pop()\n        guess = guesses.pop()\n        print(score)\n        print(guess)\n        print(len(guess))\n        print(len(guess))\n        if guess in scores:\n            scores.append(score)\n            guesses.append(guess)\n            if score > 0:\n                return (score,guess)\n        else:\n            return (guess,score)\n    return (0,0)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    n = len(game)\n    \n    \n    score,guess = map(int,range(n))\n    score_arr = []\n    guess_arr = []\n    for i in range(n):\n        guess = guess[i]\n        score = score[i]\n        \n        if guess == score:\n            score_arr.append(score)\n            guess_arr.append(guess)\n        else:\n            score_arr.append(score - guess)\n            guess_arr.append(score - guess)\n        \n    # print(\"Score:\",score_arr)\n    # print(\"Guess:\",guess_arr)\n    \n    return score_arr,guess_arr", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    i = 0\n    for x in game:\n        i = i + 1\n        if i == len(guess):\n            return [game[x],guess[i]]\n        else:\n            return [guess[i]]\n    return game", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        guess = game[i]\n        score = guess\n        if len(guess)!= len(scores):\n            raise ValueError\n        scores.append(score)\n        guesses.append(guess)\n    return scores, guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    guess = guess.split()\n    score = score.split()\n    x = [0 for x in range(len(guess))]\n    y = [0 for x in range(len(score))]\n    \n    for g,s in enumerate(guess):\n        for c in range(len(score)):\n            if (guess[c] == s and guess[len(guess) - 1] == guess[c]) or (guess[c]!= s and guess[len(guess) - 1]!= guess[c]):\n                x[c]+= 1\n                y[c]+= 1\n    \n    return x,y", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [0 for x in range(len(game))]\n    guess = [0 for x in range(len(game))]\n    result = []\n    for i in range(len(game)):\n        result.append(guess[i - 1] - guess[i])\n    for i in range(len(game)):\n        if compare(score,guess) == 0:\n            result.append(0)\n    return result\n    \n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    score = range(len(guess))\n    score = score + range(len(score))\n    guess = range(len(guess))\n    guess = guess + range(len(guess))\n    diff = 0\n    for i in range(len(score)):\n        for j in range(len(guess)):\n            if score[i] == guess[j]:\n                diff += score[i] - guess[j]\n            else:\n                diff += guess[j] - score[i]\n        diff = diff / (len(score) - len(guess))\n        if diff < 0:\n            return diff\n\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    import random\n    import math\n    from collections import defaultdict\n\n    score = defaultdict(int)\n\n    for i in range(len(guess)):\n        try:\n            guess[i] = guess[i].replace('.','')\n        except:\n            pass\n        score[i] += 1\n\n    #print(guess)\n    #print(score)\n    \n    test = testArray(guess)\n    #print(test)\n\n    if test.size() > 1:\n        print('Found more than one guess...')\n        return test\n    \n    #print('Guessed correctly.')\n    #print(score)\n    #print(test)\n    \n    guessed = compare(test,score)\n\n    if guessed[0] == 0 and guessed[1] == 0:\n        return test\n    \n    return guessed", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [int(n) for n in guess]\n    guess = []\n    count = 0\n    for i in range(len(scores)):\n        if scores[i] == scores[i-1]:\n            count += 1\n            guess.append(0)\n        elif scores[i] > scores[i-1]:\n            guess.append(1)\n        else:\n            guess.append(-1)\n    return guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = map(lambda x:float(x),guess) #convert guess to float\n    score = map(lambda x:float(x),game) #convert scores to float\n    best = max(score,guess)\n    worst = min(score,guess)\n    guess_score = max(guess,best) - min(guess,worst)\n    return guess_score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores = [[0 for i in range(len(game))] for j in range(len(game))]\n    guesses = []\n    for i in range(len(game)):\n        for j in range(len(game)):\n            score = game[i] * game[j]\n            guess = guess[i] * guess[j]\n            score = score if i == j else score - guess\n            if score == 0:\n                scores[i][0] = 0\n            elif score < 0:\n                scores[i][0] = score\n            elif score > 0:\n                scores[i][0] = score\n            guesses.append(guess)\n    \n    scoreDiff = []\n    for i in range(len(scores)):\n        scoreDiff.append(scores[i][0] - scores[i+1][0])\n    \n    distance = 0\n    for i in range(len(scores)):\n        for j in range(len(scores)):\n            if scores[i][j] == 0 and scores[i+1][i][j] == 0:\n                distance += len(scores[i+1])\n            elif scores[i][j] == 0 and scores[i+1][i][j] == 1:\n                distance += len(scores[i])\n        distance += len(scores[i+1]) if i == len(scores) - 1 else len(scores[i]) - len(scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Prints out a few statistics about the passed in values.\n    print(\"The first guess is:\",guess[0],\"and the second guess is:\",guess[1])\n    # Assigns the guess to a set, so that we can later compare the results with that set.\n    guess = set(guess)\n    \n    # We can now compare each pair of scores and guesses, and convert them into an array of\n    # the same length.\n    score_diff = []\n    for score,guess in zip(score,guess):\n        score_diff.append(score - guess)\n    score_diff = numpy.array(score_diff)\n    guesses_diff = []\n    for guess,score in zip(guess,score):\n        guesses_diff.append(guess - score)\n    guesses_diff = numpy.array(guesses_diff)\n    scores_diff = []\n    for score,guess in zip(score,guess):\n        scores_diff.append(score - guess)\n    scores_diff = numpy.array(scores_diff)\n    print(\"Scores diff:\",score_diff)\n    print(\"Guess diff:\",guesses_diff)\n    print(\"Scores diff:\",scores_diff)\n    print(\"Guess diff:\",", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # run through each match, filling in the index of each match\n    for i in range(len(game)):\n        if game[i] == guess:\n            return i\n    \n    # return the value of the absolute difference between guess and score\n    return game[i-1] - game[i]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    x = range(len(game))\n    y = range(len(guess))\n    ans = []\n    \n    #start with the guess array\n    for i in xrange(len(guess)):\n        guess[i] = guess[i]+1\n    \n    #find the scores in the guesses array\n    for i in xrange(len(game)):\n        for j in range(i,len(game)):\n            if game[i][j] == guess[i]:\n                x[i] += 1\n                y[j] += 1\n    \n    if x == y:\n        ans = [ans,guess]\n    \n    if x < y:\n        return ans\n    elif x == y:\n        ans = [ans,guess]\n    \n    #check if guesses are within 2 of the score\n    if x[0] < y[0] and x[1] < y[1] and x[0] > y[0] and x[1] > y[1]:\n        return ans\n    \n    #check if guesses are within 3 of the score\n    if x[0] < y[0] and x[1] < y[1] and x[0] > y[0] and x[1] > y[1] and x[0] < y[0]:\n        return ans\n    \n    #check if guesses are within 5 of the score\n    if x[0] < y[0] and x[1] < y[1] and x[0] > y[0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    guess = []\n    score = []\n    for i in range(len(game)):\n        guess.append(game[i])\n        score.append(guess[i])\n    #score = [1,2,3,4,5,1]\n    #print(score)\n    return score\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def isCorrect(scores,guesses):\n        \"\"\"This function compares the scores and guesses with each other. It returns true if the scores match and false otherwise.\n        \"\"\"\n        \n        if len(scores)!= len(guesses):\n            return False\n        \n        for i, score in enumerate(scores):\n            if score!= scores[i]:\n                return False\n                \n        for i, guess in enumerate(guesses):\n            if guess!= guesses:\n                return False\n            \n        return True\n    \n    def distance(score1,score2):\n        \"\"\"This function returns the difference between the scores, in terms of the number of digit matches, or 0 if they are equal.\n        \"\"\"\n        \n        if len(score1)!= len(score2):\n            return 0\n        \n        for i, score in enumerate(score1):\n            if score!= score2:\n                return (score - score2) * 10\n                \n        return 0\n        \n        \n    def intToFloat(score):\n        \"\"\"This function converts a score to a floating-point number, using the number of digits in the score.\n        \"\"\"\n        if score % 10 == 0:\n            score = int(score / 10)\n        else:\n            score = int(score)\n        return float(score)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # You have to make sure the input is equal length\n    if len(game)!= len(guess):\n        raise ValueError(\"Inputs do not have equal length\")\n    \n    # The guess is just a list of scores from the scores array. It should have all the scores for the match\n    guess = [game[score] for score in guess]\n    \n    # We want to make sure each guess is not greater than the score\n    for guess, score in zip(guess, game):\n        if guess[0] > score:\n            raise ValueError(\"Guess: {}, Score: {}\".format(guess, score))\n        \n        \n    # We have to sort the scores array and keep only the first score\n    scores = sorted(scores, key=lambda x: x[0])[0]\n    \n    # We want to compare each score to the guess\n    for score, guess in zip(scores, guess):\n        if score!= guess:\n            raise ValueError(\"Guess: {}, Score: {}\".format(guess, score))\n        \n        # We want to return the difference between the guess and the score\n        return abs(score - guess)\n    \n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores,guesses = makeScoresGuesses(game)\n    \n    scoreDiff = 0\n    guessDiff = 0\n    guesses = []\n    \n    for i in range(len(scores)):\n        for j in range(len(guesses)):\n            scoreDiff = scoreDiff + (guesses[i][j] - scores[i][j])\n            guessDiff = guessDiff + (guesses[i][j] - guesss[j][i])\n            \n            if scoreDiff == 0:\n                guesses[i][j] = scoreDiff\n                guesss[j][i] = 0\n            elif guessDiff == 0:\n                guesses[i][j] = guessDiff\n                guesss[j][i] = 0\n            else:\n                return (guesses[i][j],scoreDiff-guessDiff)\n               \n    return (guesses[0],guesss[len(scores)-1])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess.copy()\n    print('Guess:')\n    for i in range(len(guess)):\n        print(guess[i],' ')\n    print('Result:')\n    for i in range(len(game)):\n        print(game[i],' ')\n    print('Guess:')\n    for i in range(len(guess)):\n        print(guess[i],' ')\n    print('Result:')\n    for i in range(len(game)):\n        print(game[i],' ')\n\n    return guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #arrays that hold the scores\n    scores = [None,None,None,None,None,None,None,None,None]\n    \n    #guess arrays that hold the guesses\n    guess = [None,None,None,None,None,None,None,None,None]\n    \n    #create a new array to hold the differences\n    diff = [None,None,None,None,None,None,None,None,None,None]\n    \n    #loop through both arrays\n    for i in range(len(guess)):\n        #check if guess is in the correct score range\n        if guess[i] is not None:\n            #calculate the absolute difference\n            diff[i] = guess[i] - scores[i]\n            \n            #check if the difference is not too far off\n            if abs(diff[i]) < (3.5 * 10 ** 3):\n                #add the guess to the correct score range\n                scores[i] = guess[i]\n                \n                #create a new array to hold the scores\n                scores[i] = [None,None,None,None,None,None,None,None,None,None]\n        else:\n            #add a blank guess to the correct score range\n            scores[i] = [None,None,None,None,None,None", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def initialize(game):\n        game.set_options(default_options)\n        game.set_monsters()\n        game.add_events()\n        game.set_description(\"Compare guess scores\")\n        game.setup_board()\n        game.create_play_game()\n        game.connect(\"game-started\",on_game_started)\n        game.connect(\"game-stopped\",on_game_finished)\n    \n    def on_game_started(self,game):\n        player1 = game.get_player()\n        player2 = game.get_player()\n        game.set_player(player2)\n        game.set_game_type(\"compare\")\n        game.set_board([[0,0,0,0],[0,0,0,0]])\n        for i in range(len(player1.get_guesses())):\n            guess = player1.get_guesses()[i]\n            for j in range(len(player2.get_guesses())):\n                guess2 = player2.get_guesses()[j]\n                if compare(guess,guess2) < 0:\n                    game.set_game_result(\"player1 \" + str(player1.get_player_name()) + \" is wrong and should be \" + str(player2.get_player_name()))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess_length = len(guess)\n    score_length = len(game[0])\n    if guess_length > score_length:\n        if len(game[0]) == guess_length:\n            return game\n    else:\n        if len(game[0]) == score_length:\n            return game\n    start = guess_length\n    for i in range(start,guess_length):\n        if game[i] == guess[i]:\n            return score_length - i - 1\n        else:\n            return guess_length - i - 1\n    return guess_length - start\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    guess = guess.tolist()\n    \n    i = 0\n    for guess in guess:\n        if guess in game:\n            return i\n        else:\n            i = i + 1\n    return i", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = [0] * len(game[0])\n    score = [0] * len(game[0])\n    for x in range(len(game[0])):\n        score[x] = int(game[x])\n        guess[x] = guess[x] + score[x]\n        \n    return guesses, score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    results=[]\n    \n    for i in range(len(guess)):\n        if guess[i][0]!=game[i][0]:\n            results.append((0,guess[i][0] - game[i][0]))\n    for j in range(len(game)):\n        if game[j][0]!=guess[j][0]:\n            results.append((0,game[j][0] - guess[j][0]))\n    return results", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def guess_result(guess,score):\n        if score == 0:\n            return guess\n        elif score == guess:\n            return guess\n        else:\n            return score - guess\n    \n    score1 = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            #get score\n            score = game[i][j]\n            guess = game[i][j][3]\n            #print score, guess\n            if score==guess:\n                return [score,guess]\n            else:\n                diff = abs(score - guess)\n                if diff<0:\n                    return [score,guess]\n                else:\n                    return [diff,guess]\n    \n    return []", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # from random import random\n    # from math import max\n    # print(\"Guess: %s\" % guess)\n    # print(\"Guess Score: %s\" % game.score)\n    # print(\"Guessed: %s\" % game.score[guess])\n    # print(\"Given Score: %s\" % game.score[guess])\n    # print(\"Guessed: %s\" % game.score[guess] - game.score[guess][guess])\n\n    # print(\"GuessScore: %s\" % guess_score[guess])\n    # print(\"Guessed: %s\" % guess_score[guess] - game.score[guess][guess])\n\n    score,guess_score = game.score[guess]\n    guess = guess_score[guess]\n    print(\"G\")\n    \n    # print(\"Guess Score: %s\" % guess_score[guess])\n    # print(\"Guessed: %s\" % guess_score[guess] - game.score[guess][guess])\n\n    # score[guess][guess] = max(score[guess][guess],guess_score[guess])\n    # print(\"Guess Score: %s\" % guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def guess_score(score,guess):\n        if score == guess:\n            return 1\n        return score - guess\n    \n    guess_score = float('inf')\n    for guess in guesses:\n        guess_score = guess_score - guess_score(guess,guess)\n    \n    return guess_score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            if game[i][j] < game[i-1][j]:\n                if (game[i][j] >= game[i-1][j]) and (game[i][j] < game[i-1][j]):\n                    return 1\n                elif (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]) and (game[i][j] < game[i-1][j]):\n                    return 2\n            elif game[i][j] < game[i-1][j]:\n                if (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]):\n                    return 3\n                elif (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]):\n                    return 4\n            elif game[i][j] < game[i-1][j]:\n                if (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][j]):\n                    return 5\n                elif (game[i][j] >= game[i-1][j]) and (game[i][j] >= game[i-1][", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        return\n\n    scores = [game[i] for i in range(len(game))]\n    guess = [guess[i] for i in range(len(guess))]\n    return compare_array(scores, guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return len(compare(game,guess)) - len(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # You are given two arrays of scores and guesses of equal length, where each index shows a match.\n    # The scores are just numbers, while the guesses are strings.\n    #\n    # The \"score\" and \"guess\" arrays should be sorted.\n    # \n    # Return an array of the same length denoting how far off each guess was.\n    # If they have guessed correctly, the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    game = game\n    guess = guess\n    guesses = []\n    scores = []\n    \n    # Now we assign the scores to the appropriate index of the guess array.\n    for i in range(len(guess)):\n        scores[i] = guess[i]\n    # Now we loop through the whole game array.\n    for i in range(len(game)):\n        if game[i]!= '':\n            if game[i]!= guess[i]:\n                for j in range(len(guess)):\n                    if scores[j] > game[i]:\n                        guesses.append(guess[j])\n                        guesses.sort()\n                        break\n            else:\n                guesses.append(game[i])\n                break\n    \n    return guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    assert len(game) == len(guess), \"Guess and Score arrays are not of equal length\"\n    \n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        if guess!= score:\n            scores.append(guess)\n            guesses.append(score)\n        else:\n            scores.append(score)\n            guesses.append(score)\n    return scores, guesses\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    g = game\n    n = len(g)\n    if not n:\n        return\n    score = g[0]\n    if len(g) == 1:\n        guess = g[0]\n        return score - guess\n    elif len(g) == 2:\n        guess = g[1]\n        return score - guess\n    else:\n        return score - guess - g[n - 1] - g[n - 2]\n    \n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    def compare_scoring(game):\n        \"\"\"\n        The scoring function is designed to provide a single number that indicates how far\n        off a guess is from the actual score. If the score is exact, the correct guess is given a score of 0.\n        Otherwise, the correct guess is given a score of 1. The score can also be negative, in which case\n        the correct guess is given a score of -1.\n        \"\"\"\n        \n        score = 0\n        guess = game[0]\n        \n        while guess:\n            if guess[0] == game[0]:\n                score += 1\n            elif guess[0] < game[0]:\n                score -= 1\n            elif guess[0] > game[0]:\n                score = 0\n                guess = guess[len(game[0])-1]\n            \n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    out = []\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            out.append(game[i][j] - guess[j])\n    \n    return out", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # At this point you are aware that the scores are the same length and that\n    # the guesses are all of the same length.\n    scores = []\n    guesses = []\n    \n    # Here we iterate over the matches and do a quick comparison of the scores and\n    # guesses. \n    \n    # Start at the index 0 because the first match is always true.\n    for i in range(len(game)):\n        score = game[i]\n        guess = guess[i]\n        \n        #If the guess is correct, score is correct, and the match is true. If not, score is incorrect.\n        if guess == score:\n            guesses.append(score)\n            score = score - 1\n            if score < 0:\n                guesses.append(score)\n                score = -score\n                if score < 0:\n                    guesses.append(score)\n            else:\n                scores.append(score)\n        else:\n            scores.append(guess)\n    \n    return scores,guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # indexes in the array start from 0, so we loop from left to right\n    # indexing in the second array starts from 0, so we loop from right to left\n    scores = game\n    guesses = guess\n\n    # we keep track of the score and guess of each match\n    # this allows us to easily compare the two arrays later\n    matches = {}\n    score = 0\n    guess = 0\n\n    # for each index in the first array\n    for i in range(len(scores[0])):\n        # we compare each score in the second array\n        for j in range(len(guesses[0])):\n            if scores[i][j] == guesss[j]:\n                score = scores[i][j]\n                guess = guesses[i][j]\n                matches[i][j] = 1\n                matches[guesses[i][j]] = 1\n    \n    # we sort the matches so that the one with the lower score\n    # is on the left and the one with the higher score\n    # is on the right\n    matches.sort(key=lambda match: match[0])\n    \n    # we keep track of the answer\n    answer = 0\n    for m in matches:\n        answer += m\n    return answer\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        raise ValueError(\"the number of games in the array is not the same as the number of guesses.\")\n    if len(game)!= len(guess[0]):\n        raise ValueError(\"the number of games in the array is not the same as the number of the first match.\")\n    for i in range(len(game)):\n        for j in range(len(guess[i])):\n            if game[i][j]!= guess[i][j] and game[i][j] > guess[i][j] :\n                return i,j\n\n    return 0, 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        raise ValueError(\"Games and guesses must have equal length.\")\n    scores = []\n    guesses = []\n    for x in range(len(game)):\n        for y in range(len(game)):\n            score = game[x][y]\n            guess = guess[x][y]\n            if len(guess)!= len(score):\n                raise ValueError(\"Games and guesses must have equal length.\")\n            if guess.find(score) > -1:\n                guesses.append(guess)\n            else:\n                scores.append(score)\n    return scores,guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def __init__(self):\n        self.guess = []\n        self.score = []\n    \n    def compare(self,score,guess):\n        \"\"\"Sorts the guess array by score, and returns the guess index that is closest to score.\"\"\"\n        \n        guess_index = 0\n        for i in range(len(guess)):\n            if guess[i] > score[i]:\n                guess_index = i\n                break\n            \n        return guess_index\n    \n    def __str__(self):\n        result = \"\"\n        for i in range(len(self.guess)):\n            result += str(self.guess[i]) + \", \"\n        \n        return result\n    \n    def __repr__(self):\n        result = \"\"\n        for i in range(len(self.guess)):\n            result += str(self.guess[i]) + \", \"\n        \n        return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    assert len(game)==len(guess)\n    \n    if len(game)==len(guess):\n        for i in range(len(game)):\n            for j in range(len(guess)):\n                if game[i][j]==guess[i][j]:\n                    return i,j\n    return 0,0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(guess) == len(game):\n        return [compare(g,h) for g,h in zip(guess,game)]\n    else:\n        return [compare(g,h) for g,h in zip(game,guess)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores=list(range(len(game)))\n    guesses=list(range(len(game)))\n    if len(scores)==len(guesses):\n        # if all scores and guesses are the same length, we know that they are all the same\n        return [sum(i) for i in scores]\n    else:\n        if len(scores)!=len(guesses):\n            # print(scores)\n            # print(guesses)\n            # print(len(scores)) # so you know if this is actually the case, then this line is necessary\n            return [sum(i) for i in scores]\n        else:\n            # we know that they are the same length and we know that they are both the same length\n            # so that is how we compare them, we will put the difference between scores and guesses in an array\n            # then we can do a simple summation and compare them with each other\n            scores_guess=list(zip(scores,guesses))\n            # the average of the difference of the scores to the guesses\n            sum_diff=sum(map(lambda i: i-scores[i],scores_guess))\n            # the average of the difference of the guesses to", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores=game[0]\n    guesses=game[1]\n    lengths=scores.shape[0]\n    comparator=[]\n    for i in range(0,lengths-1):\n        if comparator == []:\n            comparator=[]\n        else:\n            comparator.append(guesses[i]-(guesses[i]+scores[i]))\n    for i in range(0,lengths-1):\n        if comparator[i] == scores[i]:\n            return comparator\n    return comparator", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    n = len(game)\n    if n == 1:\n        return [0,0]\n    else:\n        score = 0\n        guess = 0\n        score2 = 0\n        guess2 = 0\n        \n        for i in range(0,n):\n            score = score + game[i]\n            guess = guess + game[i]\n            score2 = score2 + guess2\n            guess2 = guess2 + game[i]\n\n        return score2 - score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Initialize the result arrays. score[0] is the array of scores, and guess[0] is the array of guesses.\n    results = []\n    for i in range(len(guess)):\n        results.append([])\n    for j in range(len(score)):\n        scores = score[j]\n        guess = guess[j]\n        for k in range(len(guess)):\n            score = scores[k]\n            if compare(guess[k],score) == 0:\n                results[-1].append(guess[k])\n        else:\n            results[-1].append(0)\n    return results\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    score = [0]*len(guess)\n    for i in range(len(guess)):\n        score[i] = game[i] - guess[i]\n\n    if len(score) == len(guess):\n        return score\n\n    diff = []\n    for i in range(len(guess)):\n        if score[i] > 0:\n            diff.append(score[i] - guess[i])\n        else:\n            diff.append(guess[i] - score[i])\n\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # x, y, score = [], []\n    guess = guess.tolist() # assume len(guess)==len(game)\n    \n    # for i in range(len(game)):\n    for i in range(len(guess)):\n        # x = 0\n        # y = 0\n        # score[i] = 0\n        if game[i][0] == guess[i][0]:\n            # x = 1\n            # y = 1\n            # score[i] = 1\n            #print i\n            # if guess[i][0]==1:\n                # score[i]=score[i]+1\n            # else:\n                # score[i] = score[i]-1\n            # x = score[i]\n            # y = score[i]\n            #print i\n            # print \"x: \",x\n            #print \"y: \",y\n            #print \"score: \",score[i]\n            #if x!= score[i]:\n                # print \"x = \",x\n                # print \"score: \",score[i]\n                #print \"x: \",game[i][0]\n                # print \"score: \",score[i]\n                #print \"x: \",guess[i][0]\n                # print \"score: \",score[i]\n                #print \"x: \",guess[i][0]\n                # print \"score: \",score[i]\n                #print \"x: \",", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            return 0\n        elif game[i] > guess[i]:\n            return 1\n        elif game[i] < guess[i]:\n            return -1\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    scores += [game[0][0]]\n    guesses += [game[0][1]]\n    for i in range(len(scores)-1):\n        if scores[i] == scores[i+1]:\n            score = scores[i] - scores[i+1]\n            if score < 0:\n                guesses.append(guesss[i])\n                scores.pop(i)\n                i--\n            else:\n                scores[i] += score\n                guesses.append(guesss[i])\n    return guesses</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    return [0 for x in range(len(game)) if guess == x]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for i in range(len(game[0])):\n        for j in range(len(game[0][i])):\n            if (game[0][i][j] == guess[i]):\n                result.append(i)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [0 for i in range(guess.shape[0])]\n    guess = [0 for i in range(guess.shape[0])]\n    for i in range(len(guess)):\n        if guess[i] == guess[i - 1] and guess[i] == guess[i + 1]:\n            score[i] += 1\n        else:\n            score[i] += -1\n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = [x for x in guess if x in game]\n    score = [x for x in game if x in guess]\n    result = []\n    for x in score:\n        if x in guess:\n            result.append(0)\n        else:\n            result.append(abs(guess[x] - x))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # take the guesses and score for each of the match pairs\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        if game[i]==guess:\n            scores.append(guesses[i])\n        else:\n            guesses.append(game[i])\n            scores.append(guesses[i])\n    # create an array that only contains the scores\n    scores = np.array(scores)\n    # sort the scores\n    scores.sort()\n    # create an array that only contains the guesses\n    guesses = np.array(guesses)\n    # create a new array, with a single element containing the best score for each match pair\n    best = np.array(scores)\n    best = np.append(best,guesses)\n    # sort again\n    best.sort()\n    # return the best score\n    return best", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    results = []\n    scores = []\n    guesses = []\n    for i in range(0,len(guess)):\n        score = guess[i]\n        if score in scores:\n            results.append(score)\n        else:\n            results.append(score + 1)\n    for i in range(0,len(guess)):\n        score = guess[i]\n        if score in scores:\n            scores.append(score)\n        else:\n            scores.append(score - 1)\n    \n    return results,scores,guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # compute the difference between each guess and the score\n    guess_diff = {}\n    for index, guess in enumerate(guess):\n        guess_diff[index] = guess - game[index]\n    score_diff = {}\n    for index, guess in enumerate(guess):\n        score_diff[index] = game[index] - guess\n    # compare each guess against the score\n    # note that we only compare the score to the guess if they are in the same array\n    for index, score in enumerate(score_diff):\n        if score!= 0:\n            if index in guess_diff:\n                if score_diff[index]!= 0:\n                    return 1\n            else:\n                if guess_diff[index] == 0:\n                    return 0\n    \n    # return the index of the guess that was closest to the score\n    return min(guess_diff)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    matches = []\n    guesses = []\n    \n    for i,i in enumerate(game):\n        for j,j in enumerate(guess):\n            if i == j:\n                continue\n            if i < j:\n                if compare(game,i) > compare(game,j):\n                    matches.append(i)\n                    guesses.append(j)\n            else:\n                if compare(game,i) < compare(game,j):\n                    matches.append(i)\n                    guesses.append(j)\n                \n    return matches,guesses\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    print(\"Comparing with your \",len(game),\" guesses.\")\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            guess = game[i][j]\n            score = guess\n            guess = random.choice(guess)\n            score = random.choice(score)\n            if score == guess:\n                return 0\n            if score < guess:\n                return -score\n        if i!= j:\n            print(\"Guess mismatch.\")\n\n    print(\"Your guesses are\",len(game),\" different!\")\n\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return list(map(lambda x: int(x[0]), range(len(guess)+1)))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def map(a,b):\n        if a == b:\n            return 0\n        else:\n            return abs(a - b)\n    \n    # the dictionary of scores\n    scores = {}\n    \n    # the dictionary of guesses\n    guesses = {}\n    \n    # first, we calculate the sum of the scores for each guess\n    for i,guess in enumerate(guesses):\n        scores[guess] = 0\n        \n        # then, we calculate the difference between the score and the guess\n        for key in scores:\n            if key in guess:\n                score = scores[key]\n                guess = guesses[key]\n                diff = score - guess\n            \n            if key in scores:\n                guess = scores[key]\n                diff = guess - score\n            \n            if diff < 0:\n                scores[key] += diff\n                guesses[key] = guess\n    \n    # now, sort the scores so that they are more likely to be ordered in descending order\n    scores.sort()\n    guesses.sort()\n    \n    # now we iterate through the guesses and compare them to each other\n    for guess in guesses:\n        score = scores[guess]\n        diff = score - guess\n        for key in scores:\n            if key in guess:\n                score = scores[key]\n                diff = score - guess\n            \n            if key in scores:\n                guess = scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(guess)!= len(game):\n        return [guess.item for guess in game]\n    guesses = [game[guess] for guess in guess]\n    scores = [game[guess] for guess in game]\n    if len(scores) == len(guesses):\n        return scores\n    elif len(scores) == len(guesses) * 2:\n        return [score - guess]\n    elif len(guesses) < len(scores):\n        return [score - guess] * (len(guesses) - len(scores))\n    elif len(guesses) == len(scores):\n        return [score - guess] * len(scores)\n    else:\n        return [score - guess] * (len(scores) - len(guesses))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score,guess = [0,0],[0,0]\n    while len(score)==0:\n        for i in range(len(guess)):\n            if guess[i]>score[i]:\n                score[i]=guess[i]\n                guess[i]=0\n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    game = game\n    score = dict()\n    guess = dict()\n    guess = dict()\n    for i in range(len(game)):\n        score[i] = 0\n        guess[i] = \"\"\n    for i in range(len(game)):\n        if score[i] > 0:\n            for j in range(i):\n                if score[j] > score[j]:\n                    print(i,\"score too high, going on to\",j)\n            guess[i] = game[i]\n    if len(guess)!= len(score):\n        print(\"There were no matches!\")\n        return\n    for i in range(len(game)):\n        print(\"Guess:\",guess[i],\"Score:\",score[i])\n    print(\"Guess:\",\" \".join(guess))\n    print(\"Score:\",\" \".join(score))\n    print(\"Guess:\",\" \".join(guess))\n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess.copy()\n    while guess.__len__() > 0:\n        num = []\n        num.append(1)\n        for x in guess:\n            if x < 0:\n                num.append(-1)\n            elif x == 0:\n                num.append(0)\n            elif x > 0:\n                num.append(1)\n        if len(num) == 1:\n            guess = num[0]\n        else:\n            guess = list(map(lambda x: x + guess[0], num))\n    return guess\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def compareArray(g1,g2,i):\n        \"\"\"Compare two arrays of the same size and of equal length.\"\"\"\n        \n        for j in range(len(g1)):\n            if abs(g1[j]-g2[i][j]) > 1e-2:\n                return -1\n            if abs(g1[j]-g2[i][j]) < 1e-2:\n                return 1\n        return 0\n    \n    def getMatchScore(guess):\n        \"\"\"Given a guess, return the score of the best match.\"\"\"\n        \n        return max([0 for i in range(len(guess)) if i in range(len(guess))]) # using max to avoid ties\n    \n    def getGuessScore(score):\n        \"\"\"Given a score, return the score of the best guess.\"\"\"\n        \n        return min([0 for i in range(len(score)) if i in range(len(score))]) # using min to avoid ties\n    \n    if len(game) == 0: return 0\n    \n    score = game[0] # get the score of the first game\n    \n    guess = [None for j in range(len(game[0]))] # get the guesses of the first game\n    \n    for i in range(len(game[0])):\n        print \"GAME %s\" % i", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #base case\n    if len(game) == 0:\n        return [0,0,0,0]\n    \n    #first thing: count the guessed correct matches\n    matches = list()\n    for i in range(0,len(game[0])):\n        if game[i] == guess[len(guess)-1-i]:\n            matches.append(len(game))\n    return matches", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores=game.get_scores()\n    \n    if len(scores)!= len(guess):\n        raise Exception('You did not give the same number of matches to the game')\n    \n    for i in range(len(guess)):\n        guesses=guess[i]\n        if not(guesses):\n            continue\n        \n        for j in range(len(scores)):\n            if scores[i] < scores[j]:\n                continue\n            \n            if not(guess[i] == scores[j]):\n                continue\n            \n            diff=guess[i] - scores[j]\n            if diff > 0:\n                return [0,0]\n        else:\n            return [guess[i],guess[i],guess[i],guess[i],guess[i]]\n        \n        \n    return [0,0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = np.asarray(guess)\n    \n    guess.shape = game.shape\n    \n    for i,g in enumerate(guess):\n        if game[guess[i]] < g:\n            return [guess[i],i]\n    \n    if game[guess[0]] >= game[guess[-1]]:\n        return [guess[0],guess[-1]]\n    elif game[guess[0]] < game[guess[-1]]:\n        return [guess[0],guess[0]]\n    elif game[guess[0]] > game[guess[-1]]:\n        return [guess[0],guess[-1]]\n    else:\n        return [guess[0],guess[-1]]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Generate two arrays with scores and guesses.\n    scores = [0]*len(game)\n    guesses = [0]*len(game)\n\n    for x in range(len(game)):\n        scores[x] = game[x]\n        guesses[x] = guess[x]\n    \n    # Sort the guesses.\n    guesses.sort()\n    scores.sort()\n\n    # Compare the scores and guesses.\n    for x in range(len(guesses)):\n        if scores[x] > guesses[x]:\n            return guesses[x]\n        else:\n            return 0\n    else:\n        return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    d = {}\n    d['0'] = 0\n    d['-1'] = -1\n    \n    if len(guess) == len(game):\n        for i in range(len(guess)):\n            d[i] = game[guess[i]] - game[guess[i+1]]\n    \n    return d", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Array to store results and guesses\n    results = [(game[i],game[j]) for i in range(len(game)) for j in range(len(game))]\n    \n    # Initialize results array and all guesses\n    results.sort()\n    for i in range(len(game)):\n        results[i][0] = 0\n        results[i][1] = 0\n    \n    # Sort results and guesses array by score\n    results.sort(key=lambda x: x[0])\n    \n    # Find the largest possible value of x[0]\n    max = results[0][1]\n    for i in range(len(game)):\n        if results[i][1] > max:\n            max = results[i][1]\n    \n    # Find the smallest possible value of x[0]\n    min = results[0][1]\n    for i in range(len(game)):\n        if results[i][0] < min:\n            min = results[i][0]\n    \n    # Find the largest possible value of x[1]\n    max = results[1][1]\n    for i in range(len(game)):\n        if results[i][1] > max:\n            max = results[i][1]\n    \n    # Find the smallest possible value of x[1]\n    min = results[1][1]\n    for i in range(len(game)):\n        if results[i][0] < min:\n            min", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess_array = [guess[0],guess[1],guess[2],guess[3]]\n    scores_array = [game[0],game[1],game[2]]\n    if len(guess_array)==len(scores_array):\n        guess = scores_array[guess_array.index(0)]\n        score = scores_array[scores_array.index(0)]\n    else:\n        guess = scores_array[guess_array.index(0)]\n        score = scores_array[scores_array.index(0)]\n        if score > guess:\n            return score - guess\n    return guess - score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #Create a temporary array to hold the results\n    result = []\n    \n    #Create a new array to hold the guesses\n    guess = []\n    \n    #Make sure the score is in the correct range.\n    for i in range(len(game[0])):\n        result.append(game[0][i])\n    \n    #If there are no matches, then none of the guesses should be relevant\n    for i in range(len(game[0])):\n        if not compare(result[i],guess[i]):\n            print(guess[i],result[i])\n            return result\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    # Determine if the result is the same\n    n = len(game)\n    if n!= guess.count(':'):\n        return n\n    \n    # Sort the scores\n    scores = game\n    guess = guess.order()\n    # Check each match\n    for match in guess:\n        # Compare\n        score = score(game,match)\n        # If it is the same\n        if score == match:\n            return score\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def guess(x):\n        \"\"\" Guesses the answer from the given list of scores.\n        \n        >>> guess([1,2,3,4,5,1])\n        1\n        >>> guess([0,5,0,0,0,4])\n        4\n        \"\"\"\n        scores = game.scores\n        return len(scores) - 1 - len(guess(scores))\n    return compare(game,guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [1,2,3,4,5,1]\n    guess = [1,2,3,4,2,-2]\n    for index,score in enumerate(score):\n        for guess in guess:\n            if guess == score[index]:\n                return [index]\n    return [len(score)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = [0]\n    correct = [0 for i in range(len(game))]\n    for score in game:\n        if score in correct:\n            result[0] = score\n        else:\n            correct.append(score)\n    \n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [[game[i+1]-game[i]] for i in range(len(guess))]\n    guesses = [[guess[i+1]-game[i]] for i in range(len(guess))]\n    diff = [0]*len(scores)\n    for i in range(len(guesses)):\n        if i==len(guesses)-1:\n            diff[i] = scores[i][-1]-scores[i][0]\n        else:\n            diff[i] = scores[i][i]-scores[i][i+1]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    len_guess = len(guess)\n    len_score = len(score)\n    i = 0\n    \n    for guess in guess:\n        for score in score:\n            if i == len_guess:\n                return [score,guess]\n            elif score <= guess:\n                return [score,guess]\n            elif score > guess:\n                return [score,guess]\n            else:\n                return [score,guess]\n                \n    return []", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game)!= len(guess):\n        print(\"Games have different lengths.\")\n        print(\"Expected: \" + str(len(game)) + \" but got: \" + str(len(guess)))\n        raise ValueError(\"Length mismatch\")\n    \n    score = [0 for i in range(len(guess))]\n    guess_score = [0 for i in range(len(guess))]\n    for i in range(len(guess)):\n        score[i] = guess_score[i] = guess[i]\n        if guess[i] < score[i]:\n            print(\"Guessed correctly!\")\n            print(\"Score: \" + str(score[i]))\n            print(\"Guess: \" + str(guess_score[i]))\n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(guess)==0:\n        return []\n    guess=np.array(guess)\n    \n    #check if all the scores are in range\n    try:\n        for i in range(0,len(game)):\n            if game[i]<guess[i]:\n                return []\n    except:\n        return []\n    #check for ties\n    for i in range(len(game)):\n        if game[i]==guess[i]:\n            return []\n    \n    #check if all the scores are in range\n    try:\n        for i in range(len(game)-1,-1,-1):\n            if game[i]>guess[i]:\n                return []\n    except:\n        return []\n    #check for ties\n    for i in range(len(game)-1,-1,-1):\n        if game[i]==guess[i]:\n            return []\n    \n    #check if all the scores are in range\n    try:\n        for i in range(len(game)):\n            if game[i]<guess[i]:\n                return []\n    except:\n        return []\n    \n    #check for ties\n    for i in range(len(game)):\n        if game[i]==guess[i]:\n            return []\n    \n    #check for ties\n    for i in range(len(game)-1,", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Initialize variables\n    result = [0,0]\n    guess = [0,0]\n    n = len(game)\n    \n    for i in range(n):\n        if len(game[i]) == 1:\n            result[i] = game[i]\n        elif len(game[i]) == 2:\n            result[i] = [game[i][0]] + game[i][1:]\n        elif len(game[i]) == 3:\n            result[i] = [game[i][0]] + game[i][1] + game[i][2]\n        elif len(game[i]) == 4:\n            result[i] = [game[i][0]] + game[i][1] + game[i][2] + game[i][3]\n        elif len(game[i]) == 5:\n            result[i] = [game[i][0]] + game[i][1] + game[i][2] + game[i][3] + game[i][4]\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return [(guess,score) for score,guess in zip(guess,game)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if guess == game:\n        return [0,0,0,0,0,0]\n    elif len(guess)!= len(game):\n        return [0,0,0,0,0,0]\n    elif game[0] == guess[0]:\n        return [0,0,0,0,0,0]\n    else:\n        return [0,0,0,0,0,-(game[0] - guess[0])]</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = map(lambda x: x, guess)\n    score = map(lambda x: x, score)\n    if len(guess) == len(score):\n        if len(score) == len(guess):\n            return score\n        else:\n            return diff(score,guess)\n    else:\n        return diff(score,guess)\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [0]*len(game)\n    guess = [0]*len(game)\n    guess2 = [0]*len(game)\n    for i,x in enumerate(game):\n        score[i] = x\n        guess[i] = guess2[i] = 0\n    score2 = [0]*len(guess)\n    for i,x in enumerate(guess):\n        score2[i] = score[i]-x\n        guess2[i] = guess[i]-x\n    return score2</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def compare_multiple(a,b):\n        for x in range(len(a)):\n            if a[-x] == b[-x]:\n                return 0\n            if a[-x] > b[-x]:\n                return -1\n            if a[-x] < b[-x]:\n                return +1\n            \n    def compare_numbers(a,b):\n        if a == b:\n            return 0\n        if len(a)!= len(b):\n            return -1\n        if len(a) == 2:\n            if a[0] > b[0]:\n                return -1\n            if a[0] < b[0]:\n                return +1\n        if len(a)!= 3:\n            return -1\n        if a[0] > b[1]:\n            return -1\n        if a[0] < b[1]:\n            return +1\n        if a[1] > b[2]:\n            return -1\n        if a[1] < b[2]:\n            return +1\n        if a[2] > b[3]:\n            return -1\n        if a[2] < b[3]:\n            return +1\n        return 0\n    \n    if len(game)!= len(guess):\n        raise ValueError('game length must be equal to guess length')\n    for i in range(len(game)):\n        for j in range(len(guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess.copy()\n    scores = game.scores.copy()\n    total = 0\n    for i in range(len(scores)):\n        guess[i] = scores[i]\n        if compare(guess,scores[i]):\n            total += scores[i]\n            break\n    return total", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #convert the scores into a double list\n    score1 = [0,0,0,0,0]\n    score2 = [0,0,0,0,0]\n    \n    #list of guesses\n    guess1 = [0,0,0,0,0]\n    guess2 = [0,0,0,0,0]\n    \n    #number of matches\n    m = len(game)\n    \n    #calculate the relative difference\n    diff = sum(score1 - score2) / (len(score1)+len(score2)) #sums the absolute differences\n    \n    #loop through each of the guesses and determine if they have guessed correctly or not\n    for i, guess in enumerate(guess1):\n        if guess==game[i]:\n            diff = 0\n        else:\n            diff = diff + abs(game[i] - guess)\n        \n    if diff==0:\n        return guess1\n    \n    else:\n        return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # this is a dictionary of scores and guesses\n    scores = {}\n    guesses = {}\n    \n    # loop over the guesses\n    for guess in guesses:\n        score = guess[1]\n        score = int(score)\n        \n        # the score is within the bounds of the current guesses\n        if score in scores:\n            # the score is within the bounds of the current guesses\n            if score == scores[score]:\n                # there is no way we can judge if this is the correct answer\n                if guess[0] == scores[score]:\n                    return guesses[guess[0]]\n                else:\n                    return 0\n            else:\n                return -1\n        else:\n            return -1\n        \n    # no guesses have been guessed correctly\n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def compare2(game,guess,score):\n        if score < guess: return 0\n        elif score == guess: return 1\n        else: return -1\n    \n    score = range(1,len(game))\n    guess = range(1,len(guess))\n    score = sorted(score)\n    guess = sorted(guess)\n    \n    for i in score:\n        for j in guess:\n            if i == j: continue\n            if compare(game,guess) < 0: return i - j\n            else: return i + j\n    \n    for i in guess:\n        for j in score:\n            if i == j: continue\n            if compare(game,guess) > 0: return i - j\n            else: return i + j\n    \n    \n    return 0\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = list(guess)\n    score = list(game)\n    \n    guess_length = len(guess)\n    score_length = len(score)\n   \n    guess_score = dict()\n    guess_score[guess] = 0\n    score_score = dict()\n    score_score[score] = 0\n    \n    def score_less(x,y):\n        \"\"\"It is possible for a score to be 0, meaning that there was no match for that guess. \n        If the score is 0, the guess may have been wrong, but the guess scores are sorted.\n        If a score is > 0, then the guess should have been correct.\n        \"\"\"\n        if x > y:\n            return True\n        else:\n            return False\n    \n    \n    \n    def score_greater(x,y):\n        \"\"\"It is possible for a score to be 0, meaning that there was no match for that guess. \n        If the score is 0, the guess may have been wrong, but the guess scores are sorted.\n        If a score is < 0, then the guess should have been correct.\n        \"\"\"\n        if x < y:\n            return True\n        else:\n            return False\n    \n    \n    \n    def score_equal(x,y):\n        \"\"\"It is possible for a score to be 0, meaning that there was no match for", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def count(i,k):\n        return len(game[guess[i]])\n    count = functools.partial(count,game)\n    \n    score = [math.sqrt(len(guess[i])) for i in range(len(guess))]\n    score = sorted(score)\n    score = [(score[guess[i]]-score[guess[i-1]]) for i in range(len(guess))]\n    score = [(abs(score[guess[i]]-score[guess[i-1]])) for i in range(len(guess))]\n    guess = [math.log(score) for i in range(len(guess))]\n    \n    for i in range(len(guess)):\n        if guess[i] == 0:\n            return guess\n    return guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    g = []\n    for i in range(0,len(game)):\n        for j in range(0,len(guess)):\n            if game[i][j] == guess[i][j]:\n                g.append(0)\n            else:\n                g.append(abs(guess[i][j] - game[i][j]))\n    if len(g) == 0:\n        return g\n    return g", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    # Create the match array and sort it\n    match = []\n\n    for i in range(0,len(guess)):\n        match.append(guess[i])\n\n    # Compare scores\n    for i,value in enumerate(match):\n        if value == 0:\n            print(\"guess:\",i,\"score:\",value)\n        else:\n            print(\"guess:\",i,\"score:\",value-(i-1))\n\n    # Check if guess is correct\n    for i,value in enumerate(match):\n        if value == guess[i]:\n            print(\"guess:\",i,\"score:\",value)\n            return 0\n        else:\n            print(\"guess:\",i,\"score:\",value-(i-1))", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def _compare(a,b):\n        if not isinstance(a,list):\n            return 0\n        if not isinstance(b,list):\n            return 0\n        if len(a)!= len(b):\n            return 0\n        \n        for i in range(len(a)):\n            if a[i]!= b[i]:\n                return i\n        \n        for i in range(len(a)):\n            if a[i] > b[i]:\n                return i\n        \n        for i in range(len(a)):\n            if a[i] < b[i]:\n                return i\n        \n        if a[0] == b[0]:\n            return 0\n        \n        return abs(a[0] - b[0]) + abs(a[1] - b[1]) + abs(a[2] - b[2]) + abs(a[3] - b[3])\n    \n    if len(guess)!= len(game):\n        print(\"Number of guesses is not equal to number of games!\")\n        return 0\n    \n    for i in range(len(game)):\n        for j in range(len(guess)):\n            if compare(game,guess[i]) == 0:\n                return i\n    \n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # I think this should be a unique sequence of functions, but that doesn't seem to be working.\n    # I thought of using a generator, but that just seems really stupid.\n    for guess in guesses:\n        for score in game:\n            if compare(score,guess) == 0: return 0\n            else: return score - guess\n    return len(game) - len(guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    import random\n    x = 0\n    for i in range(len(game)):\n        if guess[i] == x + 1:\n            x += 1\n        else:\n            if x == len(game) - 1:\n                return 0\n    return x", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #using the \"lambda\" function to convert the arrays to a list\n    scores = list(game)\n    guess = list(guess)\n\n    #sort scores and guesses\n    scores.sort()\n    guess.sort()\n\n    #calculate the lengths of the two arrays\n    scores_length = len(scores)\n    guess_length = len(guess)\n\n    #compare the scores\n    score_diff = 0\n    for index in range(score_length):\n        score_diff += diff(scores[index][:],guess[index][:])\n\n    #calculate how far off each guess was\n    guess_diff = 0\n    for index in range(guess_length):\n        guess_diff += diff(guess[index][:],score[index][:])\n\n    return (score_diff/guess_diff),guess_diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    guess = guess.copy()\n    # Skip invalid entries\n    for i in range(len(guess)):\n        if guess[i] < 0:\n            break\n        \n    scores = [(i,0) for i in range(len(guess))]\n    guessed_count = 0\n    for guess,score in enumerate(scores):\n        if guess == score:\n            guessed_count = guessed_count+1\n            break\n    return guessed_count", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return compare(game,guess,[0,0,0],[0,0,0])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if not isinstance(game,list):\n        game = [game]\n        \n    for game_item in game:\n        scores = game_item[0]\n        guesses = game_item[1]\n        \n        for guess_item in guesses:\n            if guess_item[0] < scores[0]:\n                return [guess_item]\n            elif guess_item[0] == scores[0] and guess_item[1] == scores[1]:\n                return [guess_item]\n            elif guess_item[0] > scores[0]:\n                return [guess_item]\n            elif guess_item[0] == scores[0] and guess_item[1] > scores[1]:\n                return [guess_item]\n        return []", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(guess)==0:\n        return 0\n    if len(game)==0:\n        return 0\n    for i,game in enumerate(game):\n        for j,guess in enumerate(game):\n            if compare(guess,game)==0:\n                return i\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess0 = [guess[i] for i in range(1,len(game))]\n    guess1 = [guess[i] for i in range(1,len(game))]\n    for guess in guess0:\n        for score in guess1:\n            if compare(score,guess) == 0:\n                return guess\n    else:\n        return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(guess)!= len(game):\n        raise ValueError,\"guess and game array lengths are different!\"\n    \n    guess,score = game,score\n    return [compare(x,guess[i]) for i in range(len(guess))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    numbers = game\n    guess = 0\n    for i in range(len(numbers)):\n        guess += numbers[i]\n    result = [guess,0 for x in zip(numbers,numbers[1:])]\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for i in range(0,len(game)):\n        score = game[i]\n        guesses = guess[i]\n        if len(guesses)==len(score):\n            result.append(0)\n        else:\n            if len(guesses) > len(score):\n                dif = abs(score[len(guesses)-1]+guesses[len(guesses)-1])\n                if dif > 0:\n                    result.append(dif)\n            else:\n                result.append(1)\n    return result\n    \n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # We start by assigning the array to a variable, and add a range to it\n    score_array = [0,0]\n    guess_array = [0,0]\n    for i in range(len(guess_array)):\n        guess_array[i] = guess_array[i]+1\n    guess_array = [0] * len(guess_array)\n\n    # We loop through the guesses and determine how far off each guess was\n    for i in range(len(guess_array)):\n        if guess_array[i] == i+1:\n            score = score_array[0]\n            guess = guess_array[0]\n            continue\n\n        # If the guess is off, add a negative number to the score array\n        if guess < score:\n            score_array[0] = guess - score + 1\n            continue\n\n        # If the guess is off, add a positive number to the score array\n        if guess > score:\n            score_array[0] = score - guess + 1\n            continue\n\n        # Otherwise, the guess is off, so assign a negative number to the score array\n        else:\n            score_array[0] = score_array[0] - 1\n\n    return score_array\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == 0:\n        return 0\n    if len(guess)!= len(game):\n        return 0\n    for guess,score in zip(game,guess):\n        if guess == score:\n            return 0\n        else:\n            return abs(guess - score)\n    return 1\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess.copy()\n    # Get the list of matches that were matched to, and their scores\n    # Then get the guess scores\n    score = guess.pop(0)\n    matches = guess.pop(0)\n    matches2 = set(matches).union(set(score))\n    guessed = set(matches2).intersection(guess)\n    matched = set(matches).intersection(guess)\n    out = []\n    # For each match, let's see if it was matched correctly. If it was,\n    # then we add its score to the out list\n    for match in matches:\n        out.append(match.score)\n    # For each score in the score array, let's see if it was guessed correctly\n    # if it was, then we add its score to the out list\n    for score in score:\n        out.append(score)\n    # If the two lists are equal, return the score of each\n    if len(matches2) == len(guessed) and len(matched) == len(guessed) and len(matched) == len(score):\n        return score\n    else:\n        return (matched - guessed).max()", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # get scores of each guess\n    scores = []\n    for i in range(len(guess)):\n        scores.append(game[i][0])\n    # set guess, score, and guess score for this guess\n    guess = {}\n    guess[0] = scores[0]\n    guess[1] = scores[1]\n    guess[2] = scores[2]\n    guess[3] = scores[3]\n    # sort scores\n    scores.sort()\n    for i in range(len(scores)):\n        if scores[i][0] == scores[guess[i][0]]:\n            break\n    # print guesses\n    print(guess)\n    \n    \n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scoretbl = [game[match] for match in guess]\n    guessedbl = [game[match] for match in guess]\n    for i in range(len(scoretbl)):\n        if game[scoretbl[i]] < guessedbl[i]:\n            return (scoretbl[i],guessedbl[i])\n    return (scoretbl[0],guessedbl[0])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    for guess in guesss:\n        for score in game:\n            if score[0] == guess:\n                return (score[1],0)\n        else:\n            return (-1,-1)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    result = []\n    for guess,score in zip(guess,game.scores):\n        if guess == score:\n            result.append(score)\n        elif guess > score:\n            result.append(guess - score)\n        elif guess < score:\n            result.append(guess + score)\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    guess = guess.copy()\n    scores = scores.copy()\n\n    for i in range(len(guess)):\n        if guess[i]==guess[i]=='': continue\n        if score[i] == score[i] == 0: continue\n        \n        if guess[i] < score[i]:\n            if guess[i] > score[i]:\n                return [0,0,0,0,-3]\n            else:\n                return [-3,3,-3,3,-3]\n        \n        \n        if guess[i] > score[i]:\n            if guess[i] < score[i]:\n                return [-3,-3,-3,-3,-3]\n            else:\n                return [-3,3,-3,3,-3]\n    \n    return [0,0,0,0,0]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    array_of_guesses = []\n    array_of_scores = []\n    score = guess = guess.copy()\n    score['match'] = 0\n    for i in range(len(game)):\n        if guess.get(i) == score['match']:\n            array_of_guesses.append(guess[i])\n            score['match'] = score['match'] + 1\n    for i in range(len(game)):\n        if guess.get(i) not in array_of_guesses:\n            array_of_scores.append(score['match'] - guess[i])\n            score['match'] = score['match'] - 1\n    return array_of_guesses,array_of_scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = guess.copy()\n    scores = game.scores\n    scores.clear()\n    games = game.game.values()\n    # this is a bit ugly, but I think it makes the comparisons easier\n    for i in range(len(game)):\n        score = scores[i]\n        for j in range(len(guess)):\n            guess[j] = guess[j].copy()\n            guess[j].pop(0)\n            if compare(game,guess[j]) == 0:\n                scores[i] = scores[i] - guess[j]\n            else:\n                scores[i] = scores[i] - compare(game,guess[j])\n    # last, but not least, we need to get the difference\n    return scores\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    matches = []\n    nguesses = len(guess)\n    while nguesses > 0:\n        guess1 = guess[guess.index(\"-1\"):]\n        guess2 = guess[guess.index(\"-1\")+1:]\n        \n        if guess1 == \"-1\" or guess2 == \"-1\":\n            # no matter what the score is, guessed correctly\n            matches.append(0)\n            nguesses -= 1\n        elif guess1 == guess2:\n            # compare against guess\n            scores = game.match(guess1)\n            if scores == guess2:\n                # guess is correct\n                matches.append(1)\n            elif scores!= guess2:\n                # guess is incorrect\n                matches.append(-1)\n            else:\n                # guessed correctly\n                matches.append(0)\n        else:\n            # guess is not correct, so return the difference between the guess and the score\n            if scores == guess2:\n                # guess is correct\n                matches.append(0)\n            elif scores!= guess2:\n                # guess is incorrect\n                matches.append(-1)\n            else:\n                # guessed correctly\n                matches.append(0)\n        nguesses -= 1\n        \n    return matches", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess_score = []\n    guess_games = []\n    \n    for i in range(len(game)):\n        guess_score.append(0)\n        guess_games.append([])\n    for i in range(len(guess)):\n        for j in range(len(game)):\n            if compare(game[i],guess[j]) > 0:\n                guess_score[i] = guess_score[i] + 1\n        else:\n            guess_score[i] = guess_score[i] + 1\n    return guess_score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game) == 0:\n        return []\n    \n    matching = 0\n    \n    guess_array = []\n    \n    for guess in guess:\n        if game[guess] < score[guess]:\n            matching += 1\n    \n    if len(game) == 0:\n        return matching\n    \n    return matching - len(game) / 2\n    \n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # Create an array that contains the guesses\n    guess = [1,2,3,4,5,1]\n    \n    # Create an array that contains the scores\n    score = [1,2,3,4,5,1]\n    \n    # Create an array that contains the indices of the match\n    indices = [1,2,3,4,5,1]\n    \n    # Iterate over the scores, comparing each to each of the indices\n    for score_index, score_value in enumerate(score):\n        for guess_index, guess_value in enumerate(guess):\n            if guess_value == score_value:\n                return score_index\n        else:\n            if guess_value!= score_value:\n                return abs(guess_value - score_value)\n    return -1\n    \n    # End of code below\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Note: I think this function is very inefficient, but I want to keep it for some reason\n    scores = game[0]\n    guesses = game[1]\n    # We assume that the scores are correct. They should all be different from 0\n    scores.sort()\n    guesses.sort()\n    # We now turn the scores into an array of the same length\n    scoreArray = []\n    for i in range(len(scores)):\n        score = scores[i]\n        guess = guesses[i]\n        if score == guess:\n            scoreArray.append(0)\n        elif score > guess:\n            scoreArray.append(score - guess)\n        else:\n            scoreArray.append(score - guess + 1)\n    # We then turn the scoreArray into an array of the same length\n    guessArray = []\n    for i in range(len(scores)):\n        guess = scores[i]\n        if guess == scoreArray[i]:\n            guessArray.append(0)\n        elif guess > scoreArray[i]:\n            guessArray.append(guess - scoreArray[i])\n        else:\n            guessArray.append(guess - scoreArray[i] + 1)\n    # We now check if all of the guesses are correct\n    correctGuesses = set(guessArray)\n    wrongGuesses =", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    return [\n        [a[0] for a in game]\n        for a in guess\n    ]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #We need to check that both arrays are length equal.\n    assert len(game)==len(guess)\n\n    #Indexing the array.\n    idx = game[0].index(guess[0])\n\n    #Finding the first index where the guess matches the index of the original game.\n    idx = idx[len(game)-1]\n    \n    #Finding the first index where the score matches the index of the original game.\n    idx = idx[len(game)-2]\n\n    #Finding the first index where the guess matches the index of the original game.\n    idx = idx[len(game)-1]\n    \n    #Finding the second index where the score matches the index of the original game.\n    idx = idx[len(game)-2]\n    \n    #Finding the second index where the guess matches the index of the original game.\n    idx = idx[len(game)-2]\n    \n    #Finding the third index where the score matches the index of the original game.\n    idx = idx[len(game)-2]\n    \n    #Finding the third index where the guess matches the index of the original game.\n    idx = idx[len(game)-1]\n    \n    #Finding the fourth index where the score matches the index of the original game.\n    idx = idx[len(game)-1]\n    \n    #Finding the fourth index where the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def guess(game,guess,score):\n        \"\"\"This function checks if the score of a person is in the correct range. This\n        function is responsible for determining if the guess is in the correct range. It will\n        compare the score and guess and return 0 if they are identical. Otherwise, it will\n        return the absolute difference between the score and guess. This is important, as\n        if you have a high score, but a low guess, that score will be up compared to a high guess.\"\"\"\n        diff = score - guess\n        if diff < 0:\n            return diff\n        else:\n            return diff\n        \n    def score(game,score):\n        \"\"\"This function computes the score of a person. It is responsible for checking the\n        guess and comparing it to the score. This function will return a number between 0 and\n        100 inclusive (approximately). If they are not identical, it will return the\n        absolute difference between the score and guess.\"\"\"\n        diff = score - guess\n        return (100.0 * diff) / score\n    \n    def guesslist(game,guesslist):\n        \"\"\"This function returns an array of the scores of all players who guessed correctly.\"\"\"\n        return game.guesslist(guesslist", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # setup the variables\n    lower = range(guess.shape[0])\n    upper = range(guess.shape[1])\n    lower = min(lower)\n    upper = max(upper)\n    guesses = list(guess)\n    results = list(game)\n    # count the number of matches\n    count = 0\n    # loop through the guesses\n    for i in range(guess.shape[0]):\n        for j in range(guess.shape[1]):\n            # check if the guess is lower or upper\n            if i < lower[j] or i > upper[j]:\n                # the guess is not correct, so count it\n                count += 1\n            # the guess is correct, so set the score\n            results[i][j-1] = counts[i][j-1]\n    # return the values\n    return results, count\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    result = []\n    guessed = []\n    for i,item in enumerate(game):\n        if item in guessed:\n            return 0,guessed[i]\n        guessed.append(item)\n        result.append(guess[i] - item)\n    return 0,len(guessed) - len(result)</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    a = [0,0,0,0,3,3]\n    b = [0,0,0,0,4,4]\n    \n    score, guess = game.getResults(guess)\n    print (score, guess)\n    \n    for i in range(len(a)):\n        if score[i]==guess[i]:\n            a[i]=0\n        else:\n            a[i]=a[i] - score[i]\n    \n    return a", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Variables\n    score = [0] * len(guess)\n    guess = [0] * len(game)\n    guess_temp = game\n    for i in range(len(guess)):\n        if guess[i] == guess_temp[i]:\n            score[i] += 1\n    score = [0] * len(score)\n    guess = [0] * len(guess)\n    guess_temp = game\n    for i in range(len(score)):\n        if score[i] == 1:\n            guess_temp[i] = guess_temp[i] + 1\n        else:\n            guess_temp[i] = guess_temp[i] - 1\n    for i in range(len(guess)):\n        if guess[i] == guess_temp[i]:\n            score[i] += 1\n    return score,guess\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    #This code was inspired by http://stackoverflow.com/a/1764952\n    def guess(score):\n        guess = score\n        while guess < score:\n            guess += 1\n        return guess\n    \n    def make_guess(guess):\n        if guess == 1:\n            return \"0\"\n        elif guess < 0:\n            return \"-1\"\n        else:\n            return guess\n\n    def score(game):\n        scores = []\n        for i in range(len(game)):\n            scores.append(game[i])\n        return scores\n    \n    def score(game,guess):\n        if compare(game,guess) == 0:\n            return -1\n        elif compare(game,guess) == 1:\n            return 0\n        else:\n            return 1\n    \n    def score(game):\n        scores = []\n        for i in range(len(game)):\n            scores.append(game[i])\n        return scores\n    \n    def score(game,guess):\n        if compare(game,guess) == 0:\n            return -1\n        elif compare(game,guess) == 1:\n            return 0\n        else:\n            return 1\n\n    game = [\"A\",\"B\",\"C\",\"D\",\"E\",\"F\"]\n    \n    game_guess = make_guess(guess(", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    indices = 0\n    for i,g in enumerate(guess):\n        scores = [game[i] for i in range(guess.size)]\n        if scores[0] == i:\n            indices = indices + 1\n            continue\n        \n        if g == scores[indices]:\n            indices = indices + 1\n            continue\n        else:\n            continue\n    return indices", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = []\n    guess = []\n    for i in range(len(game)):\n        score.append(game[i])\n        guess.append(guess[i])\n    diff = 0\n    \n    for i in range(len(guess)):\n        if diff < i*guess[i]:\n            diff += guess[i] - score[i]\n        else:\n            diff += score[i] - guess[i]\n    return diff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = list(game)\n    guesses = list(guess)\n    for i in range(len(guesses)):\n        if not scores[i] in guesses:\n            return [i]\n    return [scores[i] - guesss[j] for i,j in enumerate(guesses)]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def _compare(game,guess):\n        \"\"\"Returns an array denoting the difference between the guesses and the scores.\n        \"\"\"\n        if game.num_compare_steps() < len(guess):\n            for i,i_game in enumerate(game):\n                if game.compare_steps() == i_game.num_compare_steps():\n                    return guess[i] - i_game.compare_steps()\n        else:\n            return None\n    \n    score = [1,2,3,4,5]\n    guess = [0,0,0,0,0,0]\n    guess = _compare(game,guess)\n    if guess is None:\n        return\n    print('Guess:',list(guess))\n    print('Score:',list(score))\n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # the values we store in the arrays:\n    scores = []\n    guesses = []\n    \n    # determine the length of the array of scores:\n    length = len(scores)\n    if length < 2:\n        return scores\n    \n    # determine the length of the array of guesses\n    length2 = length + 1\n    if length < length2:\n        return guesses\n    \n    # determine the length of the array of scores:\n    length3 = len(guesses)\n    if length3 < length2:\n        return scores\n    \n    # find the length of the array of scores:\n    length4 = length - length3 - length2\n    if length4 < length:\n        return scores\n    \n    # find the length of the array of guesses\n    length5 = length - length3 - length2 - length4\n    if length5 < length:\n        return guesses\n    \n    # print the results\n    print(\"Scores:\")\n    print(scores)\n    print(\"Guesses:\")\n    print(guesses)\n    print(\"Guess Length:\")\n    print(length3 - length2 - length4 - length5)\n    print(\"Guess Length2:\")\n    print(length2)\n    print(\"Guess Length4:\")\n    print(length4)\n    print(\"Guess Length5", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    game = game\n    guesses = game.guesses\n    scores = game.scores\n    \n    result = []\n    \n    for score in scores:\n        for guess in guesses[score]:\n            result.append(abs(guess - score))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    game = game.copy()\n    guess = guess.copy()\n    for i in range(len(game)):\n        for j in range(len(guess)):\n            if (i == j):\n                game[i][j] = game[i][j] * 1.0\n            else:\n                if compare(guess[i],game[i][j]) > 0:\n                    game[i][j] = game[i][j] - guess[i][j]\n                else:\n                    game[i][j] = game[i][j] + guess[i][j]\n    return game", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    from pygame.util.date import make_date\n    \n    def seconds(days):\n        return days * 24\n    def months(days):\n        return days * 6\n    def years(days):\n        return days * 365\n\n    score = [0,0,0,0,0]\n    guess = [0,0,0,0,0]\n    total = 0\n    \n    for i in range(len(game)):\n        guess[i] = game[i]\n        \n        if guesses[i] == guess[i]:\n            score[i] = score[i] + 1\n        else:\n            score[i] = score[i] - 1\n        \n        if score[i] == 0:\n            guess[i] = guess[i] - guess[i]\n        \n        total += score[i]\n    \n    print \"Guessed: \" + str(guess)\n    print \"Total: \" + str(total)\n    print \"Absolute Difference: \" + str(guess - score)\n    \n    if total == 0:\n        return guess\n    \n    return guess\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # guessing how far off each guess\n    guess_array = []\n    # each index represents a match\n    guess_array.append(game[guess[0]:guess[guess.size()-1]])\n    # you can insert a missing index if you want\n    if guess.size() == 0:\n        guess_array.append(-1)\n    # compare\n    return [abs(value) for value in guess_array]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    nmatches = len(game)\n    out = [0,0]\n    \n    for i in range(nmatches):\n        assert guess == game[i],'guess index %d not found in game index %d.' %(i, nmatches)\n        if i < nmatches:\n            out[0] += game[i] - guess\n        else:\n            out[1] += game[i] - guess\n    \n    return out", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(game)!= len(guess):\n        return False\n    \n    num_matches = len(game)\n    \n    if num_matches!= len(guess):\n        return False\n    \n    for g in guess:\n        for i in range(num_matches):\n            if compare(game[i],g[i]) == 0:\n                return False\n    return True", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #  the length of each array is equal to the number of matches\n    n_matches = len(game[0])\n    n_guesses = len(game[1])\n    #  the length of each array is equal to the number of matches\n    n_matches2 = len(guess[0])\n    n_guesses2 = len(guess[1])\n    #  the length of each array is equal to the number of matches\n    n_matches3 = len(game[0])\n    n_guesses3 = len(game[1])\n    #  the length of each array is equal to the number of matches\n    n_matches4 = len(game[0])\n    n_guesses4 = len(game[1])\n    #  the length of each array is equal to the number of matches\n    n_matches5 = len(game[0])\n    n_guesses5 = len(game[1])\n    #  the length of each array is equal to the number of matches\n    n_matches6 = len(game[0])\n    n_guesses6 = len(game[1])\n    #  the length of each array is equal to the number of matches\n    n_matches7 = len(game[0])\n    n_guesses7 = len(game[1])\n    \n    #  the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # let the user enter their guess in the first field\n    guess = guess.strip()\n    first = guess[0:3]\n\n    # let the user enter the scores in the second field\n    scores = [int(s) for s in guess[3:]]\n\n    # take the scores and guess in the second field, and compare them.\n    score = scores[0]\n    guess = scores[1:]\n    diff = 0\n\n    # take the scores and guess in the first field, and compare them.\n    score = scores[1]\n    guess = scores[-2:]\n\n    if score == guess:\n        return [0,0]\n    elif diff > 0:\n        return [abs(guess) - score]\n    else:\n        return [diff]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    assert len(game) == len(guess)*2\n    #first order of comparison\n    if len(game)!= len(guess):\n        print (\"Length of arrays must be equal\")\n        return\n    if len(game[0]) == len(guess[0]):\n        print(\"Game and guess are the same length\")\n        return\n    elif len(game[0])!= len(guess[0]):\n        print(\"Game and guess are different length\")\n        return\n    #second order of comparison\n    for i in range(0,len(guess)):\n        if game[i] == guess[i]:\n            return i\n    return -1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = game.scores\n    guesses = game.guesses\n    \n    if len(scores) == len(guesses):\n        return scores\n    else:\n        return [compare(scores[i],guesses[i]) for i in range(len(guesses))]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def guess(x):\n        for i in range(len(game)):\n            if game[i] == x or game[i+1] == x:\n                return i\n        return -1\n    \n    scores = [[0,0,0,0,0,0],[1,2,3,4,2,-2]]\n    guess = [[0,1,0,0,0,1,0],[0,0,0,0,0,0],[0,0,0,0,0,0]]\n    for x in range(len(guess)):\n        for i in range(len(scores)):\n            if scores[i][0] == guess[i][0] and scores[i][1] == guess[i][1]:\n                return scores[i][0] - guess[i][0]\n            else:\n                if scores[i][0] - guess[i][0] < 0:\n                    return scores[i][0] - guess[i][0]\n                elif scores[i][0] == guess[i][0]:\n                    return scores[i][1] - guess[i][1]\n                else:\n                    return scores[i][1] - guess[i][1]\n    \n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #we try to make the input array equally large as the guess array\n    size = len(guess)\n    num = len(game)\n    \n    #Guess is the same length as the guess array, ie, num\n    guess = guess.copy()\n    for i in range(num):\n        #Guess is a subset of game, ie, size\n        guess = guess[size:]\n    \n    scores = game\n    for index, guess in enumerate(guess):\n        scores = scores[guess]\n        \n    #Compare two scores, taking the difference between them.\n    score1 = scores[index]\n    score2 = scores[index+1]\n    return score1 - score2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    list = []\n    score = 0\n    guess = []\n    for item in range(len(game)):\n        score += game[item]\n        guess = guess + game[item]\n        list.append(score)\n        guess.append(guess)\n        list.append(score)\n        guess.append(guess)\n    for item in range(len(guess)):\n        list.append(guess[item])\n        list.append(guess[item])\n    list.sort()\n    for item in range(len(list)):\n        if compare(list[item],list[item]) == 0:\n            return list[item]\n        else:\n            return compare(list[item],list[item]) - compare(list[item],list[item])</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score1 = game[0]\n    score2 = game[1]\n    score3 = game[2]\n    guess1 = guess[0]\n    guess2 = guess[1]\n    guess3 = guess[2]\n    guess4 = guess[3]\n    guess5 = guess[4]\n    \n    # I assume you get a better feeling when you match on the first row, so let's start at the first\n    if (score1 == score2) and (guess1 == guess2):\n        return score3\n    elif (score1 == score2) and (guess1 == guess3):\n        return score4\n    elif (score1 == score2) and (guess1 == guess4):\n        return score5\n    elif (score1 == score2) and (guess1 == guess5):\n        return score6\n    \n    # Now go back and do the other way\n    if (score2 == score3) and (guess2 == guess1):\n        return score5\n    elif (score3 == score4) and (guess2 == guess2):\n        return score6\n    elif (score3 == score4) and (guess2 == guess3):\n        return score7\n    elif (score3 == score4) and (guess2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    def distance(r,i):\n        ''' If the guess is at position i, return distance from the guess to the score, which is the absolute difference in positions.\n        \n        If the guess is at position i, return 0, which means the guess is correct.\n        '''\n        return math.sqrt(len(r)*len(r) - len(i)*len(r[i]) - len(i)*len(r[i][i+1]))\n\n    def distanceInPair(r,i,j):\n        ''' Return the distance between position i and position j in a pair (r[i],r[j])\n        \n        If the pair are at position i, return 1, which means the pair is correct.\n        If the pair are at position i, return 2, which means the pair is incorrect.\n        \n        return -1 if there is no pair at position i, and 0 if there is no pair at position j. '''\n        \n        if i == j:\n            return -1\n        else:\n            return len(r[i]) - len(r[j]) - len(r[i][i+1]) - len(r[j][i+1])\n\n    distance = -1\n    distInPair = 0\n    for i,j in enumerate(r):\n        if j == i:", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if game.get_num_matches()==0:\n        return 0,None\n    score = game.get_score();\n    guess = game.get_guess();\n    length = len(guess);\n    out = []\n    for i in range(length):\n        out.append(guess[i]- score)\n    return out", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guess = random.randint(0, len(game))\n    score = []\n    for guess in range(len(game)):\n        score.append(game[guess])\n    print(score)\n    if compare(guess,score) == 0:\n        return (0,0)\n    else:\n        return (abs(score[guess] - score[0]) - abs(score[1] - score[0]))\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    print('Compare two guesses.')\n    print('Total number of matches: ',len(game))\n    print('Total number of correct matches: ',len(guess))\n    for i in range(len(game)):\n        if (game[i]!= guess[i]):\n            print('%d mismatch' %(game[i] - guess[i]))\n    print('Guesses are equal')\n    print('Total number of correct matches: ',len(game))\n    return game", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # define variables\n    scores = []\n    guess = []\n    def compare_match(score, guess):\n        if score == guess:\n            return 0\n        elif score < guess:\n            return -1\n        else:\n            return 1\n    scores = sorted(scores)\n    guess = sorted(guess)\n    for i in range(len(guess)):\n        if compare_match(scores[i],guess[i]):\n            return scores[i]\n        else:\n            return -1\n    return 0", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = []\n    guess = []\n    \n    for i in range(len(game)):\n        score.append(game[i])\n        guess.append(guess[i])\n    \n    n = len(score)\n    m = len(guess)\n    assert m == n,\"score and guess arrays should be the same length\"\n    \n    diff = []\n    for i in range(len(guess)):\n        for j in range(len(score)):\n            diff.append(abs(score[i][j] - guess[i][j]))\n    return diff\n\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # List of scores\n    scores = [0,0,0,0,0,0]\n    \n    # List of guesses\n    guesses = [0,0,0,0,0,0]\n    \n    # Return index of largest number\n    guess_max = -1\n    \n    # Iterate through the scores, comparing each guess to each score, taking the\n    # largest value.\n    for i in range(0,len(scores)):\n        # Compare to each score\n        score = scores[i]\n        if score > guess_max:\n            guess_max = score\n        \n        # Compare to each guess\n        guess = guesses[i]\n        if guess > guess_max:\n            guess_max = guess\n        \n        # Add to the score\n        scores[i] += guess_max\n    \n    return scores", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def score(match):\n        if guess in match:\n            return guess\n        else:\n            return match\n    \n    def guess(score):\n        if score == 0:\n            return 0\n        elif score < 0:\n            return -1 * score\n        elif score > 0:\n            return 1 * score\n    \n    compareArray = []\n    for index in range(len(guess)):\n        match = guess[index]\n        score = score(match)\n        guess = guess[score:]\n        compareArray.append(guess)\n    \n    return compareArray", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores = [game[0],game[1],game[2],game[3]]\n    guesses = [0,0,0,0,0]\n    \n    def set_scores(self,scores):\n        for i in range(len(scores)):\n            self.scores[i] = scores[i]\n        \n        self.guesses = guesses\n    \n    def set_guesses(self,guesses):\n        for i in range(len(guesses)):\n            self.guesses[i] = guesses[i]\n    \n    def score(self,score):\n        if self.guesss[score] == score:\n            return self.scores[score]\n        else:\n            return self.scores[score] - self.guesses[score]\n    \n    def guess(self,score):\n        if self.guesss[score] == score:\n            return self.guesss[score]\n        else:\n            return self.guesss[score]\n    \n    def get_absolute_diff(self):\n        diff = abs(self.guesses[0] - self.scores[0])\n        diff = diff if diff!= 0 else 0\n        diff = diff if diff!= 0 else 0\n        diff = diff if diff!= 0 else 0\n        diff = diff if diff!", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    guessed_all = []\n    guessed_all.append(-1)\n    score = 0\n    for i in range(len(guess)):\n        score += guess[i] * i\n    if len(guess) > 0:\n        if score == 0:\n            return guessed_all\n        else:\n            return compare(score,guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #create arrays of match scores and guess scores\n    myguess=[0,0,0,0,0,0]\n    myscore=[0,0,0,0,0,0]\n    \n    #compare scores\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            if game[i][j]==guess[i]:\n                myscore[i][j]=myscore[i][j]+1\n            else:\n                myscore[i][j]=myscore[i][j]-1\n    \n    #return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    #the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    return myscore", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def guess():\n        \"\"\"This function takes an array of scores and compares it against a guess array. If they match, the\n        guess is correct, else it is not. You are given a guess array that must be of the same length as the scores array.\n        \"\"\"\n        #score = game[0]\n        guess = game[len(game)-1]\n        if guess == score:\n            return 0\n        elif guess == score:\n            return 1\n        else:\n            return abs(guess - score)\n\n    return guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    guess = np.zeros((game.size, len(game)))\n    guess = np.insert(guess,0,guess)\n    game.sort(key = lambda item: item[0])\n\n    n = len(game)\n    # Check if the guess is the same as the score.\n    if game == guess:\n        return guess\n    # Check if the guess is the same as the score, but a little higher.\n    else:\n        # If the guess is higher than the score, we need to compare the\n        # guess with the maximum of all the scores\n        best_score = max([game[i] for i in range(n)])\n        best_score = np.insert(best_score,0,best_score)\n        # Check if the guess is the same as the score, but a little lower.\n        else:\n            # If the guess is lower than the score, we need to compare the\n            # guess with the minimum of all the scores\n            best_score = min([game[i] for i in range(n)])\n            best_score = np.insert(best_score,0,best_score)\n            # Check if the guess is the same as the score, but a little higher.\n            else:\n                # If the guess is higher than the score, we need to compare the", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    temp = [1,2,3,4,5,1]\n    score = [0,0,0,0,0,3]\n    guess = [0,0,0,0,0,2]\n    guess_sorted = [[0,0],[0,0],[0,0]]\n    score_sorted = [[0,0],[0,0],[0,0]]\n    guess_count = len(guess)\n    score_count = len(score)\n    guess_incorrect = [0,0]\n    score_incorrect = [0,0]\n    for i,guess in enumerate(guess):\n        if guess in temp:\n            guess_incorrect[i] = len(guess) - 1 - i\n            score_incorrect[i] = score[i] - guess[i]\n    if guess == temp:\n        return score\n    elif guess == score:\n        return score_count\n    elif guess!= temp:\n        return score_count - guess_count\n    elif guess!= score:\n        return score_sorted - guess_sorted\n    elif score!= temp:\n        return score_sorted - score_sorted\n    elif score!= score:\n        return guess_incorrect - guess_count\n    elif guess == temp:\n        return guess_incorrect[0]\n    elif guess ==", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    ## guess the numbers\n    score1 = game[guess[0]]\n    score2 = game[guess[1]]\n    score3 = game[guess[2]]\n    \n    guess2 = game[guess[3]]\n    guess3 = game[guess[4]]\n    guess4 = game[guess[5]]\n    \n    ## print out the scores\n    print(\"Scores are:\", score1, score2, score3, score4)\n    \n    ## print out the guesses\n    print(\"Guesses are:\", guess1, guess2, guess3, guess4)\n    \n    ## print out the difference\n    print(\"Difference is:\", diff1, diff2, diff3, diff4)\n    return [diff1, diff2, diff3, diff4]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    score = [[0],[]]\n    guess = [[0],[]]\n    result = []\n    \n    for i,sublist in enumerate(guess):\n        if list(sublist)==guess:\n            score[i] = sublist\n            continue\n        \n        score[i] = compare(score[i],score[sublist])\n        guess[i] = compare(guess[i],guess[sublist])\n        result.append((score[i],guess[i]))\n    print(result)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def score(a,b):\n        return sum((a * a) for a in a)\n    \n    def guess(a,b):\n        if a == b:\n            return 1\n        elif a > b:\n            return -1\n        else:\n            return 0\n    a = np.random.rand(2)\n    b = np.random.rand(2)\n    c = np.random.rand(2)\n    guess = np.zeros(2)\n    guess[guess.shape[0]] = a\n    guess[guess.shape[1]] = b\n    guess[guess.shape[2]] = c\n    result = np.zeros(2)\n    result[0] = np.abs(guess - a)\n    result[1] = np.abs(guess - b)\n    print(np.shape(result))\n    print(result.shape)\n    print(result.nonzero())\n    for i in range(2):\n        if compare(guess, result[i]) < 0:\n            print(\"{0} {1}\".format(i, result[i]))\n    return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    #create an array for each number to be compared\n    scores = []\n    guesses = []\n    #iterate over the two arrays\n    for index,sc in enumerate(scores):\n        for j,guess in enumerate(guesses):\n            if index == j:\n                break\n            if score[index] > score[j]:\n                score[index] = score[j]\n        #add the score and guess\n        scores.append(score[index])\n        guesses.append(guess)\n    #calculate the absolute difference\n    if abs(guess - score) < 0:\n        return [0,0,0,0,guess,score]\n    else:\n        return [1,1,1,guess,score]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def init(self,scores,guesses):\n        self.scores = scores\n        self.guesses = guesses\n    def execute(self):\n        guess = random.sample(self.scores,self.guesses,size=self.guesses)\n        guessed = random.sample(self.guesses,self.scores,size=self.scores)\n        return (guesses == guessed)\n    def __len__(self):\n        return self.scores.__len__()\n    \n    def __getitem__(self,key):\n        try:\n            return self.scores[key]\n        except KeyError:\n            return self.guesses[key]\n    \n    def __str__(self):\n        result = \"\"\n        for i in range(len(self.scores)):\n            result += \"%s -> %s -> %s\\n\" % (self.scores[i],self.guesses[i],self.scores[i]-key)\n        return result", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if len(guess)!= len(game):\n        raise Exception(\"Wrong length\")\n    \n    guess_index = range(len(guess))\n    \n    game_index = range(len(game))\n    for i in range(len(guess)):\n        print(\"[{}]: \".format(i),end='')\n        game_score = 0\n        guess_score = 0\n        for j in range(len(guess[i])):\n            game_score += guess_score[j]\n            game_index[j] += 1\n        print(game_index,\"game scores:\")\n        for j in game_index:\n            print(game_score,\" \",j,\"game scores:\")\n            for i in range(len(game)):\n                if i == j:\n                    print(game[i],\" \",j,\"game scores:\")\n                else:\n                    if game_score[i] > game_score[j]:\n                        print(game_score[i],\" \",j,\"game scores:\")\n                    else:\n                        print(game_score[j],\" \",j,\"game scores:\")\n        print(end)\n        \n        if game_score[i] > game_score[j]:\n            return(guess[i],game_score[i]);\n        else:\n            return(game_score[i],game_score[j]);\n    \n    return", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = [game[0] for game in guess]\n    guesses = [game[1] for game in guess]\n    print scores[0]\n    print scores[1]\n    print scores[0] - scores[1]\n    print guesses[0]\n    print guesses[1]\n    return guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    x = [1,2,3,4,5,6]\n    \n    y = [2,4,5,0,0,0]\n    \n    # make sure we have the same amount of numbers\n    x.sort()\n    y.sort()\n    \n    # check if all of the numbers are in the order we want\n    if len(x)!= len(y):\n        return 0\n    if len(x)!= len(y) * len(x):\n        return len(x) - len(y)\n    if len(x)!= len(y) * len(x) * len(y):\n        return len(x) - len(y) * len(x) * len(y)\n    \n    # use dict to store the score and guess\n    guess_score = {}\n    \n    # loop through every index of the score array\n    for i in range(len(x)):\n        # store the score we get from the player\n        guesses = x[i]\n        \n        # loop through every index of the guess array\n        for j in range(len(y)):\n            if y[j] in guess_score:\n                # store the score we get from the player\n                guess_score[y[j]] = guesses[j]\n            else:\n                # store the score we", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    global num_matches\n    if len(game)!= len(guess):\n        print(\"You must give us the same number of matches in each column as you specify in your input.\")\n        return\n    num_matches = len(game)\n    return [(i,j) for i,j in enumerate(game) if guess[i]==guess[j]]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    for i,j in enumerate(guess):\n        if i==0:\n            scores.append(j)\n            guesses.append(i)\n        elif i==guess.count():\n            score = game.getScore(j)\n            if score>0:\n                guesses.append(i)\n            else:\n                scores.append(-1)\n    if len(scores)==0:\n        return 0\n    if len(guesses)==0:\n        return 1\n    scoreDiff = 0\n    for j in scores:\n        scoreDiff += abs(guesses[j]-scores[j])\n    return scoreDiff", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    game = game.copy()\n    guess = guess.copy()\n\n    for i in range(len(game)):\n        for j in range(len(game[i])):\n            if game[i][j] == guess[j]:\n                continue\n            if game[i][j] == guess[j][-1]:\n                continue\n            if game[i][j] == guess[j][-2]:\n                continue\n            if game[i][j] == guess[j][-3]:\n                continue\n            if game[i][j] == guess[j][-4]:\n                continue\n            if game[i][j] == guess[j][-5]:\n                continue\n            if game[i][j] == guess[j][-6]:\n                continue\n            if game[i][j] == guess[j][-7]:\n                continue\n            if game[i][j] == guess[j][-8]:\n                continue\n            if game[i][j] == guess[j][-9]:\n                continue\n            if game[i][j] == guess[j][-10]:\n                continue\n            if game[i][j] == guess[j][-11]:\n                continue\n            if game[i][j] == guess[j][-12]:\n                continue\n            if game[i][j] == guess[j][-13]:\n                continue\n            if game[i][j] == guess[j][-14]:\n                continue\n            if game[i][j] == guess[j][-15]:\n                continue\n            if game[i][j] == guess[j][-16]:\n                continue\n            if game[i][j] == guess[j][-17]:\n                continue\n            if game[i][j] == guess[j", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    # Array of scores for the match\n    scores = [game[0][0],game[0][1],game[0][2],game[0][3]]\n    # Array of guess scores for the match\n    guess_scores = [guess[0][0],guess[0][1],guess[0][2],guess[0][3]]\n    # Inverse of the scores\n    guess_indices = [game[1][0],game[1][1],game[1][2],game[1][3]]\n    # Error messages to pass to the caller, to indicate the error\n    errors = ['','','','']\n    \n    # Initialise the arrays\n    scores_indices = np.zeros(len(guess_scores))\n    guess_indices_indices = np.zeros(len(guess_indices))\n    guess_indices = np.arange(len(guess_indices))\n    scores = np.zeros(len(guess_scores))\n    scores_indices = np.zeros(len(guess_indices_indices))\n    guess_indices_indices = np.zeros(len(guess_indices))\n    guess_indices = np.arange(len(guess_indices))\n    scores_indices = np.zeros(len(guess_indices))\n    guess_indices_indices = np.zeros", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = [[1, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0]]\n    guess = [[1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]]\n    return score, guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    print('comparing {} {} with {}'.format(len(game),game[0],guess[0]))\n\n    for i in range(len(game[0])):\n        if game[i][0] == guess[i][0]:\n            return i\n    else:\n        return len(game) - len(guess) - 1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game) == len(guess):\n        return\n    game = game[0:len(game)-1]\n    guess = guess[0:len(guess)-1]\n    #calculate scores for each match\n    scores = {}\n    scores[\"guess\"] = {}\n    for i in range(len(game)):\n        scores[i] = {}\n        scores[i][\"score\"] = 0\n        scores[i][\"guess\"] = {}\n        for j in range(len(guess)):\n            scores[i][j] = 0\n            scores[i][j][\"guess\"] = {}\n            scores[i][j][\"score\"] = score(game[i][j],guess[i][j])\n    #calculate averages of all scores\n    average = {}\n    for i in range(len(game)):\n        average[i] = {}\n        for j in range(len(guess)):\n            average[i][j] = {}\n            for k in range(len(guess[i])):\n                average[i][j][k] = 0\n            average[i][j][k][\"guess\"] = {}\n            for k in range(len(guess[i][k])):\n                average[i][j][k][\"score\"] = score(game[i][j],guess[i][k])\n            average[i][j][k][\"guess\"][\"score\"] =", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    score,guess = [],[]\n    \n    while len(score)>0:\n        score,guess = map(lambda x: x, list(score))\n    \n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = {}\n    guess = {}\n    for i in range(len(game)):\n        score[i] = 0\n        guess[i] = {}\n    for i in range(len(guess)):\n        for j in range(len(game)):\n            if score[i][j] == 0:\n                score[i][j] = guess[i][j]\n    for i in range(len(guess)):\n        for j in range(len(guess[i])):\n            if score[i][j] < guess[i][j][0]:\n                score[i][j] = guess[i][j][0]\n    return score", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def main():\n        start = time.time()\n        for i in range(len(game)):\n            for j in range(len(guess)):\n                for k in range(i,j+1,i+1):\n                    if game[i] == guess[k]:\n                        print \"found\",k,i,j,guess[k,i],i,j\n                        break\n                else:\n                    if not game[i] == guess[k]:\n                        print \"missed\",k,i,j,game[i],guess[k,i],i,j\n                    else:\n                        print \"wrong\",k,i,j,game[i],guess[k,i],i,j\n        print \"speed-up\",time.time()-start\n        \n    if __name__ == '__main__':\n        main()</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = []\n    guess = []\n    for i in range(len(game[0])):\n        score.append(game[0][i])\n        guess.append(guess[0][i])\n    return score,guess\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    def answer(score,guess):\n        \"\"\"Return a string of the form'score  guess' or'score guess'.\"\"\"\n        if guess == score:\n            return''\n        return'score   guess'\n    \n    if len(guess)!= len(score):\n        print(\"Invalid number of guesses and scores.\")\n        return 0\n\n    for i,score in enumerate(score):\n        for j,guess in enumerate(guess):\n            if i == j:\n                continue\n            if compare(game,guess) > 0:\n                answer(score[i],guess[i])\n\n    return answer(score,guess)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    def generateMatches(guesses,scores):\n        \"\"\"Generates a list of numbers that match each score. This is done by comparing the score and guess, and \n        finding the position where one is smaller (score). Each of these positions can be considered a match.\n        The final list of matches is returned as a list of integers.\"\"\"\n        \n        try:\n            assert len(scores)==len(guesses)\n            assert len(guesses)==len(scores)\n        except AssertionError:\n            raise AssertionError('Input arrays must be of the same length.')\n        \n        \n        scores2 = []\n        guesses2 = []\n        for i in range(len(scores)):\n            scores2.append(scores[i])\n            guesses2.append(guesses[i])\n            \n        results = [[0 for i in range(len(guesses2))] for i in range(len(guesses2))]\n        for guess in guesses2:\n            if guess not in scores2:\n                result = score2 - guess\n                results[i].append(result)\n                assert result >= 0\n                results[i][-1] += result\n        \n        return results\n    \n    def generateMatches2(guesses,scores):\n        \"\"\"Generates a list of numbers that", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    def compare_orders(a,b):\n        if a.count(b) == 0:\n            return True\n        else:\n            return b.count(a) == 0\n    \n    g = [[0,0,0,0,0,0,0],[0,1,1,1,1,1,0],[0,2,2,2,2,2,0],[0,3,3,3,3,3,0],[0,4,4,4,4,4,0],[0,5,5,5,5,5,0]]\n    guess = g[len(game)-1,len(game)-1,len(game)-1,len(game)-1,len(game)-1,len(game)-1]\n    score = 0\n    for i in range(len(guess)):\n        score += compare(game,guess[i])\n    return score\n    \n    \n    \n    </s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score1 = len(game) + len(guess)\n    score2 = len(guess) + len(game)\n    if score1!= score2:\n        return (score1 - score2) / (score1 + score2)\n    \n    for i in range(0,len(game)):\n        for j in range(0,len(guess)):\n            if guess[i] == game[j]:\n                return score1 - score2 - j\n    \n    return score1 - score2", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # List of all the scores for the game.\n    score_list = [None] * len(game)\n    \n    # List of all the guesses for the game.\n    guess_list = [None] * len(game)\n    \n    # List of all the scores for the game.\n    score_list[0] = None\n    \n    # List of all the guesses for the game.\n    guess_list[0] = None\n    \n    \n    #\n    # Initialise the guess and score arrays with the current state of the game.\n    #\n    guess = guess_list[0]\n    score = score_list[0]\n    \n    #\n    # Iterate through all the matches.\n    #\n    for i in range(len(guess_list)):\n        # Compare the guess and score arrays.\n        guess = guess_list[i]\n        score = score_list[i]\n        \n        # Compute the score difference.\n        diff = score - guess\n        \n        if diff!= 0:\n            # If the difference is bigger than the allowed amount, we cannot have a match.\n            if diff > 0:\n                # If the difference is greater than the number of missed scores, we cannot have a match.\n                if diff > len(score):\n                    # If the difference is equal to the number of missed scores, we cannot have a match.\n                    if diff == len(score):\n                        # If the difference is", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    # read in the scores and guesses\n    scores = dict(zip(range(1,len(game)),game))\n    guesses = dict(zip(range(1,len(game)),game))\n    #create a dictionary to hold the scores\n    score = {}\n    for i,score in enumerate(scores):\n        score[i] = i\n    #create a dictionary to hold the guesses\n    guess = {}\n    for i,guess in enumerate(guesses):\n        guess[i] = i\n    #sort the scores and guesses in ascending order\n    scores.sort()\n    guesses.sort()\n    # loop over the scores and guesses\n    for i,score in enumerate(scores):\n        for j,guess in enumerate(guesses):\n            if i==j:\n                if score==guess:\n                    return i,j\n                elif score<guess:\n                    return -1,i\n                else:\n                    return i,j\n    # if there was no match, return (-1,-1)\n    if len(guesses) == 0:\n        return -1,-1\n    return -1,-1", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n\n    def score(guess):\n        \"\"\"Returns the score for a guess\"\"\"\n        return int(guess[0])\n    \n    def guess(score):\n        \"\"\"Returns the guess for a score\"\"\"\n        return score[score > 0]\n    \n    def guess_good(score):\n        \"\"\"Returns a guess that is closer to the correct guess than the guess for score\"\"\"\n        guess = score[score > 0]\n        guess_good = guess + guess.count(0) # adjusts the guess to make it positive\n        \n        return guess_good\n    \n    return [score,guess]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    scores = []\n    guesses = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n            scores.append(i)\n            guesses.append(i)\n        else:\n            if game[i] < guess[i]:\n                scores.append(i)\n                guesses.append(i)\n            else:\n                scores.append(i)\n                guesses.append(i - game[i])\n    # get the scores:\n    scores.sort()\n    guesses.sort()\n    return scores,guesses", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score = {}\n    guess = {}\n    for i in range(len(game)):\n        guess[i] = 0\n        score[i] = 0\n    for i in range(len(guess)):\n        if guess[i] < score[i]:\n            guess[i] = score[i]\n    return guess", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        raise ValueError('Given arrays must be equal length')\n    for i in range(len(game)):\n        if not game[i] in guess:\n            return game[i] - guess[i]\n    return abs(guess[0] - game[0])", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    if len(game)!= len(guess):\n        print(\"wrong number of inputs!\")\n        return 0\n    \n    #Create an index of the correct matches\n    indices = []\n    for i in range(len(game)):\n        if guess[i] in indices:\n            return i\n        indices.append(i)\n\n    #Gather the scores\n    scores = []\n    for i in range(len(game)):\n        if guess[i] in indices:\n            scores.append(game[i])\n        else:\n            scores.append(0)\n\n    #Merge the scores together\n    scores.sort()\n    scores.reverse()\n\n    #Calculate the absolute difference between the scores\n    diff = abs(scores[0] - scores[1])\n    if diff!= 0:\n        return diff\n        \n    #Gather the guesses\n    for i in range(len(game)):\n        if guess[i] in indices:\n            guess = game[i]\n        else:\n            guess = 0\n    return len(indices)", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    scores = []\n    guesses = []\n    \n    for i in range(0,len(game)):\n        scores.append(game[i])\n        \n        guesses.append(guess[i])\n    return scores,guesses\n</s>", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    \n    if not hasattr(game,'player'):\n        return\n\n    scores = range(len(guess))\n    guesses = range(len(game.players))\n    for i in range(len(guess)):\n        if guess[i] == guess[i-1]:\n            continue\n        \n        if scores[i] > scores[i-1]:\n            continue\n        \n        if scores[i] < scores[i-1]:\n            return [guesses[i], scores[i]]\n        else:\n            return [guesses[i], scores[i]] + (guesses[i+1], scores[i+1])\n    \n    return [guesses[i], scores[i]]", "def compare(game,guess):\n    \"\"\"I think we all remember that feeling when the result of some long-awaited\n    event is finally known. The feelings and thoughts you have at that moment are\n    definitely worth noting down and comparing.\n    Your task is to determine if a person correctly guessed the results of a number of matches.\n    You are given two arrays of scores and guesses of equal length, where each index shows a match. \n    Return an array of the same length denoting how far off each guess was. If they have guessed correctly,\n    the value is 0, and if not, the value is the absolute difference between the guess and the score.\n    \n    \n    example:\n\n    compare([1,2,3,4,5,1],[1,2,3,4,2,-2]) -> [0,0,0,0,3,3]\n    compare([0,5,0,0,0,4],[4,1,1,0,0,-2]) -> [4,4,1,0,0,6]\n    \"\"\"\n    score1,score2 = scoreTuple(guess,game)\n    guess1,guess2 = guessTuple(game,guess)\n    return score1 - score2"]]