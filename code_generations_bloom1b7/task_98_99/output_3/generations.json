[["def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # characters that are not vowels in an index\n    n = 0\n    for ch in s:\n        # index starts at zero\n        if ch!= 'a':\n            n += 1\n    # count vowels\n    n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([len(v) for v in s if v.isupper()]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # By default, capitalize all vowels\n    return len(set('abc','def','ghi','jklmno','nopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')) == len(s)\n    \n    return 0\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s)):\n        if s[i] in [a, b, c, d, e, f, g]:\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 0\n    vowels = [x for x in s if x in '\\u0030\\u00a0']\n    index = 0\n    for i in range(len(vowels) / 2):\n        index += i\n    return len(vowels) - index\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(c for c in s if ord(c) > ord('A')) + 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    n = 0\n    for i in range(len(s)):\n        if s[i] in u'\\u00a9\\u00bf\\uac00\\uac00\\u00b4\\uac00\\uac00\\uac00\\uac00\\uac00':\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.isupper():\n        return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.upper()\n    count = 0\n    for i in range(len(s)):\n        if s[i] in ('A', 'B', 'C', 'D', 'E', 'F'):\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for w in s:\n        if w.isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Use a simple heuristic: count the number of vowels in any index that is\n    #   preceded by a vowel.\n    v = s[0]\n    for i in range(len(s)):\n        if s[i] == v:\n            yield i\n            break\n    \n    # Use a more sophisticated heuristic: if there are any vowels in the\n    #    previous index, then count as one vowel.\n    if v == s[0]:\n        yield 0\n\n    # Otherwise, count as two vowels.\n    yield 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    i = 0\n    for char in s:\n        if char in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z']:\n            count = count + 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # A number of vowels are counted from the first to the last.\n    # If there is no upper vowels in the range, -1 is returned.\n    return len(set(s.upper()))\n\n    # For example, count_upper('abcdefgabcdefgabcdefg') returns 3\n    # count_upper('abcdefgabcdefg') returns -1\n\n    def uniq(seq):\n        #uniq('abcdefgabcdefgabcdefgabcdefg') returns {'a', 'b', 'c', 'd', 'e', 'f'}\n        #uniq('abcdefgabcdefgabcdefgabcdefg') returns {'a', 'c', 'd', 'e', 'g'}\n        return set(seq)\n\n    # The len() of the vowels in each set will be returned.\n    def vowels(s):\n        #vowels('abcdefgabcdefgabcdefgabcdefg') returns {'a', 'b', 'c', 'd', 'e', 'g'}\n        #vowels('abcdefgabcdefgabcdefgabcdefg') returns {'a', 'b', 'c', 'e', 'g'}\n        #vow", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while i < len(s) and s[i] in ('A', 'B', 'C', 'E', 'F', 'G'):\n        i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    m = 0\n    for i in range(0, len(s), 2):\n        if s[i : i + 2] == 'a':\n            n += 1\n            m += 1\n        elif s[i : i + 2] == 'b':\n            n += 1\n            m += 1\n        elif s[i : i + 2] == 'c':\n            n += 1\n            m += 1\n        elif s[i : i + 2] == 'e':\n            n += 1\n            m += 1\n        elif s[i : i + 2] == 'f':\n            n += 1\n            m += 1\n        elif s[i : i + 2] == 'g':\n            n += 1\n            m += 1\n    return n * m", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] in ('a', 'b', 'c', 'd', 'e', 'f'):\n            return i - 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    index = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            if s[i] in ['a', 'b']:\n                count += 1\n            if s[i] in ['c', 'd']:\n                count += 1\n            if s[i] in ['e', 'f']:\n                count += 1\n            if s[i] in ['g', 'h']:\n                count += 1\n            if s[i] in ['i', 'j']:\n                count += 1\n            if s[i] in ['k', 'l']:\n                count += 1\n            if s[i] in ['m', 'n']:\n                count += 1\n            if s[i] in ['o', 'p']:\n                count += 1\n            if s[i] in ['q', 'r']:\n                count += 1\n            if s[i] in ['s', 't']:\n                count += 1\n            if s[i] in ['u', 'v']:\n                count += 1\n            if s[i] in ['w', 'x']:\n                count += 1\n            if s[i] in ['y', 'z']:\n                count += 1\n            index += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'i':\n            count += 1\n        elif s[i] == 'e':\n            count += 1\n        elif s[i] == 'f':\n            count += 1\n        elif s[i] == 'g':\n            count += 1\n        elif s[i] == 'b':\n            count += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    m = re.match(r'[a-z]', s)\n    if m:\n        return len(set([x for x in m.group(0).upper()])) // 2\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set([w.upper() for w in s]) & set([w.upper() for w in s]))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    index = 1\n    for i in xrange(len(s)-1,-1,-1):\n        if s[i] in upper_vowels:\n            result += 1\n            index = i+1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # If s is empty, return zero.\n    if not s:\n        return 0\n\n    # Check for odd indices.\n    if len(s) % 2:\n        return 0\n\n    # Check for even indices.\n    if len(s) % 4:\n        return 0\n\n    # Check for odd indices.\n    if len(s) % 6:\n        return 0\n\n    # Count the number of uppercase vowels in this index.\n    return len(s) - ((s[0:2] + s[2:6] + s[6:8]) % 4) * 4", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(len(s)):\n        if s[i] in '\\u0300' and s[i+1] in '\\u0300':\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    index = 0\n    count = 0\n    for c in s:\n        if c in 'abcdefg':\n            count += 1\n        elif c in 'aBcDeF':\n            count += 1\n        elif c in 'ABCDEF':\n            count += 1\n        else:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in xrange(len(s)):\n        if s[i] in ['a', 'b']:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for index in range(len(s)):\n        if index % 2 == 0:\n            count += 1\n        else:\n            count += 1 - index % 2\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] in ['a', 'b', 'c', 'd', 'e', 'f', 'g']:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    w = set()\n    if len(s) % 2 == 0:\n        # Add any vowels found in even indices to the w set\n        for i in xrange(2, len(s) / 2):\n            w.add(s[i])\n    else:\n        # Add any vowels found in odd indices to the w set\n        for i in xrange(2, len(s) / 2):\n            if s[i / 2] == s[i % 2] + s[i / 2] + s[i % 2]:\n                w.add(s[i])\n    return len(w)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s.lower().upper())) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # preprocess\n    while True:\n        i = s.find(u\"\u00e1\")\n        if i < 0:\n            break\n        s = s[:i]\n        i = s.find(u\"\u00e9\")\n        if i < 0:\n            break\n        s = s[:i]\n        i = s.find(u\"\u00ed\")\n        if i < 0:\n            break\n        s = s[:i]\n        i = s.find(u\"\u00f3\")\n        if i < 0:\n            break\n        s = s[:i]\n        i = s.find(u\"\u00fa\")\n        if i < 0:\n            break\n        s = s[:i]\n    return count(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s == None:\n        return 0\n    if len(s) % 2:\n        return s[len(s) - 1]\n    vowels = []\n    for i in range(len(s) - 1):\n        if s[i].isupper():\n            vowels.append(i)\n    return len(vowels) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    if s in ['a', 'ab', 'ae', 'af', 'abd', 'aef', 'aeg', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd', 'aef', 'abd'", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # normalise characters to upper case\n    s = s.lower()\n    # find the number of uppercase characters\n    if len(s) == 0:\n        return 0\n    # count the number of upper case vowels\n    for c in s.lower():\n        if c not in ('a', 'b', 'c', 'd', 'e', 'f', 'g'):\n            return 0\n    return len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([len(c) for c in s]) % 2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s == 'a':\n        return 0\n    if s == 'aE':\n        return 0\n    if s in ['a', 'A'] or s in ['E', 'E'] or s in ['b', 'B'] or s in ['b', 'B']:\n        return 1\n    if s in ['c', 'C'] or s in ['d', 'D'] or s in ['e', 'E'] or s in ['e', 'E'] or s in ['f', 'F'] or s in ['f', 'F', 'g', 'G']:\n        return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        return 0\n    # Get the upper index\n    idx = s.index('i')\n    # Get the count for each vowel\n    for i in range(0, len(s['vowels']), 2):\n        yield i * 2 + idx\n    # If there are no vowels in the index, return 0\n    if len(s['vowels']) == 0:\n        yield 0\n        return 0\n    # If the index is odd, return the count\n    if idx % 2:\n        return count_upper(s['vowels']) * 2 + idx\n    # If the index is even, return the count\n    else:\n        return count_upper(s['vowels']) * 2 + idx / 2\n\ncount_upper('aBCdEf')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.startswith(\"ab\") or s.startswith(\"abd\") or s.startswith(\"abd\"):\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 0: return 0\n    return sum(1 for c in s if c in [a, b, c, d, e, f, g])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        return len(s[2:]) - len(s[0:2]) // 2\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    index = 0\n    while index < len(s) and index % 2 == 0:\n        index += 1\n        count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            return i\n\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] == 'u':\n            continue\n        if s[i] in ('a', 'b', 'c', 'd', 'e', 'f', 'g'):\n            return i+1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    if s[0] == 'a':\n        count += 1\n    elif s[0] == 'b':\n        count += 2\n    elif s[0] == 'c':\n        count += 3\n    elif s[0] == 'd':\n        count += 4\n    elif s[0] == 'e':\n        count += 5\n    elif s[0] == 'f':\n        count += 6\n    elif s[0] == 'g':\n        count += 7\n    else:\n        count += 8\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Count the number of upper case vowels in each word\n    vowel_count = 0\n    for c in s.lower():\n        if c in [ 'a', 'b', 'c', 'd', 'e', 'f', 'g' ]:\n            vowel_count += 1\n    return vowel_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(ord(c) for c in s) / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(v in even_indices for v in s.lower()) / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    index, word = 0, ''\n    for x in s.split():\n        if x.isalpha():\n            index += 1\n        elif x not in ('i', 'u', 'a', 'b', 'c', 'd', 'e', 'f', 'g'):\n            continue\n        else:\n            index -= 1\n            index = int(index)\n    return index", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(x in upper for x in s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count the number of uppercase vowels\n    return sum(i in s for i in ('a', 'b', 'c', 'd', 'e', 'f', 'g'))\n    # count the number of the vowels in odd indices\n    return sum(i in s for i in ('i', 'u', 'e'))\n    # count the number of the vowels in even indices\n    return count_upper(s.replace(' ', ''))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    words = s.split()\n    return sum(p[::-1] for p in words if p in _UPPER_VOWELS)/len(words)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for x in s:\n        count += x in xrange(0, len(x) - 1) and x[len(x) - 1] in '\\u0000' or x in '\\u0000\\u0000'\n\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(re.findall('[aeiou]', s))/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Determine the number of occurrences of uppercase letters\n    count = 0\n    for c in s:\n        if c.upper() in ('A', 'B', 'C', 'D', 'E', 'F'):\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count_upper() is currently only implemented for English\n    s = ''.join(i for i in range(len(s) - len('a') + 1) if s[i] in 'a')\n    # convert to lowercase\n    l = s.lower()\n    # count lowercase\n    return l.count('a') * 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(vowel_count(w) for vowel, w in enumerate(s.lower().split()))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(i for i, v in enumerate(s) if v[0] in Uppercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] not in Uppercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] in Letter + Uppercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] in Letter + Lowercase + Uppercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] in Letter + Letter + Uppercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] in Letter + Letter + Lowercase + Uppercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] in Letter + Letter + Letter + Lowercase) + \\\n           sum(i for i, v in enumerate(s) if v[0] in Letter + Letter + Letter + Lowercase)\n\n    if s is None:\n        return 0\n    return count_upper(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.isspace():\n        return 1\n    if len(s) % 2 == 1:\n        return 1\n    if len(s) == 1:\n        return 1\n    for i in range(len(s)):\n        if s[i] in ['a', 'a', 'e', 'e']:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 0\n    for i in xrange(len(s) / 2):\n        if s[i * 2] == s[i * 2 + 1] and s[i * 2 + 2] in ('E', 'O', 'a', 'b', 'c', 'd', 'e', 'f'):\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(set(s.upper()) for _ in range(len(s)))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.upper()\n    return s[len(s[::-1])/2].count('aE') + s[len(s[::-1])/2].count('eE') + s[len(s[::-1])/2].count('f') + s[len(s[::-1])/2].count('g') + s[len(s[::-1])/2].count('b') + s[len(s[::-1])/2].count('d') + s[len(s[::-1])/2].count('E') + s[len(s[::-1])/2].count('f') + s[len(s[::-1])/2].count('g') + s[len(s[::-1])/2].count('b') + s[len(s[::-1])/2].count('d') + s[len(s[::-1])/2].count('E') + s[len(s[::-1])/2].count('f') + s[len(s[::-1])/2].count('g') + s[len(s[::-1])/2]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    return len(s.upper()) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count(' '):\n        return s.count(' ') - 1\n    return s.count('U') - 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s or not s:\n        return 0\n    for i in xrange(0, len(s), 2):\n        if s[i] in ('v', 'a', 'b', 'c', 'd', 'e', 'f'):\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    for c in s:\n        if c in upper_cased:\n            i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(s.count('a')):\n        n += 1\n    for i in range(s.count('b')):\n        n += 1\n    for i in range(s.count('c')):\n        n += 1\n    for i in range(s.count('d')):\n        n += 1\n    for i in range(s.count('e')):\n        n += 1\n    for i in range(s.count('f')):\n        n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 1:\n        return 0\n    return len(s) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = list(s.lower())\n    vowels = [x for x in vowels if x in ['a', 'b', 'c', 'd', 'e', 'f', 'g']]\n    return vowels.count('u') + vowels.count('i') + vowels.count('j') + vowels.count('k') + vowels.count('l') + vowels.count('m') + vowels.count('n') + vowels.count('o') + vowels.count('r') + vowels.count('s') + vowels.count('t') + vowels.count('u') + vowels.count('v') + vowels.count('w') + vowels.count('x') + vowels.count('y') + vowels.count('z') + vowels.count('!') + vowels.count('?') + vowels.count('$') + vowels.count('&') + vowels.count('!') + vowels.count('+')]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i] in u'\\u00a0':\n            n += 1\n        elif s[i] in u'\\u00a':\n            n += 2\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # If there is no upper vowels in the word, return 0.\n    if len(s) == 0:\n        return 0\n\n    # Get the number of unique vowels in the word.\n    n_unique = 0\n    for i in range(len(s)):\n        if s[i] in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z']:\n            n_unique += 1\n    return n_unique / len(s) * len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    if s[0] in range(0, 5):\n        return len(s) - 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    count = 0\n    for i in xrange(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    while s.count(' ') > 0 and s.count('E') > 0 and s.count('E') > 0:\n        s = s[:s] + 'A'\n    if s.count(' ') > 0 and s.count('C') > 0 and s.count('E') > 0:\n        s = s[:s] + 'C'\n    if s.count(' ') > 0 and s.count('D') > 0 and s.count('E') > 0:\n        s = s[:s] + 'D'\n    if s.count(' ') > 0 and s.count('F') > 0 and s.count('E') > 0:\n        s = s[:s] + 'F'\n    if s.count(' ') > 0 and s.count('G') > 0 and s.count('E') > 0:\n        s = s[:s] + 'G'\n    if s.count(' ') > 0 and s.count('H') > 0 and s.count('E') > 0:\n        s = s[:s] + 'H'\n    if s.count(' ') > 0 and s.count('J'", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s.upper())) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 1:\n        return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper())/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count(u'\\u03BD') == s.count(u'\\u03BD'):\n        return 1\n    elif s.count(u'\\u03CD') == s.count(u'\\u03CD'):\n        return 0\n    elif s.count(u'\\u03CE') == s.count(u'\\u03CE'):\n        return 0\n    elif s.count(u'\\u03CF') == s.count(u'\\u03CF'):\n        return 0\n    elif s.count(u'\\u03D6') == s.count(u'\\u03D6'):\n        return 0\n    elif s.count(u'\\u03D8') == s.count(u'\\u03D8'):\n        return 0\n    elif s.count(u'\\u03DC') == s.count(u'\\u03DC'):\n        return 0\n    elif s.count(u'\\u03DD') == s.count(u'\\u03DD'):\n        return 0\n    elif s.count(u'\\u03DE') == s.count(u'\\u03DE'):\n        return 0\n    elif s.count(u'\\u03D9') ==", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for c in s:\n        if ord(c) > 48:\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if s[0] == 'u':\n        return 1\n    if s[0] == 'a':\n        return 2\n    if s[0] == 'b':\n        return 3\n    if s[0] == 'c':\n        return 4\n    if s[0] == 'd':\n        return 5\n    if s[0] == 'e':\n        return 6\n    if s[0] == 'f':\n        return 7\n    if s[0] == 'g':\n        return 8\n    if s[0] == 'h':\n        return 9\n    if s[0] == 'i':\n        return 10\n    if s[0] == 'j':\n        return 11\n    if s[0] == 'k':\n        return 12\n    if s[0] == 'l':\n        return 13\n    if s[0] =='m':\n        return 14\n    if s[0] == 'n':\n        return 15\n    if s[0] == 'o':\n        return 16\n    if s[0] == 'p':\n        return 17\n    if s[0] == 'q':\n        return 18\n    if s[0] == 'r':\n        return 19\n    if s[0] =='s':\n        return 20\n    if s[0] == 't':\n        return 21\n    if s[0] == 'u':\n        return 22\n    if s[0] == 'v':\n        return 23\n    if s[0] == 'w':\n        return 24", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count('a\\C\\D') == 2:\n        return 2\n    else:\n        return 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Need to count up from 0\n    # then count up from 1 and so on\n    \n    vowels = [s[0] for s in s]\n    \n    count = 0\n    for i in range(len(s)):\n        if s[i] in vowels:\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    from collections import defaultdict\n    vowels = set()\n    for char in s:\n        if char in vowels:\n            vowels.add(char)\n        else:\n            vowels.add(char.upper())\n        \n    u = defaultdict(lambda: len(vowels))\n    for char in s:\n        u[char.upper()] += 1\n    \n    return u[char]\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Note that count_upper is local to the scope of this function, and it\n    # might be used multiple times. Hence, we use a lambda which can be\n    # called many times to avoid creating a global variable.\n    return lambda x: x.count(u\"\u00fc\") if x else 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a','b','c','d','e','f','g']\n    return sum(s.count(vowel) for vowel in vowels) / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    assert len(s)%2==0,'s must be even'\n    for i in range(len(s)):\n        if s[i] in ['a', 'e', 'i', 'o', 'n', 'u']:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(len(i) for i in s.split()) / len(s.lower())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) > 1 and \\\n               int(count(s.upper(), even=False)) > 1 and \\\n               int(count(s.lower(), even=False)) > 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s[0:1] in lower_upper else count_upper(s[2:])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    if len(s) % 2 == 1:\n        return 0\n\n    for i in range(2, len(s)/2, 2):\n        if s[i] in ('a', 'B', 'C', 'D', 'E', 'F'):\n            return 1\n\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # The following line uses the tab character as a placeholder for spaces.\n    # The 'S' is a special character that is not used in Python.\n    if s[-1:] == 'S' and s[-2:] == 'S' and s[-3:] == 'S' and \\\n           s[-4:] == 'S' and s[-5:] == 'S' and s[-6:] == 'S' and \\\n           s[-7:] == 'S' and s[-8:] == 'S' and s[-9:] == 'S' and \\\n           s[-10:] == 'S' and s[11:] == 'S' and s[12:] == 'S' and \\\n           s[13:] == 'S' and s[14:] == 'S' and s[15:] == 'S' and \\\n           s[16:] == 'S' and s[17:] == 'S' and s[18:] == 'S' and \\\n           s[19:] == 'S' and s[20:] == 'S' and s[21:] == 'S' and \\\n           s[22:] == 'S' and s[23:] == 'S' and s[24:] == 'S' and \\\n           s[25:] == 'S' and s[26:] == 'S' and s[27:] ==", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] in UPPER_VOWELS.keys():\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while s[i] == 'u':\n        i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        return 0\n    s = s.lower()\n    n = 0\n    while n < len(s):\n        v = s[n]\n        if v.isupper() and v!= s[n-1]:\n            n += 1\n            if n == len(s)-1:\n                return n\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    try:\n        return int(s.upper()) % len(s.upper())\n    except ValueError:\n        raise ValueError(\"Counting upper-case vowels does not make sense for \"\n                                 \"{0}.\".format(s))\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = s.index('i')\n    while i < len(s):\n        if s[i] in ['a','b','c','d','e','f']:\n            i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s[0] in '~\\.':\n        return 0\n    i = 0\n    for c in s:\n        if i % 2 == 0:\n            return i\n        i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    import re\n    l = len(s)\n    # Count only the vowels in even indices\n    n = 0\n    # Count the vowels\n    for i in range(0, l):\n        if re.match('[aeiou]', s[i:i+2]):\n            n += 1\n    # Return the number of vowels\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s) / len(s.upper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [a for a in s if a in ('A', 'B', 'C', 'D', 'E', 'F')]\n    return len(vowels) * (len(vowels) % 2) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        if s[i] in upper:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s.upper())) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s == '':\n        return 0\n    letter = s.lower()\n    if letter in [aBdEf, 'a', 'b']:\n        count = 0\n    elif letter in [Be, 'e', 'f']:\n        count = count_upper(letter + 'e')\n    else:\n        count = count_upper(letter)\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper = set()\n    num = 0\n    for i in range(0, len(s)):\n        if s[i] in upper:\n            num += 1\n        else:\n            upper.add(s[i])\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) - len(s.lower()) - len(s.replace(' ', '_')) - 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(v for v in s.upper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count(' ') > 0:\n        return 1\n    return len(s.upper()) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(0, len(s), 2):\n        if s[i] in ['A', 'B', 'C', 'E', 'F']:\n            yield i\n    #return len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    for i in range(len(s)/2):\n        if s[i] == s[i+1]:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s.isalpha() else (len(s) // 2) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    t = len(s)\n    for i in range(t/2+1, -1, -1):\n        if s[i] == s[i+1]:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count the number of vowels\n    t = count(s)\n    # count the number of vowels starting with a vowel\n    if s[:3] == 'aE':\n        t += 1\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'aEf':\n        t += 2\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'bE':\n        t += 3\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'bEf':\n        t += 4\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'cE':\n        t += 5\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'cEf':\n        t += 6\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'd'E':\n        t += 7\n    # count the number of vowels starting with a vowel starting with a vowel\n    elif s[:3] == 'd'Ef':\n        t += 8\n    # count the number of vowels", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    count_upper = 0\n    for i in range(0, len(s), 2):\n        if s[i] == s[i + 1]:\n            count_upper += 1\n    \n    return count_upper\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 0\n    \n    s = s.upper()\n    if len(s) % 2 == 1:\n        return count_upper(s[0:-1])\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 0\n    return sum(i for i, c in enumerate(s) if c in '0123456789ABCDEF') / 2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s.lower():\n        if c in upper_cases:\n            count += 1\n    return count % len(upper_cases)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    ind0 = 0\n    ind1 = 0\n    while True:\n        if s[ind0] == 'u':\n            ind0 += 1\n        if s[ind1] == 'u':\n            ind1 += 1\n        if ind0 % 2 == 1:\n            break\n        ind0 = ind0 / 2\n\n    return ind0\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.lower()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    import string\n    import re\n    return string.count(s, '[aeiou]') % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s == '':\n        return 0\n    if s[0] in ['A', 'B', 'C', 'D', 'E', 'F']:\n        return 1\n    if s[0] in ['C', 'D', 'E', 'F', 'G']:\n        return 0\n    if s[0] in ['A', 'B', 'C', 'D', 'E', 'F', 'G']:\n        return 1\n    return 0\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    a = ord(s[0])\n    while s[1]:\n        a <<= 1\n        if a == ord(s[0]):\n            return 0\n    return a", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    from functools import partial\n    count = 0\n    while True:\n        i = s.find(u'\\uD800')\n        if i >= 0 and i < len(s)-1:\n            count += 1\n            s = s[i+1]\n        else:\n            break\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        raise ValueError(s)\n    yield s.upper()\n    if s[-1] == 'u':\n        yield s[:-1]\n    else:\n        yield s.replace('u', 'e')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(count_upper(x) for x in s.lower()) + 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    w = ['a', 'b', 'c', 'd', 'e', 'f']\n    y = 0\n    for x in w:\n        y = y+y*x\n    return y\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i] in u.upper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s: return 0\n    if s[0] == 'u': return 1\n    if s[0] in ['a', 'b', 'c', 'd', 'e']: return 1\n    if s[0] in ['f', 'g']: return 1\n    return 0\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    if s.count(' ') < len(s):\n        # Only vowels with at least one non-space character.\n        return len(s) - (s.count(' ') + 1)\n\n    while s.count(' ') > 0:\n        s = s[:s.count(' ')].upper()\n        s = s[:s.count(' ')].lower()\n        s = s[len(s) - 1:].upper()\n        s = s[len(s) - 1:].lower()\n        s = s[:s.count(' ')].lower()\n        s = s[len(s) - 1:].lower()\n        s = s[:s.count(' ')].lower()\n        s = s[len(s) - 1:].lower()\n        s = s[:s.count(' ')].lower()\n        s = s[len(s) - 1:].lower()\n        s = s[:s.count(' ')].lower()\n        s = s[len(s) - 1:].lower()\n        s = s[:s.count(' ')].lower()\n        s = s[len", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return s.count('\\u0000\\u0000')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s)) % 2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    v = list()\n    for i in range(len(s)/2):\n        if len(s[2:i])%2 == 0:\n            v.append(s[i])\n        else:\n            v.append(s[2:i])\n    return len(v)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    if s.startswith('abc'):\n        return 1\n    for letter in s:\n        if letter == 'a' or letter == 'b':\n            i += 1\n        elif letter == 'c' or letter == 'd':\n            i += 1\n        elif letter == 'e' or letter == 'f':\n            i += 1\n        else:\n            i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] == s[i-1]:\n            return i+1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z':\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 1\n    for i in range(len(s) / 2):\n        if s[i % 2] == s[i / 2]:\n            return i % 2 == 0 and i / 2 == 0 or i % 2 == 1 and i / 2 == 1\n    \n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return s.count(u'\\uD800') + s.count(u'\\uDC00') + s.count(u'\\uDFFF')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s)%2==1:\n        return count_upper(s[0:2]) * 2 + count_upper(s[2:4]) * 4 + count_upper(s[4:6]) * 6\n    else:\n        return count_upper(s[0:2]) * 3 + count_upper(s[2:4]) * 5 + count_upper(s[4:6]) * 9", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s[0] not in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"]:\n        raise Exception(\"Invalid string\")\n    \n    upper, lower = s[1:-1], s[1:]\n    if len(upper) % 2:\n        return lower + len(upper) / 2\n    else:\n        return lower + len(upper) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.find(u'\\u0000')!= -1:\n        return 0\n    for i in range(0, len(s) - 2, 2):\n        if s[i:i + 1] in u\"\\u0000\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\\u001E\\u001F\\u0080\".split():\n            return i\n    return len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(a in s for a in set(s)) // len(s) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    count = 0\n    for c in s:\n        if c > '\\u0080':\n            i += 1\n            count += 1\n            break\n    return count * len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(list(set(s.lower().upper()) & set('aeiou'))))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    index = 0\n    result = 0\n    while index < len(s):\n        if s[index] == 'u':\n            result += 1\n        index += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set([vowels.union(i for i in range(0, len(s), 2)) for i in range(0, len(s), 2)])\n    if len(s) % 2:\n        return vowels.count('E')\n    elif len(s) % 3:\n        return vowels.count('E')\n    else:\n        return vowels.count('E')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Count the number of upper case vowels\n    count = 0\n    for n in range(len(s)):\n        if s[n] in ('A','B','C','D','E','F'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] == s[i-1]:\n            count += 1\n    return count/len(s) # counts up to the first vowel\n    \n    # note that count_upper is slightly faster than count.lower\n    # for large inputs, we might want to tweak the algorithm slightly\n    # to make it more efficient\n    # But it is also faster than count.upper\n    # which is more efficient for smaller inputs\n    # or for words that have a low number of vowels\n    # (e.g. vowels in 'going out')\n    # Count the number of upper vowels in the indices 0 to i-1\n    # Count the number of upper vowels in the indices i to i+1\n    # Count the number of upper vowels in the indices i to i+n-1\n    \n    def count_upper_index(s):\n        \"\"\"\n        Given a string s, count the number of upper vowels in the indices 0 to i-1.\n        \n        For example:\n        count_upper_index('aBCdEf') returns 1\n        count_upper_index('abcdefg') returns 0\n        count_upper_index('dBBE') returns 0\n        \"\"\"\n        count = 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g']\n    letters.sort()\n    i = 0\n    j = 0\n    while True:\n        if s[i] == letters[j] or letters[j] == s[i]:\n            j += 1\n            i += 1\n        else:\n            return j\n    \n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(filter(lambda x: x.isupper(), s.split()))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    words = s.split()\n    words.sort()\n    for word in words:\n        if word[-2:] in ['a','b','c','d','e','f']:\n            count += 1\n        elif word[-2:] in ['a','b','c','d','e','f']:\n            count -= 1\n    \n    return count/len(words)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(vowel in x for x in s.lower()) * len(x) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count('i') == 0:\n        return 1\n    if s.count('A') == 0:\n        return 0\n    if s.count('E') == 0:\n        return 0\n    if s.count('O') == 0:\n        return 0\n    if s.count('I') == 0:\n        return 0\n    return s.count(u('i')) - s.count(u('A')) - s.count(u('E')) - s.count(u('O')) - s.count(u('I'))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s.upper().split())) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Get the number of even indices\n    s.count_upper('i') # count_upper('i') is 1\n    s.count_upper('E') # count_upper('E') is 0\n    s.count_upper('E') # count_upper('B') returns 0\n    s.count_upper('E') # count_upper('D') returns 0\n    s.count_upper('E') # count_upper('D') returns 0\n    s.count_upper('E') # count_upper('E') returns 0\n    s.count_upper('E') # count_upper('F') returns 1\n    s.count_upper('E') # count_upper('F') returns 0\n    s.count_upper('E') # count_upper('F') returns 0\n    s.count_upper('E') # count_upper('G') returns 1\n    s.count_upper('E') # count_upper('G') returns 0\n    s.count_upper('E') # count_upper('H') returns 1\n    s.count_upper('", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s == s else len(set(s)) / len(set(str(s)))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s[0] == a else s[-1] == a or s[-1] == b or s[-1] == e or \\\n           s[-1] == f or s[-1] == g or s[-1] == h or s[-1] == i or \\\n           s[-1] == j or s[-1] == k or s[-1] == l or s[-1] == m or \\\n           s[-1] == n or s[-1] == o", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    start_index = 0\n    for index in xrange(len(s)):\n        if s[index,0]!= '_':\n            start_index = index\n    return start_index + len(s) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return s.count('\\u0000') + s.count('\\u0020') + s.count('\\u0021') + \\\n             s.count('\\u0022') + s.count('\\u0023') + s.count('\\u0024') + \\\n             s.count('\\u0025') + s.count('\\u0026') + s.count('\\u0027') + \\\n             s.count('\\u0028') + s.count('\\u0029') + s.count('\\ufff0') + \\\n             s.count('\\ufff1') + s.count('\\ufff2') + s.count('\\ufff3') + \\\n             s.count('\\ufff4') + s.count('\\ufff5') + s.count('\\ufff6') + \\\n             s.count('\\ufff7') + s.count('\\ufff8') + s.count('\\ufff9') + \\\n             s.count('\\ufffA') + s.count('\\ufffb') + s.count('\\ufffc') +", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    c = 0\n    for n in xrange(len(s)):\n        if s[n] in ['A', 'B', 'C', 'D', 'E', 'F', 'G']:\n            c += 1\n    \n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    while s.isalnum():\n        yield s.upper()\n        s = s.lower()\n    if s[-1] == 'u':\n        yield s[:-1]\n    else:\n        yield s\n\ncount_upper('a')\ncount_upper('AB')\ncount_upper('AE')\ncount_upper('BC')\ncount_upper('BD')\ncount_upper('DEF')\ncount_upper('E')\ncount_upper('FG')\ncount_upper('G')\ncount_upper('I')\ncount_upper('J')\ncount_upper('K')\ncount_upper('L')\ncount_upper('M')\ncount_upper('N')\ncount_upper('O')\ncount_upper('Q')\ncount_upper('R')\ncount_upper('S')\ncount_upper('T')\ncount_upper('U')\ncount_upper('V')\ncount_upper('W')\ncount_upper('X')\ncount_upper('Y')\ncount_upper('Z')\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return len(s) / 2\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.upper()\n    s.replace(' ','')\n    n = len(s)\n    for i in range(0, n, 2):\n        if s[i] in ['A', 'B', 'C', 'D', 'E', 'F', 'G']:\n            n = n - 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s[::-1]) * len(s[::-1]) / len(s)\n\n    def count_upper2(s):\n        \"\"\"\n        Given a string s, count the number of uppercase vowels in odd indices.\n    \n        For example:\n        count_upper2('aBCdEf') returns 3\n        count_upper2('abcdefg') returns 0\n        count_upper2('dBBE') returns 0\n        \"\"\"\n        return len(s[::-1]) * len(s[::-1]) / len(s)\n\n    count_upper2('aBCdEf') # 1\n    count_upper2('abcdefg') # 0\n    count_upper2('dBBE') # 0\n\n    return count_upper(s) / count_upper2(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in xrange(len(s)/2):\n        if s[i+1] == s[i]:\n            return i + 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count('E') == 1:\n        return 1\n    return s.count('E') * s.count('A') / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(c for c in s if c in ['a', 'b', 'c', 'd', 'e', 'f', 'g']) / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Count vowels from one to nine\n    count = 0\n    for i in range(0, len(s), 9):\n        if s[i:i + 9] == '\\ufeff':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper = set()\n    for i in range(len(s)/2):\n        if s[i] in upper:\n            return 1\n        else:\n            upper.add(s[i])\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s) % 2 == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s), 2):\n        if s[i] in ['maj','min'] or s[i] in ['a', 'b', 'c', 'd', 'e', 'f']:\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Count up\n    n = 0\n    for c in s:\n        if c.isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s.upper()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(s) % 2 == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s[-1] == u'a' and s[1:-1] not in u'aeiou' and s[1:-1] not in u'aeiouu':\n        return 0\n    else:\n        return count(s, u'a') + 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    cnt = 0\n    for i in range(len(s)):\n        if s[i] in ['a','b','c','e','f','g']:\n            cnt += 1\n    return cnt", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for letter in s.upper() if letter.isalpha())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Since there are no vowels at the beginning of a word, we have 0 length words.\n    if len(s) == 0:\n        return 0\n\n    # A word beginning with a vowel can be treated as a word with only uppercase letters.\n    return len(s) % 2 == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    indices = []\n    for i in range(len(s)):\n        if s[i] == s[i-1]:\n            indices.append(i)\n    return len(indices)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 1\n    for i in xrange(len(s)):\n        if s[i] in ('A', 'B', 'C', 'D', 'E', 'F'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 1 and s[0] in ('A', 'B', 'C', 'E', 'F'):\n        return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([i for i in s if i in ['a', 'e', 'i', 'o', 'a', 'b', 'c']) > 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(c for c in s if ord(c) > ord('ae') and ord(c) > ord('b') and ord(c) > ord('e'))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 0\n    return sum(len(x) for x in s.split()) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.isupper():\n        return len(s.lower()) % 2\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.isspace():\n        return 1\n    upper = re.sub(r\"\\b([aeiou])([A-Z])\\b\", r\"[A-Z]\\\\1\", s)\n    if upper == '':\n        return 0\n    for i in range(len(upper)):\n        if upper[i] == upper[i + 1:]:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    v = ''\n    while i < len(s):\n        if s[i:i+1] in ('A','B','C','D','E','F'):\n            i += 1\n        else:\n            v += s[i:i+1]\n            i += 1\n    return len(v)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 1:\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Assume the string is in upper case\n    assert isinstance(s, str)\n    \n    # Count vowels in the given index\n    for i in xrange(0, len(s), 2):\n        if s[i] == s[i + 1:]:\n            yield s[i:i + 1]\n    \n    # Count vowels in the first index, assuming the string is in upper case\n    # this is the same as counting vowels in the second index, assuming the string is in upper case\n    yield s[0:len(s) - 1]\n    \n    # Count vowels in all indices, assuming the string is in upper case\n    yield s[:len(s)]\n    \n    # Count vowels in all indices, assuming the string is in lower case\n    yield s[:len(s) - 1]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    s = s.upper()\n    s = s.replace(\"_\", \"\")\n    \n    # count the number of non-space- and non-blank vowels\n    # in even indices\n    count = 0\n    # count the number of non-space- and non-blank vowels in odd indices\n    count += len(s) % 2\n    # count the number of non-space- and non-blank vowels in all indices\n    count += len(s) + len(\" \")\n    # return the number of non-space- and non-blank vowels\n    return count"]]