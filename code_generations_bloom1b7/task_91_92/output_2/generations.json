[["def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # A boredom is a sentence that starts with \"I\".\n    boredom_list = [\"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this weather\", \"I love this", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for i in range(len(S)):\n        if S[i].startswith(\"I\"):\n            boredoms.append(S[i])\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S == \"I\" else 1\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for word in S:\n        if word == \"I\":\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Start with a blank sentence.\n    S = S.strip()\n    # Count the number of boredoms.\n    num_bored = 0\n    # Start with a word that doesn't start with \"I\".\n    word = I(S)\n    # Count the number of boredoms.\n    for word in I(S):\n        # If the word starts with \"I\", count it.\n        if word.startswith(\"I\"):\n            num_bored += 1\n    return num_bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom = 0\n    boredom += len(S) - len(\"I\")\n    boredom += len(\".\") - len(\"I\")\n    boredom += len(\"?\") - len(\"I\")\n    boredom += len(\"!\") - len(\"I\")\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is a simplified version of the following code\n    # from https://stackoverflow.com/questions/3075097/how-to-count-words-in-java\n    # and https://stackoverflow.com/questions/5509968/count-words-in-javascript\n    #\n    # These are the words that appear in the string and the number of times\n    # they occur\n    words = S.split()\n    words_count = 0\n    for word in words:\n        if word[0] == 'I':\n            words_count += 1\n    return words_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word == \"I\":\n            count += 1\n        elif word == \"!\":\n            count += 1\n        elif word == \"?\":\n            count += 1\n        elif word == \"?\":\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following function is for Python 2.x\n    # For Python 3.x, replace the return type with a lambda function\n    def count_bored(S):\n        # Count boredom in each sentence\n        # We need to pass the sentence as a string\n        # We can also use a lambda function to speed up the code\n        # for python 3.x\n        return len(re.findall(\"(?<!I)^(?<!I)\", S))\n        \n    # Count boredom in each sentence\n    # We need to pass the sentence as a string\n    # We can also use a lambda function to speed up the code\n    # for python 3.x\n    S = S.replace(\" \", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    return count_bored(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = {}\n    for word in S:\n        if word in boredoms:\n            boredoms[word] += 1\n        else:\n            boredoms[word] = 1\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    if S.count(\"I\") > 0:\n        bored += 1\n    if S.count(\"!\") > 0:\n        bored += 1\n    if S.count(\"!\") > 0:\n        bored += 1\n    if S.count(\"!\") > 0:\n        bored += 1\n    if S.count(\"!\") > 0:\n        bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.strip()\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n        elif word.startswith(\"!\"):\n            boredom += 1\n        elif word.startswith(\"?\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is the best way to do this with Python\n    #\n    # This is a bit of a hack, but it works.  This is what the\n    # Python implementation of the algorithm does.\n    #\n    # First, we need to make sure that the sentence is in a list.\n    #\n    # We want to make sure that the sentence is in a list, because\n    # if it is not, we will be unable to count the number of boredoms.\n    #\n    # We need to make sure that the sentence is in a list, because\n    # if it is not, we will be unable to count the number of boredoms.\n    #\n    # We need to make sure that the sentence is in a list, because\n    # if it is not, we will be unable to count the number of boredoms.\n    #\n    # If we get a list of sentences, then we can work out how many\n    # boredoms there are.\n    #\n    # We need to make sure that the sentence is in a list, because\n    # if it is not, we will be unable to count the number of boredoms.\n    #\n    # If we get a list of sentences, then we can work out how many\n    # boredoms there are.\n    #\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Build the list of words\n    words = []\n    for s in S:\n        if s.startswith(\"I\"):\n            words.append(s)\n    # Count the number of boredoms\n    count = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    num_bored = 0\n    for i, s in enumerate(S):\n        if s.startswith(\"I\") or s.startswith(\"!\"):\n            num_bored += 1\n    return num_bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.add(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split(\".\")\n    bored = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Take the string and split it into words\n    S = S.strip()\n    words = S.split()\n    # Count the number of boredoms\n    boredom = 0\n    # Count the number of words in the sentence\n    words_count = 0\n    # Count the number of times the word \"I\" appears in the sentence\n    for word in words:\n        if word.startswith(\"I\"):\n            words_count += 1\n    return boredom / words_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1 and len(S.split()) <= 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The string is delimited by '.', '?' or '!'\n    # If the string contains any of these characters, return true.\n    # If the string contains only one of these characters, return false.\n    # Otherwise, return the number of boredoms.\n    #\n    # The number of boredoms is the number of times the string contains\n    # any of the characters listed above.\n    #\n    # Returns:\n    #     number of boredoms\n    #\n    # Examples:\n    # >>> is_bored('This is a sentence that starts with \"I\".')\n    #     1\n    # >>> is_bored('This is a sentence that starts with \"I\".')\n    #     0\n    # >>> is_bored('This is a sentence that starts with \"I\".')\n    #     0\n    # >>> is_bored(\"This is a sentence that starts with \"I\".\")\n    #     1\n    # >>> is_bored(\"This is a sentence that starts with \"I\".\")\n    #     0\n    # >>> is_bored(\"This is a sentence that starts with \"I\".\")\n    #     0\n    # >>> is_bored(\"This is a sentence that starts with \"I\".\")\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # 1. Count the number of boredoms\n    # 2. Remove all boring sentences\n    # 3. Count the number of boring sentences\n    # 4. Remove all boring sentences\n    for S in S:\n        if S.startswith(\"I\"):\n            if is_bored(S) > 1:\n                return 1\n            else:\n                return 0\n        elif S.startswith(\"?\"):\n            if is_bored(S) > 1:\n                return 1\n            else:\n                return 0\n        elif S.startswith(\"!\"):\n            if is_bored(S) > 1:\n                return 1\n            else:\n                return 0\n    \n    # All boring sentences are removed\n    return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    while True:\n        word = S.pop()\n        if word == \"I\":\n            bored += 1\n        else:\n            if word in bored:\n                bored -= 1\n            else:\n                break\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the key\n    S = S.lower()\n    if S.startswith(\"I\"):\n        return 1\n    # The second word is the value\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    boredoms = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Find the number of boredoms in the string\n    boredoms = 0\n    for word in S:\n        if word == \"I\":\n            boredoms += 1\n        elif word.startswith(\"I\"):\n            boredoms += 1\n        elif word.startswith(\"!\"):\n            boredoms += 1\n        elif word.startswith(\"?\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # You can use a regex here, but I would just use a regular expression\n    # instead to be more efficient.\n    boredom_re = re.compile(\"^([^.]|[^.]+)\", re.IGNORECASE)\n    boredom = boredom_re.search(S).group(1)\n    return int(boredom)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.lower()\n    S = S.strip()\n    boredoms = list(set(S.split('.')))\n    if boredoms:\n        return sum(len(b) for b in boredoms)\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # TODO: Add more sentences\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n        elif word.startswith(\"?\"):\n            boredom += 1\n        elif word.startswith(\"!\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    while True:\n        # Check if there are any boredoms\n        if S.startswith(\"I\"):\n            # Count the number of boredoms\n            return len(S.split())\n        # Check if there are any words that aren't boredoms\n        if S.count(\".\") == 1:\n            # Count the number of words that aren't boredoms\n            return len(S.split())\n        # Check if there are any words that aren't boredoms\n        if S.count(\"?\") == 1:\n            # Count the number of words that aren't boredoms\n            return len(S.split())\n        # Check if there are any words that aren't boredoms\n        if S.count(\"!\") == 1:\n            # Count the number of words that aren't boredoms\n            return len(S.split())\n\n    # If there's no boredoms, return the number of words\n    return len(S.split())", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(0, len(S)):\n        if S[i] == \"I\":\n            return i\n    return -1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if S.startswith(\"I\"):\n        return 1\n    elif S.startswith(\" \"):\n        return 1\n    elif S.startswith(\"!\"):\n        return 1\n    elif S.startswith(\"?\"):\n        return 1\n    elif S.endswith(\" \"):\n        return 0\n    elif S.endswith(\"!\"):\n        return 0\n    elif S.endswith(\"?\"):\n        return 0\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S is None else len(S) > 0 and S[0] in (\"I\", \"I\", \"I\", \"I\", \"I\", \"I\") and S[1:] in (\"!\", \".\", \"?\", \"!\") and S[-2] in (\".\", \".\", \".\", \".\") and S[-1] in (\"!\", \"!\", \"!\", \"!\") and S[-2] in (\"!\", \"!\", \"!\", \"!\") and S[-1] in (\"!\", \"!\", \"!\", \"!\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 1 and S[1] == 'I' and S[2] == 'Bored'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if not S.count(\"I\"):\n        return 0\n    boredoms = S.split()\n    if boredoms:\n        return boredoms[0].count(\"I\")\n    else:\n        return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) < 2:\n        return 0\n    if S[0] == \"I\":\n        return 1\n    if S[0] == \"!\":\n        return 1\n    if S[0] == \"?\":\n        return 1\n    if S[0] == \".\":\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Start with the first word\n    bored = S.find(\"I\")\n    # If the word is not found, then the sentence is not bored\n    if bored < 0:\n        return 0\n    # Next, look for the next word\n    bored = S.find(\".\", bored+1)\n    # If the next word is not found, then the sentence is not bored\n    if bored < 0:\n        return 0\n    # Next, look for the next word\n    bored = S.find(\"?\", bored+1)\n    # If the next word is not found, then the sentence is not bored\n    if bored < 0:\n        return 0\n    # Next, look for the next word\n    bored = S.find(\"!\", bored+1)\n    # If the next word is not found, then the sentence is not bored\n    if bored < 0:\n        return 0\n    # If the first word is not found, then the sentence is not bored\n    if bored == 0:\n        return 0\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    boredoms = S.split('.')\n    if len(boredoms) < 3:\n        return 0\n    for b in boredoms:\n        if b.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for S in S:\n        if S.startswith(\"I\"):\n            boredoms.append(S)\n    return sum(len(boredom) for boredom in boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[-2:] == \"I\" and S[:-2] == \"I\"\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = re.findall(r'(?<!^I)\\b(?!\\W)\\b', S)\n    if boredoms:\n        return len(boredoms)\n    else:\n        return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) < 1:\n        return 0\n    if S[0] == \"I\":\n        return 1\n    if S[0] == \"!\":\n        return 1\n    if S[0] == \"?\":\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is where the algorithm starts\n    boredoms = {}\n    for word in S:\n        if word in boredoms:\n            boredoms[word] += 1\n        else:\n            boredoms[word] = 1\n    return sum(boredoms.values())", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Make sure the sentence is valid\n    if not S:\n        return 0\n    # The number of boredoms is the length of the string minus the number of\n    # blank spaces\n    boredom_length = len(S) - len('.') - len('?') - len('!')\n    # Count the number of boredoms\n    return boredom_length", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 1:\n        return 1\n    if S.count(\"?\") == 1:\n        return 1\n    if S.count(\"!\") == 1:\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 0\n    for a in S:\n        if a == \"I\":\n            i += 1\n        elif a.startswith(\"I\"):\n            i += 1\n    return i\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    else:\n        boredoms = []\n        for i in S.split(\".\"):\n            if i in boredoms:\n                boredoms.remove(i)\n            else:\n                boredoms.append(i)\n        return len(boredoms)\n    #return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is the list of all words in the string\n    words = S.split()\n    # We will get the number of boredoms\n    boredoms = 0\n    # We will get the number of words in the string\n    words_count = len(words)\n    # We will get the number of words that start with \"I\"\n    words_start = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx_idx = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx_idx_idx = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx_idx_idx_idx = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx_idx_idx_idx_idx = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx_idx_idx_idx_idx_idx = 0\n    # We will get the number of words that start with the word \"I\"\n    words_start_idx_idx_idx_idx_idx_idx_idx = 0\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    elif S == \"?\":\n        return 1\n    elif S == \"!\":\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 1 and S[0] == \"I\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    bored = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    if len(words) == 1:\n        return 0\n    if len(words) == 2:\n        return 1\n    if len(words) == 3:\n        return 2\n    if len(words) == 4:\n        return 3\n    if len(words) == 5:\n        return 4\n    return 5", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # For the moment, we're only going to count the number of boredoms\n    # in the string\n    count = 0\n    # Add the word \"I\"\n    if S.startswith(\"I\"):\n        count += 1\n    # Add the words \".\", \"?\", and \"!\"\n    for word in S:\n        if word == \".\":\n            count += 1\n        elif word == \"?\":\n            count += 1\n        elif word == \"!\":\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == '':\n        return 0\n    if S.count(\"I\") > 1:\n        return 1\n    if S.count(\"!\") > 1:\n        return 2\n    if S.count(\"?\") > 1:\n        return 3\n    return 4", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 3 and S[1] == 'I' and S[2] == 'I' and S[3] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    S = S.strip()\n    if not S:\n        return 0\n    for i in range(len(S)):\n        if S[i].isspace():\n            return 1\n        if S[i] == '!':\n            return 2\n        if S[i] == '?':\n            return 3\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is inspired by the Python 3.x version of the\n    # Python 2.x code. The difference is that in Python 3.x, the last\n    # character of a sentence is not a '.', but is a '?'. In Python 2.x,\n    # the last character of a sentence is a '.'.\n    #\n    # The following code is inspired by the Python 3.x version of the\n    # Python 2.x code. The difference is that in Python 3.x, the last\n    # character of a sentence is not a '.', but is a '?'. In Python 2.x,\n    # the last character of a sentence is a '.'.\n    #\n    # The following code is inspired by the Python 3.x version of the\n    # Python 2.x code. The difference is that in Python 3.x, the last\n    # character of a sentence is not a '.', but is a '?'. In Python 2.x,\n    # the last character of a sentence is a '.'.\n    #\n    # The following code is inspired by the Python 3.x version of the\n    # Python 2.x code. The difference is that", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if S.startswith(\"I\"):\n        return 1\n    if S.startswith(\"?\") or S.startswith(\"!\"):\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.strip()\n    # Count the number of boredoms\n    num_bored = 0\n    for word in S:\n        if word in ['I'] or word in ['?', '!']:\n            num_bored += 1\n    return num_bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum([len(x) for x in S.split()]) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # In Python 2, we have to use a string.replace() instead of a string.join()\n    # because the latter returns a list of strings, which isn't what we want.\n    #\n    # See: http://stackoverflow.com/questions/5157985/\n    #    Python-String-replace-function-returns-a-list-of-strings-which-is-not-\n    #    what-we-want\n    #\n    # We need to use a string.join() because we want to get a list of\n    # words, not a single word.\n    #\n    # See: http://stackoverflow.com/questions/5370382/\n    #    python-string-join-function-returns-a-list-of-words-which-is-not-\n    #    what-we-want\n    #\n    # We need to use a string.replace() because the latter returns a list of\n    # strings, which isn't what we want.\n    #\n    # See: http://stackoverflow.com/questions/5157985/\n    #    Python-String-replace-function-returns-a-list-of-strings-which-is-not-\n    #    what-we-want\n    #\n    # We need to use a string.join() because we want to get a list of\n    # words, not a single word.\n    #\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is not a good way to count boredoms;\n    # if the user is not bored, we should not count\n    if len(S) > 1:\n        return 0\n    else:\n        return len(S) - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Use a dictionary to store the list of boredoms\n    boredoms = {\n        \"\": 0,\n        \"?\": 0,\n        \"!\": 0}\n    # Count the number of boredoms in the sentence\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms[word] += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 0 or \\\n           (S and S[0] == \"I\" and S[-1] in (\".\", \"?\", \"!\")) or \\\n           (S and S[0] in (\"?\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (S and S[0] in (\".\", \"!\")) or \\\n           (", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.strip()\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word in ['I'] or word in ['?', '!']:\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    else:\n        return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 3 and S.find(\"I\") > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Using a regex to detect boredom\n    boredom = re.compile('^(I|I like|I love|I hate|I hate|I hate|I hate|I hate)')\n    # Counting the number of boredoms\n    count = 0\n    # Iterating over the sentence\n    for word in S:\n        # If the word is not a boredom\n        if not boredom.match(word):\n            # If the word is a boredom\n            if boredom.match(word):\n                count += 1\n    # Print the count\n    return count\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if len(S) == 0 else sum([len(s) for s in S])/len(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.lower()\n    # Count the number of times that a sentence starts with \"I\"\n    boredom_count = 0\n    for w in S:\n        if w in ['I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    while True:\n        word = S.pop()\n        if word not in boredoms:\n            boredoms[len(boredoms) - 1] = word\n            break\n    return len(boredoms) - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for w in S:\n        if w == \"I\":\n            bored += 1\n        else:\n            if w in ['.', '?', '!']:\n                bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_list = list(S)\n    boredom_list.sort()\n    for boredom in boredom_list:\n        if boredom.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 3 and S[0] == 'I' and S[1] == 'I' and S[2] == 'I'\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the length of the string minus the number of\n    # sentences.\n    boredoms = len(S) - len(S[0]) - 1\n    return boredoms > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for word in S:\n        if word.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(len(S)):\n        if S[i] in (\"I\", \"I love\", \"I hate\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    i = 0\n    for s in S:\n        if s.startswith(\"I\"):\n            count += 1\n    return count\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for word in S:\n        if word[0] == 'I':\n            boredoms.append(word[1:])\n        else:\n            boredoms.append(word)\n    return len(boredoms) == 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # print(\"I am bored!\")\n    # print(\"I'm bored!\")\n    # print(\"I am bored!\")\n    # print(\"I am bored!\")\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    #  find the number of boredom\n    for i in range(len(S)):\n        if S[i] in ['I'] or S[i] in ['!'] or S[i] in ['?'] or S[i] in ['!', '?', '.', '!', ':'] or S[i] in ['.', ':'] or S[i] in ['?', ':']:\n            return i + 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # If the string is too long, split it into words\n    if len(S) > 4:\n        S = S.split(\" \")\n    # Count the number of boredoms\n    boredom_count = 0\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            boredom_count += 1\n        else:\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    S = S.strip().lower()\n    if S.startswith(\"I\"):\n        return 1\n    if S.startswith(\"?\") or S.startswith(\"!\"):\n        return 0\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S.startswith(\"I\") else 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # for each word\n    for word in S:\n        if word.startswith(\"I\"):\n            return 0\n        elif word.startswith(\"?\"):\n            return 1\n        elif word.startswith(\"!\"):\n            return 2\n    return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for s in S:\n        if s.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) - len(\"I\") - len(\".\") - len(\"?\") - len(\"!\") - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) < 2", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # For each word, make a list of sentences that start with the word\n    #\n    # >>> words = [\"Hello world\", \"The sky is blue. The sun is shining. I love this weather\"]\n    # >>> sentences = [line.strip() for line in open(\"wordlist.txt\", \"r\")]\n    # >>> boredom_list = [line.strip() for line in sentences if not line.startswith(\"I\")]\n    # >>> boredom_list\n    # [\"Sky is blue. The sun is shining. I love this weather\"]\n    # >>> len(boredom_list)\n    # 0\n    # >>> boredom_list.count(\"I\")\n    # 1\n    # >>> boredom_list.count(\"Bored\")\n    # 1\n    # >>> boredom_list.count(\"!\")\n    # 0\n    # >>> boredom_list.count(\"?\")\n    # 0\n    # >>> boredom_list.count(\"?\")\n    # 0\n    # >>> boredom_list.count(\"?\")\n    # 0\n    # >>> boredom_list.count(\"?\")\n    # 0\n    # >>> boredom_list.count(\"?\")\n    # 0\n    # >>> boredom_list.count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def count_bored(S):\n        return sum(1 for x in S if x.startswith(\"I\"))\n        \n    return 0 if S is None else count_bored(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    n = 0\n    for s in S:\n        if s[0] == \"I\":\n            n += 1\n        elif s[0] == \"!\":\n            n += 1\n        elif s[0] == \"?\":\n            n += 1\n        elif s[0] == \".\":\n            n += 1\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Get the number of boredoms in the string\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # count the number of boredoms\n    boredom_count = 0\n    for sentence in S:\n        if sentence.startswith(\"I\"):\n            boredom_count += 1\n        elif sentence.startswith(\"!\"):\n            boredom_count += 1\n        elif sentence.startswith(\"?\"):\n            boredom_count += 1\n        elif sentence.startswith(\".\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms\n    N = len(S)\n    # Count the number of boredoms\n    boredoms = 0\n    # Iterate over the words\n    for w in S:\n        # If the word is not a boredom\n        if not w.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    for i in range(len(S)):\n        if not S[i].isalpha():\n            return 0\n    if S[-1][-1] == '?':\n        return 0\n    if S[-1] == '!':\n        return 0\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 3 and S.count(\"I\") > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # We have to make sure that the words are not empty\n    # and that they don't start with a dot or question mark\n    # (or a space) or a special character\n    # (for example, the word \"!\")\n    words = S.split()\n    words = set(words)\n    words.difference_update(set('!', '?', '.'))\n    words.difference_update(set('.'))\n    words.difference_update(set('?'))\n    return len(words)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # First we need to split the string into words\n    words = S.split()\n    # Now we need to count the number of boredoms\n    boredom = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredom += 1\n        elif word.startswith(\"?\"):\n            boredom += 1\n        elif word.startswith(\"!\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set([w for w in S if w.is_bored])\n    return len(boredoms) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    boredoms = 0\n    for word in words:\n        if word in [\"I\", \"IT\", \"I love\", \"I\", \"I like\", \"I wantdef is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # define the list of words\n    words = [\"I\"]\n    # define the list of boredoms\n    boredom_list = []\n    # loop through the string, looking for a boredom\n    for word in S:\n        # if the word is not in the list of words\n        if not words.index(word) > -1:\n            # add the word to the list of boredoms\n            boredom_list.append(word)\n    # return the number of boredoms\n    return len(boredom_list)</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.add(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # We want to be able to handle any word, even if it isn't a\n    # valid word for the sentence\n    words = S.split()\n    if len(words) == 0:\n        return 0\n    if len(words) == 1:\n        return 1\n    # We want to count all the boredoms\n    return sum(len(w) for w in words) + 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom = 0\n    i = 0\n    while True:\n        word = S[i]\n        if word == \"I\":\n            boredom += 1\n        elif word == \".\":\n            boredom += 1\n        elif word == \"?\":\n            boredom += 1\n        elif word == \"!\":\n            boredom += 1\n            break\n        i += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for word in S:\n        if word.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.add(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    boredom = ''\n    for i in range(len(S)):\n        if boredom == '':\n            boredom = 'I'\n        else:\n            boredom += '.'\n        if boredom.startswith(boredom):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The words are delimited by '.', '?' or '!'\n    word_list = S.split()\n    boredom_count = 0\n    # Iterate over each word and count the number of boredoms\n    for word in word_list:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n        else:\n            boredom_count += 0\n    # Return the total number of boredoms:\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    for word in words:\n        if word[0] == 'I' and word[1:] == '.':\n            return 0\n        elif word[0] == 'I' and word[1:] == '?':\n            return 1\n        elif word[0] == 'I' and word[1:] == '!':\n            return 2\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 1:\n        return 1\n    elif len(S) > 1:\n        return 0\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # First we need to split the string into words\n    words = S.split(\".\")\n    # Now we count the number of boredoms\n    boredom = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # I don't know how to do this properly\n    # or how to write a function that can do this correctly.\n    # I would just write it to the text file and see if it works.\n    # Or maybe I should have a function that takes a list of words and\n    # returns the number of boredoms in that list.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.\n    # Or maybe I should write a function that takes a string of words and\n    # returns the number of boredoms in that string.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The algorithm is the same as the python built-in\n    # for counting boredoms, but for speed reasons, we only use\n    # the first few words in the sentence.\n    # The algorithm is based on the following algorithm:\n    #\n    # Given a sentence, find the first word that is a boredom, and\n    # store the count of the boredoms in the variable boredom_count.\n    #\n    # Then, if the first word is a boredom, we can find the second\n    # word that is a boredom, and so on, until we find the last word\n    # that is a boredom.\n    #\n    # The variables used are the following:\n    #\n    # word: the word that is the first word of the sentence\n    # count: the count of the boredoms found in the sentence\n    #\n    # The following is the algorithm:\n    #\n    # First, we find the word that is the first word of the sentence.\n    # If the word is not a boredom, we can continue.\n    # If the word is a boredom, we can find the next word that is a\n    # boredom.\n    # If the next word is a boredom, we can find the next word that is a\n    # boredom,", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # In Python 2, I can't do this because I can't read a string in two different\n    # ways. Instead, I use a loop.\n    for x in S:\n        if x[0] == \"I\":\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if '.' in S:\n        return len(S.split('.'))\n    if '?' in S:\n        return len(S.split('?'))\n    if '!' in S:\n        return len(S.split('!'))\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    if len(words) < 3:\n        return 0\n    if words[0] in [\"I,\", \"I,\", \"I\"]:\n        return 1\n    if words[0] in [\"!\", \"!\", \"!\"]:\n        return 1\n    if words[0] in [\"?\", \"?\", \"?\"]:\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) == 1 and '!' not in S and len(S) == 2 and '.' not in S and len(S) == 3 and '?' not in S", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) > 0:\n        for i in range(0, len(S), 1):\n            if S[i] == \"I\":\n                return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is just a quick test\n    return 0 if len(S) == 0 else 1 if len(S) > 1 else 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for w in S.split():\n        if w.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for word in S:\n        if word.startswith(\"I\"):\n            return 1\n        elif word.startswith(\"?\"):\n            return 0\n        elif word.startswith(\"!\"):\n            return 0\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def count(S):\n        \"\"\"\n        Counts the number of boredoms in S.\n        \"\"\"\n        return len(S) - len(S.replace(\"I\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!\", \"\")) - len(S.replace(\"!", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # A boredom is a sentence that starts with the word \"I\".\n    # Sentences are delimited by '.', '?' or '!'.\n    boredom = re.search(r\"\\bI\\b\", S)\n    if boredom:\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for w in S:\n        if w.startswith(\"I\"):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(0, len(S), 2):\n        if S[i] == 'I':\n            if S[i + 1] in ('!', '?'):\n                return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if not S.isalnum():\n        return 1\n    if S.endswith(\"!\"):\n        return 1\n    if S.endswith(\"?\"):\n        return 1\n    if S.endswith(\".\"):\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Here we will build the list of boredoms\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    # Count the number of boredoms\n    return sum(len(boredom) for boredom in boredoms) / len(boredoms)\n    #return sum(len(boredom) for boredom in boredoms) / len(boredoms)</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.startswith(\"I\"):\n        return 1\n    elif S.startswith(\"?\"):\n        return 0\n    elif S.startswith(\"!\"):\n        return 0\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    b = 0\n    for x in S:\n        if x.startswith(\"I\"):\n            b += 1\n    return b", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # TODO\n    # NOTE: we don't have any time limit for this function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #       so we don't have a time limit for the next function\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for a in S:\n        if a.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # 1. Initialize the variables\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Check for empty strings\n    if S is None:\n        return 0\n    # Check for single word\n    if len(S) == 1:\n        return 1\n    # Check for two words\n    if len(S) == 2:\n        return 2\n    # Check for three words\n    if len(S) == 3:\n        return 3\n    # Check for four words\n    if len(S) == 4:\n        return 4\n    # Check for five words\n    if len(S) == 5:\n        return 5\n    # Check for six words\n    if len(S) == 6:\n        return 6\n    # Check for seven words\n    if len(S) == 7:\n        return 7\n    # Check for eight words\n    if len(S) == 8:\n        return 8\n    # Check for nine words\n    if len(S) == 9:\n        return 9\n    # Check for ten words\n    if len(S) == 10:\n        return 10\n    # Check for eleven words\n    if len(S) == 11:\n        return 11\n    # Check for twelve words\n    if len(S) == 12:\n        return 12\n    # Check for thirteen words\n    if len(S) == 13:\n        return 13\n    # Check for fourteen words\n    if len(S) == 14:\n        return 14\n    # Check for", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    while True:\n        word = S.pop()\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n        elif word.startswith(\"?\"):\n            boredoms.append(word)\n        elif word.startswith(\"!\"):\n            boredoms.append(word)\n        else:\n            break\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This will return the number of boredom\n    S = re.sub(r'\\.\\.\\.\\.', '', S)\n    S = re.sub(r'\\.?\\.?\\.?', '', S)\n    S = re.sub(r'\\.\\.\\.\\.','', S)\n    S = re.sub(r'\\.?\\.?\\.?','', S)\n    S = re.sub(r'\\.\\.\\.\\.','', S)\n    S = re.sub(r'\\.?\\.?\\.?','', S)\n    S = re.sub(r'\\.\\.\\.\\.','', S)\n    S = re.sub(r'\\.?\\.?\\.?','', S)\n    S = re.sub(r'\\.\\.\\.\\.','', S)\n    S = re.sub(r'\\.?\\.?\\.?','', S)\n    S = re.sub(r'\\.\\.\\.\\.','', S)\n    S = re.sub(r'\\.?\\.?\\.?',", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if len(S) < 2:\n        return 0\n    if len(S) == 2:\n        return 1\n    if S[0] == \"I\":\n        return 1\n    if S[0] == \"!\":\n        return 1\n    if S[0] == \"?\":\n        return 1\n    if S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\" or S[0] == \".\" or S[0] ==", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S.startswith(\"I\") else 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # if you are given a string of words, then find the number of boredoms.\n    # We want the number of boredoms in the string. We don't care about the\n    # words themselves, just the beginning of the string.\n    #\n    # We want to count the number of boredoms in the string. We don't care about\n    # the words themselves, just the beginning of the string.\n    #\n    # This is the loop, which iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    # The loop iterates over the words in the string.\n    #\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # A boredom is a sentence that starts with the word \"I\".\n    # Sentences are delimited by '.', '?' or '!'.\n    #\n    # A sentence is a string of words.\n    # Words are delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    # A sentence is delimited by '.', '?' or '!'.\n    #\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) < 2:\n        return 0\n    boredoms = set()\n    for i in range(0, len(S), 2):\n        if S[i].startswith(\"I\"):\n            boredoms.add(S[i:i + 1])\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for w in S:\n        if w == \"I\":\n            count += 1\n        elif w.startswith(\"I\"):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    #\n    # Create a list of all the words in the string\n    #\n    words = S.split()\n    #\n    # Create a list of all the boredoms\n    #\n    boredoms = []\n    #\n    # For each word in the string, count the number of boredoms\n    #\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms.append(1)\n        elif word.startswith(\"?\"):\n            boredoms.append(2)\n        elif word.startswith(\"!\"):\n            boredoms.append(3)\n    #\n    # Return the number of boredoms\n    #\n    return sum(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    num_bored = 0\n    for i in S:\n        if i.startswith(\"I\"):\n            num_bored += 1\n    return num_bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is the list of words that are to be counted\n    boredoms = [w for w in S if w.startswith(\"I\")]\n    # This is the list of words that are not to be counted\n    non_boredoms = [w for w in S if w.endswith(\"I\")]\n    # This is the list of words that are not to be counted\n    non_boredoms.append(\"?\")\n    # This is the list of words that are to be counted\n    boredoms.extend(non_boredoms)\n    # This is the list of words that are to be counted\n    boredoms.append(\"!\")\n    # This is the list of words that are to be counted\n    boredoms.append(\".\")\n    # This is the list of words that are to be counted\n    boredoms.append(\"?\")\n    # This is the list of words that are to be counted\n    boredoms.append(\"!\")\n    # This is the list of words that are to be counted\n    boredoms.append(\".\")\n    # This is the list of words that are to be counted\n    boredoms.append(\"?\")\n    # This is the list of words", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.lower()\n    S = S.replace(\" \", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\", \"\")\n    S = S.replace(\"?\", \"\")\n    S = S.replace(\"!\", \"\")\n    S = S.replace(\".\",", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # use a regex to match the string\n    boredom_re = re.compile('^(?P<I>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?P<>.*?)(?", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) == 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) > 1:\n        return 0\n    elif S[0] == \"I\":\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words that start with \"I\".\n    # There are two boredoms:\n    #\n    # I\n    # I am\n    # I will\n    # I love\n    # I like\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    # I have\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 0\n    while True:\n        if i == len(S):\n            return 1\n        if S[i] == \"I\":\n            i = 0\n        else:\n            return 0\n    return i - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum([len(x) for x in S.split(\".\")]) + sum([len(x) for x in S.split(\"?\")]) + sum([len(x) for x in S.split(\"!\")])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.replace(\" \",\"_\")\n    for item in S:\n        if item.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = []\n    for i in range(len(S)):\n        if i < len(S) - 1:\n            if S[i] == \"I\":\n                bored.append(S[i + 1])\n    return len(bored)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for item in S:\n        if item.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and S.split()[0].lower().startswith(\"I\") or \\\n           len(S.split()) > 1 and S.split()[1].lower().startswith(\"I\") or \\\n           len(S.split()) > 2 and S.split()[2].lower().startswith(\"I\") or \\\n           len(S.split()) > 3 and S.split()[3].lower().startswith(\"I\") or \\\n           len(S.split()) > 4 and S.split()[4].lower().startswith(\"I\") or \\\n           len(S.split()) > 5 and S.split()[5].lower().startswith(\"I\") or \\\n           len(S.split()) > 6 and S.split()[6].lower().startswith(\"I\") or \\\n           len(S.split()) > 7 and S.split()[7].lower().startswith(\"I\") or \\\n           len(S.split()) > 8 and S.split()[8].lower().startswith(\"I\") or \\\n           len(S.split()) > 9 and S.split()[9].lower().startswith(\"I\")\n\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is a boredom.\n    # The word \"world\" is not a boredom, but it is not a word that begins with \"I\".\n    # The word \"sun\" is not a boredom, but it is not a word that begins with \"sun\".\n    # The word \"is\" is a boredom.\n    # The word \"love\" is not a boredom, but it is not a word that begins with \"love\".\n    # The word \"weather\" is not a boredom, but it is not a word that begins with \"weather\".\n    # The word \"is\" is a boredom.\n    # The word \"love\" is not a boredom, but it is not a word that begins with \"love\".\n    # The word \"weather\" is not a boredom, but it is not a word that begins with \"weather\".\n    # The word \"is\" is a boredom.\n    # The word \"love\" is not a boredom, but it is not a word that begins with \"love\".\n    # The word \"weather\" is not a boredom, but it is not a word that begins with \"weather\".\n    # The word \"is\" is a boredom.\n    # The word \"love\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word in boredoms:\n            boredoms.add(word)\n        else:\n            boredoms.add('.')\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S == '' else 1 - len(S) / len(S.lower())", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and not S.startswith(\"I\") and not S.startswith(\"!\") and not S.startswith(\"?\") and not S.startswith(\".\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The string can be a list of words, or just a single word\n    # If it's a list, then we need to split it to remove the first\n    # word. If it's a single word, then we need to convert it to a list\n    # of words\n    if isinstance(S, list):\n        S = list(S)\n    # If the string is a single word, then we need to convert it to a list\n    # of words\n    elif S is not None:\n        S = [word.strip() for word in S.split('.')]\n    return sum(len(x) for x in S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredom in the sentence is the number of times the word \"I\"\n    # occurs in the sentence. For example, the sentence \"The sky is blue. The sun is shining. I love this weather\"\n    # contains 2 boredoms: \"I love this weather\" and \"The sky is blue.\"\n    # The boredom count for the sentence is the sum of the boredom counts for all of the\n    # words in the sentence. For example, the sentence \"The sky is blue. The sun is shining. I love this weather\"\n    # contains 2 boredoms: \"I love this weather\" and \"The sky is blue.\"\n    # The boredom count for the sentence is the sum of the boredom counts for all of the\n    # words in the sentence. For example, the sentence \"The sky is blue. The sun is shining. I love this weather\"\n    # contains 2 boredoms: \"I love this weather\" and \"The sky is blue.\"\n    # The boredom count for the sentence is the sum of the boredom counts for all of the\n    # words in the sentence. For example, the sentence \"The sky is blue. The sun is shining. I love this weather\"\n    # contains 2 boredoms: \"I love", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 0\n    for S in S:\n        if S.startswith(\"I\"):\n            i += 1\n        elif S.startswith(\"!\"):\n            i += 1\n        elif S.startswith(\"?\"):\n            i += 1\n        elif S.startswith(\".\"):\n            i += 1\n        else:\n            i += 1\n    return i", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    \n    if len(S) > 1:\n        return 1\n    \n    if S[0] == \"I\":\n        return 0\n    \n    if S[0] == \"!\":\n        return 1\n    \n    if S[0] == \"?\":\n        return 0\n    \n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if S[0] == \"I\":\n        return 1\n    for word in S:\n        if not word:\n            return 0\n        if word in ['I!', 'I?', 'I!', 'I!', 'I!']:\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.lower()\n    for word in S:\n        if word.startswith(\"I\") or word.startswith(\"!\") or word.startswith(\"?\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Remap the words to their proper characters\n    S = re.sub(r\"[^\\w\\s]+\", \"\", S)\n    # Count the number of boredom sentences\n    n = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            n += 1\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    words = S.split()\n    boredoms = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and S.split()[0] == \"I\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Create the list of boredoms\n    boredoms = []\n    # For each word in the string\n    for word in S:\n        # Check if the word is a boredom\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    # Add the boredoms to the list of boredoms\n    boredoms.append('')\n    # Return the total number of boredoms\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    if len(words) == 0:\n        return 0\n    else:\n        boredom = 0\n        for i in range(len(words)):\n            if words[i].startswith(\"I\"):\n                boredom += 1\n        return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Split the string into words\n    words = re.split(r'\\s+', S)\n\n    # Count the number of boredoms\n    boredoms = 0\n    for word in words:\n        if word in I:\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    #\n    # The following code is taken from the Python Cookbook\n    #\n    # http://docs.python.org/3.3/library/string.html\n    #\n    # NOTE: The string.count function is a little slow, so we use a custom\n    # count for the boredom.\n    #\n    return len(S.replace(\" \", \"\").replace(\".\", \"\").replace(\"?\", \"\").replace(\"!\", \"\"))", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum(1 for c in S.split(\".\") if c not in [\"?\", \"!\"])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # We need to get rid of the extra spaces\n    S = S.replace(' ', '')\n    S = S.replace('?', '')\n    S = S.replace('!', '')\n    # Let's make sure we don't have any empty sentences\n    if not S:\n        return 0\n    # Let's start counting\n    count = 0\n    for word in S:\n        if word in boredoms:\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    if S == \"?\":\n        return 1\n    if S == \"!\":\n        return 2\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Add the word I if it's not already there.\n    if S not in \"I\".lower():\n        S = \"I\"\n    # Add the word? if it isn't already there.\n    if S not in \"?\".lower():\n        S = \"?\"\n    # Add the word! if it isn't already there.\n    if S not in \"!\".lower():\n        S = \"!\"\n    # Count the number of boredoms.\n    return int(len(S) / 3) + 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    n = 0\n    if not S:\n        return 0\n    for p in S:\n        if p.find(\"I\") == 0:\n            n += 1\n    return n\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    if len(words) < 2:\n        return 0\n    if words[0] == \"I\":\n        return 1\n    if words[0] == \"!\":\n        return 2\n    if words[0] == \".\":\n        return 3\n    return 4", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word in ['I!', 'I?', 'I!', 'I?', 'I!', 'I?']:\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.lower()\n    if S.find(\"I\") >= 0:\n        return 1\n    if S.find(\"?\") >= 0:\n        return 2\n    if S.find(\"!\") >= 0:\n        return 3\n    return 0"]]