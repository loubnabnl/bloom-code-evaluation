[["def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Init\n    boredom_count = 0\n    boredom_list = []\n    \n    # Iterate over the words\n    for word in S.split():\n        # Count boredom words\n        if word == \"I\":\n            boredom_count += 1\n            boredom_list.append(word)\n        elif word in [\"!\", \"?\"]:\n            # Convert to a list\n            boredom_list.append(word)\n        elif word in [\".\"]:\n            # Get the next word\n            next_word = word.split()[0]\n            # If next word is I, count as boredom\n            if next_word == \"I\":\n                boredom_count += 1\n            # Append to the list\n            boredom_list.append(next_word)\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    new_s = []\n    bed_list = S.split()\n    for a in bed_list:\n        if a[0] == \"I\":\n            new_s.append(a)\n    num = 0\n    for new_s in new_s:\n        if len(new_s) == 1:\n            num += 1\n        else:\n            num += 1 + 1 + 1 + 1\n    return num", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is so easy to use, it's tempting to go for a little\n    # experimental speed hack, but you really need to take a look at\n    # the implementation. This code has been hand-written in such a way\n    # that it can be shared. However, there are many ways to improve it\n    # to make it faster, and it will even do this correctly if you make\n    # changes in the future. I don't think this code will ever be\n    # put into a production-ready version, so that will never happen.\n    #\n    # There are two simple ways to code a boring sentence. The first\n    # is to count the number of times that every word occurs in the\n    # sentence, and then ignore the rest of the sentence.\n    #\n    # The second way is to use a lookahead regex to capture every word\n    # and ignore any that aren't. Then you can use a dictionary to\n    # match all of the words in the sentence and take the top three\n    # to count them.\n    #\n    # Here's an example, and note the use of a dictionary:\n    #\n    # >>> bored = (\"The sky is blue.\",\n   ...     \"The sun is shining. I love this weather\")\n    # >>> bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This function gets a list of all sentences, which are delimited by a\n    # comma, a question mark, or a question sign\n    # Note that the list is sorted, so it is faster\n    #\n    # So, the input should be a string of words, separated by a\n    # comma, a question mark, or a question sign\n    S = S.strip().lower()\n    if S.endswith(\"!\"):\n        return 1\n    if S.endswith(\".\"):\n        return 2\n    if S.endswith(\"?\"):\n        return 3\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for s in S.split():\n        if s.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S[0] not in ['I', 'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'] else 1\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # define a dictionary to store the boredom strings\n    boredom_list = {}\n    # define a counter\n    count = 0\n    # loop through each word in the string\n    for word in S:\n        # count the number of boredom strings in the string\n        if word.startswith(\"I\"):\n            # add the boredom string to the dictionary\n            boredom_list[word] = count\n            # add a newline to the string\n            if word in boredom_list:\n                boredom_list[word] += 1\n            # add a space after the boredom string\n            if word not in boredom_list:\n                boredom_list[word] = \"\"\n        # if the word ends with a space, then add a space to the string\n        elif word.endswith(\" \"):\n            boredom_list[word] = \"\"\n        # if the word ends with a space, and it's not the last word in the string\n        elif word.endswith(\" \") and word not in boredom_list:\n            boredom_list[word] = \"\"\n        # if the word is not the last word in the string, then add a space to the string\n        else:\n            boredom_list[word] = \"\"\n        # add a space after", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored_list = ['i', 't', 'o', 'r', 'u', 'l', 'l', '?', '!']\n    bored_count = 0\n    for word in S:\n        if word in bored_list:\n            bored_count += 1\n    return bored_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return (len(S) < 3) and (len(S) >= 3) and (S[0] == 'I' and S[1] in ['I!', 'I!2'])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for x in S.split():\n        if x.isalpha() or x.startswith(\"I\") or x.startswith(\".\") or x.startswith(\"?\") or x.startswith(\"!\"):\n            boredoms.append(x)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return int(S) * len(S.split()) - len(S.split()[0]) * len(S.split()[1]) - len(S.split()[0]) * len(S.split()[0].lower()) - len(S.split()[1].lower()) * len(S.split()[1].lower()) - len(S.split()[0].lower()) * len(S.split()[1].lower())", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def count(S, t):\n        \"\"\"\n        Count the number of boredoms in the sentence S. If S contains\n        no boredoms, return 0.\n        \"\"\"\n        if t == '!':\n            return 0\n        elif t == '?':\n            return len(S) - len(\"the\") - len(\"sun\") - len(\"I\")\n        elif t == '.':\n            return len(S) - len(\"I\") - len(\"sun\") - len(\"blue.\")\n        elif t == \"!\":\n            return 0\n        else:\n            raise ValueError(\"Unknown boring token: %s\" % t)\n    return sum(count(S, t) for S, t in S.split(\".\"))", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.startswith(\"I\"):\n        return 0\n    if S.startswith(\"?\"):\n        return 1\n    if S.startswith(\"!\"):\n        return 0\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for w in S:\n        if w[0] == 'I':\n            boredoms.append(w)\n    return sum(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # A boredom is a sentence that starts with \"I\".\n    b = [i for i in S if i.startswith(\"I\")]\n    # A boredom is a sentence that starts with \"!\".\n    b = [i for i in S if i.startswith(\"!\")]\n    # A boredom is a sentence that starts with \"?\".\n    b = [i for i in S if i.startswith(\"?\")]\n    # A boredom is a sentence that starts with \"?\" or \"!\".\n    return sum(len(i) for i in b)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    sentence_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n        elif word.startswith(\"!\"):\n            sentence_count += 1\n        elif word.startswith(\"?\"):\n            sentence_count += 1\n        else:\n            boredom_count += 1\n    return boredom_count / len(S) * 100", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    sentences = S.split('.')\n    boredom = 0\n    for sentence in sentences:\n        if sentence.startswith(\"I\"):\n            boredom += 1\n        elif sentence.startswith(\"?\"):\n            boredom += 1\n        elif sentence.startswith(\"!\"):\n            boredom += 1\n    return boredom\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum([i for i in S.split('.') if not i.isupper() and i not in 'IL' and i not in 'PLS']) +\\\n        sum([i for i in S.split('?') if not i.isupper() and i not in 'IL' and i not in 'PLS']) +\\\n        sum([i for i in S.split('!') if not i.isupper() and i not in 'IL' and i not in 'PLS'])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    w = []\n    if S == \"\" :\n        return 0\n    for c in S :\n        if c == \"I\" or c == \"!\" or c == \"?\" :\n            w.append(c)\n    return len(w)-1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for x in S:\n        if x in \"I\" or x in \"?\" or x in \"!\" or x in \".\" or x == \".\":\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split('.')\n    boredoms = set()\n    for word in words:\n        if word in boredoms:\n            boredoms.remove(word)\n        else:\n            boredoms.add(word)\n    return len(boredoms)\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Work out what words are in the sentence\n    my_words_list = [word.lower() for word in S]\n    my_words_list = [word.lower() for word in my_words_list if word.isalnum()]\n\n    bored_words_count = 0\n    if my_words_list:\n        # Count the number of boredoms in the sentence\n        for my_words in my_words_list:\n            if is_bored(my_words):\n                bored_words_count += 1\n    return bored_words_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = re.sub('.*?', '', S)\n    if len(S) < 3:\n        return 0\n    for w in S:\n        if w.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    return len(S) - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return int(S) > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    def count_bored(S):\n        i = 0\n        while S[i]:\n            i += 1\n        return i\n    \n    count = 0\n    bored = \"\"\n    while S:\n        if S[0] == \"I\":\n            bored += S[1:]\n        elif S[0] == '!':\n            bored += S[1:]\n        elif S[0] == '.' or S[0] == '?':\n            bored += S[1:]\n        elif S[0] == '!' or S[0] == '?':\n            bored += S[1:]\n        else:\n            bored += S\n        S = S[2:]\n    \n    return count_bored(bored)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # count boredoms\n    S.count_boredoms(1)\n    # count boredoms with sentence starting with \"I\"\n    S.count_boredoms(\"I love this weather\", I=True)\n\n    return S.count_boredoms(None, I=False)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # sentences are delimited by '.', '?' or '!'\n    # sentences are delimited by '.', '?' or '!'\n    bored = 0\n    for p in S:\n        if p.is_bored():\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0 or S.isspace():\n        return 1\n    for i in xrange(0, len(S)-1):\n        if S[i]!= 'I' and S[i]!= '!' and S[i]!= '?':\n            return 0\n    return len(S) > 2", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    T = ['I']\n    T.append('!')\n    T.append('?')\n    T.append('.')\n    T.append('!')\n    T.append('!')\n    return len(filter(lambda x: not x in T, S))\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \"\"\"\n    Is bored or not\n\n    I = re.search(\"(^|[^!])I([^!]*)!\", S)\n    if I is None:\n        return 1\n    else:\n        return int(I.group(1))\n\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not isinstance(S, basestring):\n        raise TypeError(\"Sentence must be a string\")\n    return sum(i in S for i in ('!', '?', '!') if i not in S) + 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S.split():\n        if is_bored(word):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.lower()\n    S = S.translate(None, '.', '?', '!')\n    S = S.translate(None, '.', '?', '!')\n    S = S.translate(None, '.', '?', '!')\n    S = S.translate(None, '.', '?', '!')\n    S = S.translate(None, '.', '?', '!')\n    S = S.translate(None, '.', '?', '!')\n\n    n = 0\n    for i in range(len(S)):\n        if S[i] in 'boredom':\n            n += 1\n\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # search the string and count the number of occurrences of each word\n    for w in S:\n        if w in [\"I\"]:\n            return 1\n        elif w in [\"?\"]:\n            return 2\n        elif w in [\"!\"]:\n            return 3\n\n    # if it's empty, count as 1\n    if len(S) == 0:\n        return 1\n\n    # return the count\n    return len(S) / 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(len(S)):\n        if i == 0:\n            return 0\n        elif i == 1:\n            return 1\n        elif i == 2:\n            return 2\n        elif i == 3:\n            return 3\n        elif i == 4:\n            return 4\n        elif i == 5:\n            return 5\n        elif i == 6:\n            return 6\n        elif i == 7:\n            return 7\n        elif i == 8:\n            return 8\n        elif i == 9:\n            return 9\n        elif i == 10:\n            return 10\n        elif i == 11:\n            return 11\n        elif i == 12:\n            return 12\n        elif i == 13:\n            return 13\n        elif i == 14:\n            return 14\n        elif i == 15:\n            return 15\n        elif i == 16:\n            return 16\n        elif i == 17:\n            return 17\n        elif i == 18:\n            return 18\n        elif i == 19:\n            return 19\n        elif i == 20:\n            return 20\n        elif i == 21:\n            return 21\n        elif i == 22:\n            return 22\n        elif i == 23:\n            return 23\n        elif i == 24:\n            return 24\n        elif i == 25:\n            return 25\n        elif i == 26:\n            return 26\n        elif i == 27:\n            return 27\n        elif i == 28:\n            return 28\n        elif i == 29:\n            return", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # List of all possible sentences\n    sentences = [''] * len(S)\n    # Count the number of boredom sentences\n    for i in xrange(len(sentences)):\n        if sentences[i].startswith(\"I\"):\n            # Convert this to a sentence\n            sentences[i] = sentences[i].replace(\"I\", \"\")\n    # Build the boredom sentences\n    boredom = []\n    for i in xrange(len(sentences)):\n        if sentences[i] == \"I love this weather\":\n            boredom.append(\"I love this weather\")\n            break\n        if sentences[i] == \"I love this weather.\":\n            boredom.append(\"I love this weather.\")\n            break\n        if sentences[i] == \".\":\n            boredom.append(\".\")\n            break\n        if sentences[i] == \"?\" and sentences[i + 1] == \".\":\n            boredom.append(\"?\")\n            break\n        if sentences[i] == \"?\" and sentences[i + 1] == \":\":\n            boredom.append(\"?\")\n            break\n        if sentences[i] == \"!\" and sentences[i + 1] == \"!\":\n            boredom.append(\"!\")\n            break\n    return len(boredom)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if (len(S) == 0):\n        return 0\n    elif len(S) > 1:\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    words = S.split()\n    assert len(words) == len(\".\")\n    return sum(is_bored(x) for x in words)\n    \n    def format(s):\n        if len(s) == 1:\n            return \".\"\n        elif len(s) == 3:\n            return s[1] + \".\"\n        else:\n            return \"?\" + s", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    num_bored = 0\n    for w in S.split():\n        if w!= \"I\":\n            num_bored += 1\n    return num_bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # TODO: figure out what to do with the word '!', this is a weird thing\n    # (i.e. \"A!I!O!N!L!\") but it seems to work fine for what we have in this\n    # version\n    words = S.split()\n    for i in range(len(words)):\n        if '!' in words[i]:\n            return 0\n        if '.' in words[i]:\n            return 1\n    return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(len(S) - 1, -1, -1):\n        if S[i] == 'I':\n            return i + 1\n        elif S[i] == '!':\n            return i + 1\n        elif S[i] == '?':\n            return i + 1\n        else:\n            return i\n    return len(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boring = []\n    for w in S:\n        if w in boredoms:\n            boring.append(w)\n    return len(boring) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def _find_bored(words):\n        words = words.split()\n        for word in words:\n            if word.startswith(\"I\"):\n                return word\n        return None\n    \n    count = 0\n    if _find_bored(words):\n        count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = [w.lower() for w in S.split()]\n    count = 0\n    for word in words:\n        if is_bored(word):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    n = 0\n    m = 0\n    while S:\n        if S[0] == \"I\":\n            n += 1\n        elif S[0] in ('?', '!'):\n            m += 1\n        elif S[0] == \".\":\n            if m == 1:\n                return n == 1\n            else:\n                return n == 0\n        elif S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\":\n            if n == 1:\n                return True\n            else:\n                return False\n        elif S[0] == \"!\" or S[0] == \".\" or S[0] == \"?\" or S[0] == \"!\":\n            if n == 1:\n                return True\n            else:\n                return False\n        else:\n            if n == 1:\n                return True\n            else:\n                return False\n    \n    return False", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return int(len(S) == 0) or int(len(S) == 1 and S[0] == 'I') or int(len(S) == 2 and S[0] in ['i', 'i!', 'i?', '!'])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    #This doesn't really make any sense, but here is how we do it\n    BOREDOM = 0\n    for w in S:\n        if w in (\"I\", \"i\", \"I\"):\n            BOREDOM += 1\n    return BOREDOM", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.strip()\n    boredom_count = 0\n    for item in S.split():\n        if item.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and all(is_bored(s) for s in S) or len(S) == 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    s = S.lower()\n    i = 1\n    if (isdigit(s.find(\"I\")) or isdigit(s.find(\"!\")) or isdigit(s.find(\"?\")) or isdigit(s.find(\".\"))):\n        i += 1\n    else:\n        return i > 0\n    return i == s.count(s.upper()) or i == s.count(s.lower()) or i == s.count(\".\") or i == s.count(\"?\") or i == s.count(\"!\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # check the delimiter\n    if S.endswith('.'):\n        return 0\n    elif S.endswith('?'):\n        return 1\n    elif S.endswith('!'):\n        return 2\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This will use a mapping from common words to the number of boredoms in\n    # them\n    boredom_map = {\n        'I': 3,\n        '!': 1,\n        '?': 2,\n        '.': 4}\n    # This is for loop for checking if the words given are in the list\n    for word in S:\n        # This is for loop to check if the word in the list is the last word of the sentence\n        for i in xrange(len(word)):\n            # This is for loop to check if the word in the list has the boredom\n            if boredom_map[word[i]] > 1:\n                return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    for token in S:\n        if token[0] == 'I':\n            return 1\n        elif token[0] == '!':\n            return 2\n        elif token[0] == '?':\n            return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 1 and \".\" not in S[0] and \"!\" not in S[0] and S[0] in \" \"\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # if sentence is empty\n    if not S:\n        return 0\n\n    # if sentence contains 'I'\n    if S[0] == 'I':\n        return 1\n\n    # if sentence contains '!'\n    if S[0] == '!':\n        return 1\n\n    # if sentence contains '.'\n    if S[0] in '.' or S[0] == '?':\n        return 1\n\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def count_boredom(S):\n        \"\"\"\n        Counts the number of boredom(s) in S.\n        \"\"\"\n        i = 0\n        for word in S:\n            if word[0] == 'I':\n                i += 1\n            else:\n                return i\n        return 0\n    count_boredom(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(re.findall('^i(.*)', S)) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    result = 0\n    words = S.split()\n    for word in words:\n        if word.startswith(\"I\"):\n            result += 1\n    return result", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for word in S.split(\" \"):\n        if word[0] == \"I\":\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return int(S.strip().split()[0].strip())", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Determine the number of boredoms\n    boredoms = len(S) - 1\n    if boredoms:\n        return boredoms\n    \n    # The correct answer is only 1\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    if re.match(r'^.*I.*', S) is not None:\n        return 1\n    if re.match(r'^.*?!I.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*.*.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*.*.*.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*.*.*.*.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*.*.*.*.*.*', S) is not None:\n        return 1\n    if re.match(r'^.*.*.*.*.*.*.*.*.*', S) is not None:\n        return 1\n    if re.match(", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored_count = 0\n    for w in S:\n        if w == \"I\":\n            bored_count += 1\n        elif w == \"!\":\n            bored_count += 1\n        elif w == \"?\":\n            bored_count += 1\n    return bored_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Try to figure out if the string contains any boring words.\n    for e in S:\n        if e in ICON:\n            return 1\n        elif e in NOM:\n            return 1\n        elif e in TAG:\n            return 1\n        elif e in COMMON:\n            return 1\n        elif e in KEEP:\n            return 1\n        elif e in LIKE:\n            return 1\n        elif e in FOO:\n            return 1\n        elif e in HOW_ME:\n            return 1\n        elif e in NEXT:\n            return 1\n        elif e in LEX:\n            return 1\n        elif e in EACH:\n            return 1\n        elif e in RAT:\n            return 1\n        elif e in TAG:\n            return 1\n        elif e in COMMON:\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Make sure it's not empty\n    if not S:\n        return 0\n    # split the sentence in words\n    S_list = S.split()\n    # count the number of boredoms\n    return len(S_list) / 2", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The list of all the words we can search for a boredom in.\n    words = ['I?', 'I?', 'I?', 'I?', 'I?']\n    \n    # Get the lengths of the words.\n    word_lengths = []\n    for i in range(len(words)):\n        word_lengths[i] = len(words[i]) - 1\n    # Iterate through all the words and figure out the lengths.\n    for i in range(len(words)):\n        # Find the last word before the first word in the string.\n        last_word = None\n        for j in range(i + 1, len(words)):\n            if last_word!= words[j]:\n                last_word = words[j]\n                break\n        # If the last word is the first word in the string, the word length is zero.\n        if last_word!= words[i]:\n            word_lengths[i] = 0\n    # For each word in the string, check the length of the boredom.\n    for i in range(len(words)):\n        word_lengths[i] = max(word_lengths[i], i - 1) - 1\n    # Return the boredom count.\n    return word_lengths[len(words) - 1]\n\n    # Returns the boredom count\n    # For", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) < 2:\n        return 0\n    if S[0].isalpha():\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return re.count(\"I\", S) + re.count(\"!\", S) + re.count(\"?\", S) == 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and all(char in S for char in re.escape(char)) and re.search(\".*?(?:I)?$\", S) is not None", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Get the words\n    words = list(S)\n    # Count boredoms\n    boredom = 0\n    # Skip past the first word\n    for i in xrange(len(words)):\n        if words[i] == \"I\":\n            boredom = boredom + 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def is_bored_simple(S):\n        return len(S) > 3 and S[-2] == \"I\"\n    return next(is_bored_simple, S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum(i in S for i in re.finditer(r\"(?i)I\\.|?I|!I.*\", S)) - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_counter = 0\n    for sentence in S:\n        if sentence.startswith(\"I\"):\n            boredom_counter += 1\n    return boredom_counter", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    count = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            count += 1\n    return count > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for w in S:\n        if w[0] == \"I\":\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word.lower().find(\"I\") == -1:\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.split()\n    if len(S) == 0:\n        return 0\n    num_words = 0\n    for w in S:\n        if w.startswith(\"I\"):\n            num_words = num_words + 1\n    return num_words", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    n = 0\n    m = 0\n    for s in S:\n        if s.startswith(\"I\"):\n            n += 1\n        if s.startswith(\"?\"):\n            m += 1\n    return n/m", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 0 or not re.match(\"[\\.\\?\\!]\", S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    i = 0\n    for s in S:\n        if s.startswith(\"I\"):\n            count += 1\n    return count\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = {}\n    # split on '.', '?', or '!'\n    for word in S:\n        if word in boredoms:\n            boredoms[word] += 1\n        else:\n            boredoms[word] = 1\n    return sum(boredoms[word] for word in S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") > 0:\n        return 1\n    if S.count(\".\") > 0:\n        return 0\n    if S.count(\"?\") > 0:\n        return 0\n    if S.count(\"!\") > 0:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    if not S:\n        raise ValueError(\"String must be set\")\n    \n    # do a heuristic count of boredoms: \n    # I am bored\n    # I don't know what to do\n    # I like everything.\n    # The sun is shining\n    # The sky is blue\n    #\n    # For each boredom, there is a number of sentences that\n    # end with it. If there is no sentence with the\n    # boredom in it, there is no boredom in the string.\n    #\n    # Each sentence is a substring of the string. We\n    # only count the number of sentences that begin\n    # with the word \"I\".\n    words = S.split()\n    for w in words:\n        if w.startswith(\"I\"):\n            num_boredom = 0\n            for s in w:\n                if s.startswith(\"I\"):\n                    num_boredom += 1\n            return num_boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for W in S:\n        if W in '.' or W in '?' or W in '!' or W.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    L = re.search(\"^(\\S+)\\b(\\S+)\\b$\", S, re.IGNORECASE)\n    if L is None:\n        return 0\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    word_count = 0\n    for a in S:\n        if is_bored(a):\n            word_count += 1\n    return word_count\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) > 1:\n        for token in S:\n            if token == \"I\":\n                return 0\n            elif token == \"I*\":\n                return 0\n            elif token == \"I?\":\n                return 0\n            elif token == \"I!\":\n                return 0\n    else:\n        return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(len(S)):\n        if S[i] in (\".\", \"?\", \"!\"):\n            return 1\n        elif S[i] == \"I\":\n            return 0\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    result = 0\n    for word in S:\n        if word in [\"I\", \"we\", \"we\", \"it\", \"I\", \"I\", \"I\", \"it\", \"us\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\", \"it\", \"I\", \"I\", \"it\", \"us\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            i += 1\n    return i", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    n = 0\n    for w in words:\n        if w == \"I\":\n            n += 1\n        else:\n            if w == \"?\":\n                n += 2\n            elif w == \"!\":\n                n += 3\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    word_count = 0\n    for line in S.splitlines():\n        if line.find(\"I\") > 0:\n            word_count += 1\n    return word_count % 8\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Right now, we just count the number of boredom words.\n    count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            count += 1\n\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 0\n    n = 0\n    while i<len(S):\n        if S[i] in (\"I\", \"Hi\", \"Oh\"):\n            n = n + 1\n            i = i+1\n        else:\n            n = n + 1\n            i = i+1\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 2", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    r = re.findall('.*?(\\I)?\\I?\\I?\\I?\\I?\\I?', S)\n    if len(r)!= 7:\n        print \"Wrong input, got \", r, \", should be 7\"\n    if len(r) == 7:\n        for i in r:\n            if r[i] == 'I' and r[i - 1] == 'I' and r[i - 2] == 'I' and r[i - 3] == 'I':\n                return i\n            elif r[i] == 'I' and r[i - 1] == '!' and r[i - 2] == 'I' and r[i - 3] == 'I':\n                return i + 1\n            elif r[i] == '!' and r[i - 1] == '!' and r[i - 2] == 'I' and r[i - 3] == 'I':\n                return i - 1\n            elif r[i] == '!' and r[i - 1] == '!' and r[i - 2] == 'I' and r[i - 3] == 'I':\n                return i - 2\n            elif r[i] == '!' and r[i - 1] == '!' and r[i - 2] == 'I' and r[i - 3] == 'I':\n                return i - 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] in ['I', 'I', 'I', 'I', 'I', 'I', 'I', 'I']", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    num_boredoms = 0\n    for word in S:\n        if word.endswith(\"I\") or word.endswith(\"i\"):\n            num_boredoms += 1\n    return num_boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = str(S)\n    n = 0\n    for item in S.split():\n        if item.startswith(\"I\"):\n            n += 1\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S[0] == 'I':\n        return 1\n    if S[0] == '?':\n        return 1\n    if S[0] == '!':\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    new_str = \"\"\n    n = 0\n    if S[0]!= \"I\":\n        n += 1\n    for i in S:\n        if i == \"!\":\n            n += 1\n        if i == \"?\":\n            n += 1\n        if i == \"?\" or i == \"!\":\n            n += 1\n        if i == \".\" or i == \"I\":\n            n += 1\n        new_str += i + \".\"\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum(len(S) for S in xrange(len(S))) == 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # FIXME: This should be a less complex algorithm, but it won't be on the\n    # main Python implementation, so make sure we don't crash on small strings.\n    # See the test suite of the original, and verify that the bug isn't happening\n    # on anything more complicated than a sentence with three words.\n    assert len(S) == 3\n    word_list = S[3:]\n    if word_list[0]!= \"I\":\n        return 0\n    if word_list[1]!= \"!\":\n        return 0\n    if word_list[2]!= \"!\" or word_list[3]!= \".\":\n        return 0\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and \"?\" not in S.lower() and \"!\" not in S.lower() and S.lower().count(\"I\") > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    if len(S) > 0:\n        for word in S:\n            if word.startswith(\"I\"):\n                boredoms.append(word)\n            elif word.startswith(\"?\"):\n                boredoms.append(word)\n            elif word.startswith(\"!\"):\n                boredoms.append(word)\n    return sum(boredoms) / len(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = ['I']\n    return len(boredoms) == len(S) - len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Get the beginning of the sentence\n    start = S.find(\"I\")\n    # If the word is not found, return 0\n    if start == -1:\n        return 0\n    # Get the end of the word\n    end = S.find(\"!\", start)\n    # If the word is not found, return 0\n    if end == -1:\n        return 0\n    # If the words are not in the same order, return 0\n    if start > end:\n        return 0\n    # Iterate over the words until the end of the sentence is reached\n    while True:\n        # If the word is not found, return 0\n        if end == -1:\n            return 0\n        # If the end is reached, return 1\n        if end == start:\n            return 1\n        # If the word is the last word, return 0\n        if S[end:] == \"I\":\n            return 0\n        # If the word is not found, return 0\n        if end!= start + 1:\n            return 0\n        # If the end is reached, return 1\n        if end == start + 2:\n            return 1\n        # If the word is not found, return 0\n        if end!= start + 3:\n            return 0\n        # If the end is reached, return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    return sum([word for word in S if word.startswith(\"I\")])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if isinstance(S, str):\n        # Fixed case\n        S = S.lower()\n        \n    words = S.split()\n    num_boredoms = 0\n    for word in words:\n        if word == \"I\":\n            num_boredoms += 1\n    return num_boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    return (len(S)>5) and (len(S)>4) and (len(S)>3) and (len(S)>2) and (len(S)>1)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    # the correct answer\n    answer = 0\n    \n    # get the number of words in the sentence\n    words = S.strip().split()\n    # get the number of boredoms\n    for word in words:\n        # if the word starts with \"I\", then the sentence is a boredom\n        if word[0].isalpha():\n            answer += 1\n    \n    return answer", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def count(S):\n        \"\"\"\n        Counts the number of boredoms in a string\n        \"\"\"\n        boredoms = []\n        for x in S:\n            if x[0] == 'I':\n                boredoms.append(x)\n            if x[0] in ('.', '?', '!'):\n                if boredoms:\n                    count(boredoms)\n                boredoms = []\n            if boredoms:\n                count(boredoms)\n        return len(boredoms)\n    \n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms in the sentence\n    words = S.split('.')\n    boredom_count = 0\n    for word in words:\n        if word.lower() in [\"i\", \"th\", \"s\", \"s\", \"i\", \"e\", \"t\", \"a\", \"h\", \"o\", \"m\", \"i\", \"o\", \"a\", \"d\", \"w\", \"i\", \"e\", \"r\", \"p\", \"e\", \"y\", \"v\", \"i\", \"l\", \"p\", \"r\", \"s\", \"y\", \"i\", \"e\", \"d\", \"w\", \"i\", \"r\", \"s\"] and word!= \"!\" and word!= \"I\":\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = list()\n    for word in S:\n        if word.is_bored():\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    num = 0\n    words = S.split()\n    for word in words:\n        if word[0] == \"I\":\n            num += 1\n        elif word[0] == \"!\":\n            num += 1\n        elif word[0] == \":\":\n            num += 1\n        elif word[0] == \":?\":\n            num += 1\n    return num", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for i in range(len(S)):\n        if S[i] == \"I\":\n            return i\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    I = ['I', 'I', 'I', 'I']\n    bored = 0\n    for word in S:\n        if not I.issubset(word):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Loop over the sentence\n    for word in S:\n        # Count the number of boredoms\n        if word.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    words = S.split()\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.startswith(\"I\"):\n        return 0\n    elif S.startswith(\"?\"):\n        return 1\n    elif S.startswith(\"!\"):\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for i in S:\n        if i.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    N = 0\n    for I in S:\n        if I[0] == 'I':\n            N += 1\n        if I[0] in ('?', '!'):\n            N += 1\n    return N", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    boredoms = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") > 1:\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Check out the number of words in the string\n    S = S.strip()\n    if not S:\n        return 0\n    # Check out the number of options\n    n = len(S.split())\n    if not n:\n        return 0\n    # Check out the number of boring options\n    n = n - 2\n    if n < 0:\n        return 0\n    # Check out the number of boring options with no sentence\n    return n\n    # Check out the number of boring options with one sentence\n    if is_bored(S[0]) == 0:\n        return 0\n    elif is_bored(S) == 1:\n        return 1\n    else:\n        return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following piece of code is necessary because we need to use a temporary variable\n    # to cache the number of boredoms:\n    if S:\n        boredom_count = 0\n        for word in S:\n            if not word.startswith(\"I\"):\n                boredom_count += 1\n        return boredom_count\n    else:\n        return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    while count < len(S):\n        words = S[count].split()\n        if '.' in words[0]:\n            count += 1\n        elif '?' in words[0]:\n            count += 1\n        elif '!' in words[0]:\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for S in S:\n        if S.startswith(\"I\"):\n            boredoms.add(S)\n        else:\n            boredoms.add('.')\n\n    return boredoms.count('!') + 1\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for r in S:\n        if r.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    all_words = re.split(r'\\s+', S)\n    for word in all_words:\n        if word == 'I':\n            return 0\n        if word == '?':\n            return 1\n        if word == '!':\n            return 2\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 0\n    while i < len(S):\n        if i in ['I?', 'I?', 'I?', 'I?']:\n            i += 1\n        else:\n            return i\n    return len(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    i = 1\n    for word in S.split():\n        if word.startswith(\"I\"):\n            i += 1\n    return i", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = re.findall(r'\\bI\\b', S)\n    return sum(bored) == len(bored)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    return len(words) - len(words[0])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    B = set(S.split())\n    boredom = B.intersection(B.union(['I']))\n    if boredom:\n        return boredom.count()\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for word in S:\n        if word in [\"I\"]:\n            return 0\n    if word in [\"the\", \"sun\", \"world\", \"some\", \"of\", \"he\", \"is\", \"love\", \"weather\"]:\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) > 1:\n        return 1\n    while S[-1:] in ['?', '!', '.']:\n        S = S[:-1]\n    if S[0] == 'I':\n        return 0\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    while True:\n        count = 0\n        for w in S:\n            if w == \"I\":\n                count += 1\n                continue\n            if w in ['?', '!', '.']:\n                count += 1\n                continue\n            count += 1\n            if w in ['.', '?', '!']:\n                count += 1\n        if count == 0:\n            return 0\n        return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    num_bored = 0\n    for word in S:\n        if is_bored(word):\n            num_bored += 1\n        else:\n            break\n    return num_bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    lines = S.split()\n    for line in lines:\n        if not line.startswith(\"I\"):\n            boredoms.append(\"?\")\n    return sum([len(b) for b in boredoms])", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S)!= 2:\n        raise ValueError(\"Need two words for is_bored.\")\n    words = S.split(' ')\n    if not words[0].startswith(\"I\"):\n        raise ValueError(\"Bad word in is_bored\")\n    # Fill the list of boredoms:\n    boredoms = []\n    for w in words:\n        if w.startswith(\"I\"):\n            boredoms[-1].append(w)\n            # Add the number of times I have heard this word:\n            boredoms[-1].append(len(w))\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Create a list of all words.\n    words = [S for S in S]\n\n    # Count boredom occurrences.\n    # Note that each word occurs once, so there can be more than one boredom\n    # for each sentence.\n    boredom_count = 0\n    for word in words:\n        if word == \"I\":\n            boredom_count += 1\n        elif word == \"?\":\n            boredom_count += 1\n        elif word == \"!\":\n            boredom_count += 1\n\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.find(\"I\")!= -1:\n        return 1\n    elif S.find(\"!\")!= -1:\n        return 2\n    elif S.find(\"?\")!= -1:\n        return 3\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) <= 1:\n        return 0\n    elif len(S) == 2:\n        return 1\n    elif len(S) == 3:\n        return 1\n    elif len(S) == 4:\n        return 1\n    elif len(S) == 5:\n        return 1\n    elif len(S) == 6:\n        return 1\n    elif len(S) == 7:\n        return 1\n    elif len(S) == 8:\n        return 1\n    elif len(S) == 9:\n        return 1\n    elif len(S) == 10:\n        return 1\n    elif len(S) == 11:\n        return 1\n    elif len(S) == 12:\n        return 1\n    elif len(S) == 13:\n        return 1\n    elif len(S) == 14:\n        return 1\n    elif len(S) == 15:\n        return 1\n    elif len(S) == 16:\n        return 1\n    elif len(S) == 17:\n        return 1\n    elif len(S) == 18:\n        return 1\n    elif len(S) == 19:\n        return 1\n    elif len(S) == 20:\n        return 1\n    elif len(S) == 21:\n        return 1\n    elif len(S) == 22:\n        return 1\n    elif len(S) == 23:\n        return 1\n    elif len", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if is_int(S):\n        return int(S)\n    elif is_float(S):\n        return float(S)\n    elif S.startswith(\"I\") or S.startswith(\"J\") or S.startswith(\"K\") or S.startswith(\"L\") or S.startswith(\"?\") or S.startswith(\"!\"):\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    def count_boredoms(S):\n        return sum(map(lambda w : w.is_bored('.'), S))\n        \n    def count_boredoms2(S):\n        return sum(map(lambda w : w.is_bored('?'), S))\n        \n    def count_boredoms3(S):\n        return sum(map(lambda w : w.is_bored('!'), S))\n        \n    return count_boredoms(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    else:\n        for s in S.split(\".\"):\n            if s == \"I\":\n                return 1\n        if s == \"!\":\n            return 1\n        if s == \"?\":\n            return 1\n        return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Break up each sentence into an array of words\n    sentences = []\n    word_list = []\n    for item in S:\n        if item.startswith(\"I\"):\n            sentences.append(item)\n        else:\n            if item.startswith(\"!\") or item.startswith(\"!\"):\n                if is_bored(item):\n                    word_list.append(item)\n            elif item.startswith(\"?\"):\n                if is_bored(item):\n                    word_list.append(item)\n            else:\n                words = item.split(\".\")\n                if len(words) == 4:\n                    words[0] = words[0].lower()\n                    words[1] = words[1].lower()\n                    words[2] = words[2].lower()\n                    words[3] = words[3].lower()\n                    if (len(word_list) == 1) and (is_bored(words[0]) == 0):\n                        word_list.append(words[0])\n                    else:\n                        if (len(word_list) == 2) and (is_bored(words[0]) == 0):\n                            word_list.append(words[0])\n                        elif (len(word_list) == 3) and (is_bored(words[0]) == 0):\n                            word_list.append(words", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    counts = [count if c.lower().startswith(\"I\") else 0 for c in S.lower().split(\".\")]\n    if len(counts) > 1:\n        print(\"There are \" + str(counts) + \" boredoms\")\n    else:\n        print(\"There are no boredoms\")\n    return counts[0]", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    b = {}\n    for x in S:\n        b[x] = len(b[x])\n        b[b] += 1\n    return b", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    #  magic number for counting boredoms\n    K = 3\n    #  for each sentence\n    for s in S:\n        #  if the sentence ends in 'I', then it is a boredom\n        if s[0] == 'I' and s[-1] == '!':\n            #  add the number of boredoms to the global count\n            K += 1\n    return K", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for word in S:\n        if word.startswith(\"I\") or word.startswith(\"!\") or word.startswith(\"?\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = {\n        'I': 1,\n        '!': 0,\n        '?': 1,\n       '': 1\n    }\n    \n    for word in S:\n        if word in boredoms:\n            return boredoms[word]\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) < 2:\n        return 0\n    elif S[0] == 'I':\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) > 0:\n        return 0\n    if S[0] == 'I':\n        return 1\n    for i in S:\n        if i == '!':\n            return 1\n        elif i == '.':\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = 0\n    for s in S:\n        if s.startswith(\"I\"):\n            bored += 1\n    return bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    i = 0\n    j = 0\n    k = 0\n    while True:\n        if i == 0 and j == 0 and k == 0:\n            # Started from the beginning\n            return 1\n        if S[j].startswith(\"I\") and S[i].startswith(\"?\"):\n            # Found a \"I\"\n            if S[i].startswith(\"!\"):\n                # Found a \"!\"\n                i = 0\n            j = i + 1\n        elif S[j].startswith(\"?\") and S[i].startswith(\"!\"):\n            # Found a \"?\"\n            if S[i].startswith(\"!\"):\n                # Found a \"!\"\n                i = 0\n            j = i + 1\n        elif S[j].startswith(\"!\") and S[i].startswith(\"?\"):\n            # Found a \"!\"\n            if S[i].startswith(\"?\"):\n                # Found a \"!\"\n                i = 0\n            j = i + 1\n        elif j == k:\n            # Found a sentence\n            return 1\n        else:\n            # Found a word\n            i = j + 1\n            k = i\n    # Found a", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split('.')) \\\n             if len(S.split('.')) else 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Create the dictionary that will hold the boredom counts.\n    boredom_counts = {}\n    for word in S.lower().split():\n        # Add the word to the dictionary.\n        boredom_counts[word] = 1\n    # Return the count of the words that are not boring.\n    return sum(boredom_counts.values()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    # Start by removing the quotes\n    S = re.sub(r\"\\\"\",\"\",S)\n    \n    # Now, we need to count the numbers of boredom words in the string\n    boredom_string = re.sub(r\"(^|[^!])I(.*)!\",\"$1$2!\",S)\n    \n    # Then, we need to add the number of boredom words back in\n    boredom_string = re.sub(r\"(^|[^!])I(.*)!\",\"$1$2!\",boredom_string)\n    \n    # We want the number of boredom words in the string to be the same as \n    # the number of boredom words in the dictionary, minus one\n    return sum(map(int,boredom_string.split()))-1\n    \n    # The negative number can be made the same as a positive number, by\n    # dividing it by 2.\n    return 2**sum(map(int,boredom_string.split()))-1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The code below assumes that the input is a single word\n    words = S.split()\n    if len(words) == 1 and words[0].isalpha():\n        return 0\n    else:\n        # Create a dictionary that will hold all of the boredom sentences\n        boredom = {}\n        for word in words:\n            if word.isalpha():\n                boredom[word] += 1\n        return len(boredom) - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if not S else 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    while True:\n        if S.startswith(\"I\"):\n            return 1\n        elif S.startswith(\"!\"):\n            return 0\n        elif S.startswith(\"?\"):\n            return 0\n        elif S.endswith(\".\"):\n            return 0\n        elif S.endswith(\".\"):\n            return 1\n        elif S.endswith(\".\"):\n            return 1\n        elif S.endswith(\".\"):\n            return 1\n        else:\n            pass\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Start with an empty list\n    boredom_list = []\n    num_boredom = 0\n    i = 0\n    while i < len(S):\n        boredom_list.append(S[i])\n        if S[i].startswith(\"I\"):\n            boredom_list.append(\".\")\n        if S[i].startswith(\"?\"):\n            boredom_list.append(\"!\")\n        if S[i].startswith(\"!\"):\n            boredom_list.append(\"!\")\n        if S[i].startswith(\"?\"):\n            boredom_list.append(\"!\")\n        if S[i].startswith(\"!\"):\n            boredom_list.append(\"!\")\n        if S[i] == \"\":\n            num_boredom += 1\n        i += 1\n    return num_boredom\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Crashes if more than 4 words\n    if len(S)!= 4:\n        return 0\n    # Split on '.' and '!'\n    words = S.split()\n    # Count the boredoms\n    boredom_count = 0\n    for word in words:\n        if word!= \"I\" and word!= \"I love\" and word!= \"I hate\":\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    pass", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    r = re.search(r\"(.*)\\.(?:\\.\\.)?\\.(?:\\.?\\.?\\.?)(.*)\", S)\n    if not r:\n        return 1\n    return r.group(1).count(\"I\") + r.group(2).count(\".\") + r.group(3).count(\".\") + \\\n            r.group(4).count(\"!\") + r.group(5).count(\"!\") + r.group(6).count(\"!\") + \\\n            r.group(7).count(\"!\") + r.group(8).count(\"!\") + r.group(9).count(\"!\") + \\\n            r.group(10).count(\"!\") + r.group(11).count(\"!\") + r.group(12).count(\"!\") + \\\n            r.group(13).count(\"!\") + r.group(14).count(\"!\") + r.group(15).count(\"!\") + \\\n            r.group(16).count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    idx = 0\n    line = S.split('.')\n    for word in line:\n        if idx < len(line)-1:\n            if line[idx] == \"I\":\n                return idx\n            idx += 1\n    return len(line)-1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # return count_boredoms(S) if S.count(\"I\") == 0 else 0\n    count = 0\n    for word in S:\n        if is_bored(word):\n            count += 1\n    return count\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom = 0\n    while boredom < len(S):\n        if S[-boredom] == 'I':\n            boredom = boredom + 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return sum(i in S for i in i)/len(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    count = 0\n    count = 0\n    for word in S:\n        if word!= 'I':\n            count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    S = S.strip()\n    if not S:\n        return 0\n    if len(S) == 1:\n        return 0\n    for i in range(0, len(S)-1):\n        if is_bored(S[i]):\n            return i+1\n    return len(S)-1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    return 0 if S[0] in ['I'] else 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    count = 0\n    for w in S:\n        if w in ('?', '!'):\n            count += 1\n        else:\n            if w == 'I':\n                count += 1\n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    def _find_bored(S):\n        while True:\n            c = S.find(\"I\")\n            if c == -1:\n                return False\n            else:\n                return True\n            \n    return S.count(_find_bored) == 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    bored = S.split(\".\")[0]\n    bored = bored.split(\"?\")[0]\n    bored = bored.split(\"!\")[0]\n    return len(bored) == 0 and len(bored) == 1 or bored == \"I\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    b = 0\n    for p in S:\n        if p.startswith(\"I\"):\n            b += 1\n    return b", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = list(S.split('.'))\n    boredom_count = 0\n    for word in boredoms:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n        elif word.startswith(\"?\"):\n            boredom_count += 1\n        elif word.startswith(\"!\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    words = S.split()\n    for word in words:\n        if word.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count boredom\n    # For each sentence\n    for s in S:\n        if s.startswith(\"I\"):\n            return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Find the number of boredom sentences\n    boredom_count = 0\n    for word in S:\n        if word.count(\"I\") > 0:\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 2 and re.search(r\"\\bI\\.(\\S+)\\b\", S) is not None", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    T = set()\n    for c in S:\n        T.add(c.lower())\n    return T.count(\"I\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if \"S\" in S else 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # let's make some assumptions here\n    n = 0\n    for w in S:\n        if w not in I and w not in O:\n            n += 1\n    return n", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.is_bored():\n        return 1\n    for i in range(len(S)):\n        if S[i] in \"I\" or S[i] in \"love\" or S[i] in \"th\" or S[i] in \"st\" or S[i] in \"fun\" or S[i] in \"sad\" or S[i] in \"annoyed\" or S[i] in \"borrowed\" or S[i] in \"I\" or S[i] in \"other\" or S[i] in \"!\" or S[i] in \".\" or S[i] in \"?\" or S[i] in \"!\" or S[i] in \".\" or S[i] in \"!\" or S[i] in \"?\" or S[i] in \"!\" or S[i] in \".\" or S[i] in \"!\" or S[i] in \"?\" or S[i] in \"!\" or S[i] in \".\" or S[i] in \"!\" or S[i] in \"!\" or S[i] in \"!\" or S[i] in \"?\" or S[i] in \"!\" or S[i] in \"!\" or S[i] in \".\" or S[i] in \"!\" or S[i] in \"?\" or S[i] in \"!\" or S[i] in", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return 0 if S == \"\" else sum(1 for c in S if c in [\"I!\", \"I?\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I!\", \"I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_counter = 0\n    for word in S:\n        if word.startswith(\"I\") and word.endswith(\"I\"):\n            boredom_counter += 1\n    return boredom_counter\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split())>0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    M = {'I': 1, '.': 1, '?': 1, '!': 1}\n    for k, v in M.items():\n        if S.count(k) == 0:\n            return v\n    return 0\n</s>", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    elif S == \"!\" or S == \"?\" or S == \".\":\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    \n    count = 0\n    with open(\"count.txt\", \"r\") as f:\n        for line in f:\n            if line.startswith(\"I\"):\n                count = count + 1\n            if line.startswith(\"?\"):\n                count = count + 1\n            if line.startswith(\"!\"):\n                count = count + 1\n    \n    return count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    for word in S:\n        if word.startswith(\"I\"):\n            return 1\n    \n    return 0"]]