[["def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # characters that are <128 are not counted as digits\n    _digits = ('a','b','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z')\n    digits = [char for char in s if char < 128]\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s)\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum([chr(i) for i in xrange(len(s)) if s[i].isdigit()])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    n = len(s)\n    if n > 0:\n        return sum(ord(c) for c in s) // n\n    else:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    num = 0\n    for c in s:\n        num += ord(c)\n    return num", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\" or s == \"\":\n        return 0\n    res = \"\"\n    for c in s:\n        if c >= ord('A') and c <= ord('Z'):\n            res += c\n            res = res[:c]\n        else:\n            res += '.'\n    return res", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if s == \"\" or s == \"\":\n        return 0\n    n = 0\n    for c in s:\n        if c >= ord('0'):\n            n += c\n        else:\n            n += c - ord('0')\n    return n", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # number of characters\n    n = len(s)\n    # number of upper ASCII codes (9 to 127)\n    u = 0\n    # the upper ASCII code will be written at the first (lowest) digit of the string\n    for c in s:\n        u += ord(c) - ord('0')\n    # the output of the function will be a string of the same length of s\n    out = s[:u]\n    return out.zfill(n - u + 1)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    result = 0\n    for i in range(0, len(s)):\n        result += s[i]\n\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    print(\"\")\n    print(\"Task description\")\n    print(\"INPUT: \")\n    print(\"INPUT must be a string of ASCII characters only\")\n    print(\"Return: \")\n    print(\"Sum of upper characters only' ASCII codes\")\n    if not isinstance(s,str):\n        raise TypeError(\"input must be a string of ASCII characters only\")\n    print(\"\")\n    for c in s:\n        c = ord(c)\n        if c < 32 or c > 126:\n            print(\"Input is not a valid ASCII character\")\n            break\n        print(c)\n    print(\"\")\n    return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def func(s):\n        \"\"\"Return the sum of the upper characters only' ASCII codes.\n        \"\"\"\n        return sum(c for c in s if c.isalnum())\n\n    return func", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.isdigit():\n        s = s.replace(' ', '').lower()\n        # A number always has no upper case characters, except for \"0\"\n        if len(s) == 1:\n            return s\n        result = s.upper()\n        return sum(c for c in result if c!= 0)\n    else:\n        raise ValueError(\"String %s must be in the form x+y, where x is an integer (i.e. from 1 to 127) and y is a character (i.e. 'A', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def __init__(self, s):\n        \"\"\"Constructor\n\n        :param str s: The string to be processed.\n        \"\"\"\n        if not s:\n            raise ValueError(\"Input string is empty\")\n        if s.find('.')!= -1:\n            raise ValueError(\"Input string contains a dot character\")\n        self.s = s\n        self.s = re.sub(r'[^A-Za-z0-9]', '', s)\n\n    def __call__(self):\n        \"\"\"Call the method\n        :return: A string that is the sum of all the upper characters of the input string.\n        \"\"\"\n        s = self.s\n        s = s.lower()\n        return s.translate('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789')\n\n    def __repr__(self):\n        \"\"\"String representation of the function.\"\"\"\n        return self.s\n\n    def __str__(self):\n        \"\"\"String representation of the function.\"\"\"\n        return self.s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if isinstance(s, basestring):\n        s = s.lower()\n    if len(s) == 0:\n        return 0\n    c = s[-1].upper()\n    sum = 0\n    for x in s:\n        sum += ord(x)\n        if sum > ord(c):\n            sum = ord(c)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    for i in xrange(0, len(s)):\n        if s[i] >= 32 and s[i] <= 126:\n            s += str(ord(s[i - 32]) + ord(s[i])) # lower ASCII code\n        else:\n            s += s[i]\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return len(s) & 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    pass", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Default constructor\n    digitSum = self.__class__.defaultDigitSum\n\n    def __init__(self, s):\n        \"\"\"\n        Default constructor\n        @param s: string to use as input.\n        \"\"\"\n        if len(s) < 2 or s[0]!= '0':\n            raise ValueError('Not a valid input string: {0}'.format(s))\n        else:\n            # Build up the sum of the digits.\n            s = s[1:]\n            digit = self.digitSum(s)\n            self.digit = digit + 1\n            self.s = s\n\n    def __repr__(self):\n        return '{0:.2f}'.format(self.digit)\n\n    def __str__(self):\n        return self.s\n\n    def __eq__(self, other):\n        if not isinstance(other, self.__class__):\n            return False\n        return self.digit == other.digit\n\n    def __ne__(self, other):\n        if not isinstance(other, self.__class__):\n            return False\n        return self.digit!= other.digit\n\n    def __lt__(self, other):\n        if not isinstance(other, self.__class__):\n            return False\n        return self.digit <", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not isinstance(s, string_types):\n        raise TypeError(\"Input string must be a string.\")\n    result = 0\n    for i in xrange(s.count(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\")):\n        result = result + s[i:i + 3]\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    import re\n    digitRe = re.compile(r'[a-zA-Z]', re.IGNORECASE)\n    return digitRe.sub(lambda a: a + digitRe.sub('0', a), s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x[:x] for x in s.split()) if x else 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # create a list of all upper characters only\n    upper = set([chr(i) for i in range(32)])\n\n    # get all digits in the string\n    digits = set()\n    for num in s:\n        if num in upper:\n            digits.add(num)\n        else:\n            digits.add(chr(num))\n\n    # output the sum of all digits\n    return sum(list(digits))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    s = s.replace(\" \", \"\")\n    s = s.replace(\",\", \"\")\n    s = s.replace(\"-\", \"\")\n    s = s.replace(\"+\", \"\")\n    s = s.replace(\"?\", \"\")\n    s = s.replace(\"(\", \"\")\n    s = s.replace(\")\", \"\")\n    return sum(x for x in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.lower() == \"0\":\n        return 0\n    digits = s.split(\" \")\n    while digits:\n        digits.pop()\n        digits.append(ord('0'))\n    return sum(x for x in digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return ord(s[0]) + ord(s[1]) + ord(s[2]) + ord(s[3]) + ord(s[4]) + ord(s[5]) + ord(s[6]) + ord(s[7]) + ord(s[8]) + ord(s[9]) + ord(s[10]) + ord(s[11]) + ord(s[12]) + ord(s[13]) + ord(s[14]) + ord(s[15]) + ord(s[16]) + ord(s[17]) + ord(s[18]) + ord(s[19]) + ord(s[20]) + ord(s[21]) + ord(s[22]) + ord(s[23]) + ord(s[24]) + ord(s[25]) + ord(s[26]) + ord(s[27]) + ord(s[28]) + ord(s[29]) + ord(s[30]) + ord(s[31]) + ord(s[32]) + ord(s[33]) + ord(s[34]) + ord(s[35]) + ord(s[36]) + ord(s[37]) + ord(s[38]) + ord(s[39]) + ord(s[40]) + ord(s[41]) + ord(", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    try:\n        return sum(0 for s in s.upper().split())\n    except UnicodeError:\n        raise ValueError(\"Can't convert %s to sum\" % s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        return 0\n    else:\n        return sum(ord(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr(x) for x in s if ord(x) < 128)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    u = \"\"\n    while True:\n        c = ord(s.pop())\n        if c > 127:\n            u += s[:c]\n            if c == 127:\n                return u\n            else:\n                raise Exception(\"Index out of range\")\n    return u", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.strip()\n    if not s or len(s) == 0:\n        return 0\n    ascii = s.encode('ascii')\n    upper = ascii.upper()\n    i = 0\n    if upper not in digits:\n        return 0\n    while i < len(s) and i < len(upper):\n        if ascii[i] == upper[i]:\n            i += 1\n        else:\n            return digitSum(s[i:i + 1])\n    return digitSum(s[i:i + 1]) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    result = s.split()\n    sum = 0\n    for digit in result:\n        if digit[0]!= '#':\n            sum += int(digit)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return 0\n\n    ascii = s.replace(\" \", \"\")\n    i = 0\n    for character in ascii:\n        if character == \".\":\n            if i > 0:\n                return i\n            i += 1\n        elif character in ord(ascii):\n            return i\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    res = []\n    c = s.lower()\n    for char in range(1, len(c)):\n        if c[char] in '0123456789ABCDEF':\n            res.append(int(c, 16))\n    return sum(res)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    upper = ['a', 'b', 'c', 'd', 'e']\n    lower = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E']\n    for x in range(len(upper)):\n        for y in range(len(lower)):\n            if s.upper()[x][y]!= lower[y]:\n                print(\"error in digitSum: \" + str(s) + \" \" + str(x) + \" \" + str(y))\n                return 0\n    return sum(upper)\n\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    for i in range(0, len(s)):\n        if ord(s[i]) > 127:\n            s[i] = '0' + s[i]\n    return sum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    l = len(s)\n    if l < 9:\n        return 0\n    elif l < 12:\n        return digitSum(s[2:9]) + digitSum(s[10:12])\n    elif l < 17:\n        return digitSum(s[2:9]) + digitSum(s[10:12]) + digitSum(s[2:9, 13:16])\n    elif l < 21:\n        return digitSum(s[2:9]) + digitSum(s[10:12]) + digitSum(s[2:9, 14:16])\n    elif l < 23:\n        return digitSum(s[2:9]) + digitSum(s[10:12]) + digitSum(s[2:9, 15:16])\n    else:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = []\n    total = 0\n    for ch in s:\n        if ch >= ord('0'):\n            digit = chr(ch + 1)\n            digits.append(digit)\n        else:\n            total += 1\n            digits.append('0')\n            digits.append('0')\n    return sum(d for d in digits) * total", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.replace(\",\",\"\").replace(\".\",\"\")\n    s = s.replace(\"-\",\"\")\n    s = s.replace(\"_\",\"\")\n    s = s.replace(\".\",\"\")\n    return ord(s[0]) + ord(s[1]) + ord(s[2]) + ord(s[3]) + ord(s[4])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # There is no point in checking for s == \"\", as that will not be the case.\n    if s == '':\n        return 0\n    else:\n        l = len(s)\n        t = 0\n        for c in s[:l]:\n            t += ord(c)\n            if c == 33:\n                t += 33\n    return t", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = 0\n    for ch in s:\n        if ch!='' and ch!= '\\t' and ch!= '\\n':\n            digits += 1\n    return digits\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) > 0 and len(s.lower()) > 0:\n        # Simple case with no special characters\n        return s.upper().__str__()\n    if s[0] == '-':\n        return 0\n    if s[0] == '=':\n        return s[1] + 1\n    if s[0] == '!':\n        return s[1] + 2\n    if s[0] == ':':\n        return s[1] + 3\n    if s[0] == '=':\n        return s[1] + 4\n    if s[0] == '!':\n        return s[1] + 5\n    return s[1] + 6\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def f(s):\n        \"\"\"Func\n        Return a string that consists only of the upper characters of the input string.\"\"\"\n        return s.upper().encode('ascii')\n\n    s = \"helloEwoArBld\"\n    sum = f(s)\n    print sum\n    s = \"abcCd\"\n    sum = f(s)\n    print sum\n    s = \"aAaaaXa\"\n    sum = f(s)\n    print sum\n    s = \"aaaaXaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABXAAaABX", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    c = len(s)\n    l = [c[0] for c in s]\n    result = []\n    for i in range(0, c+1, 2):\n        result.append(l[i])\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    count = 0\n    for c in s:\n        count += ord(c)\n    return count", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(map(lambda x: int(x), s.split(' ')))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def _sum(self, s):\n        \"\"\"Computes the sum of all the digits in the string up to the ASCII code 26\"\"\"\n        assert isinstance(s, str)\n        s = s.upper()\n        return sum([ord(x) for x in s])\n\n    def _sumUpTo(self, n):\n        \"\"\"Computes the sum of all the digits in the string up to a given number of digits\"\"\"\n        assert isinstance(n, int)\n        return _sum(\"\".join(s + str(i) for i in range(n - 1)))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not isinstance(s, str):\n        raise TypeError('String expected')\n    else:\n        return sum([chr(c) for c in s])\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def digitSumLower(s):\n        \"\"\"Task\n        Write a function that takes a string as input and returns the sum of the upper characters only'\n        ASCII codes.\n        \"\"\"\n        for c in s.upper():\n            if c > 128:\n                continue\n            return digitSum(s[:c])\n        return 0\n    return digitSumLower", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # Computing the sum of the upper ASCII codes\n    return sum([c for c in s if ord(c) >= ord('0')])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    a = \"0123456789\"\n    aLen = len(a)\n    aStr = a[:a]Len\n    n = 0\n    for c in aStr:\n        if c not in a[aLen-1]:\n            n += 1\n    return n", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    num = len(s) - len(\" \")\n    num = int(num)\n    return num / (\" \" * num)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    chars = s.split()\n    digits = []\n    for char in chars:\n        if char.isalpha() or char in (\".\", \"#\"):\n            digits.append(char)\n        else:\n            digits.append(ord(char))\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    count = 0\n    index = 0\n    out = []\n    for x in s:\n        if x >= 65 and x <= 90:\n            out.append(x)\n        elif x >= 91 and x <= 96:\n            out.append(x + 10)\n        else:\n            out.append('.')\n            count += 1\n            index += 1\n            if index % 2 == 0:\n                index += 1\n            else:\n                count -= 1\n            out.append(count)\n    if count:\n        out.append(count)\n    return \"\\n\".join(out)\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x for x in s.upper().split()) \\\n       .count('0') * sum(x for x in x.upper().split()) \\\n       .count('a') \\\n       .count('b') \\\n       .count('c') \\\n       .count('d') \\\n       .count('e') \\\n       .count('f') \\\n       .count('g') \\\n       .count('h') \\\n       .count('i') \\\n       .count('j') \\\n       .count('k') \\\n       .count('l') \\\n       .count('m') \\\n       .count('n') \\\n       .count('o') \\\n       .count('p') \\\n       .count('q') \\\n       .count('r') \\\n       .count('s') \\\n       .count('t') \\\n       .count('u') \\\n       .count('v') \\\n       .count('w') \\\n       .count('x') \\\n       .count('y') \\\n       .count('z') \\\n       .count('0') \\\n       .count('1') \\\n       .count('2') \\\n       .count('3') \\\n       .count('4') \\\n       .count('5') \\\n       .", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr for chr in s if ord(chr) > 64)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # convert the string into a string of uppercase chars\n    s = s.upper()\n    # generate the array of ASCII codes\n    if not isinstance(s, basestring):\n        s = s.encode(\"ascii\")\n    # iterate through the string\n    for c in s:\n        # check if the char is upper\n        if c in uppercase:\n            # add one to the value\n            digit += 1\n    # return the sum of all the characters\n    return digit\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Calculate the sum of the characters' ASCII codes (from 0 to 255)\n    s = s.upper()\n    return sum(s.count(c) for c in range(0, len(s) - 1))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    result = 0\n    for c in s:\n        result += ord(c)\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    nums = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"ji\", \"kl\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\",", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # We use `s` as a buffer for the output\n    s = s.replace(\" \", \"\")\n    s = s.replace(\"\\t\", \"\")\n    s = s.replace(\"\\r\", \"\")\n    s = s.replace(\"\\n\", \"\")\n    if s[0] == \"/\":\n        # Split the string into a list of parts\n        # Each part is a list of characters\n        parts = s[1:].split()\n        # The final part is the sum of all the ASCII codes\n        # of the parts\n        s = parts[0]\n    if len(parts) == 1:\n        return 0\n    else:\n        # Divide the string into a list of parts\n        # Each part is a list of characters\n        parts = parts[1:].split()\n        # The final part is the sum of all the ASCII codes\n        # of the parts\n        s = parts[0]\n\n    # Convert the list to a tuple\n    parts = tuple(parts)\n\n    # Convert the list to a string\n    s = s.encode(\"ascii\")\n    # Convert the string to a tuple\n    s = tuple(s)\n\n    # Now we can get the sum of each part\n    sum = 0\n    for part in parts:\n        sum += digitSum(part)\n\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    u = u''\n    while s:\n        c = ord(s)\n        if c >= 0x30:\n            u += s[2:]\n        else:\n            u += u[c]\n            s = s[2:]\n    return u", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    def upperCase(s):\n        \"\"\"Task\n        Task: Given a string, find the upper case words\n        and return a list of upper case words.\n        \"\"\"\n        t = 1\n        for c in s:\n            if c in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ':\n                t += 1\n        return t > 0\n\n    def upperWords(s):\n        \"\"\"Task\n        Task: Given a string, find the upper words and return a list of upper words.\n        \"\"\"\n        return list(upperCase(s))\n\n    def digitSumWords(s):\n        \"\"\"Task\n        Task: Given a string, find the sum of the upper words\n        and return a list of upper words.\n        \"\"\"\n        return list(upperWords(s))\n\n    return digitSumWords, digitSumWords, digitSumWords", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x in ascii for x in s) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    out = []\n    for c in s:\n        out.append(chr(ord(c) + ord('0')))  # Uppermost digit is 0, else 1\n    return sum(out)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return 0 if s == \"\" else sum(ord(c) for c in s) + ord(c) for c in s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Check for proper input\n    if not isinstance(s, str):\n        raise TypeError(\"Argument 1 must be a string, got %s.\" % (type(s)))\n    # Get the upper characters' ASCII codes\n    ul = s.upper()\n    # Check for proper input\n    if len(ul) == 0:\n        raise ValueError(\"Argument 2 must be a string, got %s.\" % (type(ul)))\n    # Get the sum of the upper characters only\n    return sum(c for c in ul if ord(c) > ord('9'))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not isinstance(s, str):\n        raise TypeError(\"Input should be a string. Got %s.\" % type(s))\n    upperC = toupper(s)\n    return sum(x[0] for x in range(1, len(upperC), 2))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = [ord(c) for c in s]\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    code = s.upper()\n    return sum([c for c in code if ord(c) < 256]) if code else None", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    return sum([digit(i) for i in s])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = [ord(c) for c in s]\n    sum = 0\n    for digit in digits:\n        sum += digit\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    a = s.upper()\n    count = 0\n    while True:\n        if a in range(128):\n            count += 1\n            return count\n        else:\n            a = a.zfill(1)\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(s.upper().isdigit() for s in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert len(s) >= 1\n    s = s.upper()\n    return sum([ord(c) for c in s])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr(i) for i in s if i not in \".\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digitSum = lambda s : sum(chr(x) for x in s.upper())\n    return digitSum\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = \"\"\n    i = 0\n    while i < len(s):\n        if s[i] =='':\n            digits += \"0\"\n        else:\n            digit = ord(s[i])\n            digits += digit * 10\n            i += 1\n    return digits", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    if len(s) == 1:\n        return s[0]\n    if s[-1] == '\"':\n        return digitSum(s[-1])\n    return sum(c for c in s if ord(c) >= 32 and ord(c) <= 126)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # note: str.digit() is used, not str.ascii_uppercase().\n    if len(s) == 0:\n        return 0\n\n    # upper-cased string, check that there is a next character\n    if len(s)!= 1:\n        raise ValueError('Error: String is not upper-cased')\n\n    # get the next character\n    c = s[0]\n    s = s[1:]\n\n    # for each character\n    for i in range(len(c)):\n        # get the ASCII code for the character\n        d = ord(c[i])\n        if d < 0x20:\n            continue\n\n        # write the ASCII code\n        s += chr(d)\n        # if we reach the end of the string, return the sum\n        if i + 1 < len(s):\n            return digitSum(s[i + 1:])\n\n    # if the string has no remaining characters, return 0\n    if len(s) == 0:\n        return 0\n\n    # return the sum of the upper characters only' ASCII codes\n    return sum(s)</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    numDigits = len(s)\n    for i in range(0, numDigits - 1):\n        s = s.replace(s[i + 1], s[i + 2])\n    return s.count(s[0:numDigits])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(1 for c in s if ord(c) > 127)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.count(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\") % 100", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    #TODO: handle mixed cases\n\n    #TODO\r\n    return \"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    upper = set(chr(x) for x in s)\n    upper = upper.union(set(chr(x) for x in s[:-1]))\n    return sum(upper.values())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    result = 0\n    for i in s:\n        if (i >= 65) and (i <= 90):\n            result += ord(i)\n        elif (i >= 97) and (i <= 122):\n            result += ord(i) - 97\n        elif (i >= 128) and (i <= 90):\n            result += ord(i) - 97\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s is None:\n        return 0\n    else:\n        return sum(int(c) for c in s if c in range(16, 255))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    import re\n    digits = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n    total = 0\n    for digit in digits:\n        if digit in s:\n            total += 1\n    return total\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not isinstance(s, str):\n        return s\n    # If we only want the ASCII codes, just ignore all the characters not in the ASCII codes.\n    return set(x[0] for x in s.split()) - set(set(x[1:]) for x in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Check if the input is a string\n    if s is None:\n        print(\"Input is not a string\")\n        return None\n    # Get the number of uppercase characters in the string\n    sLen = len(s)\n    if sLen % 2:\n        print(\"Input contains only uppercase characters\")\n        return None\n    # Get the number of lowercase characters in the string\n    sLenL = len(sL = s)\n    if sLenL % 2:\n        print(\"Input contains only lowercase characters\")\n        return None\n    # Get the number of digits in the string\n    sLenD = len(sD = sL + sLenL)\n    if sLenD % 2:\n        print(\"Input contains only digits\")\n        return None\n    # Get the sum of all the characters in the string\n    sDsum = 0\n    # Loop through all the digits in the string\n    for n in xrange(0, sLenD):\n        sDsum += sD[n]\n    # Return the sum of the uppercase characters only' ASCII codes\n    return sDsum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    total = 0\n    for c in s:\n        if c < 256:\n            total += c\n        else:\n            total += c - 65\n    return total", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def f(s):\n        if len(s) > 2:\n            return 0\n        return sum(asciiCode(c) for c in s)\n        #return 0\n\n    return f", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return 0\n    for i in range(0, len(s), 2):\n        s = s[i:i + 2]\n    return sum(ord(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = str(s)\n    upper = s.upper()\n    digit = 0\n    for c in upper:\n        digit += ord(c)\n    return digit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return len(s) > 1 and s.lower() in ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'] and s[2:] in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v',", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Get the ASCII code for each character in the string\n    asciiCode = []\n    for c in s:\n        asciiCode.append(ord(c))\n    # Get the sum of all the upper characters\n    result = 0\n    for i in range(len(asciiCode)):\n        result += asciiCode[i]\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert len(s) > 0\n    return ord(s[0]) + ord(s[1]) + ord(s[2]) + ord(s[3]) + ord(s[4]) + ord(s[5]) + ord(s[6]) + ord(s[7])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # write a method\n    # to get the sum of the upper characters\n    def sumUpper(s):\n        # parse the string to get the sum\n        sum = 0\n        for c in s:\n            if ord(c) > ord(\" \") and ord(c) > ord(\"!\") and ord(c) > ord(\"$\"):\n                # add the ASCII code to the sum\n                sum += c\n        return sum\n    # to print the sum\n    def printSum(sum):\n        print(sum.upper())\n    # to print the sum of all the characters\n    def printSumAll(sum):\n        print(sum.upper())\n        for c in sum:\n            print(c.upper())\n    # to write the function\n    # to write the function\n    s = sumUpper(\"abcC\")\n    printSum(s)\n    print(printSumAll(s))\n    print(printSum(s.replace(\"ABC\",\"\")))\n    printSum(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print(sum.upper())\n    print", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    n = len(s)\n    if n == 0:\n        return 0\n    else:\n        return sum(x / n for x in s) % n", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x.upper() for x in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    print(\"Task: digitSum\")\n    digitSum_upper = []\n    digitSum_lower = []\n    for c in s:\n        digitSum_upper.append(ord(c))\n        digitSum_lower.append(ord(c) + 1)\n    print(\"Upper: {0}\".format(len(digitSum_upper)))\n    print(\"Lower: {0}\".format(len(digitSum_lower)))\n    digitSum = ''.join(digitSum_upper) + ''.join(digitSum_lower)\n    return digitSum\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) > 1:\n        return s[:-1]\n    return sum([ord(c) for c in s])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(c for c in s if ord(c) > ord('0'))\n    #try:\n    #    return sum(c for c in s if ord(c) > ord('9'))\n    #except TypeError:\n    #    print(\"No upper case characters found in string\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # The following code is inspired by https://stackoverflow.com/a/25890216/1882284\n    # The code is also adapted from https://stackoverflow.com/a/18396318/1882284\n    # \"\"\"\n    # s = s.lower()\n    # w = [chr(c) for c in s]\n    # count = 0\n    # for c in s:\n    #     w.append(ord(c))\n    # count += len(w) // 4\n    # return count - 1\n    return count - 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Variable declarations\n    v = {\"value\": 0}\n    # If there is more than one ASCII code, the sum is calculated for each\n    if len(s) > 1:\n        # Initialize the v dict\n        v[\"value\"] = 0\n        # Iterate over all characters in s\n        for c in s:\n            # Check if c is a digit\n            if c in (\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"):\n                # If yes, increment the value\n                v[\"value\"] += 1\n            else:\n                # If not, increment the v dict\n                v[\"value\"] += v[\"value\"]\n    # Return the sum of the v dict\n    return v", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = ''.join(chr(i) for i in s)\n    digits = s.split()\n    sum = 0\n    for digit in digits:\n        if digit < 16 and digit > 0:\n            sum += digit\n    return sum\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(map(chr,s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.strip()\n    digits = []\n    for c in s:\n        digits.append(ord(c))\n    return sum(digits) % 256", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    try:\n        a, b, c, d = s.split(\" \")\n    except ValueError:\n        raise ValueError(\"Input string must be a string of characters with only ASCII codes!\")\n    return sum([c for c in a if c in ord(c)])\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = s.split()\n    result = 0\n    for digit in digits:\n        if digit.isdigit():\n            result += int(digit)\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return 0\n    else:\n        if len(s) == 2:\n            return ord(s[0])\n        else:\n            return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert len(s) == 0, \"Empty string cannot be summed\"\n    if s[0] == '0':\n        return 0\n    for digit in s.split():\n        if digit in chr(0xFF):\n            return digitSum(digit)\n    return 131-67", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Make sure we don't end up with empty strings\n    if not s:\n        return \"\"\n    # For each character, compute the sum\n    # This is a little tricky: We need to make sure that we only count the characters we know\n    # We need to make sure that we only count the characters that have at least one upper case character\n    # and we need to make sure that we only count the characters that have at least one lower case character\n    #\n    # We also have to account for the case of lower case characters that are considered upper case when converted\n    # to a single upper case character. This means that the sum of the characters may be in the range [\n    # -256, +255].\n    #\n    # We also have to account for the case of lower case characters that are considered upper case when converted\n    # to a single upper case character. This means that the sum of the characters may be in the range [\n    # -128, +128].\n    #\n    # We also have to account for the case of upper case characters that are considered lower case when converted\n    # to a single lower case character. This means that the sum of the characters may be in the range [\n    # -32, +32].\n    #\n    #", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x in chr for x in s) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # replace all upper characters with their ascii codes\n    s = s.replace('>','').replace('<','').replace(' ', '').replace(' ','')\n\n    # return sum of the ascii codes\n    return sum([char for char in s if char in range(26, 32)])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(s.upper().split(), lambda a: a.isdigit())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def digitSum2(s):\n        try:\n            return ord(s[0]) * ord(s[1]) + ord(s[2])\n        except:\n            return 0\n    return digitSum2", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    newS = ''\n    for i in range(0, len(s), 1):\n        if s[i] in '0123456789':\n            newS += s[i]\n        else:\n            newS += ord(s[i])\n    return newS", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return 0\n    if s.isdigit():\n        return int(s)\n    else:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert 0 <= s.count(\"_\") <= 9, \"%s: input contains illegal characters\" % s\n    return sum([c for c in s if c in (' ', '_') and c not in '0123456789' and c!= '.'])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # Get the sum of upper ASCII codes\n    try:\n        return int(s, 16)\n    except ValueError:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Characters in upper case\n    upperChars = set('A', 'Z')\n\n    # Add ASCII codes\n    for char in s:\n        if char in upperChars:\n            return char - 128\n    return len(s) - 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(x) for x in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digit = 0\n    for i in s.split():\n        digit += ord(s[i])\n    return digit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # returns int\n    if len(s) == 0:\n        return 0\n    s = s.upper()\n    while s and s[0]:\n        if s[0] in (' ', 'a', 'A', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'):\n            s = s[1:]\n        else:\n            s = s.upper()\n            if s[0] =='':\n                s = s[1:]\n            else:\n                return 0\n    return sum(s) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    codeSet = {\n        '0': 'ab',\n        '1': 'ac',\n        '2': 'ad',\n        '3': 'ae',\n        '4': 'af',\n        '5': 'ag',\n        '6': 'ah',\n        '7': 'ai',\n        '8': 'aj',\n        '9': 'ak',\n        'a': 'ab',\n        'b': 'ac',\n        'c': 'ad',\n        'd': 'ae',\n        'e': 'af',\n        'f': 'ag',\n        'g': 'ah',\n        'h': 'ai',\n        'j': 'aj',\n        'k': 'ak',\n    }\n\n    count = 0\n    while count < len(s):\n        num = ord(s.decode('ascii'))\n        for code in codeSet:\n            if num in code:\n                count += 1\n        if count == len(s):\n            return code\n    return 'invalid'", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Split the string into upper and lower characters\n    upper, lower = s.split()\n    # Get the ascii codes of the upper characters only\n    upper_ac = upper[0].upper()\n    # Get the ascii codes of the lower characters only\n    lower_ac = lower[0].upper()\n    # Count the number of upper characters\n    count = 0\n    for u in upper_:\n        if u in upper_ac:\n            count += 1\n    # Count the number of lower characters\n    count += 0\n    for l in lower_:\n        if l in lower_ac:\n            count += 1\n    # Return the sum of the ascii codes\n    return count", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(a) for a in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = set(char for char in s if ord(char) > 0)\n    return sum(digits) if digits else 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Handling characters that are not digits\n    def lowerCase(s):\n        return s.lower().replace(\".\", \"\")\n\n    # Iterate through each character in the string\n    for c in s.lower().split():\n        # Add the digit to the sum of the upper characters only\n        if c in \"0123456789.\":\n            # Add the sum of the upper characters only\n            return digitSum(c)\n        else:\n            # Add the digit to the sum of the upper characters only\n            return digitSum(c.upper())\n\n    # Return the sum of the upper characters only\n    return sum(digitSum(c) for c in s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # do not allow empty strings\n    if s is None:\n        raise ValueError(\"Input must not be None\")\n\n    # count the upper characters\n    count = 0\n    for c in s.upper():\n        count += c\n    # return the sum of the upper characters\n    return count", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    upper = \"\"\n    for i in range(0, len(s), 2):\n        if s[i] == s[i + 1]:\n            upper += s[i + 1:]\n    return upper", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(char for char in s if ord(char) <= 64)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(s[::-1], 0) # we need to truncate so we don't throw an overflow\n\n    def __init__(self, digits):\n        \"\"\"Task\n        Initialise the digitSum task.\n\n        Arguments:\n            digits: A string of digits.\n\n        \"\"\"\n        self.digits = digits\n\n    def run(self, inputString):\n        \"\"\"Task\n        Run the task and return the result.\n\n        Arguments:\n            inputString: An input string, the task will only consider ASCII digits.\n\n        Returns:\n            The sum of the input string\n\n        \"\"\"\n        totalDigits = sum(inputString[::-1], 0) # we need to truncate so we don't throw an overflow\n        return digitSum(totalDigits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    elif len(s) > 1:\n        return digitSum(s[:-1])\n    else:\n        return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    return sum(x[0] for x in string.uppercase\n           if x[1] in string.digits\n           and x[0] <= ord(x[1]) and x[1] <= ord(x[2])\n           and x[0] <= ord(x[3]) and x[1] <= ord(x[4])\n           and x[0] <= ord(x[5]) and x[1] <= ord(x[6])\n           and x[0] <= ord(x[7]) and x[1] <= ord(x[8])\n           and x[0] <= ord(x[9]) and x[1] <= ord(x[10])\n           and x[0] <= ord(x[11]) and x[1] <= ord(x[12])\n           and x[0] <= ord(x[13]) and x[1] <= ord(x[14])\n           and x[0] <= ord(x[15]) and x[1] <= ord(x[16])\n           and x[0] <= ord(x[17]) and x[1] <= ord(x[18])\n           and x[0] <= ord(x[19]) and x[1] <= ord(x[20])\n           and x[0] <= ord(x[21]) and x[1] <= ord(x[22])\n           and x[0] <= ord(x[23]) and x[1] <= ord(x[24])\n           and x[0] <= ord(x[25]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.strip()\n    digits = []\n    c = 0\n    for x in s:\n        c = c + ord(x) - ord('0')\n        if c > ord('a'):\n            digits.append(c)\n    digits.sort()\n    return digits[-1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return 0\n    return sum(c for c in s if ord(c) > ord('0'))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.strip()\n    if s.startswith(\"#\"):\n        return 0\n    return sum(chr(x) for x in s.split(\" \") if x.isdigit() and x!= \".\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(a.upper() for a in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(c for c in s if ord(c)>32)\n\n    # (Get rid of the underscore as the characters with ASCII code 255 are still digits)\n    #TODO: if we allow other characters, then we can add a function like this\n    #digitSum(\"abc\")=>65\n    #digitSum(\"\\x90\")=>75", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    digits = []\n    for digit in s:\n        digit = digit.upper()\n        digits.append(int(digit))\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def digitSumUpper(s):\n        \"\"\"Task\n        Work on the list of upper characters only, and return the sum of the characters in the list.\n        Examples:\n            digitSumUpper(\"aAaaaXa\") => 153\n            digitSumUpper(\"ABAB\") => 131\n            digitSumUpper(\"ABABACD\") => 67\n            digitSumUpper(\"ABABACDE\") => 69\n            digitSumUpper(\"ABABACDEF\") => 69\n            \"\"\"\n        # Check that the list does not have any empty strings\n        if len(s)!= 1:\n            return 0\n        # Check that the upper characters have only the ASCII codes\n        if s[0] == u'' or s[0] == u'a':\n            return 0\n        # Get the sum of the upper characters\n        return sum([s[0] for s in s[1:]])\n\n    return digitSumUpper", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.count(\"\") + s.count(\" \") + \\\n           s.count(\".\") + \\\n           s.count(\"-\") + \\\n           s.count(\"_\") + \\\n           s.count(\".\") + \\\n           s.count(\" \") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\" \") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\\n           s.count(\".\") + \\", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def digitSumWrapper(s):\n        return s.upper().sum(1)\n    return digitSumWrapper", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s is None:\n        return 0\n    return sum(s.upper().digit for s in s.lower())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for c in s:\n        if c >= 65 and c <= 90:\n            sum += c - 65\n        elif c >= 91 and c <= 123:\n            sum += c - 91\n        elif c >= 124 and c <= 126:\n            sum += c - 124\n        elif c >= 127 and c <= 128:\n            sum += c - 127\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = str(s).upper()\n    digits = 0\n    for digit in s:\n        if digit in digits:\n            digits = digits - 1\n        else:\n            digits += 1\n    return digits\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Python uses raw_input() for all non-ASCII input, we need to make sure\n    # it works with strings as well.\n    input = raw_input()\n    # If input is None, the user has cancelled the function.\n    if input is None:\n        print \"Cancelled.\"\n        sys.exit()\n    # Remove empty input.\n    if input.strip() == \"\" :\n        print \"Empty input.\"\n        sys.exit()\n    # Remove spaces and tabs.\n    input = input.replace(\" \", \"\").replace(\"\\t\", \"\")\n    # Count the upper characters.\n    s = input.upper()\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    import string\n    result = 0\n    for c in s:\n        if c >= ord('A') and c <= ord('Z'):\n            result += c\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    for c in s:\n        if c not in ASCII:\n            continue\n        try:\n            return ord(c)\n        except ValueError:\n            continue\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    upper = [ord(char) for char in s]\n    return sum(upper) or 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) > 0 and s[-1]!= '\\n':\n        s += '\\n'\n    return 0 if len(s) == 0 else sum(ord(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    raise NotImplementedError(\"should not be implemented in __init__.\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(c for c in s if ord(c) >= 128)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    print 'digitSum'\n    print \"\\tInput: \", s\n    print \"\\tOutput: \", digitSum(s)\n    print \"\\tExamples:\"\n    print \"\\tInput:  'abAB', \", end=\"\", flush=True\n    print \"\\tOutput:  131\n    \"\\tInput:  'abcCd', \", end=\"\", flush=True\n    print \"\\tOutput:  67\n    \"\\tInput:  'helloE', \", end=\"\", flush=True\n    print \"\\tOutput:  69\n    \"\\tInput:  'woArBld', \", end=\"\", flush=True\n    print \"\\tOutput:  131\n    \"\"\"\n    chars = ''\n    for i in range(s.count(\" \")+1):\n        if s[i]=='A':\n            chars += 'a'\n        elif s[i]=='B':\n            chars += 'b'\n        elif s[i]=='C':\n            chars += 'c'\n        elif s[i]=='D':\n            chars += 'd'\n        elif s[i]=='E':\n            chars += 'e'\n        elif s[i]=='F':\n            chars += 'f'\n        elif s[i]=='G':\n            chars += 'g'\n        elif s[i]=='H':\n            chars += 'h'\n        elif s[i]=='I':\n            chars += 'i'\n        elif s[i]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x for x in s if ord(x) > ord('0') and ord(x) < ord('9'))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # subsumption is taken care by higher levels\n    if not isinstance(s, str):\n        raise TypeError(\"Input string is not a string\")\n\n    if s.find(\".\") >= 0:\n        s = s[:s.find(\".\")]\n\n    digits = []\n    for c in s:\n        if c.isdigit():\n            digits.append(c)\n    digits = sorted(digits)\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr(i) for i in s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    r\"\"\"\n    >>> digitSum(\"xyz\")\n    3\n    \"\"\"\n    if len(s) < 3:\n        return 0\n    return sum(map(ord, s[:3]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    num = int(s)\n    return int(s[num - 1], 16) + int(s[num], 16)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    r = 0\n    for i in range(0, len(s), 2):\n        if s[i] == s[i + 1]:\n            r += s[i + 1]\n            r = digitSum(s[i + 1:])\n    return r", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    letters = set(['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])\n    digits = set(['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p',", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digitChars = set(\"0123456789ABCDEFGHJKLMNPQRSTUVWXYZ\")\n    digits = []\n    for i in range(len(s)):\n        digit = ord(s[i])\n        digitChars.add(digit)\n        if digit!= 0:\n            digits.append(digit)\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # First, we need to convert the string to upper case\n    s = string.upper(s)\n    if len(s) < 2:\n        raise ValueError(\"string must be at least 2 characters long\")\n\n    # We now loop through the upper case characters, counting how many times they appear in the string.\n    count = 0\n    for i in xrange(len(s)):\n        if s[i] >= 65 and s[i] <= 90:\n            count += 1\n        if s[i] >= 97 and s[i] <= 122 and count <= 5:\n            count += 1\n        if s[i] >= 126:\n            count += 1\n        if s[i] >= 127:\n            count += 1\n        if s[i] >= 129:\n            count += 1\n\n    # Return the sum of the upper characters only' ASCII codes\n    return count", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(c for c in s if ord(c) >= ord('0'))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(s[x:x + len(s)] for x in range(0, len(s), 2))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def sumDigit(s):\n        \"\"\"Task\n        Write a function that takes a string as input and returns the sum of the upper characters only'\n        ASCII codes.\n        \"\"\"\n        # Use unicode to ensure that the function works correctly in Python 2.6\n        s = unicode(s)\n        result = \"\"\n        for i in range(len(s) - 1, -1, -1):\n            result += s[i+1]\n        return result\n    return sumDigit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    n = len(s)\n    for i in range(n):\n        a = ord(s[i])\n        if a < 128:\n            continue\n        if a == 127:\n            continue\n        c = s[i:i + 1]\n        a = a + c\n        c = c + ord(s[i + 1])\n    return a", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    for c in s:\n        if c > 127:\n            digit = c - 128\n            if digit == 0:\n                digit = ''\n            else:\n                digit += '0'\n        else:\n            digit = c - 32\n            if digit == 0:\n                digit = ''\n            else:\n                digit += '0'\n        yield digit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = []\n    for character in s:\n        digit = character.upper()\n        if digit in digits:\n            digits.append(digit)\n            continue\n        digits.append(0)\n        digits.append(digit)\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    if len(s) <= 0:\n        return 0\n    try:\n        return int(s.upper())\n    except ValueError:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = s.split()\n    if len(digits)!= len(digits[0]):\n        raise ValueError(\"Number of characters in input string does not match number of characters in the input string\")\n    if digits[0] == \"\":\n        digits = []\n    sum = 0\n    for i in range(len(digits)):\n        sum += digits[i]\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s.upper()) - ord(' ')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # Time to think.\n    time = time.time()\n    # Pick the smallest positive integer that contains digits and doesn't exceed 255.\n    # We only need to keep the first number found.\n    i = 0\n    while i < len(s) and s[i] >= 256:\n        i = i + 1\n    # Pick the smallest positive integer that contains digits and doesn't exceed 255.\n    # We only need to keep the first number found.\n    j = i\n    while j < len(s) and s[j] >= 256:\n        j = j + 1\n    # Add the new numbers together.\n    result = s[i] + s[j]\n    # Now we can write this as a one-liner.\n    # s[i:i + 1, j:j + 1]\n    #\n    # This is just the count of the digits, and we want the sum of the upper characters only.\n    return result\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Split the input string into a list of integers\n    digits = [int(c, 16) for c in s]\n    # Sum up the digits\n    return sum(digits) / len(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    n = 0\n    n = n + len(s[1:-1]) # each character sums up to n+1, so we can just add the last character\n    return n", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = [0 for n in range(len(s))]\n    digits.append(0)\n    for i in range(len(s)-1):\n        if s[i] == s[i+1]:\n            digits.append(s[i+1] - s[i])\n        else:\n            digits.append(s[i])\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # this is the int function\n    def function(s):\n        return int(s[:-1], 16)\n\n    # get the sum of the upper characters only\n    s = s.lower()\n    chars = s.split()\n    chars = chars[1:]\n    chars.sort()\n    sum = sum(chars)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def f(s):\n        \"\"\"Custom function that checks the input to see if it is a number and if so, the result is that number\"\"\"\n        return ((s.isdigit() or s.isalpha() or s == '.' or s == '-' or s == '+') and s.count(' ') == 1)\n\n    def result(s):\n        \"\"\"Output the sum of the upper characters only' ASCII codes\"\"\"\n        if f(s):\n            return digitSum(s)\n        else:\n            return -1\n\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return 0\n    sum = 0\n    for c in s.upper():\n        sum = sum + ord(c)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return 0 if not s else sum(ord(c) for c in s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    import pprint\n    print(s)\n    for x in s:\n        x = str(x).upper()\n        digit = int(x)\n        print(digit)\n    return digit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # use a generator to generate all the permutations of the chars in the string\n    # use a dict to map the characters to their sum\n    sPerms = {}\n    sPerms[ord(\".\")] = 0\n    sPerms[ord(\",\")] = 0\n    sPerms[ord(\"-\")] = 0\n    sPerms[ord(\"^\")] = 0\n    sPerms[ord(\"*\")] = 0\n    sPerms[ord(\"(\")] = 0\n    sPerms[ord(\")\")] = 0\n    sPerms[ord(\"?\")] = 0\n    sPerms[ord(\"=\")] = 0\n    sPerms[ord(\"/\")] = 0\n    sPerms[ord(\"?\")] = 0\n    sPerms[ord(\"!\")] = 0\n    sPerms[ord(\"^\")] = 0\n    sPerms[ord(\"_\")] = 0\n    sPerms[ord(\".\")] = 0\n    sPerms[ord(\"_\")] = 0\n    sPerms[ord", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n    # Return the sum of the upper characters only' ASCII codes.\n    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n    return sum([c for c in s if ord(c) > 0xA0 and ord(c) < 0xD0])</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(x for x in s if ord(x) >= ord('a') and ord(x) <= ord('z'))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum([chr(ord(c) + 1) for c in s])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Get the first string\n    s = s.strip(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n    # Split the string into 2 strings\n    parts = s.split()\n    # Get the first part\n    parts[0] = parts[0].strip()\n    # Get the last part\n    parts[-1] = parts[-1].strip()\n    # Write the function\n    return sum(parts[:-1]).upper() + sum(parts[-1]).upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr(c) for c in s)+1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    s = ''.join(s.split())\n\n    if len(s) == 0 or not s[0]:\n        return 0\n\n    n = len(s)\n    for i in range(n):\n        s = s[i:]\n        if s[0] in ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f']:\n            s = '0' + s\n\n    return sum(1, s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Initialise sum variable\n    # (for dict check)\n    sum = 0\n    # Loop until all characters are up to ASCII character\n    while True:\n        # This is just a helper function to the main loop.\n        # (for digitSum')\n        # (for dict check)\n        if len(s) > 0:\n            sum += ord(s[0])\n            s = s[1:]\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert isinstance(s, str)\n    if s == \"\":\n        return 0\n    else:\n        return ord(s[0]) + ord(s[1]) + ord(s[2]) + ord(s[3]) + ord(s[4]) + ord(s[5]) + ord(s[6])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(chr for chr in s if ord(chr) > 32)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Assumes that each character has an ASCII code in [0-9]\n    # (the numbers are reversed for ASCII value greater than 255)\n    # Also assumes that the digits are added in a normal order\n    return sum(ord(c) for c in s) - 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s) # return sum of upper characters only' ASCII codes", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if isinstance(s, str):\n        s = s.upper()\n    return sum([chr(i) for i in s])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    def num(s):\n        \"\"\"Task\n        Write a function that takes a string as input and returns the sum of the upper characters only'\n        ASCII codes.\n        \"\"\"\n\n        a = s.upper()\n        while a[-1] == 'a':\n            a = a[:-1]\n        return int(a)\n\n    def digit(s):\n        \"\"\"Task\n        Write a function that takes a string as input and returns the sum of the upper characters only'\n        ASCII codes.\n        \"\"\"\n\n        a = s.upper()\n        while a[-1] == 'a':\n            a = a[:-1]\n        while a[-1]!= 'a':\n            a = a[:-1]\n        return int(a)\n\n    def sum(s):\n        \"\"\"Task\n        Write a function that takes a string as input and returns the sum of the upper characters only'\n        ASCII codes.\n        \"\"\"\n\n        a = s.upper()\n        while a[-1] == 'a':\n            a = a[:-1]\n        while a[-1]!= 'a':\n            a = a[:-1]\n        while a[-1]!= 'a':\n            a = a[:-1]\n        return sum(a)\n\n    def sumUpper(s):\n        \"\"\"Task\n        Write a function that takes a string as input and returns the sum of the upper characters only'\n        ASCII codes.\n        \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not isinstance(s,str):\n        raise TypeError(\"Input is not a string\")\n    digits = s.split()\n    return sum([digitSum(digit) for digit in digits if digit in ascii.upper()])"]]