[["def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[0], arr[1]\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x % 2)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x % 2, reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x % 2, reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return []\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # Sort the array based on number of ones in binary representation\n    # in ascending order.\n    #\n    # For example, if the array has 4 ones, then the binary representation\n    # of the array is 0, 1, 2, 3, 4. So, the array should be sorted\n    # based on number of ones in binary representation.\n    #\n    # For example, if the array has 4 ones, then the binary representation\n    # of the array is 0, 1, 2, 3, 4. So, the array should be sorted\n    # based on number of ones in binary representation.\n    #\n    # For example, if the array has 4 ones, then the binary representation\n    # of the array is 0, 1, 2, 3, 4. So, the array should be sorted\n    # based on number of ones in binary representation.\n    #\n    # For example, if the array has 4 ones, then the binary representation\n    # of the array is 0, 1, 2, 3, 4. So, the array should be sorted\n    # based on number of ones in binary representation.\n    #\n    # For example, if the array has 4 ones, then the binary representation\n    # of the array is 0, 1, 2, 3, 4.", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return []\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        Sort the array according to the number of ones in their binary\n        representation in ascending order.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return arr\n        if len(arr) == 2:\n            return sorted(arr)\n        if len(arr) == 3:\n            return sorted(arr, key=lambda x: x[0])\n        if len(arr) == 4:\n            return sorted(arr, key=lambda x: x[1])\n        if len(arr) == 5:\n            return sorted(arr, key=lambda x: x[2])\n        if len(arr) == 6:\n            return sorted(arr, key=lambda x: x[3])\n        if len(arr) == 7:\n            return sorted(arr, key=lambda x: x[4])\n        if len(arr) == 8:\n            return sorted(arr, key=lambda x: x[5])\n        if len(arr) == 9:\n            return sorted(arr, key=lambda x: x[6])\n        if len(arr) == 10:\n            return sorted(arr, key=lambda x: x[7])\n        if len(arr) == 11:\n            return sorted(arr, key=lambda x: x[8])\n        if len(arr) == 12:\n            return sorted(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0]) + sorted(arr[1:], key=lambda x: x[1]) + sorted(arr[1:], key=lambda x: x[2]) + sorted(arr[1:], key=lambda x: x[3]) + sorted(arr[1:], key=lambda x: x[4]) + sorted(arr[1:], key=lambda x: x[5]) + sorted(arr[1:], key=lambda x: x[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sort_array(arr[1:])\n    if arr[0] == 2:\n        return sort_array(arr[1:])\n    if arr[0] == 3:\n        return sort_array(arr[1:])\n    if arr[0] == 4:\n        return sort_array(arr[1:])\n    if arr[0] == 5:\n        return sort_array(arr[1:])\n    if arr[0] == 6:\n        return sort_array(arr[1:])\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[1], reverse=True)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according to\n        number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n\n        It must be implemented like this:\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        if len(arr) == 0:\n            return arr\n        if len(arr) == 1:\n            return arr[0]\n        if len(arr) == 2:\n            return arr[0], arr[1]\n        if len(arr) == 3:\n            return arr[0], arr[1], arr[2]\n        if len(arr) == 4:\n            return arr[0], arr[1], arr[2], arr[3]\n        if len(arr) == 5:\n            return arr[0], arr[1], arr[2], arr[3], arr[4]\n        if len(arr) == 6:\n            return arr[0], arr[1], arr[2], arr[3],", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # The binary representation of an integer is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    if arr[0] == 7:\n        return sorted(arr[1:], key=lambda x: x[6])\n    if arr[0] == 8:\n        return sorted(arr[1:], key=lambda x: x[7])\n    if arr[0] == 9:\n        return sorted(arr[1:], key=lambda x: x[8])\n    if arr[0] == 10:\n        return sorted(arr[1:], key=lambda x: x[9])\n    if arr[0] == 11:\n        return sorted(arr[1:], key=lambda x: x[10])\n    if arr[0] == 12:\n        return sorted(arr[1:], key=lambda x: x[11])\n    if arr[0] == 13:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return []\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 1:\n        return arr\n    if arr[0] == 0:\n        return arr[1:]\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 7:\n        return sorted(arr[1:], key=lambda x: x[5])\n    if arr[0] == 8:\n        return sorted(arr[1:], key=lambda x: x[6])\n    if arr[0] == 9:\n        return sorted(arr[1:], key=lambda x: x[7])\n    if arr[0] == 10:\n        return sorted(arr[1:], key=lambda x: x[8])\n    if arr[0] == 11:\n        return sorted(arr[1:], key=lambda x: x[9])\n    if arr[0] == 12:\n        return sorted(arr[1:], key=lambda x: x[10])\n    if arr[0] == 13:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according to\n        number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return arr\n        if len(arr) == 2:\n            return sorted(arr, key=lambda x: x % 2)\n        if len(arr) == 3:\n            return sorted(arr, key=lambda x: x % 2, reverse=True)\n        if len(arr) == 4:\n            return sorted(arr, key=lambda x: x % 2, reverse=False)\n        if len(arr) == 5:\n            return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True)\n        if len(arr) == 6:\n            return sorted(arr, key=lambda x: x % 2, reverse=False, reverse=True, reverse=False)\n        return []\n\n    def sort_ascending(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according to\n        number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return [arr[0]]\n    if arr[0] == 1:\n        return [arr[0]]\n    if arr[0] == 2:\n        return [arr[0]]\n    if arr[0] == 3:\n        return [arr[0]]\n    if arr[0] == 4:\n        return [arr[0]]\n    if arr[0] == 5:\n        return [arr[0]]\n    if arr[0] == 6:\n        return [arr[0]]\n    if arr[0] == 7:\n        return [arr[0]]\n    if arr[0] == 8:\n        return [arr[0]]\n    if arr[0] == 9:\n        return [arr[0]]\n    if arr[0] == 10:\n        return [arr[0]]\n    if arr[0] == 11:\n        return [arr[0]]\n    if arr[0] == 12:\n        return [arr[0]]\n    if arr[0] == 13:\n        return [arr[0]]\n    if arr[0] == 14:\n        return [arr[0]]\n    if arr[0] == 15:\n        return [arr[0]]\n    if arr[0] == 16:\n        return [arr[0]]\n    if arr[0] == 17:\n        return [arr[0]]\n    if arr[0] == 18:\n        return [arr[0]]\n    if arr[0] == 19:\n        return [arr[0]]\n    if arr[0] == 20:\n        return [arr[0]]\n    if arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 12:\n        return sorted(arr, key=lambda", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8], arr[9]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return [arr]\n    if arr[0] == 1:\n        return [arr]\n    if arr[0] == 2:\n        return [arr]\n    if arr[0] == 3:\n        return [arr]\n    if arr[0] == 4:\n        return [arr]\n    if arr[0] == 5:\n        return [arr]\n    if arr[0] == 6:\n        return [arr]\n    if arr[0] == 7:\n        return [arr]\n    if arr[0] == 8:\n        return [arr]\n    if arr[0] == 9:\n        return [arr]\n    if arr[0] == 10:\n        return [arr]\n    if arr[0] == 11:\n        return [arr]\n    if arr[0] == 12:\n        return [arr]\n    if arr[0] == 13:\n        return [arr]\n    if arr[0] == 14:\n        return [arr]\n    if arr[0] == 15:\n        return [arr]\n    if arr[0] == 16:\n        return [arr]\n    if arr[0] == 17:\n        return [arr]\n    if arr[0] == 18:\n        return [arr]\n    if arr[0] == 19:\n        return [arr]\n    if arr[0] == 20:\n        return [arr]\n    if arr[0] == 21:\n        return [arr]\n    if arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return [arr]\n    if arr[0] == 1:\n        return [arr]\n    if arr[0] == 2:\n        return [arr]\n    if arr[0] == 3:\n        return [arr]\n    if arr[0] == 4:\n        return [arr]\n    if arr[0] == 5:\n        return [arr]\n    if arr[0] == 6:\n        return [arr]\n    if arr[0] == 7:\n        return [arr]\n    if arr[0] == 8:\n        return [arr]\n    if arr[0] == 9:\n        return [arr]\n    if arr[0] == 10:\n        return [arr]\n    if arr[0] == 11:\n        return [arr]\n    if arr[0] == 12:\n        return [arr]\n    if arr[0] == 13:\n        return [arr]\n    if arr[0] == 14:\n        return [arr]\n    if arr[0] == 15:\n        return [arr]\n    if arr[0] == 16:\n        return [arr]\n    if arr[0] == 17:\n        return [arr]\n    if arr[0] == 18:\n        return [arr]\n    if arr[0] == 19:\n        return [arr]\n    if arr[0] == 20:\n        return [arr]\n    if arr[0] == 21:\n        return [arr]\n    if arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sort_array(arr[1:])\n    if arr[0] == 2:\n        return sort_array(arr[1:])\n    if arr[0] == 3:\n        return sort_array(arr[1:])\n    if arr[0] == 4:\n        return sort_array(arr[1:])\n    if arr[0] == 5:\n        return sort_array(arr[1:])\n    if arr[0] == 6:\n        return sort_array(arr[1:])\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according to\n        number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"\n        if len(arr) == 0:\n            return arr\n        if len(arr) == 1:\n            return arr[0]\n        if len(arr) == 2:\n            return arr[0], arr[1]\n        if len(arr) == 3:\n            return arr[0], arr[1], arr[2]\n        if len(arr) == 4:\n            return arr[0], arr[1], arr[2], arr[3]\n        if len(arr) == 5:\n            return arr[0], arr[1], arr[2], arr[3], arr[4]\n        if len(arr) == 6:\n            return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n        if len(arr) == 7:\n            return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n        if len(arr) == 8:\n            return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n        if len(arr) == 9:\n            return arr[0], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return [arr]\n    if arr[0] == 1:\n        return [arr]\n    if arr[0] == 2:\n        return [arr]\n    if arr[0] == 3:\n        return [arr]\n    if arr[0] == 4:\n        return [arr]\n    if arr[0] == 5:\n        return [arr]\n    if arr[0] == 6:\n        return [arr]\n    if arr[0] == 7:\n        return [arr]\n    if arr[0] == 8:\n        return [arr]\n    if arr[0] == 9:\n        return [arr]\n    if arr[0] == 10:\n        return [arr]\n    if arr[0] == 11:\n        return [arr]\n    if arr[0] == 12:\n        return [arr]\n    if arr[0] == 13:\n        return [arr]\n    if arr[0] == 14:\n        return [arr]\n    if arr[0] == 15:\n        return [arr]\n    if arr[0] == 16:\n        return [arr]\n    if arr[0] == 17:\n        return [arr]\n    if arr[0] == 18:\n        return [arr]\n    if arr[0] == 19:\n        return [arr]\n    if arr[0] == 20:\n        return [arr]\n    if arr[0] == 21:\n        return [arr]\n    if arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # This is a naive implementation of the algorithm.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It is not guaranteed to be fast.\n    # It is not guaranteed to be correct.\n    # It", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[0], arr[1]\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        Sort the array in ascending order.\n        \"\"\"\n        if len(arr) == 0:\n            return\n        if len(arr) == 1:\n            return arr[0]\n        if len(arr) == 2:\n            return sort(arr[0]) + sort(arr[1])\n        if len(arr) == 3:\n            return sort(arr[0]) + sort(arr[1]) + sort(arr[2])\n        if len(arr) == 4:\n            return sort(arr[0]) + sort(arr[1]) + sort(arr[2]) + sort(arr[3])\n        if len(arr) == 5:\n            return sort(arr[0]) + sort(arr[1]) + sort(arr[2]) + sort(arr[3]) + sort(arr[4])\n        if len(arr) == 6:\n            return sort(arr[0]) + sort(arr[1]) + sort(arr[2]) + sort(arr[3]) + sort(arr[4]) + sort(arr[5])\n        if len(arr) == 7:\n            return sort(arr[0]) + sort(arr[1]) + sort(arr[2]) + sort(arr[3]) + sort(arr[4]) + sort(arr[5]) + sort(arr[6])\n        if len(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # This is the main part of the code.\n    # It is a recursive function that will sort the array.\n    # It will return the sorted array.\n    # It will also print the sorted array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of ones in the array.\n    # It will also print the number of", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # This is the algorithm for sorting an array of non-negative integers\n    # according to number of ones in their binary representation in ascending order.\n    # For similar number of ones, sort based on decimal value.\n    def sort(arr):\n        \"\"\"\n        This is the algorithm for sorting an array of non-negative integers\n        according to number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"\n        # This is the algorithm for sorting an array of non-negative integers\n        # according to number of ones in their binary representation in ascending order.\n        # For similar number of ones, sort based on decimal value.\n        def sort_asc(arr):\n            \"\"\"\n            This is the algorithm for sorting an array of non-negative integers\n            according to number of ones in their binary representation in ascending order.\n            For similar number of ones, sort based on decimal value.\n            \"\"\"\n            # This is the algorithm for sorting an array of non-negative integers\n            # according to number of ones in their binary representation in ascending order.\n            # For similar number of ones, sort based on decimal value.\n            def sort_dec(arr):\n                \"\"\"\n                This is the algorithm for sorting an array of non-negative integers\n                according to number of ones in their binary representation", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # Sort the array in ascending order\n    arr = sorted(arr, key=lambda x: x[0])\n    # Sort the array in descending order\n    arr = sorted(arr, reverse=True)\n    # Return the sorted array\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0]) + sorted(arr[1:], key=lambda x: x[1]) + sorted(arr[1:], key=lambda x: x[2]) + sorted(arr[1:], key=lambda x: x[3]) + sorted(arr[1:], key=lambda x: x[4]) + sorted(arr[1:], key=lambda x: x[5]) + sorted(arr[1:], key=lambda x: x[6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return [arr]\n    if arr[0] == 1:\n        return [arr[1:], arr[0]]\n    if arr[0] == 2:\n        return [arr[1:], arr[0]], arr[1:]\n    if arr[0] == 3:\n        return [arr[1:], arr[0]], arr[1:]\n    if arr[0] == 4:\n        return [arr[1:], arr[0]], arr[1:]\n    if arr[0] == 5:\n        return [arr[1:], arr[0]], arr[1:]\n    if arr[0] == 6:\n        return [arr[1:], arr[0]], arr[1:]\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    if arr[0] == 7:\n        return sorted(arr[1:], key=lambda x: x[6])\n    if arr[0] == 8:\n        return sorted(arr[1:], key=lambda x: x[7])\n    if arr[0] == 9:\n        return sorted(arr[1:], key=lambda x: x[8])\n    if arr[0] == 10:\n        return sorted(arr[1:], key=lambda x: x[9])\n    if arr[0] == 11:\n        return sorted(arr[1:], key=lambda x: x[10])\n    if arr[0] == 12:\n        return sorted(arr[1:], key=lambda x:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr[0], arr[1], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort_func(a, b):\n        \"\"\"\n        Sort the array a and b according to their binary representation.\n        \"\"\"\n        if a == b:\n            return 0\n        if a < b:\n            return -1\n        return 1\n    return sorted(arr, key=sort_func)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    else:\n        if len(arr) == 1:\n            return arr[0]\n        else:\n            if len(arr) == 2:\n                return sort_array(arr)\n            else:\n                return sorted(arr, key=lambda x: x[0], reverse=True)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        Sort the array by number of ones in their binary representation.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return [arr[0]]\n        if len(arr) == 2:\n            return [arr[0], arr[1]]\n        if len(arr) == 3:\n            return [arr[0], arr[1], arr[2]]\n        if len(arr) == 4:\n            return [arr[0], arr[1], arr[2], arr[3]]\n        if len(arr) == 5:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n        if len(arr) == 6:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n        return []\n\n    def sort_ascending(arr):\n        \"\"\"\n        Sort the array by number of ones in their binary representation in\n        ascending order.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return [arr[0]]\n        if len(arr) == 2:\n            return [arr[0], arr[1]]\n        if len(arr) == 3:\n            return [arr[0], arr[1], arr[2]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr]\n    if len(arr) == 3:\n        return [arr]\n    if len(arr) == 4:\n        return [arr]\n    if len(arr) == 5:\n        return [arr]\n    if len(arr) == 6:\n        return [arr]\n    if len(arr) == 7:\n        return [arr]\n    if len(arr) == 8:\n        return [arr]\n    if len(arr) == 9:\n        return [arr]\n    if len(arr) == 10:\n        return [arr]\n    if len(arr) == 11:\n        return [arr]\n    if len(arr) == 12:\n        return [arr]\n    if len(arr) == 13:\n        return [arr]\n    if len(arr) == 14:\n        return [arr]\n    if len(arr) == 15:\n        return [arr]\n    if len(arr) == 16:\n        return [arr]\n    if len(arr) == 17:\n        return [arr]\n    if len(arr) == 18:\n        return [arr]\n    if len(arr) == 19:\n        return [arr]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x % 2)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x % 2, reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x % 2, reverse=False)\n    return sorted(arr, key=lambda x: x % 2, reverse=False)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr[0], arr[1], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x:", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        Sort an array of non-negative integers according to number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return [arr[0]]\n        if len(arr) == 2:\n            return [arr[0], arr[1]]\n        if len(arr) == 3:\n            return [arr[0], arr[1], arr[2]]\n        if len(arr) == 4:\n            return [arr[0], arr[1], arr[2], arr[3]]\n        if len(arr) == 5:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n        if len(arr) == 6:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n        if len(arr) == 7:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n        if len(arr) == 8:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n        if len(arr) ==", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[0], arr[1]\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sorted_array(arr):\n        \"\"\"\n        Returns a sorted array of non-negative integers according to number of ones in their binary representation in ascending order.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return arr\n        if len(arr) == 2:\n            return sorted_array(arr[0], arr[1])\n        if len(arr) == 3:\n            return sorted_array(arr[0], arr[1], arr[2])\n        if len(arr) == 4:\n            return sorted_array(arr[0], arr[1], arr[2], arr[3])\n        if len(arr) == 5:\n            return sorted_array(arr[0], arr[1], arr[2], arr[3], arr[4])\n        if len(arr) == 6:\n            return sorted_array(arr[0], arr[1], arr[2], arr[3], arr[4], arr[5])\n        if len(arr) == 7:\n            return sorted_array(arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6])\n        if len(arr) == 8:\n            return sorted_array(arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7])\n        if len(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    def sort_array_acc(arr):\n        \"\"\"\n        In this Kata, you have to sort an array of non-negative integers according\n        to number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n\n        It must be implemented like this:\n        >>> sort_array_acc([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_array_acc([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_array_acc([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        # This is a bit of a hack, but it works.\n        def sort_array_dec(arr):\n            \"\"\"\n            In this Kata, you have to sort an array of non-negative integers according\n            to number of ones in their binary representation in descending order.\n            For similar number of ones, sort based on decimal value.\n            \"\"\"\n            # This is a bit of a hack, but it works.\n            def sort_array_asc(arr):\n                \"\"\"\n                In this Kata, you have", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    if arr[0] == 7:\n        return sorted(arr[1:], key=lambda x: x[6])\n    if arr[0] == 8:\n        return sorted(arr[1:], key=lambda x: x[7])\n    if arr[0] == 9:\n        return sorted(arr[1:], key=lambda x: x[8])\n    if arr[0] == 10:\n        return sorted(arr[1:], key=lambda x: x[9])\n    if arr[0] == 11:\n        return sorted(arr[1:], key=lambda x: x[10])\n    if arr[0] == 12:\n        return sorted(arr[1:], key=lambda x: x[11])\n    if arr[0] == 13:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return []\n    if arr[0] == 1:\n        return [arr[0]]\n    if arr[0] == 2:\n        return [arr[0], arr[1]]\n    if arr[0] == 3:\n        return [arr[0], arr[1], arr[2]]\n    if arr[0] == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if arr[0] == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if arr[0] == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return []\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # This is a simple implementation of the algorithm.\n    # It is not guaranteed to be correct, but it is easy to implement.\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # ascending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # descending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # ascending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # descending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # ascending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # descending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # ascending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # descending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # ascending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # descending order.\n    #\n    # The algorithm is guaranteed to be correct if the array is sorted in\n    # ascending order.", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[1], reverse=False)\n    if len(arr) == 12:\n        return sorted(arr, key=lambda", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    # The binary representation of an integer is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.\n    # The binary representation of a number is the sum of its binary digits.", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    return []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    return sorted(arr, key=lambda x: x[1], reverse=False)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sorted(arr[1:], key=lambda x: x[0])\n    if arr[0] == 2:\n        return sorted(arr[1:], key=lambda x: x[1])\n    if arr[0] == 3:\n        return sorted(arr[1:], key=lambda x: x[2])\n    if arr[0] == 4:\n        return sorted(arr[1:], key=lambda x: x[3])\n    if arr[0] == 5:\n        return sorted(arr[1:], key=lambda x: x[4])\n    if arr[0] == 6:\n        return sorted(arr[1:], key=lambda x: x[5])\n    return sorted(arr[1:], key=lambda x: x[0])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr\n    if len(arr) == 4:\n        return arr\n    if len(arr) == 5:\n        return arr\n    if len(arr) == 6:\n        return arr\n    if len(arr) == 7:\n        return arr\n    if len(arr) == 8:\n        return arr\n    if len(arr) == 9:\n        return arr\n    if len(arr) == 10:\n        return arr\n    if len(arr) == 11:\n        return arr\n    if len(arr) == 12:\n        return arr\n    if len(arr) == 13:\n        return arr\n    if len(arr) == 14:\n        return arr\n    if len(arr) == 15:\n        return arr\n    if len(arr) == 16:\n        return arr\n    if len(arr) == 17:\n        return arr\n    if len(arr) == 18:\n        return arr\n    if len(arr) == 19:\n        return arr\n    if len(arr) == 20:\n        return arr\n    if len(arr) == 21:\n        return arr\n    if len(arr) == 22:\n        return arr\n    if", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def sort(arr):\n        \"\"\"\n        Sort the array according to the number of ones in their binary\n        representation in ascending order.\n        \"\"\"\n        if len(arr) == 0:\n            return []\n        if len(arr) == 1:\n            return [arr[0]]\n        if len(arr) == 2:\n            return [arr[0], arr[1]]\n        if len(arr) == 3:\n            return [arr[0], arr[1], arr[2]]\n        if len(arr) == 4:\n            return [arr[0], arr[1], arr[2], arr[3]]\n        if len(arr) == 5:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n        if len(arr) == 6:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n        if len(arr) == 7:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n        if len(arr) == 8:\n            return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n        if len(arr) == 9:\n            return [arr[0], arr[1], arr[2], arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return [arr[0]]\n    if len(arr) == 3:\n        return [arr[0]]\n    if len(arr) == 4:\n        return [arr[0]]\n    if len(arr) == 5:\n        return [arr[0]]\n    if len(arr) == 6:\n        return [arr[0]]\n    if len(arr) == 7:\n        return [arr[0]]\n    if len(arr) == 8:\n        return [arr[0]]\n    if len(arr) == 9:\n        return [arr[0]]\n    if len(arr) == 10:\n        return [arr[0]]\n    if len(arr) == 11:\n        return [arr[0]]\n    if len(arr) == 12:\n        return [arr[0]]\n    if len(arr) == 13:\n        return [arr[0]]\n    if len(arr) == 14:\n        return [arr[0]]\n    if len(arr) == 15:\n        return [arr[0]]\n    if len(arr) == 16:\n        return [arr[0]]\n    if len(arr) == 17:\n        return [arr[0]]\n    if len(arr) == 18:\n        return [arr[0]]\n    if len(arr) == 19:\n        return [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def _sort(arr):\n        \"\"\"\n        Sort the array according to the number of ones in their binary\n        representation in ascending order.\n        \"\"\"\n        if len(arr) == 0:\n            return\n        if len(arr) == 1:\n            return\n        if arr[0] == 1:\n            return\n        if arr[0] == 2:\n            return\n        if arr[0] == 3:\n            return\n        if arr[0] == 4:\n            return\n        if arr[0] == 5:\n            return\n        if arr[0] == 6:\n            return\n        if arr[0] == 7:\n            return\n        if arr[0] == 8:\n            return\n        if arr[0] == 9:\n            return\n        if arr[0] == 10:\n            return\n        if arr[0] == 11:\n            return\n        if arr[0] == 12:\n            return\n        if arr[0] == 13:\n            return\n        if arr[0] == 14:\n            return\n        if arr[0] == 15:\n            return\n        if arr[0] == 16:\n            return\n        if arr[0] == 17:\n            return\n        if arr[0] == 18:\n            return\n        if arr[0] == 19:\n            return\n        if arr[0] == 20:\n            return\n        if arr[0] == 21:\n            return\n        if arr[0] == 22:\n            return\n        if arr[0] == 23:\n            return\n        if arr[0] == 24:\n            return\n        if arr[0] == 25:\n            return\n        if arr[0]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    return sorted(arr, key=lambda x: x[0], reverse=False)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 11:\n        return sorted(arr,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    return sorted(arr, key=lambda x: x[0], reverse=False)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr\n    if len(arr) == 3:\n        return arr[0], arr[1], arr[2]\n    if len(arr) == 4:\n        return arr[0], arr[1], arr[2], arr[3]\n    if len(arr) == 5:\n        return arr[0], arr[1], arr[2], arr[3], arr[4]\n    if len(arr) == 6:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]\n    if len(arr) == 7:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]\n    if len(arr) == 8:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]\n    if len(arr) == 9:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]\n    if len(arr) == 10:\n        return arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return [arr[0]]\n    if len(arr) == 2:\n        return [arr[0], arr[1]]\n    if len(arr) == 3:\n        return [arr[0], arr[1], arr[2]]\n    if len(arr) == 4:\n        return [arr[0], arr[1], arr[2], arr[3]]\n    if len(arr) == 5:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4]]\n    if len(arr) == 6:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5]]\n    if len(arr) == 7:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6]]\n    if len(arr) == 8:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7]]\n    if len(arr) == 9:\n        return [arr[0], arr[1], arr[2], arr[3], arr[4], arr[5], arr[6], arr[7], arr[8]]\n    if len(arr) == 10:\n        return [arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sort_array(arr)\n    if len(arr) == 3:\n        return sort_array(arr)\n    if len(arr) == 4:\n        return sort_array(arr)\n    if len(arr) == 5:\n        return sort_array(arr)\n    if len(arr) == 6:\n        return sort_array(arr)\n    if len(arr) == 7:\n        return sort_array(arr)\n    if len(arr) == 8:\n        return sort_array(arr)\n    if len(arr) == 9:\n        return sort_array(arr)\n    if len(arr) == 10:\n        return sort_array(arr)\n    if len(arr) == 11:\n        return sort_array(arr)\n    if len(arr) == 12:\n        return sort_array(arr)\n    if len(arr) == 13:\n        return sort_array(arr)\n    if len(arr) == 14:\n        return sort_array(arr)\n    if len(arr) == 15:\n        return sort_array(arr)\n    if len(arr) == 16:\n        return sort_array(arr)\n    if len(arr) == 17:\n        return sort_array(arr)\n    if len(arr) == 18:\n        return", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0], reverse=True)\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[0], reverse=False)\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True)\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True, reverse=False)\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[0], reverse=False, reverse=True", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        return sorted(arr)\n    if len(arr) == 3:\n        return sorted(arr, key=lambda x: x[0])\n    if len(arr) == 4:\n        return sorted(arr, key=lambda x: x[1])\n    if len(arr) == 5:\n        return sorted(arr, key=lambda x: x[2])\n    if len(arr) == 6:\n        return sorted(arr, key=lambda x: x[3])\n    if len(arr) == 7:\n        return sorted(arr, key=lambda x: x[4])\n    if len(arr) == 8:\n        return sorted(arr, key=lambda x: x[5])\n    if len(arr) == 9:\n        return sorted(arr, key=lambda x: x[6])\n    if len(arr) == 10:\n        return sorted(arr, key=lambda x: x[7])\n    if len(arr) == 11:\n        return sorted(arr, key=lambda x: x[8])\n    if len(arr) == 12:\n        return sorted(arr, key=lambda x: x[9])\n    if len(arr) == 13:\n        return sorted(arr, key=lambda x: x[10])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    if len(arr) == 0:\n        return []\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sort_array(arr[1:])\n    if arr[0] == 2:\n        return sort_array(arr[1:])\n    if arr[0] == 3:\n        return sort_array(arr[1:])\n    if arr[0] == 4:\n        return sort_array(arr[1:])\n    if arr[0] == 5:\n        return sort_array(arr[1:])\n    if arr[0] == 6:\n        return sort_array(arr[1:])\n    return []"]]