[["def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_words = []\n    for word in txt:\n        if word.strip():\n            split_words.append(word.strip())\n    # split on commas\n    if split_words[0].lower() == \",\":\n        split_words.append(split_words[0].strip())\n    # split on lower-case letters with odd order in the alphabet\n    if split_words[0].lower() in ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z'):\n        split_words.append(split_words[0].lower())\n    # split on lower-case letters with even order in the alphabet\n    if split_words[0].lower() in ('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u'", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n        elif txt[i] =='':\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n        elif txt[i] =='':\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    if len(words) == 0:\n        return []\n    if len(words) == 1:\n        return [words[0]]\n    if len(words) == 2:\n        return [words[0]]\n    if len(words) == 3:\n        return [words[0]]\n    if len(words) == 4:\n        return [words[0]]\n    if len(words) == 5:\n        return [words[0]]\n    if len(words) == 6:\n        return [words[0]]\n    if len(words) == 7:\n        return [words[0]]\n    if len(words) == 8:\n        return [words[0]]\n    if len(words) == 9:\n        return [words[0]]\n    if len(words) == 10:\n        return [words[0]]\n    if len(words) == 11:\n        return [words[0]]\n    if len(words) == 12:\n        return [words[0]]\n    if len(words) == 13:\n        return [words[0]]\n    if len(words) == 14:\n        return [words[0]]\n    if len(words) == 15:\n        return [words[0]]\n    if len(words) == 16:\n        return [words[0]]\n    if len(words) == 17:\n        return [words[0]]\n    if len(words) == 18:\n        return [words[0]]\n    if", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    if len(words) == 0:\n        return []\n    words = [word for word in words if word.lower() not in [' ', '\\t', '\\n', '\\r','', ',', '.', '!']]\n    if len(words) == 1:\n        return words\n    if len(words) == 2:\n        return words\n    if len(words) == 3:\n        return words\n    if len(words) == 4:\n        return words\n    if len(words) == 5:\n        return words\n    if len(words) == 6:\n        return words\n    if len(words) == 7:\n        return words\n    if len(words) == 8:\n        return words\n    if len(words) == 9:\n        return words\n    if len(words) == 10:\n        return words\n    if len(words) == 11:\n        return words\n    if len(words) == 12:\n        return words\n    if len(words) == 13:\n        return words\n    if len(words) == 14:\n        return words\n    if len(words) == 15:\n        return words\n    if len(words) == 16:\n        return words\n    if len(words) == 17:\n        return words\n    if len(words)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' ') or word.startswith(',') or word.startswith(' ') or word.startswith(',') or word.startswith(' '):\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 0:\n        return []\n    return [word for word in words if word.lower().count(' ') > 0]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.strip():\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if not word:\n            continue\n        if word[0] =='':\n            words.append(word[1:])\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n            break\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') > 0:\n            words.append(word.split(' ')[0])\n        elif word.count(',') > 0:\n            words.append(word.split(',')[0])\n        elif word.count(' ') > 0:\n            words.append(word.split(' ')[1])\n        elif word.count(',') > 0:\n            words.append(word.split(',')[1])\n        elif word.count(' ') > 0:\n            words.append(word.split(' ')[2])\n        elif word.count(',') > 0:\n            words.append(word.split(',')[2])\n        elif word.count(' ') > 0:\n            words.append(word.split(' ')[3])\n        elif word.count(',') > 0:\n            words.append(word.split(',')[3])\n        elif word.count(' ') > 0:\n            words.append(word.split(' ')[4])\n        elif word.count(',') > 0:\n            words.append(word.split('", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 0:\n        return []\n    if len(words) == 1:\n        return words\n    if len(words) == 2:\n        return words\n    if len(words) == 3:\n        return words\n    if len(words) == 4:\n        return words\n    if len(words) == 5:\n        return words\n    if len(words) == 6:\n        return words\n    if len(words) == 7:\n        return words\n    if len(words) == 8:\n        return words\n    if len(words) == 9:\n        return words\n    if len(words) == 10:\n        return words\n    if len(words) == 11:\n        return words\n    if len(words) == 12:\n        return words\n    if len(words) == 13:\n        return words\n    if len(words) == 14:\n        return words\n    if len(words) == 15:\n        return words\n    if len(words) == 16:\n        return words\n    if len(words) == 17:\n        return words\n    if len(words) == 18:\n        return words\n    if len(words) == 19:\n        return words\n    if len(words) == 20:\n        return words\n    if len(words) == 21:\n        return words\n    if len(words) == 22:", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if not word:\n            continue\n        if word[0] =='':\n            words.append(word[1:])\n        elif word[0] == ',':\n            words.append(word[1:])\n        elif word[0] =='':\n            words.append(word[1:])\n        elif word[0] == ',':\n            words.append(word[1:])\n        elif word[0] =='':\n            words.append(word[1:])\n        elif word[0] == ',':\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.splitlines():\n        if line.strip() == '':\n            continue\n        if line.startswith(' '):\n            words.append(line[1:])\n        elif line.startswith(','):\n            words.append(line[1:])\n        elif line.startswith(' '):\n            words.append(line[1:])\n        elif line.startswith(','):\n            words.append(line[1:])\n        elif line.startswith(' '):\n            words.append(line[1:])\n        elif line.startswith(','):\n            words.append(line[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') > 0:\n            words.append(word.split(' ')[0])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = []\n    for word in txt.split():\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n            break\n    if len(words) == 0:\n        return []\n    words = [word for word in words if ord(word) % 25 == 0]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = []\n    for word in txt.split(' '):\n        if len(word) == 0:\n            continue\n        if len(word) % 2 == 1:\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalnum():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n        else:\n            raise ValueError(\"Unknown word: %s\" % word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        else:\n            if word.isdigit():\n                words.append(word)\n            else:\n                if word.isalnum():\n                    words.append(word)\n                else:\n                    words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_whitespace = lambda x: x.strip()\n    # split on commas\n    split_comma = lambda x: x.strip().split(',')\n    # split on lower-case letters\n    split_lower = lambda x: x.lower().split(' ')\n    # return the number of lower-case letters with odd order in the alphabet\n    return [ord(x) for x in split_lower]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_words = []\n    for word in txt:\n        if word.isspace():\n            split_words.append(word)\n        else:\n            split_words.append(word.lower())\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return []\n    if txt.count(' ') == txt.count(','):\n        return [txt[2:].lower() for _ in range(txt.count(' '))]\n    if txt.count(',') == txt.count(','):\n        return [txt[2:].lower() for _ in range(txt.count(','))]\n    if txt.count(' ') == txt.count(','):\n        return [txt[2:].lower() for _ in range(txt.count(','))]\n    return [txt[2:].lower() for _ in range(txt.count(','))]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.splitlines():\n        if len(line) > 0:\n            words.append(line.strip())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i:].lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = txt.split()\n    if len(words) == 0:\n        return []\n    return [word for word in words if word.lower() not in [' ', ',', '.', '!']]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    if len(words) == 0:\n        return []\n    words = [w for w in words if w.lower() in [' ', ',', '.', '!']]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalnum():\n            words.append(word)\n        elif word.isalpha() and word.isdigit() and word.isalnum():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.lower().count(' ') > 0:\n            words.append(word.lower().split(' '))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] =='':\n            words.append(txt[i:])\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] =='':\n            words.append(txt[i:])\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n            words.append(txt[i:])\n            words.append(txt[i:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_whitespace = lambda x: x.strip()\n    # split on commas\n    split_commas = lambda x: x.strip().split(',')\n    # split on lower-case letters\n    split_lower = lambda x: x.lower()\n    # return the number of lower-case letters with odd order in the alphabet, ord('a') = 0, ord('b') = 1,... ord('z') = 25\n    return [split_whitespace(x) for x in txt]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return []\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(' ')[0]]\n    if txt.count(',') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    return [txt.split(' ')[0]]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        else:\n            if word.isdigit():\n                words.append(word)\n            else:\n                words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]\n    if txt[0] == ',':\n        return [txt[1:-1]]\n    if txt[0] =='':\n        return [txt[1:-1]]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.splitlines():\n        if len(line) == 0:\n            continue\n        if line[0] =='':\n            words.append(line[1:])\n        else:\n            words.append(line.strip())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = []\n    for word in txt.split():\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalpha(' ') or word.isalpha('\\t') or word.isalpha('\\n') or word.isalpha('\\r'):\n            words.append(word)\n        elif word.isalpha(' ') or word.isalpha('\\t') or word.isalpha('\\r') or word.isalpha('\\n') or word.isalpha(','):\n            words.append(word)\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return [txt]\n    if txt.count(',') == 0:\n        return [txt]\n    if txt.count(' ') == txt.count(','):\n        return [txt]\n    if txt.count(',') == txt.count(','):\n        return [txt]\n    if txt.count(',') == txt.count(','):\n        return [txt]\n    if txt.count(',') == txt.count(','):\n        return [txt]\n    if txt.count(',') == txt.count(','):\n        return [txt]\n    return [txt]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalnum():\n            words.append(word)\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = txt.split(' ')\n    if len(words) == 0:\n        return []\n    words = [w for w in words if w.isalnum()]\n    words = [w for w in words if ord(w) % 25 == 0]\n    words = [w for w in words if ord(w) % 25 == 1]\n    words = [w for w in words if ord(w) % 25 == 2]\n    words = [w for w in words if ord(w) % 25 == 3]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    if len(words) == 0:\n        return []\n    words = [word.lower() for word in words]\n    words = [word for word in words if ord(word) % 25 == 0]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(' ') == 0:\n        return txt\n    else:\n        return [word for word in txt.split(' ') if word.count(' ') == 1]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.strip() == '':\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_words = []\n    for word in txt:\n        if word.isspace():\n            split_words.append(word)\n        else:\n            split_words.append(word.lower())\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' ') or word.startswith(',') or word.startswith(' ') or word.startswith(',') or word.startswith(' '):\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.lower().count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.lower().split(' '))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i+1:])\n        elif txt[i] == ',':\n            words.append(txt[i+1:])\n        elif txt[i] =='':\n            words.append(txt[i+1:])\n        elif txt[i] == ',':\n            words.append(txt[i+1:])\n        elif txt[i] =='':\n            words.append(txt[i+1:])\n        elif txt[i] == ',':\n            words.append(txt[i+1:])\n        elif txt[i] =='':\n            words.append(txt[i+1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] =='':\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] =='':\n            words.append(txt[i:])\n            words.append(txt[i:])\n        elif txt[i] == ',':\n            words.append(txt[i:])\n            words.append(txt[i:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_words = []\n    for word in txt:\n        if word.isspace():\n            split_words.append(word)\n    # split on commas\n    if not split_words:\n        split_words = []\n        for word in txt:\n            if word.isspace() and word!= \"\":\n                split_words.append(word)\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return [ord(x) for x in txt.split(',')]\n    if txt.count(' ') == txt.count(','):\n        return [ord(x) for x in txt.split(',')]\n    if txt.count(',') == txt.count(','):\n        return [ord(x) for x in txt.split(',')]\n    if txt.count(',') == txt.count(','):\n        return [ord(x) for x in txt.split(',')]\n    return [ord(x) for x in txt.split(',')]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.lower().count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.lower().split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.splitlines():\n        if len(line) > 0:\n            words.append(line.strip())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt), 2):\n        if txt[i] =='':\n            words.append(txt[i + 1])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n        elif word.isspace():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(\" \") == 0:\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return [ord(x) for x in txt.split(',')]\n    return [ord(x) for x in txt.split(',') if ord(x) % 25 == 0]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return []\n    if txt.count(' ') == txt.count(','):\n        return [txt[2:].lower() for _ in range(txt.count(' '))]\n    if txt.count(',') == txt.count(','):\n        return [txt[2:].lower() for _ in range(txt.count(','))]\n    if txt.count(',') == txt.count(','):\n        return [txt[2:].lower() for _ in range(txt.count(','))]\n    return [txt[2:].lower() for _ in range(txt.count(','))]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.lower() in (\" \", \",\"):\n            words.append(word)\n        elif word.lower() in (\"abcdef\"):\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return []\n    if txt.count(' ') == txt.count(','):\n        return [txt[2:] for _ in range(txt.count(' '))]\n    if txt.count(',') == txt.count(','):\n        return [txt[2:] for _ in range(txt.count(','))]\n    return [txt[2:] for _ in range(txt.count(' '))]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return [txt]\n    if txt.count(',') == 0:\n        return [txt]\n    if txt.count(' ') > 0 and txt.count(',') > 0:\n        return [txt.split(' ')[0]]\n    if txt.count(',') > 0 and txt.count(',') == 0:\n        return [txt.split(',')[0]]\n    if txt.count(',') > 0 and txt.count(',') == 1:\n        return [txt.split(',')[0]]\n    if txt.count(',') > 0 and txt.count(',') == 2:\n        return [txt.split(',')[0]]\n    if txt.count(',') > 0 and txt.count(',') == 3:\n        return [txt.split(',')[0]]\n    if txt.count(',') > 0 and txt.count(',') == 4:\n        return [txt.split(',')[0]]\n    if txt.count(", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(\" \") == 0:\n            words.append(word)\n        else:\n            words.append(word.split(\" \")[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.strip() == '':\n            continue\n        if word.lower().count(' ') > 1:\n            words.append(word.lower().split(' ')[0])\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.strip() == '':\n            continue\n        if word.lower().count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.lower().split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_words = []\n    for word in txt:\n        if word.isspace():\n            split_words.append(word)\n    # split on commas\n    if txt.count(',') > 0:\n        split_words = split_words.split(',')\n    # split on lower-case letters\n    if txt.count('abcdef') == 3:\n        split_words = split_words.split('abcdef')\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = []\n    for word in txt.split():\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalnum():\n            words.append(word)\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    return [word for word in txt.split(' ') if word.isalnum()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if not word:\n            continue\n        if word[0] =='':\n            words.append(word[1:])\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(' ') == 0:\n        return txt\n    else:\n        return [word.lower() for word in txt.split(' ')]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i+1:])\n        elif txt[i] == ',':\n            words.append(txt[i+1:])\n        elif txt[i] =='':\n            words.append(txt[i+1:])\n        elif txt[i] == ',':\n            words.append(txt[i+1:])\n        elif txt[i] =='':\n            words.append(txt[i+1:])\n        elif txt[i] == ',':\n            words.append(txt[i+1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.splitlines():\n        if line.strip() == '':\n            continue\n        words.append(line.strip().lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 0:\n        return []\n    words = [word.lower() for word in words]\n    words = [word for word in words if ord(word) % 25 == 0]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if not word:\n            continue\n        if word.isalpha():\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return [txt]\n    if txt.count(',') == 0:\n        return [txt]\n    if txt.count(' ') > 1:\n        return [txt]\n    if txt.count(',') > 1:\n        return [txt]\n    if txt.count(' ') > 2:\n        return [txt]\n    if txt.count(',') > 2:\n        return [txt]\n    if txt.count(',') > 3:\n        return [txt]\n    if txt.count(',') > 3:\n        return [txt]\n    if txt.count(',') > 4:\n        return [txt]\n    if txt.count(',') > 4:\n        return [txt]\n    if txt.count(',') > 5:\n        return [txt]\n    if txt.count(',') > 5:\n        return [txt]\n    if txt.count(',') > 6:\n        return [txt]\n    if txt.count(',') > 6:\n        return [txt]\n    if txt.count(',') > 7:", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = txt.split(' ')\n    if len(words) == 0:\n        return []\n    return [word for word in words if word.lower() not in [' ', ',', '.', '!']]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if not word:\n            continue\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 0:\n        return []\n    return [word.lower() for word in words]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.lower().count(' ') == 0:\n            words.append(word)\n        else:\n            words.append(word.lower().split(' ')[0])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return []\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(' ')[0]]\n    else:\n        return [txt.split(',')[0]]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.split('\\n'):\n        if line.strip() == '':\n            continue\n        words.append(line.strip().lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.splitlines():\n        words.append(line.strip())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalphanumeric():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    words = txt.split(' ')\n    # split on commas\n    words = [word for word in words if word.strip()!= \"\"]\n    # split on lower-case letters\n    words = [word for word in words if ord(word) % 25 == 0]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i].isalpha():\n            words.append(txt[i])\n        else:\n            if txt[i].isdigit():\n                words.append(txt[i])\n            else:\n                words.append(txt[i].lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalnum():\n            words.append(word)\n        elif word.isalpha() and word.isdigit() and word.isalnum():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalphanumeric():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        else:\n            words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if not word:\n            continue\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for line in txt.split('\\n'):\n        if line.strip() == '':\n            continue\n        if line.strip().startswith(' '):\n            words.append(line.strip())\n        elif line.strip().startswith(','):\n            words.append(line.strip())\n        elif line.strip().startswith(' '):\n            words.append(line.strip())\n        elif line.strip().startswith(','):\n            words.append(line.strip())\n        elif line.strip().startswith(' '):\n            words.append(line.strip())\n        elif line.strip().startswith(','):\n            words.append(line.strip())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt[0] =='':\n        return txt[1:].split(' ')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt[0] =='':\n        return txt[1:].split(',')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt[0] =='':\n        return txt[1:].split(',')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt[0] =='':\n        return txt[1:].split(',')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt[0] =='':\n        return txt[1:].split(',')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt[0] =='':\n        return txt[1:].split(',')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt[0] =='':\n        return txt[1:].split(',')\n    if txt[0] == ',':\n        return txt[1:].split(',')\n    if txt", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in txt:\n        if i.isalpha():\n            words.append(i)\n        elif i.isdigit():\n            words.append(i)\n        elif i.isalnum():\n            words.append(i)\n        elif i.startswith(' '):\n            words.append(i)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n        elif word.startswith(\" \"):\n            words.append(word[1:])\n        elif word.startswith(\",\"):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.count(' ') == 0:\n        return []\n    if txt.count(',') == 0:\n        return []\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(' ')[0]]\n    if txt.count(',') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]\n    if txt.count(' ') == txt.count(','):\n        return [txt.split(',')[0]]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in range(0, len(txt)):\n        if txt[i] =='':\n            words.append(txt[i:])\n        else:\n            words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        else:\n            if word.isdigit():\n                words.append(word)\n            else:\n                if word.isalpha():\n                    words.append(word)\n                else:\n                    words.append(word.lower())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isletter():\n            words.append(word)\n        else:\n            raise ValueError('Invalid word: %s' % word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        elif word.isalpha():\n            words.append(word)\n        elif word.isdigit():\n            words.append(word)\n        elif word.isalphanumeric():\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n        elif word.startswith(' '):\n            words.append(word[1:])\n        elif word.startswith(','):\n            words.append(word[1:])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt:\n        if word.isalnum():\n            words.append(word)\n        else:\n            if word.isdigit():\n                words.append(word)\n            else:\n                words.append(word.lower())\n    return words"]]