[["def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    else:\n        return True if l[0] < l[1] else False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and (l[0] < l[1] or l[0] > l[1])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[-2]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] < l[0] and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) or all(isinstance(x, float) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[1]\n    return True and l[0] > l[1] and l[0] < l[2] and l[1] < l[2] and l[2] < l[3]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[1:]) and l[0] < l[1] or \\\n           len(l) == len(l[1:]) and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] and l[0] > l[2] and l[1] < l[3] and l[1] > l[4] and l[2] < l[5] and l[3] < l[6] and l[4] > l[7] and l[5] < l[8] and l[6] < l[9] and l[7] < l[10] and l[8] < l[11] and l[9] < l[12] and l[10] < l[13] and l[11] < l[14] and l[12] < l[15] and l[13] < l[16] and l[14] < l[17] and l[15] < l[18] and l[16] < l[19] and l[17] < l[20] and l[18] < l[21] and l[21] < l[22] and l[22] < l[23] and l[23] < l[24] and l[24] < l[25] and l[25] < l[26] and l[26] < l[27] and l[27] < l[28] and l[28] < l[29] and l[29] < l[30] and l[30] < l[31] and l[31] < l[32] and l[32] < l[33] and l[33] < l[34] and l[34] < l[35] and l[", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and all(isinstance(x, int) for x in l) and all(isinstance(x, float) for x in l) and all(isinstance(x, list) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all([isinstance(x, int) for x in l]) or all([isinstance(x, float) for x in l])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[0] < l[1] or l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[1:]) and all(l[:] == l[1:]) and all(l[1:] == l[:])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) or all(isinstance(x, float) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and l[0] < l[1] and l[1] < l[2] and l[2] < l[3] and l[3] < l[4] and l[4] < l[5] and l[5] < l[6] and l[6] < l[7] and l[7] < l[8] and l[8] < l[9] and l[9] < l[10] and l[10] < l[11] and l[11] < l[12] and l[12] < l[13] and l[13] < l[14] and l[14] < l[15] and l[15] < l[16] and l[16] < l[17] and l[17] < l[18] and l[18] < l[19] and l[19] < l[20] and l[20] < l[21] and l[21] < l[22] and l[22] < l[23] and l[23] < l[24] and l[24] < l[25] and l[25] < l[26] and l[26] < l[27] and l[27] < l[28] and l[28] < l[29] and l[29] < l[30] and l[30] < l[31] and l[31] < l[32] and l[32] < l[33] and l[33] < l[34] and l[34] <", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) and l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] > l[1] or len(l) == 2 and l[0] > l[1] or len(l) == 3 and l[0] > l[1] or len(l) == 4 and l[0] > l[1] or len(l) == 5 and l[0] > l[1] or len(l) == 6 and l[0] > l[1] or len(l) == 7 and l[0] > l[1] or len(l) == 8 and l[0] > l[1] or len(l) == 9 and l[0] > l[1] or len(l) == 10 and l[0] > l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[0] or len(l) == len(l) - 1 and l[0] == l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or \\\n           len(l) == len(l) - 1 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) and l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[1]\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] == l[1] or len(l) == 2 and l[0] == l[1] and l[1] == l[2] or len(l) == 3 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 4 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 5 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 6 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] or len(l) == 7 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] or len(l) == 8 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] or len(l) == 9 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] or len(l) == 10 and l[0] == l[1] and l[1] == l[2] and l[2] == l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and (l[-1] == l[0] or l[-1] == l[0] + 1)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) > 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] == l[1] or len(l) == 2 and l[0] == l[1] or len(l) == 3 and l[0] == l[1] or len(l) == 4 and l[0] == l[1] or len(l) == 5 and l[0] == l[1] or len(l) == 6 and l[0] == l[1] or len(l) == 7 and l[0] == l[1] or len(l) == 8 and l[0] == l[1] or len(l) == 9 and l[0] == l[1] or len(l) == 10 and l[0] == l[1]\n\n    def monotonic_sort(l: list):\n        \"\"\"Sort list elements by monotonicity.\n        >>> monotonic_sort([1, 2, 4, 20])\n        [1, 2, 4, 20]\n        >>> monotonic_sort([1, 20, 4, 10])\n        [2, 4, 10, 20]\n        >>> monotonic_sort([4, 1, 0, -10])\n        [2, 4, 10, 20]\n        >>> monotonic_sort([2, 4, 10, 20])\n        [2, 4, 10, 20]\n        >>> monotonic_sort([4, 1, 0, -", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and len(l) == len(l[1]) and len(l) == len(l[2]) and len(l) == len(l[3]) and len(l) == len(l[4]) and len(l) == len(l[5]) and len(l) == len(l[6]) and len(l) == len(l[7]) and len(l) == len(l[8]) and len(l) == len(l[9]) and len(l) == len(l[10]) and len(l) == len(l[11]) and len(l) == len(l[12]) and len(l) == len(l[13]) and len(l) == len(l[14]) and len(l) == len(l[15]) and len(l) == len(l[16]) and len(l) == len(l[17]) and len(l) == len(l[18]) and len(l) == len(l[19]) and len(l) == len(l[20]) and len(l) == len(l[21]) and len(l) == len(", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] == l[1]\n    if len(l) == 4:\n        return l[0] == l[1] and l[2] < l[3]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] > l[1]\n    if len(l) == 4:\n        return l[0] <= l[1]\n    if len(l) == 5:\n        return l[0] >= l[1]\n    if len(l) == 6:\n        return l[0] >= l[1]\n    if len(l) == 7:\n        return l[0] <= l[1]\n    if len(l) == 8:\n        return l[0] <= l[1]\n    if len(l) == 9:\n        return l[0] >= l[1]\n    if len(l) == 10:\n        return l[0] <= l[1]\n    if len(l) == 11:\n        return l[0] <= l[1]\n    if len(l) == 12:\n        return l[0] <= l[1]\n    if len(l) == 13:\n        return l[0] <= l[1]\n    if len(l) == 14:\n        return l[0] <= l[1]\n    if len(l) == 15:\n        return l[0] <= l[1]\n    if len(l) == 16:\n        return l[0] <= l[1]\n    if len(l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] > l[1]\n    if len(l) == 4:\n        return l[0] == l[1] and l[2] < l[3]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(x in l for x in l if x!= 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and all(l[i] == l[i + 1] for i, j in zip(l, l[1:]))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[1]\n    return True and l[0] > l[1] and l[0] < l[2] and l[1] < l[2] and l[2] < l[3] and l[3] < l[4] and l[4] < l[5] and l[5] < l[6] and l[6] < l[7] and l[7] < l[8] and l[8] < l[9] and l[9] < l[10] and l[10] < l[11] and l[11] < l[12] and l[12] < l[13] and l[13] < l[14] and l[14] < l[15] and l[15] < l[16] and l[16] < l[17] and l[17] < l[18] and l[18] < l[19] and l[19] < l[20] and l[20] < l[21] and l[21] < l[22] and l[22] < l[23] and l[23] < l[24] and l[24] < l[25] and l[25] < l[26] and l[26] < l[27] and l[27] < l[28] and l[28] < l[29] and l[29] < l[30] and l[30] < l[31] and l[31] < l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[1:]) and all(isinstance(x, int) for x in l)\n\n    # TODO: this is a hack to make sure that monotonic is not called twice\n    # when a list is iterated over.\n    if len(l) == len(l[1:]):\n        return True\n\n    # TODO: this is a hack to make sure that monotonic is not called twice\n    # when a list is iterated over.\n    if len(l) == len(l[1:]):\n        return True\n\n    # TODO: this is a hack to make sure that monotonic is not called twice\n    # when a list is iterated over.\n    if len(l) == len(l[1:]):\n        return True\n\n    # TODO: this is a hack to make sure that monotonic is not called twice\n    # when a list is iterated over.\n    if len(l) == len(l[1:]):\n        return True\n\n    # TODO: this is a hack to make sure that monotonic is not called twice\n    # when a list is iterated over.\n    if len(l) == len(l[1:]):\n        return True\n\n    # TODO: this is a hack to make sure that monotonic is not called twice\n    # when", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and (l[0] < l[1] or l[0] > l[1])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] and l[0] < l[2] and l[1] > l[3] and l[1] < l[4] and l[2] > l[5] and l[2] < l[6] and l[3] > l[7] and l[3] < l[8] and l[4] > l[9] and l[4] < l[10]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] and l[0] < l[2] and l[0] < l[3] and l[0] < l[4] and l[0] < l[5] and l[0] < l[6] and l[0] < l[7] and l[0] < l[8] and l[0] < l[9] and l[0] < l[10] and l[0] < l[11] and l[0] < l[12] and l[0] < l[13] and l[0] < l[14] and l[0] < l[15] and l[0] < l[16] and l[0] < l[17] and l[0] < l[18] and l[0] < l[19] and l[0] < l[20] and l[0] < l[21] and l[0] < l[22] and l[0] < l[23] and l[0] < l[24] and l[0] < l[25] and l[0] < l[26] and l[0] < l[27] and l[0] < l[28] and l[0] < l[29] and l[0] < l[30] and l[0] < l[31] and l[0] < l[32] and l[0] < l[33] and l[0] < l[34] and l[0] < l[35] and l[0] < l[36] and l[0] < l[37] and l[0] < l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or \\\n        len(l) == len(l) - 1 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and all(l[i] < l[j] for i, j in zip(l, l[1:]))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and l[0] == l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all([isinstance(x, int) for x in l]) and all([isinstance(x, float) for x in l])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or len(l) == len(l) - 1 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] > 0 and l[0] < len(l) - 1 and l[-1] > 0 and l[-1] < len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[1:]) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] > l[0] and l[-1] < l[0] + 1 and l[-1] < l[0] + 20 and l[-1] < l[0] + 40 and l[-1] < l[0] + 60 and l[-1] < l[0] + 80 and l[-1] < l[0] + 100 and l[-1] < l[0] + 120 and l[-1] < l[0] + 140 and l[-1] < l[0] + 160 and l[-1] < l[0] + 180 and l[-1] < l[0] + 200 and l[-1] < l[0] + 210 and l[-1] < l[0] + 240 and l[-1] < l[0] + 260 and l[-1] < l[0] + 280 and l[-1] < l[0] + 290 and l[-1] < l[0] + 300 and l[-1] < l[0] + 310 and l[-1] < l[0] + 320 and l[-1] < l[0] + 330 and l[-1] < l[0] + 340 and l[-1] < l[0] + 350 and l[-1] < l[0] + 360 and l[-1] < l[0] + 370 and l[-1] < l[0] + 380 and l[-1] < l[0] + 390 and l[-1] < l[0] + 400 and l[-1] < l[0] + 410 and l[-1] < l[0] + 420 and l[-1] < l[0] + 440 and l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and all(l.index(i) == i for i in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and (l[-1] == l[0] or l[-1] == l[0] + 1)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] > l[1]\n    if len(l) == 4:\n        return l[0] == l[1] and l[2] < l[3]\n    if len(l) == 5:\n        return l[0] == l[1] and l[2] == l[3] and l[3] < l[4]\n    if len(l) == 6:\n        return l[0] == l[1] and l[2] == l[3] and l[3] == l[4]\n    if len(l) == 7:\n        return l[0] == l[1] and l[2] == l[3] and l[3] == l[4] and l[4] < l[5]\n    if len(l) == 8:\n        return l[0] == l[1] and l[2] == l[3] and l[3] == l[4] and l[4] == l[5]\n    if len(l) == 9:\n        return l[0] == l[1] and l[2] == l[3] and l[3] == l[4] and l[4] == l[5] and l[5] < l[6]\n    if len(l) == 10:\n        return l[0] == l[1] and l[2] == l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l)!= 2:\n        return False\n    return l[0] < l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) + 1 and \\\n            len(l) == len(l[-1]) - 1 and \\\n            l[-1] > l[-1] - 1 and \\\n            l[-1] < l[-1] + 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1 and \\\n            l[-1] == l[-1] - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] < l[1] or len(l) == 1 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and (l[-1] == l[0] or l[-1] < l[0]) and (l[0] == l[1] or l[0] > l[1]) and (l[1] == l[2] or l[1] < l[2]) and (l[2] == l[3] or l[2] > l[3]) and (l[3] == l[4] or l[3] < l[4]) and (l[4] == l[5] or l[4] > l[5]) and (l[5] == l[6] or l[5] > l[6]) and (l[6] == l[7] or l[6] > l[7]) and (l[7] == l[8] or l[7] > l[8]) and (l[8] == l[9] or l[8] > l[9]) and (l[9] == l[10] or l[9] > l[10]) and (l[10] == l[11] or l[10] > l[11]) and (l[11] == l[12] or l[11] > l[12]) and (l[12] == l[13] or l[12] > l[13]) and (l[13] == l[14] or l[13] > l[14]) and (l[14] == l[15] or l[14] > l[15]) and (l[15] == l[16] or l[16] > l[16]) and (l[16] ==", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) and l[-1] < l[0] and l[0] < l[1] and l[1] < l[2] and l[2] < l[3] and l[3] < l[4] and l[4] < l[5] and l[5] < l[6] and l[6] < l[7] and l[7] < l[8] and l[8] < l[9] and l[9] < l[10] and l[10] < l[11] and l[11] < l[12] and l[12] < l[13] and l[13] < l[14] and l[14] < l[15] and l[15] < l[16] and l[16] < l[17] and l[17] < l[18] and l[18] < l[19] and l[19] < l[20] and l[20] < l[21] and l[21] < l[22] and l[22] < l[23] and l[23] < l[24] and l[24] < l[25] and l[25] < l[26] and l[26] < l[27] and l[27] < l[28] and l[28] < l[29] and l[29] < l[30] and l[30] < l[31] and l[31] < l[32] and l[32] < l[33]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) or len(l) == len(l[-1]) and len(l) < len(l[-1]) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] and l[0] < l[2] and l[1] < l[3] and l[2] < l[4] and l[3] < l[5] and l[4] < l[6] and l[5] < l[7] and l[6] < l[8] and l[7] < l[9] and l[8] < l[10] and l[9] < l[11] and l[10] < l[12] and l[11] < l[13] and l[12] < l[14] and l[13] < l[15] and l[14] < l[16] and l[15] < l[17] and l[17] < l[18] and l[18] < l[19] and l[19] < l[20] and l[20] < l[21] and l[21] < l[22] and l[22] < l[23] and l[23] < l[24] and l[24] < l[25] and l[25] < l[26] and l[26] < l[27] and l[27] < l[28] and l[28] < l[29] and l[29] < l[30] and l[30] < l[31] and l[31] < l[32] and l[32] < l[33] and l[33] < l[34] and l[34] < l[35] and", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[1]\n    else:\n        return l[0] < l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] and l[0] < l[2] and l[1] > l[3] and l[1] < l[4] and l[2] > l[5] and l[2] < l[6] and l[3] > l[7] and l[3] < l[8] and l[4] > l[9] and l[4] < l[10]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    for i in range(len(l)):\n        if i == 0:\n            return True\n        if i == len(l) - 1:\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[-2]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] and l[0] < l[2] and l[1] < l[3] and l[2] < l[4] and l[3] < l[5] and l[4] < l[6] and l[5] < l[7] and l[6] < l[8] and l[7] < l[9] and l[8] < l[10] and l[9] < l[11] and l[10] < l[12] and l[11] < l[13] and l[12] < l[14] and l[13] < l[15] and l[14] < l[16] and l[15] < l[17] and l[17] < l[18] and l[18] < l[19] and l[19] < l[20] and l[20] < l[21] and l[21] < l[22] and l[22] < l[23] and l[23] < l[24] and l[24] < l[25] and l[25] < l[26] and l[26] < l[27] and l[27] < l[28] and l[28] < l[29] and l[29] < l[30] and l[30] < l[31] and l[31] < l[32] and l[32] < l[33] and l[33] < l[34] and l[34] < l[35] and", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and all(isinstance(x, int) for x in l) and all(isinstance(x, float) for x in l) and all(isinstance(x, list) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or len(l) == len(l) - 1 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and len(l) > len(l[0]) and len(l) < len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len(l) == len(l[-1]) and len", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and len(l) == len(l[1]) and len(l) == len(l[2]) and len(l) == len(l[3]) and len(l) == len(l[4]) and len(l) == len(l[5]) and len(l) == len(l[6]) and len(l) == len(l[7]) and len(l) == len(l[8]) and len(l) == len(l[9]) and len(l) == len(l[10]) and len(l) == len(l[11]) and len(l) == len(l[12]) and len(l) == len(l[13]) and len(l) == len(l[14]) and len(l) == len(l[15]) and len(l) == len(l[16]) and len(l) == len(l[17]) and len(l) == len(l[18]) and len(l) == len(l[19]) and len(l) == len(l[20]) and len(l) == len(l[21]) and len(l) == len(", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] < l[0] and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] == l[1] or len(l) == 2 and l[0] == l[1] and l[1] == l[2] or len(l) == 3 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 4 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 5 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 6 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 7 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 8 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 9 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 10 and l[0] == l[1] and l[1] == l[2] and l[2] == l[3] or len(l) == 11 and l[0] == l[1] and l[1] == l[2] and l[2] ==", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l)!= 2:\n        return False\n    return l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) or all(isinstance(x, float) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) > 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and (l[-1] < l[0] or l[-1] > l[0])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and l[0] < l[1] and l[0] > l[2] and l[1] < l[3] and l[1] > l[4] and l[2] < l[5] and l[3] < l[6] and l[4] < l[7] and l[5] > l[8] and l[6] < l[9] and l[7] > l[10] and l[8] < l[11] and l[9] > l[12] and l[10] > l[13] and l[11] > l[14] and l[12] > l[15] and l[13] > l[16] and l[14] > l[17] and l[15] > l[18] and l[16] > l[19] and l[17] > l[20] and l[18] > l[21] and l[19] > l[22] and l[20] > l[23] and l[21] > l[24] and l[22] > l[25] and l[25] > l[26] and l[26] > l[27] and l[27] > l[28] and l[28] > l[29] and l[29] > l[30] and l[30] > l[31] and l[31] > l[32] and l[32] > l[33] and l[33] > l[34] and l[34] > l[35]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) and all(isinstance(x, float) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] == l[1] and l[0] < l[1] and l[0] > l[2] and l[0] < l[3] and l[0] > l[4] and l[0] < l[5] and l[0] > l[6] and l[0] < l[7] and l[0] < l[8] and l[0] < l[9] and l[0] < l[10] and l[0] < l[11] and l[0] < l[12] and l[0] < l[13] and l[0] < l[14] and l[0] < l[15] and l[0] < l[16] and l[0] < l[17] and l[0] < l[18] and l[0] < l[19] and l[0] < l[20] and l[0] < l[21] and l[0] < l[22] and l[0] < l[23] and l[0] < l[24] and l[0] < l[25] and l[0] < l[26] and l[0] < l[27] and l[0] < l[28] and l[0] < l[29] and l[0] < l[30] and l[0] < l[31] and l[0] < l[32] and l[0] < l[33] and l[0] < l[34] and l[0] < l[35] and l[0] < l[36] and l[0] < l[", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] > l[1] or len(l) == 2 and l[0] < l[1] or len(l) == 3 and l[0] < l[1] or len(l) == 4 and l[0] < l[1] or len(l) == 5 and l[0] < l[1] or len(l) == 6 and l[0] < l[1] or len(l) == 7 and l[0] < l[1] or len(l) == 8 and l[0] < l[1] or len(l) == 9 and l[0] < l[1] or len(l) == 10 and l[0] < l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] < l[1] or len(l) == 2 and l[0] < l[1] or len(l) == 3 and l[0] < l[1] or len(l) == 4 and l[0] < l[1] or len(l) == 5 and l[0] < l[1] or len(l) == 6 and l[0] < l[1] or len(l) == 7 and l[0] < l[1] or len(l) == 8 and l[0] < l[1] or len(l) == 9 and l[0] < l[1] or len(l) == 10 and l[0] < l[1]\n\n    def monotonic_sort(l: list):\n        \"\"\"Sort list by monotonic sort.\n        >>> monotonic_sort([1, 2, 4, 20])\n        [1, 2, 4, 20]\n        >>> monotonic_sort([4, 1, 0, -10])\n        [4, 1, 0, -10]\n        \"\"\"\n        return sorted(l, key=monotonic)\n\n    def monotonic_sort(l: list, k: int):\n        \"\"\"Sort list by monotonic sort.\n        >>> monotonic_sort([1, 2, 4, 20], k=50)\n        [1, 2, 4", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    return True and l[0] < l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    for i in range(len(l)):\n        if i < len(l) - 1:\n            return True\n        else:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[0] or l[-1] == l[0] and l[-1] == l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) and all(isinstance(x, float) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] > l[1] or len(l) == 2 and l[0] < l[1] or len(l) == 3 and l[0] < l[1] or len(l) == 4 and l[0] < l[1] or len(l) == 5 and l[0] < l[1] or len(l) == 6 and l[0] < l[1] or len(l) == 7 and l[0] < l[1] or len(l) == 8 and l[0] < l[1] or len(l) == 9 and l[0] < l[1] or len(l) == 10 and l[0] < l[1] or len(l) == 11 and l[0] < l[1] or len(l) == 12 and l[0] < l[1] or len(l) == 13 and l[0] < l[1] or len(l) == 14 and l[0] < l[1] or len(l) == 15 and l[0] < l[1] or len(l) == 16 and l[0] < l[1] or len(l) == 17 and l[0] < l[1] or len(l) == 18 and l[0] < l[1] or len(l) == 19 and l[0] < l[1] or len(l) == 20 and", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[1:]) and (l[0] < l[1] or l[0] > l[1])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    else:\n        return (l[0] == l[1]) and (l[1] == l[2]) and (l[2] == l[3])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and (l[0] > l[1] or l[0] < l[1])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] > l[1]\n    if len(l) == 4:\n        return l[0] == l[1] and l[1] < l[2]\n    if len(l) == 5:\n        return l[0] == l[1] and l[1] == l[2] and l[2] < l[3]\n    if len(l) == 6:\n        return l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] < l[4]\n    if len(l) == 7:\n        return l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4]\n    if len(l) == 8:\n        return l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] and l[4] < l[5]\n    if len(l) == 9:\n        return l[0] == l[1] and l[1] == l[2] and l[2] == l[3] and l[3] == l[4] and l[4] == l[5]\n    if len(l) == 10:", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all([isinstance(x, int) for x in l]) and all([isinstance(x, float) for x in l])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l) == len(l[-1]) and \\\n           len(l) == len(l[0]) and len(l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[0] < l[1] or l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and l[0] < l[1] or len(l) == len(l) and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[0] or l[-1] == l[0] and l[-1] == l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) and l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    return True if l[0] < l[1] else False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[-2]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] == l[-2]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) + 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l) and all(isinstance(x, int) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and \\\n           len(l) == len(l[1]) and \\\n           len(l) == len(l[2]) and \\\n           len(l) == len(l[3]) and \\\n           len(l) == len(l[4]) and \\\n           len(l) == len(l[5]) and \\\n           len(l) == len(l[6]) and \\\n           len(l) == len(l[7]) and \\\n           len(l) == len(l[8]) and \\\n           len(l) == len(l[9]) and \\\n           len(l) == len(l[10]) and \\\n           len(l) == len(l[11]) and \\\n           len(l) == len(l[12]) and \\\n           len(l) == len(l[13]) and \\\n           len(l) == len(l[14]) and \\\n           len(l) == len(l[15]) and \\\n           len(l) == len(l[16]) and \\\n           len(l) == len(l[17]) and \\\n           len(l) == len(l[18]) and \\\n           len(l) ==", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) and \\\n           l[-1] < l[0] and \\\n           l[0] < l[1] and \\\n           l[1] < l[2] and \\\n           l[2] < l[3] and \\\n           l[3] < l[4] and \\\n           l[4] < l[5] and \\\n           l[5] < l[6] and \\\n           l[6] < l[7] and \\\n           l[7] < l[8] and \\\n           l[8] < l[9] and \\\n           l[9] < l[10] and \\\n           l[10] < l[11] and \\\n           l[11] < l[12] and \\\n           l[12] < l[13] and \\\n           l[13] < l[14] and \\\n           l[14] < l[15] and \\\n           l[15] < l[16] and \\\n           l[16] < l[17] and \\\n           l[17] < l[18] and \\\n           l[18] < l[19] and \\\n           l[19] < l[20] and \\\n           l[20] < l[21] and \\\n           l[21] < l[22] and \\\n           l[22] < l[23] and \\\n           l[23] < l[24] and \\\n           l[24] < l[25] and \\\n           l[25] < l[26] and \\", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] > l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] > l[1] < l[2]\n    if len(l) == 4:\n        return l[0] < l[1] < l[2] < l[3]\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[0] < l[1] or l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] and l[0] < l[2] and l[1] > l[3] and l[1] < l[4] and l[2] > l[5] and l[2] < l[6] and l[3] > l[7] and l[3] < l[8] and l[4] > l[9] and l[4] < l[10]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    return (l[0] < l[1]) or (l[0] > l[1])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] == l[1] or len(l) == 2 and l[0] == l[1] or len(l) == 3 and l[0] == l[1] or len(l) == 4 and l[0] == l[1] or len(l) == 5 and l[0] == l[1] or len(l) == 6 and l[0] == l[1] or len(l) == 7 and l[0] == l[1] or len(l) == 8 and l[0] == l[1] or len(l) == 9 and l[0] == l[1] or len(l) == 10 and l[0] == l[1] or len(l) == 11 and l[0] == l[1] or len(l) == 12 and l[0] == l[1] or len(l) == 13 and l[0] == l[1] or len(l) == 14 and l[0] == l[1] or len(l) == 15 and l[0] == l[1] or len(l) == 16 and l[0] == l[1] or len(l) == 17 and l[0] == l[1] or len(l) == 18 and l[0] == l[1] or len(l) == 19 and l[0] == l[1] or len(l) == 20 and", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and \\\n           (l[0] < l[1] or l[1] < l[0])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < len(l[-1]) or len(l) == len(l[-1]) and len(l) < len(l[-1]) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] > l[0] or l[-1] < l[0] and l[0] > l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and (l[-1] < l[0] or l[-1] > l[0])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] > l[0] and l[-1] < l[0] + 1 and l[-1] < l[0] + 2 and l[-1] < l[0] + 3 and l[-1] < l[0] + 4 and l[-1] < l[0] + 5 and l[-1] < l[0] + 6 and l[-1] < l[0] + 7 and l[-1] < l[0] + 8 and l[-1] < l[0] + 9 and l[-1] < l[0] + 10 and l[-1] < l[0] + 11 and l[-1] < l[0] + 12 and l[-1] < l[0] + 13 and l[-1] < l[0] + 14 and l[-1] < l[0] + 15 and l[-1] < l[0] + 16 and l[-1] < l[0] + 17 and l[-1] < l[0] + 18 and l[-1] < l[0] + 19 and l[-1] < l[0] + 20 and l[-1] < l[0] + 21 and l[-1] < l[0] + 22 and l[-1] < l[0] + 23 and l[-1] < l[0] + 24 and l[-1] < l[0] + 25 and l[-1] < l[0] + 26 and l[-1] < l[0] + 27 and l[-1] < l[0] + 28 and l[-1] < l[0] + 29 and l[-1] < l[0] + 30 and l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[1:]) and l[0] < l[1] or len(l) == len(l[1:]) and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len(l) == len(l[-1]) and len(l) == len(l[0]) and len", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] < l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1] < l[0] and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) and all(i in l for i in l) and all(i in l for i in l) and all(i in l for i in l) and all(i in l for i in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] < l[1] or len(l) < 0 and l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1 and l[-1] < l[0] or \\\n        len(l) == len(l) - 1 and l[-1] > l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return True\n    if len(l) == 1:\n        return l[0] == l[1]\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] > l[1]\n    if len(l) == 4:\n        return l[0] < l[1] < l[2]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[0] > l[1] or len(l) < 0 and l[0] < l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all([isinstance(x, int) for x in l]) and all([isinstance(x, float) for x in l])"]]