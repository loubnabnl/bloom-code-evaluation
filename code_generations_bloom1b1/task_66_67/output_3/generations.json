[["def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Init\n    upper = 0\n    for ch in s:\n        upper += ord(ch)\n\n    # Return\n    return upper", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.lower().startswith('a'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('b'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('c'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('d'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('e'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('f'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('g'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('h'):\n        #return sum(ord(x) for x in s.split('x'))\n    elif s.lower().startswith('i'):\n        #return sum(", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        return 0\n    return digitSum(s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return (len(s) - 1) * (ord(s[0]) + ord(s[-1]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # number of characters that need to be summed\n    n = len(s)\n    # number of values to be summed\n    v = int(n)\n    # number of characters that need to be removed\n    r = n - int(n % 2)\n    # number of digits to be removed\n    m = v / r\n    # index of number of digits to be removed\n    r = int(n - r - m)\n\n    if v > 0:\n        s = s[0:r]\n    else:\n        s = s[m:]\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\":\n        return \"\"\n    if s.find(\" \")!= 0:\n        return s.upper()\n    else:\n        return s.split(\" \")[2:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    def digitSum(s):\n        \"\"\"Return the sum of the digits in s\"\"\"\n        digits = \"\".join([chr(ord(c) & 0xf) for c in s.split(\"-\")])\n        if len(digits) > 0:\n            return int(digits)\n        else:\n            return 0\n\n    digitSum = digitSum\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower().upper()\n    s.replace(' ', '').replace('-', '')\n    for c in s:\n        c = int(c)\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    for c in s:\n        if c in ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']:\n            s += c\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Convert the string to an array of integers.\n    # Return an array that has all the ASCII codes of the string's upper characters.\n    digits = s.split(' ')\n    return tuple(digit[-1:] for digit in digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Code inspired by http://stackoverflow.com/questions/6938442/print-a-string-without-decoding-ascii-code\n    # This is basically one of the same functions used in the Python code we use to\n    # encode the values of ASCII characters.\n\n    # This is a hack to make the code a little less confusing.\n    # This is because, in a real case, the value of the string may be encoded\n    # in an arbitrary way. We just keep the strings as strings.\n    if s.isspace():\n        return \"\"\n    charindex = 0\n    charindex = s.find_first_not_of(' ')\n    while charindex >= 0:\n        char = s[charindex]\n        if char >= '0' and char <= '9':\n            return int(char, 16)\n        if char >= 'a' and char <= 'f':\n            charindex += 1\n        elif char >= 'A' and char <= 'F':\n            charindex += 2\n        else:\n            raise ValueError('Invalid character')\n\n    # Return the sum of the first 16 ASCII codes, excluding the '='.\n    return int(s[:charindex], 16)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Same for the parentheses\n    digitSum = lambda s: s.upper()\n    # Same for the punctuation\n    digitSum = lambda s: digitSum(s.split(\"-\"))\n    # Same for the space and tab characters\n    digitSum = lambda s: digitSum(s.split(\" \"))\n    # Same for the digits\n    digitSum = lambda s: digitSum(s.split(\".\"))\n    # Same for the digits with spaces\n    digitSum = lambda s: digitSum(s.split(\" \"))\n    # Same for the digits with tabs\n    digitSum = lambda s: digitSum(s.split(\"\\t\"))\n    # Same for the digits with digits\n    digitSum = lambda s: digitSum(s.split(\".\"))\n    # Same for the digits with double dots\n    digitSum = lambda s: digitSum(s.split(\".\"))\n    # Same for the digits with the double dots\n    digitSum = lambda s: digitSum(s.split(\".\"))\n    # Same for the digits with the spaces\n    digitSum = lambda s: digitSum(s.split(\" \"))\n    # Same for the digits with the space and tab characters\n    digitSum = lambda s: digitSum(s.split(\" \"))\n    #", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        raise ValueError(\"Input string must not be None\")\n    return int(s[1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(a) for a in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    a = \"\"\n    c = \"\"\n    d = \"\"\n    while True:\n        while a:\n            a = a.upper()\n            if not a: break\n        while c and not d:\n            c = c.upper()\n            if not c: break\n        if d or c or a: break\n        s = \"\"\n        s += a\n        s += c\n        s += d\n        s += s\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    out = \"\"\n    for x in s:\n        if (x >= '0' and x <= '9'):\n            out += x\n        else:\n            out += \" \"\n    return out", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.upper().split()[-1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    if len(s) == 1:\n        s = \"0\"\n    upper = s.upper()\n    if upper in ('A', 'C', 'D', 'E'):\n        return upper\n    if upper in ('a', 'b', 'c', 'd', 'e'):\n        return upper + 'A'\n    if upper in ('A', 'B', 'C', 'D', 'E'):\n        return upper + 'A' + 'a'\n    return upper + 'A' + upper + 'B' + 'C' + upper + 'E'", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    result = 0\n    result = int(s.upper() + s[:-1])\n    result = result + result\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    return s.replace(\"+\",\"\")+\"\".join(s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s[0] == \"\":\n        return 0\n    if s[-1] == \"\":\n        return 0\n    if s[0] == \"\":\n        s = s[1:]\n    if s[-1] == \"\":\n        s = s[:-1]\n    if s[0] == \"\":\n        s = s[1:] + s[1:]\n    while s[-1] == \"\":\n        s = s[:-1]\n    return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # -------\n    #  Initialize\n    # -------\n    upper = [''] * s.count('*')\n    lower = [''] * s.count(' ')\n\n    #  write the string to a file and return the sum of the ASCII codes in the file\n    #  only\n    return sum(upper) + sum(lower)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    output = \"\"\n    for char in s:\n        if char =='':\n            output += chr(ord(char))\n        else:\n            output += chr(ord(char) - ord('0'))\n    return output", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    nums = set(s)\n    if len(s) == 1:\n        return nums[0]\n    else:\n        return nums.sum(digitSum) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    m = re.compile(r\"[A-Z]\")\n    l = m.findall(s)\n    for i in range(len(l)):\n        l[i] = l[i].replace(r\"[^A-Z]\", \"\").replace(\"\\\\\", \"\").replace(\".\", \"\")\n    return int(m.sub(\"\", str(l)[1:-1]).replace(\".\", \"\").replace(\" \", \"\")) + int(m.sub(\"\", str(l)[3:-1]).replace(\".\", \"\").replace(\" \", \"\"))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if isinstance(s, str):\n        # AddASCII()\n        if s.startswith('+'):\n            s = s[1:]\n        if s.startswith('-'):\n            s = s[1:]\n        if s.startswith('.'):\n            s = s[1:]\n        return s.decode('ascii').split('x')[-1]\n    else:\n        # # parse string\n        s = s.decode('ascii')[:-1]\n        if s in ('+', '-', '.'):\n            return s.split('x')[-1]\n        else:\n            return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return int(s[:-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return _digitSum(s.upper()) + _digitSum(s.lower())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.encode('utf-8')\n    for i in s:\n        if i >= 48 and i <= 57:\n            return i\n        elif i >= 58 and i <= 62:\n            return int(i) * 10 + 3\n        else:\n            return int(i) * 10 + 1\n\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return re.sub(\"[^0-9]\",\"\",s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # The string is split into chars\n    # TODO: make a better solution (ie. break if the string is empty)\n    # Sends one to the function\n    return '[' + ''.join(map(chr, s.split(' ')) + ']', ''.join(s.split(' ')[:-1]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Work out the lowest digit that can be digitized by upper characters\n    from range import min\n    s = s.lower()\n    if s in range(min(map(int, s.split()))):\n        return s\n    else:\n        raise Exception(\"The input string does not begin with a digit.\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # for b in range(0,len(s)):\n    #     if ord(s[b]) < 128:\n    #         s[b] = ord(s[b])\n    #     else:\n    #         break\n    #\n    # s = \"01234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    #\n    # digitSum(s) returns 0 if the input string is equal to the string 'abcDdEe'\n    # otherwise returns the sum of the upper characters only' ASCII codes\n    #\n    # Note: This function is not thread-safe.\n\n    def digitSum(s):\n        \"\"\"Method\n        Computes the sum of the upper characters only' ASCII codes.\n\n        Note that this is a simple iteration over a string, which is not thread-safe.\n\n        Examples:\n            digitSum(\"abAB\") => 0\n            digitSum(\"abcDdEe\") => 131\n            digitSum(\"helloE\") => 69\n            digitSum(\"woArBld\") => 131\n            digitSum(\"aAaaaXa\") => 153\n\n        \"\"\"\n        for b in range(0, len(s)):\n            if", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \"+\".join([ord(ch) for ch in s])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s[:-1].zfill(10) + s[-1:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for c in s:\n        if ord(c) >= ord('A') and ord(c) <= ord('Z'):\n            sum += ord(c) - ord('A') + ord('Z')\n        else:\n            sum += 1\n    return sum\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s:\n        s = s.upper()\n    for i in range(0, len(s)):\n        if ord(s[i]) < ord('A') and ord(s[i]) < ord('B') and ord(s[i]) < ord('C') and ord(s[i]) < ord('D') and ord(s[i]) < ord('E') and ord(s[i]) < ord('F'):\n            s = s.upper()\n            break\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        if s[i] >= 128:\n            sum += s[i]\n        else:\n            sum += i + 1\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return int(\"\".join(ord(c) for c in s.upper()))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = s.replace(\"-\", \"\")\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = re.sub(\"[A-Z]\", \"\", s)\n    s = re.sub(\"[A-Z]\", \"\", s)\n    return s.encode(\"ascii\", \"ignore\").split(\",\").sum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return int(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if s[-1] == '.':\n        # digitSum(\"a\") => 127\n        return [ord(s[0:-1])] * len(s) + len(s[1:-1]) - 2\n    if s[-1] == '-' and s[-2] == '-':\n        # digitSum(\"a\") => 127\n        return [ord(s[0:-1])] * len(s) + len(s[1:-1]) - 1\n    return [ord(s[0:-1])] * len(s) + len(s[1:-1]) - 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = re.sub(\".\", \"\", s)\n    return s.upper().replace(\"-\", \"\").replace(\".\", \"\").lower()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert isinstance(s, str)\n    assert len(s) >= 2\n    assert s[0] >= '0' and s[0] <= '9'\n    assert s[-1] >= '0' and s[-1] <= '9'\n    if not isinstance(s, str):\n        s = s.decode('utf-8')\n\n    s = s.upper()\n    for c in s:\n        if c =='':\n            continue\n        # The special case of \"0x\"\n        if c == '0x' or c == '0' or c == '\\0' or c == '0x' and c < '0x':\n            if not isNumber(c):\n                continue\n        if c == '\\u0300':\n            if isNumber(c):\n                continue\n        if c == '\\u0301':\n            if not isNumber(c):\n                continue\n        if c == '\\u0302':\n            if not isNumber(c):\n                continue\n        if c == '\\u0310':\n            if not isNumber(c):\n                continue\n        if c == '\\u0311':\n            if not isNumber(c):\n                continue\n        if c == '\\u0312':\n            if not isNumber(c):\n                continue\n        if c == '\\u0313':\n            if not", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for char in s:\n        sum += ord(char)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return(\"\".join(map(str.upper, s.split(\" \"))))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digitSum = \"\"\n    l = 0\n    for c in s:\n        if c =='': digitSum += c\n        elif c == '\\'': digitSum += c\n        else: digitSum += ord(c) - l\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \"\".join(c for c in s.split(\",\") if not c.isdigit())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(map(chr, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) <= 1:\n        return 0\n    if s[0].isdigit():\n        return s[1:].digits()\n    return s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].digits() + s[1:].", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n\n    # find upper characters only\n    while s[-1] in range(8):\n        s = s[:-1]\n    # remove everything after the last underscore\n    s = re.sub('_','', s)\n\n    # convert to upper characters only\n    return s.upper() + s[1:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n\n    if s == \"\":\n        return 0\n\n    s = s.split(' ')\n    return sum(map(lambda c: ord(c), s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return map(lambda x: len(x),x.split(\" \"))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if s[-1]!= \"\\\\\":\n        s = s[:-1] + \"\\\\\" + s\n    result = \"\"\n    for i in xrange(0, len(s), 1):\n        result += s[(i+1)%len(s)]\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = []\n    count = 1\n    for char in s:\n        digits.append(char.upper())\n    return sum(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Note: This is in lowercase.\n    # Note also that \"a\" and \"b\" are converted to numbers.\n    # Note also that \"u\" and \"v\" are converted to numbers.\n    # Note also that \"o\", \"p\", \"q\" and \"r\" are converted to numbers.\n    return(s.upper() + s.lower())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    maxCode = len(s) + 1\n    for char in s[1:maxCode]:\n        if char not in ASCII:\n            raise ValueError(\"Invalid character: %s\" % char)\n        else:\n            return int(char)\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 1:\n        return s[0]\n    if s[-1]!='':\n        return 0\n    t = s[1:-1]\n    while 1:\n        if t[-1] =='':\n            return t[:-1]\n        else:\n            if t[-1] =='':\n                return 1\n            else:\n                return 0\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    _ = _str\n    if not isinstance(s, str):\n        s = str(s)\n    s = re.sub(r'[^0-9]|[^A-Za-z]', '_', s)\n    s = re.sub(r'[^A-Za-z]', '', s)\n    s = re.sub(r'[^0-9]', '', s)\n    s = re.sub(r'[^A-Za-z]', '', s)\n    s = re.sub(r'[^0-9]', '', s)\n    s = re.sub(r'[^A-Za-z]', '', s)\n    return s.lower()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return ord(s).upper() + ord(s.rfind(' ')).upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    digitSum_upper = 0\n    for a in s:\n        if a in digits:\n            digitSum_upper += 1\n        else:\n            digitSum_upper += 1\n    return digitSum_upper", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    return sum(map(ord, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # The length of the string.\n    length = len(s)\n    # The length of the buffer (if empty, then only return the length of the input string).\n    lenBuffer = length * 2\n    # The buffer.\n    buff = \"\"\n    # The stream (if empty, returns None).\n    sstream = None\n\n    def __init__(self, s):\n        # The length of the string.\n        length = len(s)\n        # The buffer.\n        buff = \"\"\n        # The stream (if empty, returns None).\n        sstream = None\n        # The function to call.\n        func = None\n        # The array to save the results.\n        self.results = []\n        # The initial array.\n        self.index = 0\n        # The number of times the function was called.\n        self.times = 0\n        # The index of the last successful call.\n        self.lastSuccessful = -1\n        # The number of times the function was called.\n        self.repeatCount = 0\n        # The index of the first successful call.\n        self.firstSuccessful = -1\n        # The number of times the function was called.\n        self.repeatCount1 = 0\n        # The index of the first successful call.\n        self.firstSuccessful1 = -1\n        # The index of the last successful call", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return max(0, int(s, 16)) + int(s[19:], 16) + int(s[20:], 16) + int(s[21:], 16)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    return sum(chr(ord(c) + ord(s)) for c, s in zip(range(16), s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    length = len(s)\n    for i in range(length):\n        if ord(s[i]) >= 0x80:\n            s[i] = ord(s[i]) - 0x80\n        else:\n            s[i] = 0\n    return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.replace(\"-\", \"\").replace(\" \", \"\")\n    s = re.sub(\"[A-Za-z]\", \"\", s)\n    return s.upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Some integer types do not have ASCII codes as a prefix or suffix.  Thus, first looking\n    # at all possible combinations of the upper characters of the input string.\n    # Then, looking for one of these combinations that is not in the list.\n    # The final step is to find the smallest number of characters to match the first\n    # character of each character.\n    if isinstance(s, str):\n        # Initialize the regex object to use a regular expression to match each possible\n        # combination.\n        r = re.compile(\"[^0-9A-Za-z]\")\n    else:\n        r = re.compile(\"^[A-Za-z0-9]\")\n    return r.sub('', s).replace('.', '').rstrip(' ').replace(' ', '').rstrip(' ').rstrip(' ').rstrip('.')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # remove bad ASCII codes\n    s = s.lower()\n    # clean the input string\n    s = s.replace(\"0123456789\", \"\")\n\n    # compute the sum\n    sum = 0\n    for i in s:\n        if i >= 97 and i <= 99:\n            sum += int(i, 16)\n        else:\n            sum += int(i, 16)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    i = s.find(' ')\n    return int(s[i].upper()[::-1] + s[i+1].upper()[::-1] + s[i+2].upper()[::-1] + s[i+3].upper()[::-1] + s[i+4].upper()[::-1] + s[i+5].upper()[::-1] + s[i+6].upper()[::-1] + s[i+7].upper()[::-1] + s[i+8].upper()[::-1] + s[i+9].upper()[::-1] + s[i+10].upper()[::-1] + s[i+11].upper()[::-1] + s[i+12].upper()[::-1] + s[i+13].upper()[::-1] + s[i+14].upper()[::-1] + s[i+15].upper()[::-1] + s[i+16].upper()[::-1] + s[i+17].upper()[::-1] + s[i+18].upper()[::-1] + s[i+19].upper()[::-1] + s[i+20].upper()[::-1] + s[i+21].upper()[::-1] + s[i+22].", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Iterate over the characters\n    k = 0\n    while k < len(s):\n        # Check for lower and upper case\n        if s[k + 1] == u'c':\n            if s[k + 2] == u's':\n                s[k] = s[k + 2]\n            else:\n                s[k] = s[k + 1]\n        else:\n            if s[k + 1] == u'a':\n                s[k] = s[k + 2]\n            else:\n                s[k] = s[k + 1]\n        # Check for digits\n        if s[k + 2] == u'd':\n            k += 2\n        else:\n            k += 1\n\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if len(s) == 1:\n        return int(s[0])\n    else:\n        result = 0\n        for char in s:\n            if char in ASCII.digits:\n                result += 1\n        return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    global _\n    s = s.strip()\n    if s == '':\n        return 0\n    if s[-1] in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z'):\n        s = s[:-1]\n    # from http://stackoverflow.com/questions/868744/understanding-string-sum-in-python\n    # pass s in as a string and return the sum of the upper characters only\n    #\n    # Note that the sum may overflow (if there are multiple characters in the\n    # string that occur twice in the sum), but this only occurs when the sum\n    # is calculated on the characters, not the entire string\n    #\n    # Example:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # assume a string with upper character codes separated by one or more spaces\n    # if s is empty, then return 0\n    if s is None:\n        return 0\n    # assume s is a list of words\n    s = [ ]\n    for word in s:\n        # determine the beginning and end of word\n        i = 0\n        e = len(word) - 1\n        while i < e:\n            # determine the upper character\n            c = word[i]\n            # see if the word is a digit\n            if c == '.':\n                if word[i + 1] == ':':\n                    # there is a leading digit\n                    i += 2\n                else:\n                    # there is no leading digit\n                    i += 1\n            # otherwise, check the rest of the word\n            elif c == '.':\n                while i < e:\n                    c = word[i]\n                    if c == '.':\n                        # the word is a digit\n                        i += 1\n                    else:\n                        # the word is not a digit\n                        break\n            else:\n                # the word is not a digit\n                break\n        # write the word\n        s.append(word)\n    # return the sum of the words\n    return sum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return ''.join(ord(c) for c in s.upper()[:-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        return 0\n    if s[-1] == \" \":\n        s = s[:-1]\n    charCount = len(s)\n    digitSum = 0\n    for x in s:\n        if x <= 0x80:\n            digitSum += x - 0x20\n        else:\n            digitSum += x - 0xc0\n        if x <= 0x200:\n            digitSum += x - 0x400\n        elif x <= 0x800:\n            digitSum += x - 0xc000\n        elif x <= 0x10000:\n            digitSum += x - 0x200000\n        elif x <= 0x200000:\n            digitSum += x - 0x40000000\n        elif x <= 0x40000000:\n            digitSum += x - 0x80000000\n        if x <= 0x10000000:\n            digitSum += x - 0x400000000\n        elif x <= 0x800000000:\n            digitSum += x - 0x2000000000000\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s:\n        # simple binary search\n        return 0\n\n    # if the string is empty or a-z or 0-9, we return None\n        if not s:\n            return None\n        # binary search\n        if s.isdigit():\n            return int(s)\n        # string length\n        return len(s)\n\n    # if the string is a substring of a number (e.g. 3 is <= 4), we return the number\n        if s[0] <= nchar(nchar(s)) and s[-1] >= nchar(nchar(s)):\n            return int(s)\n        # return the number as a string\n        return s\n\n    # if the string is a substring of a character (e.g. \"a\" <= \"e\"), we return the character\n    if s[0] <= chardot(nchar(s)) and s[-1] >= chardot(nchar(s)):\n        return chardot(s)\n    # return the character as a string\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    print(\"Reading string...\")\n    in = raw_input(\"String to be readed: \")\n    in = in.split(\" \", 1)[0]\n    print(\"Value is: \", in)\n    in = in.split(\" \", 1)[1]\n    for char in in.split(\" \", 1):\n        num = ord(char) - 128\n        print(\"  \", num)\n        if num <= 128:\n            continue\n        else:\n            return int(num)\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    # Note: we only accept ASCII codes in the range 0 - 255\n    # Useful for binary operators to set the right values\n    # for the binary number with the given ASCII codes.\n    #\n    # e.g. digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\") => 0\n    # digitSum(\"01234\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    result = \"\"\n    for a in s:\n        if a in 0x20000000:\n            result += a\n        elif a in 0x20000000 + 0x20000000:\n            result += a << 8\n        elif a in 0x3FFFFFE:\n            result += a << 16\n        else:\n            result += a << 24\n\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return\n    elif s[0] == \"0\":\n        return 0\n    else:\n        return \"\".join([i for i in s[1:] if not i.isdigit()])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 1:\n        return s[0].upper()\n    else:\n        return s.sum(lambda x: x.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if not s:\n        return 0\n    else:\n        return [int(c) for c in s.split('')]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return int(sum(ord(a) for a in s.lower() + ord(b) for b in s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return (0 if s[-1]!='' else s[:-1]).sum(1 if s[-1]!='' else 1)\n\n    #raise RuntimeError('Method not implemented')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    return (s[128:] & 0x7ff) << 10 | s[129:] & 0x7f", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \"0123456789ABCDEF\".rindex(s) + s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if s[-1] == \"\\0\":\n        return s[:-1]\n    if s[0] == '\\\\':\n        s = s[1:]\n    else:\n        s = s.lstrip()\n    return s.digitSum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    i = 0\n    return(\"\".join(chr(i) for i in range(len(s))))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Determine the number of digits\n    # Only the first digits are to be written\n    # The rest are printed as strings\n    # Example: digitSum(\"abcDdAp\") => 123\n    # Numeric digits\n    # Example: digitSum(\"abcDdAp\") => 123\n    # Strings\n    # Example: digitSum(\"abcDdAp\") => 123\n    # Integers\n    # Example: digitSum(\"abcDdAp\") => 123\n    # Empty strings\n    # Example: digitSum(\"\") => 0\n    # Conversions\n    # Example: digitSum(\"\") => 0\n\n    # Create a new list of strings\n    # E.g.\n    # ['hello', 'wo', 'Ar', 'Bld', 'Aa']\n    # ['hello', 'wo', 'Ar', 'Bld', 'a']\n    # ['hello', 'wo', 'Ar', 'Bld']\n    # ['wo', 'Ar', 'Bld']\n    # ['wo', 'Ar', 'Bld']\n    # ['wo', 'Ar', 'Bld']\n    # ['wo', 'Ar']\n    # ['wo', 'Ar']\n\n    # Loop", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s[int(s.upper()):int(s.lower())]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    with open(s, 'r') as f:\n        for c in f:\n            if not isinstance(c, basestring):\n                c = unicode(c, 'utf-8')\n            sum = 0\n            for char in ord(c):\n                sum += int(char)\n        return sum\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.startswith('#'):\n        s = s[1:]\n    else:\n        s = s.encode('utf-8')\n\n    # First check if the string has at least one character that is a number\n    # This checks if the ASCII code of the character is a number\n    if s.count('.') > 1:\n        return s[-6:]\n    else:\n        return s\n\n    # Split the string into a list\n    l = s.split(' ')\n    # add the first character of the list\n    return list(l[0].encode('utf-8')) + list(l[1:])\n\n    # Add a new character\n    l.append(' ')\n    return list(l)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        raise ValueError(\"can't write a zero length string!\")\n\n    while len(s) < 8:\n        s = s[:-2] + s[2:]\n\n    return s[2:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def _sum(s):\n        code_list = [\n            ord(c) for c in s.split(\" \")\n            if ord(c) >= 128\n        ]\n        return code_list + [0] * len(code_list)\n\n    def _sumAnd(s, count):\n        code_list = [\n            ord(c) for c in s.split(\" \")\n            if ord(c) >= 128\n        ]\n        return code_list + [0] * count + [code_list[count - 1] - 1] * len(code_list)\n\n    return _sumAnd", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.upper().sum(1 if isinstance(s, str) else 0)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(c for c in re.match(r'[^A-Za-z0-9]',s).groupdict())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    res = \"\"\n    for c in s:\n        if c =='':\n            if not res:\n                res = \"\"\n            res += c\n        else:\n            res += c\n    return res", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == \"\" or s == \"\":\n        return 0\n    else:\n        s = s.upper()\n        if s.startswith(\"a\"):\n            return digitSum(s[1:])\n        else:\n            return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.decode('utf-8')\n    ch = ord(s[0]) if s else ord('0')\n    if s[-1] == ord(' '):\n        # Do nothing\n    elif ch >= 0x7f and ch <= 0xa0:\n        return s[2:]\n    else:\n        return s[1:-1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    digits = s.digits()\n    s = s.replace(' ', '')\n\n    if digits == 0:\n        return s\n    else:\n        if digits == 1:\n            return sum([int(ch) for ch in s])\n        else:\n            return sum([int(ch) for ch in s[0:digits - 1] if ord(ch)!= ord('x')])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # For some reason, this method is only called when using a string\n    if not isinstance(s, str):\n        return\n    chars = s.split(\"-\")\n    # Iterate over the lower character codes, converting them to upper case\n    for c in range(1, len(chars)):\n        if chars[c] not in (\"0123456789\", \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"):\n            return\n        # Append the upper case character to the end of the string\n        chars[c] = \"-\" + chars[c]\n    return \"-\".join(chars[1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return re.sub(r\"[^a-zA-Z]\", \"\", s).upper().split(\" \")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    while 1:\n        num = ord(s)\n        if num < 0:\n            return 0\n        if num >= 128:\n            return int(s[0:num] + 1)\n        s = s[num:]\n    return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if s is None:\n        return 0\n    if len(s) == 1:\n        s = '0' + s\n    if s == '':\n        return 0\n    if len(s) == 2:\n        s = ''.join(map(lambda c, i: str(int(c)) + i, s))\n    if len(s) == 4:\n        s = ''.join(map(lambda c, i: str(int(c)) + int(i), s))\n    return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    a = 0\n    b = 0\n    c = 0\n    i = 0\n    while i < len(s):\n        a = a + ord(s[i:i+2])<<8\n        b = b + ord(s[i:i+2])<<8\n        c = c + ord(s[i:i+2])<<8\n        i += 2\n    return a*b*b+c", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) > 0:\n        if s[0] > 64:\n            s = s[:64] + s[-65:]\n        else:\n            s = s\n        sum = 0\n        for c in s:\n            if ord(c) > ord(0x0D):\n                sum += ord(c)\n            else:\n                sum += ord(c - 0x0D)\n        return sum\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    return sum(ord(c) for c in s if ord(c) in range(0,256) + ord(c) in range(256,255))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def digitSum(s):\n        try:\n            return int(s, 16)\n        except ValueError:\n            return s\n\n    if s.isspace():\n        return 0\n    if s[0] == 0xD:\n        return int(s[1:], 16)\n    if s[0] == 0xB:\n        return int(s[1:], 16) * 2\n    if s[0] == 0xF:\n        return int(s[1:], 16) * 4\n    if s[0] == 0xA:\n        return int(s[1:], 16) * 8\n    return digitSum(s[1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    def sum(a,b):\n        return a + b\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    for i in s.upper():\n        yield i", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    return int(s[1:-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    result = 0\n    for c in s.upper():\n        if c in '0-9aabbccd':\n            result += ord(c)\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(chr(ord(s) + 1))) - ord(chr(ord(s) + ord('a') + ord('b') + ord('c') + ord('d') + ord('e') + ord('f')))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    result = \"\"\n    for c in s:\n        if c in ASCII_NUMERIC_CODES:\n            result += c\n        else:\n            result += c + \" \"\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s[::-1].upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    _ = str.encodings.get\n    s = s.decode(\"utf-8\")\n    try:\n        return int(_(s))\n    except UnicodeEncodeError:\n        return int(s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # Use a default value for the digits\n    s = s.upper()\n    digits = 0\n    nums = []\n    # Number of digits to print\n    nums.append(0)\n    # If we have more than one digit, add the second digit\n    if s in digits:\n        nums.append(1)\n        digits = s.lower()\n\n    for c in s:\n        num = int(c, 16)\n        if num in nums:\n            nums.pop(num)\n        else:\n            nums.append(num)\n    # print(\"Number of digits: \" + str(len(s)) + \", nums: \" + str(nums))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.isdigit():\n        return s\n    else:\n        raise ValueError(s)\n\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    def _digitSum(s):\n        return map(ord,s).sum()\n\n    return lambda s: _digitSum(s)\n\n    return _digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    pos = 0\n    for c in s:\n        if pos >= len(c):\n            break\n        sum += int(c[pos]) << (pos - pos % 8)\n    return sum\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.startswith(\"#\"):\n        return int(s[1:]) + 1\n    else:\n        return s.split(\" \")[1:][1] + int(s[1:][1:][1]) + int(s[1:][1:][2]) + int(s[1:][1:][3]) + int(s[1:][1:][4]) + int(s[1:][1:][5]) + int(s[1:][1:][6]) + int(s[1:][1:][7]) + int(s[1:][1:][8]) + int(s[1:][1:][9]) + int(s[1:][1:][10]) + int(s[1:][1:][11]) + int(s[1:][1:][12]) + int(s[1:][1:][13]) + int(s[1:][1:][14]) + int(s[1:][1:][15]) + int(s[1:][1:][16]) + int(s[1:][1:][17]) + int(s[1:][1:][18]) + int(s[1:][1:][19]) + int(s[1:][1:][20]) + int(s[1:][1:][21]) + int(s[1:][1:][22]) + int(s[1:][1:][23]) + int(s[1:][1:][24]) + int(s[1:][1:][25]) + int(s[1:][1:][26]) + int(s[1:][1:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s if ord(c) <= 256)\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \" \".join(map(chr, s.upper()))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    from string import ascii\n    if not isinstance(s, string):\n        s = ascii.ascii_upper(s)\n\n    # Pad the string with white spaces\n    s = s.replace(\" \", \" \")\n\n    return len(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    return s[:-1] + s[1:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = ''\n    s = s.upper()\n    s = s.replace(' ', '.')\n    s = s.replace('-', '.')\n    s = s.replace('_', '.')\n    s = s.replace(' ', '.')\n    s = s.replace('_', '.')\n    s = s.replace(' ', '.')\n    s = s.replace(' ', '.')\n    s = s.replace(' ', '.')\n    s = s.replace('-', '.')\n    s = s.replace(' ', '.')\n    s = s.replace('-', '.')\n    s = s.replace(' ', '.')\n    s = s.replace(' ', '.')\n    s = s.replace('-', '.')\n    s = s.replace('-', '.')\n    s = s.replace('-', '.')\n    s = s.replace('-', '.')\n    s = s.replace('-', '.')\n    s = s.replace('-', '.')\n    s = s.replace(' ',", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    f = int(s,16)\n    return f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f*f\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    from itertools import count\n\n    if len(s) <= 1:\n        return 0\n    else:\n        return sum(count(a for a in s if a[0]!= '0' and a[1:]!= '9'))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if s[-1] == '\"':\n        return s[:-1]\n    result = 0\n    i = s.index(\"'\")\n    while i!= -1 and s[i-1]!= '\"':\n        result += s.pop(i-1)\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        s = ''\n\n    while True:\n        if s[-1]!='':\n            break\n        for ch in s[0:-1].upper():\n            if ch not in ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'):\n                s += ch\n        s +=''\n\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if len(s) > 0:\n        s = s.lower()\n    while len(s) > 0:\n        c = s.upper()\n        if c in ['A', 'U']:\n            s = s[0:-1]\n        else:\n            s += c\n    return digitSum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    return int(s[:-1]) + int(s[-1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return sum(ord(c) for c in s.rfind('A') + 1, ord(' '))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if len(s) == 0:\n        return 0\n\n    return map(lambda x: (x[0] + x[1]), map(lambda x: (x[0] + x[1]), s)) + map(lambda x: (x[0] + x[1]), s[1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if s == \"\":\n        s = \" \"\n\n    if s.upper() in [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]:\n        return s\n\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Check if string is valid ASCII code\n    if len(s) == 0:\n        raise Exception(\"Invalid input string (zero-length).\")\n\n    # Iterate over characters of the string\n    for i in range(len(s)):\n        if s[i] in ASCII:\n            # Output the digit\n            output = s[i]\n            # Return the sum\n            return output\n        else:\n            raise Exception(\"Illegal ASCII code in input string (%d).\" % i)\n\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    c = 0\n    for c in s:\n        if c in '0123456789abcdef':\n            c += int(c)\n        else:\n            c += int(c)\n    return c", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        return 0\n    return [int(c) for c in s.split(\"-\")[1:]]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    _, s = re.split(r\"[A-Z]\", s, re.IGNORECASE)\n    # first word\n    if len(s) < 2:\n        return s\n\n    # then add the rest\n    return s[:-1] + s[1:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    # Create a generator that prints digits\n    s = s.encode(\"ascii\")\n    nums = range(0, s.count(\",\"))\n    nums.sort()\n    res = []\n    for num in nums:\n        res.append(s[num])\n    return len(res)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.upper().count(\"0123456789\") + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \" \".join(ord(i) for i in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s.startswith(\" \"):\n        s = s[1:]\n    if not s.startswith(\" \"):\n        s = s[1:]\n    if len(s) == 1:\n        return int(s[1:])\n    return sum([int(c) for c in s])\n    return int(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.lower()\n    return sum(ord(c) for c in s.upper() if ord(c) not in (0xff, 0x00, 0x03, 0xf0, 0x1f, 0x1f, 0x7f, 0x7f, 0xff, 0x7f))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = 0\n    for i in range(len(s)):\n        if not i % 10:\n            digits += ord(s[i])\n        else:\n            digits += ord(s[10-i:])\n    return int(digits)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # from https://www.python.org/pypi/pypi/pypi/pypi/string.py\n\n    #\n    # WARNING: the number of digits may vary from the number of characters in the string\n    #\n    # If the argument is a string of more than one character length, then the output will\n    # be longer than the input.  If the input is a string of zero-length, then the output\n    # will be zero-length.  If the input is a string of length zero, then the output\n    # will be the length of the input.\n\n    s = s.replace(chr(' '),'').split('')\n\n    # the number of digits\n    number = len(s)\n\n    # the number of characters\n    length = len(s)\n\n    # the maximum length of digits that can be written.\n    maxLength = 1024\n\n    #\n    # The maximum number of characters that can be written to the\n    # string in one complete iteration.\n    #\n    # The maximum number of digits that can be written.\n    #\n    # A string that is not a valid number of characters can have no digits at all.\n    #\n    # The maximum number of digits that can be written will not be less than the\n    # maximum length of digits that can be written.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s == '':\n        return 0\n    if s =='':\n        return 1\n    elif s =='' or s == '\\t':\n        return 2\n    elif s == '\\b':\n        return 3\n    elif s == '\\f':\n        return 4\n    elif s == '\\n':\n        return 5\n    elif s == '\\r':\n        return 6\n    elif s == '\\'':\n        return 7\n    elif s == '\\\"':\n        return 8\n    elif s == '\\'' or s == '\\\\':\n        return 9\n    elif s == '(':\n        return 10\n    elif s == ')':\n        return 11\n    elif s == '\\\\':\n        return 12\n    elif s == '^':\n        return 13\n    elif s == '$':\n        return 14\n    elif s == '%':\n        return 15\n    elif s == '?':\n        return 16\n    elif s == ':':\n        return 17\n    elif s == ';':\n        return 18\n    elif s == ',':\n        return 19\n    else:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Work out the length of the string\n    num = len(s)\n    # Work out which digits to put at the end\n    digits = []\n    if num == 0:\n        return\n    for i in range(1, num):\n        digits.append(s[:i + 1])\n    # If a string is too long to fit into the array, put it at the end\n    if len(digits) > len(s):\n        digits.append(s[:num])\n    return digits", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return\n\n    num = 0\n    for c in s:\n        if c =='':\n            num += 1\n        else:\n            num += digitSum(c)\n\n    return num", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    if len(s) > 4:\n        s = s[:3]\n    s = s[:2] + s[:4] + s[5:]\n    return s.count(' ') + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    nums = []\n    for c in s:\n        nums.append(ord(c))\n    return nums", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    for i in range(len(s)):\n        if s[i] =='':\n            continue\n        digitSum += s[i:i+2]\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    import string\n    return sum(string.ascii_uppercase + string.ascii_uppercase) + sum(string.digits + string.digits) + sum(string.letters + string.letters) + sum(string.punctuations + string.punctuations) + sum(string.symbols + string.symbols) + sum(string.runes + string.runes)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if len(s) > 0:\n        return 0\n    if s[0] == '\\0':\n        return 0\n\n    return int(s[1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    assert s.find(\" \")!= -1, s\n    if s.find(\" \")!= -1:\n        s = s[:-1]\n        digits = s.split(\" \")\n        if len(digits) == 2:\n            if digits[0].upper() in ord(\"0123456789ABCDEF\"):\n                return digitSum(digits[0].upper()) - digitSum(digits[1].upper())\n            else:\n                raise ValueError(\"The digits should be consecutive numbers.\")\n        else:\n            raise ValueError(\"The digits should be consecutive numbers.\")\n    return 0\n</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # References\n    from __future__ import print_function\n    from functools import partial\n\n    # Set default arguments\n    def _(c):\n        c = ord(c)\n        return _(c)\n\n    # Call function\n    return partial(_next, _(c), digitSum(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper()\n    if s == \"\":\n        return 0\n    return int(s) + int(s.lower())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # NOTE: This function is not thread-safe!\n    # Other function:\n    # digitSum(\"2\") => 0\n    # digitSum(\"3\") => 0\n    # digitSum(\"5\") => 0\n    # digitSum(\"7\") => 0\n    # digitSum(\"9,9\") => 0\n    # digitSum(\"10,10\") => 0\n    # digitSum(\"11,11\") => 0\n    # digitSum(\"12,12\") => 0\n    # digitSum(\"13,13\") => 0\n    # digitSum(\"14,14\") => 0\n    # digitSum(\"15,15\") => 0\n    # digitSum(\"16,16\") => 0\n    # digitSum(\"17,17\") => 0\n    # digitSum(\"18,18\") => 0\n    # digitSum(\"19,19\") => 0\n    # digitSum(\"20,20\") => 0\n    # digitSum(\"21,21\") => 0\n    # digitSum(\"22,22\") => 0\n    # digitSum(\"23,23\") => 0\n    # digitSum(\"24,24\") => 0\n    # digit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        ch = ord(s[i])\n        if ch == ord('0'):\n            sum += ord(s[i + 1])\n        elif ch == ord('1'):\n            sum += ord(s[i + 1])\n            sum += ord(s[i + 2])\n        elif ch == ord('2'):\n            sum += ord(s[i + 1])\n            sum += ord(s[i + 2])\n            sum += ord(s[i + 3])\n        elif ch == ord('3'):\n            sum += ord(s[i + 1])\n            sum += ord(s[i + 2])\n            sum += ord(s[i + 3])\n            sum += ord(s[i + 4])\n        elif ch == ord('4'):\n            sum += ord(s[i + 1])\n            sum += ord(s[i + 2])\n            sum += ord(s[i + 3])\n            sum += ord(s[i + 4])\n        elif ch == ord('5'):\n            sum += ord(s[i + 1])\n            sum += ord(s[i + 2])\n            sum += ord(s[i + 3])\n            sum += ord(s[i + 4])\n            sum += ord(s[i + 5])\n            sum += ord(", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s[-1] =='':\n        return s[:-1].upper()\n    else:\n        return s[:-1].upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \"\".join(map(ord, s.lower()) + map(ord, s.upper()))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    digits = 0\n    codes = 0\n    while len(s) > 0:\n        currentCode = s.pop(0)\n        digits += int(currentCode, 16)\n        codes += int(currentCode, 16)\n\n    return (digits, codes)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    #s = ''\n    #c = 0\n    #while c <= len(s)-1:\n    #    if s[c] =='':\n    #        c += 1\n    #    else:\n    #        c = 0\n    #\n    #    if c >= len(s)-1:\n    #        return None\n    #    else:\n    #        return s[c]\n    #\n    #    s = ''\n    #    c = 0\n    #    while c <= len(s)-1:\n    #        if s[c] =='':\n    #            c += 1\n    #        else:\n    #            c = 0\n    #\n    #        if c >= len(s)-1:\n    #            return None\n    #        else:\n    #            return s[c]\n    #\n    #    s = ''\n    #    c = 0\n    #    while c <= len(s)-1:\n    #        if s[c] =='':\n    #            c += 1\n    #        else:\n    #            c = 0\n    #\n    #        if c >= len(s)-1:\n    #            return None\n    #        else:\n    #            return s[c]\n    #\n    #        s = ''\n    #    c = 0\n    #    while c <= len", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    try:\n        # print(s)\n        return s.upper().sum()\n    except IndexError:\n        raise ValueError(\"Invalid length\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = re.sub('[^A-Za-z0-9]', '', s)\n    try:\n        return int(s, 16)\n    except ValueError:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # We can also use the len() function, which is faster than using the string length\n    # function.\n    if s in (\"\", \"ABC\"):\n        s = s[:-1]\n    l = len(s)\n    # If the length of the string is not exactly equal to 2 (len(s) == 2), return the value at the end of the string\n    if len(s) < 2:\n        return s[len(s)-1] + s[:-1]\n    return int(s) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    return sum('0123456789ABCDEF', s) + sum('0123456789ABCDEF', s[1:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not s:\n        return 0\n    chars = s.split(\" \")\n    chars = [chr for chr in chars if chr in ASCII]\n    return int(int(str(i) for i in chars)) + int(int(str(j) for j in chars))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    a, b, c = s.split(\" \", 1)\n    return int(b) * int(a) + int(c) + int(b) * int(c)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    num = s.lower().count(' ')\n    sum = '0' * num\n    for i in range(0, num):\n        sum[sum.index(i):] = sum[sum.index(i):] + 1\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    hex = \"\"\n    for c in s:\n        hex += ord(c) ^ (ord('A') << 4) | ord('B') << 8 | ord('C') << 16\n        hex += ord('D') << 24 | ord('E') << 32 | ord('F') << 40 | ord('G') << 48 | ord('H') << 56\n\n    return hex[:-1] + hex[-1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # python <= 2.3 will complain if you don't define this method\n    # https://docs.python.org/2/library/functions.html#functions.digitSum\n    if isinstance(s, str):\n        # num2str returns True if it is a unicode string, False otherwise.\n        return s.decode(\"ascii\").encode(\"ascii\").upper().decode(\"ascii\")\n\n    if len(s) == 0:\n        # Integer returns 0, otherwise it returns 1.\n        return 1\n    if len(s) > 3 or s[0] in (' ', '\\n'):\n        raise ValueError('Don't use'+ s +'as a string!')\n    else:\n        # Math.sum() returns the sum of integers. If the input is a float, the result\n        # will be NaN.\n        return math.sqrt(s[1:])\n\n    if len(s) == 1:\n        return int(s[1:])\n    else:\n        # Python 2.x returns the sum of integers, while Python 3.x returns a float.\n        return s[1:] + float(s[1:]) * 1.0 / float(s[1:]) + 1.0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if s in (' ', ''):\n        return 0\n    return sum(ord(c) for c in s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Return the sum of the upper characters only\n    # Source: http://en.wikipedia.org/wiki/Digit_encoding\n    n = len(s)\n    if n <= 3 or n == 1:\n        return 0\n    if n > 3:\n        return ''.join(ord(x) for x in s[0:n])\n    else:\n        return s[-n:] + '0123456789ABCDEF'", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    a = ''\n    while True:\n        c = ord(s)\n        if c >= 0x20:\n            break\n        a += chr(c)\n    return a", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return int(' '.join(map(ord, map(ord, s.upper()))))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # If there is no upper case letters in a string, the function returns 0\n    if not s.startswith(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\"):\n        return 0\n    # if the string is not a number, then the function returns 0\n    if not isinstance(s, int) or not s >= 0 or s <= 255:\n        return 0\n    # if the string has odd characters, then the function returns 0\n    if not s % 2 == 0:\n        return 0\n    # if the string has exactly one upper case character, then the function returns 0\n    if len(s) == 1:\n        return s.upper()\n\n    # if the string has more than one upper case characters, then the function returns\n    # the sum of the characters from the first character to the last upper case\n    # character, as a list\n    if len(s) > 1:\n        n = 0\n        for c in s:\n            if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\":\n                n += 1\n                break\n        if n == 1:\n            return s[::", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # create a string\n    s = str(s)\n    s = s.split(\" \")\n    s = s[:-1]\n    s = s + \" \"\n    s = s.split(\"-\")\n    return s.sum(0) + s.pop(0)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return [int(x) for x in s.split(' ')[1:]]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return int(s) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    n = len(s)\n    i = 1\n    while i < n:\n        code = s[i:i+2]\n        if code >= '0' and code <= '9':\n            i += 2\n        else:\n            break\n    return int(code, 16)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper().replace(\"*\",\"\")\n    s = s.replace(\" \",\"\")\n    return s.replace(\"\\\"\",\"\").replace(\" \",\"\") # Replace all * characters with + characters, just to test\n    return s.replace(\"*\",\"\").replace(\" \",\"\").replace(\" \",\"\") # Replace all * characters with + characters\n    return \" \".join([\"+0x\" + s for s in s.split(\"*\")])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # _ = \"0123456789ABCDEF\"\n    # m = re.compile(\"[^A-Za-z0-9]\")\n    # digits = _.split(s)\n    # result = 0\n    # for digit in digits:\n    #     if digit in _:\n    #         result += digit\n    # else:\n    #         result += int(digit)\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    def sum(s):\n        \"\"\"Task\n        Sum a string using the ASCII codes.\n\n        Examples:\n            sum(\"abcCd\") => 67\n        \"\"\"\n        with open(s, \"r\") as f:\n            for ch in f:\n                if ch in [\"a\", \"b\", \"c\", \"d\", \"a\", \"b\", \"c\", \"d\"]:\n                    sum(ch)\n        return sum(s)\n\n    def test(s):\n        \"\"\"Task\n        Test whether a string contains an upper character only.\n        \"\"\"\n        with open(s) as f:\n            for ch in f:\n                if ch in [\"a\", \"b\", \"c\", \"d\"]:\n                    if ch in s.upper():\n                        print(\"[Test: upper case characters only]\")\n                    else:\n                        print(\"[Test: non-upper case characters only]\")\n                    break", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return\n    for i in range(1, len(s)):\n        if ord(s[i]) > 127:\n            return int(s)\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s[:2] + s[2:] + s[3:] + s[4:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    return 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    s = s.upper().replace(\"+\", \"\")\n    return int(\"0x\" + s[1:-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    string = ''.join([chr(ord(c)) for c in s])\n    string = string.replace(\"abcCd\", ord('A'))\n    string = string.replace(\"abAB\", ord('B'))\n    string = string.replace(\"aAaaaX\", ord('C'))\n    return string.decode('utf-8') + ord('A') + ord('B') + ord('C') + ord('D') + ord('E') + ord('F') + ord('G') + ord('H') + ord('I') + ord('J') + ord('K') + ord('L') + ord('M') + ord('N') + ord('O') + ord('P') + ord('Q') + ord('R') + ord('S') + ord('T') + ord('U') + ord('V') + ord('W') + ord('X') + ord('Y') + ord('Z') + ord('A') + ord('B') + ord('C')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    for _ in range(len(s)):\n        if not s[-1:] in [chr(ord('a') + ord('z'), chr(ord('A') + ord('B'), ord('C') + ord('D'), ord('E') + ord('F'), ord('G') + ord('H') + ord('I') + ord('J') + ord('K') + ord('L') + ord('M') + ord('N') + ord('O') + ord('P') + ord('Q') + ord('R') + ord('S') + ord('T') + ord('U') + ord('V') + ord('W') + ord('X') + ord('Y') + ord('Z')]):\n            raise ValueError(\"Illegal digit character in string\")\n\n    return s[:-1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    try:\n        return int(s, 16) + int(s[9:], 16)\n    except:\n        return int(s, 16) + int(s[9:], 16)\n\n    s = s[:9]\n    # Remove whitespaces, punctuation and hyphens\n    s = s.replace(\"\\x00\",\"\")\n    s = s.replace(\"'\",\"\")\n    s = s.replace(\"\\\"\",\"\")\n    s = s.replace(\"\\t\",\"\")\n    s = s.replace(\"\\n\",\"\")\n    s = s.replace(\"\\r\",\"\")\n    s = s.replace(\" \",\"\")\n    s = s.replace(\"-\",\"\")\n    s = s.replace(\".\",\"\")\n    s = s.replace(\"_\",\"\")\n    s = s.replace(\"_\",\"\")\n    s = s.replace(\"+\",\"\")\n    s = s.replace(\" \",\"\")\n    s = s.replace(\",\",\"\")\n    s = s.replace(\",\",\"\")\n    s = s.replace(\" \",\"\")\n    s = s.replace(\"\\t\",\"\")\n    s = s.replace(\"\\r\",", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.upper()[:-1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    sum = 0\n    for c in s:\n        if ord(c) >= 127 and ord(c) <= 253:\n            sum += ord(c)\n        else:\n            sum += ord(c)\n    return sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return s.upper() + s.rstrip().split(\" \")[0]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n\n    if s[0]!= '0':\n        return 0\n    if s[0] == '1':\n        return 1\n    if s[0] == '2':\n        return 2\n    if s[0] == '3':\n        return 3\n    if s[0] == '4':\n        return 4\n    if s[0] == '5':\n        return 5\n    if s[0] == '6':\n        return 6\n    if s[0] == '7':\n        return 7\n    if s[0] == '8':\n        return 8\n    if s[0] == '9':\n        return 9\n    if s[0] == 'a':\n        return a\n    if s[0] == 'b':\n        return b\n    if s[0] == 'c':\n        return c\n    if s[0] == 'd':\n        return d\n    if s[0] == 'e':\n        return e\n    if s[0] == 'f':\n        return f\n    if s[0] == 'g':\n        return g\n    if s[0] == 'h':\n        return h\n    if s[0] == 'i':\n        return i\n    if s[0] == 'j':\n        return j\n    if s[0] == 'k':\n        return k\n    if s[0] == 'l':\n        return l\n    if s[0] =='m':\n        return m\n    if s[0] == 'n':\n        return n\n    if s[0] == 'o':", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    # Initialize\n    s = \"\"\n    top = \"\"\n    b = 0\n    topCount = 0\n    bCount = 0\n    while b <= len(s):\n        if s[b:] == ord(ord('A')) or s[b:] == ord('B') or s[b:] == ord('C'):\n            s = s[:b-1]\n        else:\n            break\n        top = top + s[topCount:topCount+bCount]\n        b = b + 1\n    return top", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    if not isinstance(s, unicode):\n        s = s.encode('utf-8')\n    return sum(a for a in s.split(' ') if a.upper().isdigit()) + 1", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\"\n    return \"\".join(map(ord, s.upper()))"]]