[["def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value.isdigit():\n        return int(value)\n    else:\n        return int(round(value, 2))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value) + 1\n    if value == \"\":\n        return int(value) - 1\n    if value == \"\":\n        return int(value) * 2\n    if value == \"\":\n        return int(value) / 2\n    if value == \"\":\n        return int(value) % 2\n    if value == \"\":\n        return int(value) / 3\n    if value == \"\":\n        return int(value) % 3\n    if value == \"\":\n        return int(value) / 4\n    if value == \"\":\n        return int(value) / 5\n    if value == \"\":\n        return int(value) / 6\n    if value == \"\":\n        return int(value) / 7\n    if value == \"\":\n        return int(value) / 8\n    if value == \"\":\n        return int(value) / 9\n    if value == \"\":\n        return int(value) / 10\n    if value == \"\":\n        return int(value) / 11\n    if value == \"\":\n        return int(value) / 12\n    if value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n\n    if value == 0:\n        return value\n\n    if value == 1:\n        return value\n\n    if value == 2:\n        return value\n\n    if value == 3:\n        return value\n\n    if value == 4:\n        return value\n\n    if value == 5:\n        return value\n\n    if value == 6:\n        return value\n\n    if value == 7:\n        return value\n\n    if value == 8:\n        return value\n\n    if value == 9:\n        return value\n\n    if value == 10:\n        return value\n\n    if value == 11:\n        return value\n\n    if value == 12:\n        return value\n\n    if value == 13:\n        return value\n\n    if value == 14:\n        return value\n\n    if value == 15:\n        return value\n\n    if value == 16:\n        return value\n\n    if value == 17:\n        return value\n\n    if value == 18:\n        return value\n\n    if value == 19:\n        return value\n\n    if value == 20:\n        return value\n\n    if value == 21:\n        return value\n\n    if value == 22:\n        return value\n\n    if value == 23:\n        return value\n\n    if value == 24:\n        return value\n\n    if value == 25:\n        return value\n\n    if value == 26:\n        return value\n\n    if value == 27:\n        return value\n\n    if value == 28:\n        return value\n\n    if value == 29:\n        return value\n\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value - 1\n    if value == 1:\n        return value - 1\n    if value == -1:\n        return value - 1\n    if value == 2:\n        return value - 1\n    if value == 3:\n        return value - 1\n    if value == 4:\n        return value - 1\n    if value == 5:\n        return value - 1\n    if value == 6:\n        return value - 1\n    if value == 7:\n        return value - 1\n    if value == 8:\n        return value - 1\n    if value == 9:\n        return value - 1\n    if value == 10:\n        return value - 1\n    if value == 11:\n        return value - 1\n    if value == 12:\n        return value - 1\n    if value == 13:\n        return value - 1\n    if value == 14:\n        return value - 1\n    if value == 15:\n        return value - 1\n    if value == 16:\n        return value - 1\n    if value == 17:\n        return value - 1\n    if value == 18:\n        return value - 1\n    if value == 19:\n        return value - 1\n    if value == 20:\n        return value - 1\n    if value == 21:\n        return value - 1", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    elif value == 1:\n        return value - 1\n    elif value == 2:\n        return value - 2\n    elif value == 3:\n        return value - 3\n    elif value == 4:\n        return value - 4\n    elif value == 5:\n        return value - 5\n    elif value == 6:\n        return value - 6\n    elif value == 7:\n        return value - 7\n    elif value == 8:\n        return value - 8\n    elif value == 9:\n        return value - 9\n    elif value == 10:\n        return value - 10\n    elif value == 11:\n        return value - 11\n    elif value == 12:\n        return value - 12\n    elif value == 13:\n        return value - 13\n    elif value == 14:\n        return value - 14\n    elif value == 15:\n        return value - 15\n    elif value == 16:\n        return value - 16\n    elif value == 17:\n        return value - 17\n    elif value == 18:\n        return value - 18\n    elif value == 19:\n        return value - 19\n    elif value == 20:\n        return value - 20\n    elif value == 21:\n        return value - 21\n    elif value == 22:\n        return value - 22\n    elif value == 23:\n        return value - 23\n    elif value == 24:\n        return value - 24\n    elif value == 25:", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value)\n    if value == \"\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n\n    if value.startswith(\"0\"):\n        return value[1:]\n    else:\n        return int(value[1:])", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    else:\n        return int(round(value / 2))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return -1\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 2:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 10:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 11:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 12:\n        return value\n    if value == 12:\n        return value\n    if value == 13:", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n    if value.isdigit():\n        return int(value)\n    if value.isnan():\n        return None\n    if value == 0:\n        return None\n    if value == 1:\n        return closest_integer(value)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == 1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == 1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer(value - 1)\n    if value == -1:\n        return closest_integer", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    elif value == 1:\n        return value\n    elif value == -1:\n        return value\n    elif value == 0:\n        return value - 1\n    elif value == 1:\n        return value - 1\n    elif value == 2:\n        return value - 1\n    elif value == 3:\n        return value - 1\n    elif value == 4:\n        return value - 1\n    elif value == 5:\n        return value - 1\n    elif value == 6:\n        return value - 1\n    elif value == 7:\n        return value - 1\n    elif value == 8:\n        return value - 1\n    elif value == 9:\n        return value - 1\n    elif value == 10:\n        return value - 1\n    elif value == 11:\n        return value - 1\n    elif value == 12:\n        return value - 1\n    elif value == 13:\n        return value - 1\n    elif value == 14:\n        return value - 1\n    elif value == 15:\n        return value - 1\n    elif value == 16:\n        return value - 1\n    elif value == 17:\n        return value - 1\n    elif value == 18:\n        return value - 1\n    elif value == 19:\n        return value - 1\n    elif value == 20:\n        return value - 1\n    elif value == 21:\n        return value - 1\n    elif value == 22:\n        return value - 1", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    elif value == 1:\n        return 1\n    elif value == 2:\n        return 2\n    elif value == 3:\n        return 3\n    elif value == 4:\n        return 4\n    elif value == 5:\n        return 5\n    elif value == 6:\n        return 6\n    elif value == 7:\n        return 7\n    elif value == 8:\n        return 8\n    elif value == 9:\n        return 9\n    elif value == 10:\n        return 10\n    elif value == 11:\n        return 11\n    elif value == 12:\n        return 12\n    elif value == 13:\n        return 13\n    elif value == 14:\n        return 14\n    elif value == 15:\n        return 15\n    elif value == 16:\n        return 16\n    elif value == 17:\n        return 17\n    elif value == 18:\n        return 18\n    elif value == 19:\n        return 19\n    elif value == 20:\n        return 20\n    elif value == 21:\n        return 21\n    elif value == 22:\n        return 22\n    elif value == 23:\n        return 23\n    elif value == 24:\n        return 24\n    elif value == 25:\n        return 25\n    elif value == 26:\n        return 26\n    elif value == 27:\n        return 27\n    elif value == 28:\n        return 28\n    elif value == 29:\n        return 29\n    elif value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \",\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    else:\n        return int(round(value))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return int(value)\n    if value == \"\":\n        return int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value) - int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value) - int(value) - int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value)\n    if value == \"\":\n        return int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value) - int(value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    else:\n        return int(round(value / 2))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value.startswith(\"0\"):\n        return value[1:]\n    else:\n        return value[2:] + closest_integer(value[1:])", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":\n        return value\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"):\n        value = value[:-1] + \".\"\n\n    if value.endswith(\".\"", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \",\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value.startswith(\"0\"):\n        return value[1:]\n    if value.startswith(\"+\"):\n        return int(value[1:])\n    if value.startswith(\"-\"):\n        return int(value[1:]) - int(value[:-1])\n    return int(value[1:]) - int(value[:-1])", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value.startswith(\"0\"):\n        return value[1:]\n\n    if value.startswith(\"1\"):\n        return value[1:]\n\n    if value.startswith(\"2\"):\n        return value[1:]\n\n    if value.startswith(\"3\"):\n        return value[1:]\n\n    if value.startswith(\"4\"):\n        return value[1:]\n\n    if value.startswith(\"5\"):\n        return value[1:]\n\n    if value.startswith(\"6\"):\n        return value[1:]\n\n    if value.startswith(\"7\"):\n        return value[1:]\n\n    if value.startswith(\"8\"):\n        return value[1:]\n\n    if value.startswith(\"9\"):\n        return value[1:]\n\n    if value.startswith(\"10\"):\n        return value[1:]\n\n    if value.startswith(\"11\"):\n        return value[1:]\n\n    if value.startswith(\"12\"):\n        return value[1:]\n\n    if value.startswith(\"13\"):\n        return value[1:]\n\n    if value.startswith(\"14\"):\n        return value[1:]\n\n    if value.startswith(\"15\"):\n        return value[1:]\n\n    if value.startswith(\"16\"):\n        return value[1:]\n\n    if value.startswith(\"17\"):", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 2:\n        return value\n    if value == -1:\n        return value\n    if value == 3:\n        return value\n    if value == -1:\n        return value\n    if value == 4:\n        return value\n    if value == -1:\n        return value\n    if value == 5:\n        return value\n    if value == -1:\n        return value\n    if value == 6:\n        return value\n    if value == -1:\n        return value\n    if value == 7:\n        return value\n    if value == -1:\n        return value\n    if value == 8:\n        return value\n    if value == -1:\n        return value\n    if value == 9:\n        return value\n    if value == -1:\n        return value\n    if value == 10:\n        return value\n    if value == -1:\n        return value\n    if value == 11:\n        return value\n    if value == -1:\n        return value\n    if value == 12:\n        return value\n    if value == -1:\n        return value\n    if value == 13:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value\n    if value == -1:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, int):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, float):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, int):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, int):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, float):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, int):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, float):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, int):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, float):\n        return 0\n\n    # If the number is not a number, return 0\n    if not isinstance(value, int):", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    else:\n        return int(round(value / 2))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value == 0:\n        return value\n    if value < 0:\n        return value - 1\n    if value > 1:\n        return value + 1\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value.startswith(\"0\"):\n        return value[1:]\n\n    if value.startswith(\"+\"):\n        return int(value[1:])\n\n    if value.startswith(\"-\"):\n        return int(value[1:])\n\n    if value.startswith(\"*\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"*\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"*\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return int(value[1:])\n\n    if value.startswith(\"/\"):\n        return", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \",\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value.isdigit():\n        return int(value)\n    elif value.isnan():\n        return 0\n    elif value.isinf():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.isnan():\n        return 0\n    elif value.", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n    if value.isdigit():\n        return int(value)\n    if value.isnan():\n        return None\n    return int(round(value / float(2)))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if value == 1:\n        return value\n    if value == -1:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    if value == 16:\n        return 16\n    if value == 17:\n        return 17\n    if value == 18:\n        return 18\n    if value == 19:\n        return 19\n    if value == 20:\n        return 20\n    if value == 21:\n        return 21\n    if value == 22:\n        return 22\n    if value == 23:\n        return 23\n    if value == 24:\n        return 24\n    if value == 25:\n        return 25\n    if value == 26:\n        return 26\n    if value == 27:\n        return 27\n    if value == 28:\n        return 28\n    if value == 29:\n        return 29\n    if value == 30:\n        return 30", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if value == 1:\n        return 1\n    if value == -1:\n        return -1\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 1\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.endswith(\".\"):\n        value = value[:-1]\n\n    if value.", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value = value[:-1]\n    if value.endswith(\".\"):\n        value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n    if value.startswith(\"0\"):\n        return value[1:]\n    if value.startswith(\"+\"):\n        return int(value[1:])\n    if value.startswith(\"-\"):\n        return int(value[1:])\n    return int(value[1:]) + int(value[:-1]) + int(value[2:]) + int(value[3:]) + int(value[4:]) + int(value[5:]) + int(value[6:]) + int(value[7:]) + int(value[8:]) + int(value[9:]) + int(value[10:]) + int(value[11:]) + int(value[12:]) + int(value[13:]) + int(value[14:]) + int(value[15:]) + int(value[16:]) + int(value[17:]) + int(value[18:]) + int(value[19:]) + int(value[20:]) + int(value[21:]) + int(value[22:]) + int(value[23:]) + int(value[24", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return None\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    elif value == 1:\n        return value\n    elif value == 2:\n        return value\n    elif value == 3:\n        return value\n    elif value == 4:\n        return value\n    elif value == 5:\n        return value\n    elif value == 6:\n        return value\n    elif value == 7:\n        return value\n    elif value == 8:\n        return value\n    elif value == 9:\n        return value\n    elif value == 10:\n        return value\n    elif value == 11:\n        return value\n    elif value == 12:\n        return value\n    elif value == 13:\n        return value\n    elif value == 14:\n        return value\n    elif value == 15:\n        return value\n    elif value == 16:\n        return value\n    elif value == 17:\n        return value\n    elif value == 18:\n        return value\n    elif value == 19:\n        return value\n    elif value == 20:\n        return value\n    elif value == 21:\n        return value\n    elif value == 22:\n        return value\n    elif value == 23:\n        return value\n    elif value == 24:\n        return value\n    elif value == 25:\n        return value\n    elif value == 26:\n        return value\n    elif value == 27:\n        return value\n    elif value == 28:\n        return value\n    elif value == 29:\n        return value\n    elif value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    if value == 1:\n        return value\n    if value == 2:\n        return value\n    if value == 3:\n        return value\n    if value == 4:\n        return value\n    if value == 5:\n        return value\n    if value == 6:\n        return value\n    if value == 7:\n        return value\n    if value == 8:\n        return value\n    if value == 9:\n        return value\n    if value == 10:\n        return value\n    if value == 11:\n        return value\n    if value == 12:\n        return value\n    if value == 13:\n        return value\n    if value == 14:\n        return value\n    if value == 15:\n        return value\n    if value == 16:\n        return value\n    if value == 17:\n        return value\n    if value == 18:\n        return value\n    if value == 19:\n        return value\n    if value == 20:\n        return value\n    if value == 21:\n        return value\n    if value == 22:\n        return value\n    if value == 23:\n        return value\n    if value == 24:\n        return value\n    if value == 25:\n        return value\n    if value == 26:\n        return value\n    if value == 27:\n        return value\n    if value == 28:\n        return value\n    if value == 29:\n        return value\n    if value == 30:\n        return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n\n    if value == 1:\n        return value\n    elif value == -1:\n        return value - 1\n    elif value == 0:\n        return value\n    else:\n        return int(value) - int(value - 1)", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value is None:\n        return 0\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value == \"\":\n        return value\n\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return value\n    else:\n        return int(round(value / 2.0))", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 1\n    if value == \".\":\n        return 2\n    if value == \".\":\n        return 3\n    if value == \".\":\n        return 4\n    if value == \".\":\n        return 5\n    if value == \".\":\n        return 6\n    if value == \".\":\n        return 7\n    if value == \".\":\n        return 8\n    if value == \".\":\n        return 9\n    if value == \".\":\n        return 10\n    if value == \".\":\n        return 11\n    if value == \".\":\n        return 12\n    if value == \".\":\n        return 13\n    if value == \".\":\n        return 14\n    if value == \".\":\n        return 15\n    if value == \".\":\n        return 16\n    if value == \".\":\n        return 17\n    if value == \".\":\n        return 18\n    if value == \".\":\n        return 19\n    if value == \".\":\n        return 20\n    if value == \".\":\n        return 21\n    if value == \".\":\n        return 22\n    if value == \".\":\n        return 23\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \",\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":\n        return 0\n    if value == \".\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"\":\n        return 0\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value == \"\":\n        return value\n    if value =="]]