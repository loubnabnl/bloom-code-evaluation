[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        arr = [arr]\n    return sum(sum(abs(n) for n in arr) for arr in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # If the array is empty, return 0\n    if len(arr) == 0:\n        return 0\n\n    # If the array is not empty, return the number of elements which has a sum\n    # of digits > 0.\n    return len(arr) - len([-1, 11, -11]) - len([1, 1, 2]) - len([3, 1, 2, 3])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = []\n    for item in arr:\n        if item < 0:\n            count_nums.append(item)\n        else:\n            count_nums.append(item / 2)\n    return count_nums\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError(\"Expected a list of integers\")\n\n    return sum(len(x) for x in arr if x > 0)\n\n    # We don't need a negative sum in this case\n    if arr[0] == -1:\n        return 0\n\n    # We don't need a negative first digit in this case\n    if arr[0] < 0:\n        return 0\n\n    # We don't need a negative last digit in this case\n    if arr[-1] < 0:\n        return 0\n\n    # We don't need a negative first digit and last digit in this case\n    if arr[0] > arr[-1] and arr[-1] > arr[0]:\n        return 0\n\n    # We don't need a negative first digit and last digit in this case\n    if arr[0] > arr[-1] and arr[-1] > arr[0] and arr[-1] < 0:\n        return 0\n\n    # We don't need a negative first digit and last digit in this case\n    if arr[0] > arr[-1] and arr[-1] > arr[0] and arr[-1] > arr[-1] and arr[-1] < 0:\n        return 0\n\n    # We don't need a negative first digit and last digit in this case\n    if arr[0] > arr[-1] and arr[-1] > arr[0] and arr[-1] > arr[-1] and arr[-1] > arr[-1] and arr[-1] < 0:", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) == 0:\n        return 0\n    return sum(map(count_nums, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    def count_nums(a):\n        for i in range(len(a)):\n            if a[i] > 0:\n                if i == 0:\n                    return i + 1\n                else:\n                    return i + 2\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(sum(n for n in arr if n >= 0 and n <= 65535))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    if not isinstance(arr, int):\n        arr = [arr]\n\n    if len(arr) < 1:\n        return 0\n\n    if len(arr) == 1:\n        return 1\n\n    if len(arr) == 2:\n        return 2\n\n    if len(arr) == 3:\n        return 3\n\n    if len(arr) >= 4:\n        return 4\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        if i > 0:\n            n += arr[i]\n        else:\n            n += arr[i]\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    if arr[0] == 0:\n        return 0\n\n    if arr[0] < 0:\n        return -arr[0]\n    if arr[0] > len(arr):\n        return len(arr) - 1\n    return arr[0] - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if not isinstance(arr, int):\n        raise ValueError(\"Array must be a number\")\n    arr = int(arr)\n    if arr < 0:\n        for i in range(len(arr)):\n            if arr[i] < 0:\n                return i\n    if len(arr) == 1:\n        return arr\n    if arr == 0:\n        return 0\n    return len(arr) - 1\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    if len(arr) == 2:\n        return 2\n    if len(arr) == 3:\n        return 3\n    return 4", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    sum = 0\n    for i in range(len(arr)):\n        sum += arr[i]\n        if sum > 0:\n            break\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return\n    n = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    sum = 0\n    for i in range(len(arr)):\n        if i > 0:\n            sum += arr[i]\n        else:\n            sum += arr[i]\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if arr[i] <= 0:\n            nums.append(i)\n    return int(sum(nums) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= 2:\n        return 0\n    if len(arr) < 2:\n        return 0\n    # If the first digit is negative, then the sum of all digits is\n    # negative\n    first_dig = arr[0]\n    second_dig = arr[1]\n    if first_dig < 0:\n        return -first_dig\n    if second_dig < 0:\n        return second_dig\n    # If the first digit is positive, then the sum of all digits is\n    # positive\n    first_dig = arr[0]\n    second_dig = arr[1]\n    if first_dig > 0:\n        return first_dig\n    if second_dig > 0:\n        return second_dig\n    # If the first digit is negative, then the sum of all digits is\n    # negative\n    first_dig = arr[0]\n    second_dig = arr[1]\n    if first_dig > 0:\n        return first_dig\n    if second_dig > 0:\n        return second_dig\n    # If the first digit is positive, then the sum of all digits is\n    # positive\n    first_dig = arr[0]\n    second_dig = arr[1]\n    if first_dig < 0:\n        return first_dig\n    if second_dig <", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    return sum(len(i) for i in arr)\n    #return sum(len(i) for i in xrange(len(arr)))\n    #return sum(i for i in xrange(len(arr)))\n    #return sum(i for i in xrange(len(arr)))\n    #return sum(i for i in xrange(len(arr)))\n    #return sum(i for i in xrange(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        return int(sum(arr, 0))\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        if i < 0:\n            n += int(arr[i])\n        else:\n            n += int(arr[i] - 1)\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return\n    if not isinstance(arr, float):\n        return\n    if not isinstance(arr, list):\n        return\n    if not isinstance(arr, tuple):\n        return\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    for i in range(0, len(arr)):\n        if arr[i] < 0:\n            if len(arr) == 1:\n                return\n            return 1\n        if arr[i] == 0:\n            return 0\n        if arr[i] > 0:\n            return len(arr) - 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, (list, tuple)):\n        arr = [arr]\n    n = 0\n    for i in range(len(arr)):\n        if i == 0:\n            continue\n        if i < 0:\n            n += 1\n        else:\n            n += 1\n        if i + 1 in arr:\n            n += 1\n        else:\n            n += 1\n        if n == len(arr):\n            break\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                if i < len(arr) - 1:\n                    count_nums(arr[:i])\n                    count_nums(arr[len(arr) - 1:])\n                else:\n                    count_nums(arr[len(arr)])\n            else:\n                count_nums(arr)\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr\n    else:\n        return int(sum(i for i in arr if i > 0)) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if arr[0] < 0:\n        return 0\n    return int(math.ceil(arr[1] / 2.0))\n    # if arr[0] == -1:\n    #     return int(math.ceil(arr[1] / 2.0) + 1)\n    # else:\n    #     return int(math.ceil(arr[1] / 2.0) + 2)\n    # if arr[0] == 11 or arr[0] == -11:\n    #     return int(math.ceil(arr[1] / 2.0) + 3)\n    # else:\n    #     return int(math.ceil(arr[1] / 2.0) + 4)\n    # if arr[0] == 11 or arr[0] == -11:\n    #     return int(math.ceil(arr[1] / 2.0) + 5)\n    # else:\n    #     return int(math.ceil(arr[1] / 2.0) + 6)\n    # if arr[0] == 11 or arr[0] == -11:\n    #     return int(math.ceil(arr[1] / 2.0) + 7)\n    # else:\n    #     return int(math.ceil(arr[1] / 2.0) + 8)\n    # if arr[0] == 11 or arr[0] ==", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if len(arr) < 2 else int(arr[0]) + int(arr[1]) * int(arr[2]) + int(arr[3]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Test if all numbers have a sum of digits > 0\n    if len(arr)!= 0:\n        for i in range(len(arr)):\n            if arr[i]!= 0:\n                return i\n\n    # Test if the first number has a sum of digits > 0\n    if len(arr) == 0:\n        return 0\n\n    # Test if the second number has a sum of digits > 0\n    if len(arr) == 1:\n        return 1\n\n    # Test if the third number has a sum of digits > 0\n    if len(arr) == 2:\n        return 2\n\n    # Test if the fourth number has a sum of digits > 0\n    if len(arr) == 3:\n        return 3\n\n    # Test if the fifth number has a sum of digits > 0\n    if len(arr) == 4:\n        return 4\n\n    # Test if the sixth number has a sum of digits > 0\n    if len(arr) == 5:\n        return 5\n\n    # Test if the seventh number has a sum of digits > 0\n    if len(arr) == 6:\n        return 6\n\n    # Test if the eighth number has a sum of digits > 0\n    if len(arr) == 7:\n        return 7\n\n    # Test if the ninth number has a sum of digits > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    return sum([sum([_.isdigit() for _ in arr]) for _ in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO: make sure that it is a function that returns a number\n    if not isinstance(arr, list):\n        raise ValueError(\"Expected a list of integers\")\n    if len(arr) == 0:\n        return 0\n    # TODO: make sure that the first element of the array is not a negative\n    # number\n    if arr[0] < 0:\n        # if the first element is negative, we need to subtract the first sign\n        # digit from it\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                arr[i] -= 1\n    else:\n        # if the first element is positive, we need to add the first sign\n        # digit to it\n        for i in range(len(arr)):\n            if arr[i] < 0:\n                arr[i] += 1\n    return int(sum(arr) / len(arr) + 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    if len(arr) > 0:\n        s = ''\n        for i in range(len(arr)):\n            s += str(arr[i]) +''\n        return s\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if not isinstance(arr[0], int):\n        return\n    if len(arr) > 1:\n        return\n    sum = 0\n    for i in range(0, len(arr)):\n        sum += arr[i]\n    if sum >= 0:\n        return sum\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"arr must be an integer\")\n    if arr == 0:\n        return 0\n    if not isinstance(arr, int):\n        return 0\n    if arr < 0:\n        return 0\n    if arr == 0:\n        return 0\n    if arr > len(arr):\n        return 0\n    if arr < 1:\n        return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    if len(arr) == 0:\n        return 0\n    n = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in zip(*arr)], 0) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write function call\n    if len(arr) == 0:\n        return 0\n    # write function result\n    return int(' '.join(str(i) for i in zip(*arr)) + str(0) + str(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        num = int(arr[i], 16)\n        if num < 0:\n            nums.append(num)\n        else:\n            nums.append(num + 1)\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        if i < len(arr) - 1:\n            if arr[i] == 0:\n                n += 1\n            else:\n                n += 2\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    return int(arr[0]) + int(arr[1]) * int(arr[2]) + int(arr[3]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    return int(sum(arr) / int(len(arr)))\n    #return int(sum(arr) / int(len(arr)) * len(arr) - 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError(\"expected array of 2 elements\")\n    if arr[0] < 0:\n        return 0\n    if arr[1] < 0:\n        return 1\n    return int(round(sum(arr) / 2))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # The special case of 0 is handled here, because it is a special\n    # case of the general case.\n    if len(arr) == 0:\n        return 0\n    # The special case of -1 is handled here, because it is a special\n    # case of the general case.\n    if len(arr) == 1:\n        return 1\n    # The special case of -1 and 2 are handled here, because they are\n    # special cases of the general case.\n    if len(arr) == 2:\n        return 2\n    # The special case of -1 and 3 are handled here, because they are\n    # special cases of the general case.\n    if len(arr) == 3:\n        return 3\n    # The special case of -1 and 4 are handled here, because they are\n    # special cases of the general case.\n    if len(arr) == 4:\n        return 4\n    # The special case of -1 and 5 are handled here, because they are\n    # special cases of the general case.\n    if len(arr) == 5:\n        return 5\n    # The special case of -1 and 6 are handled here, because they are\n    # special cases of the general case.\n    if len(arr) == 6:\n        return 6\n    # The special case of -1 and 7 are handled here,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"Expected array of integers.\")\n\n    # if a number is negative, then its first signed digit will be negative:\n    # e.g. -123 has signed digits -1, 2, and 3.\n    if arr < 0:\n        return -1\n    if arr == 0:\n        return 0\n\n    if not hasattr(arr, 'digits'):\n        return 0\n\n    # if the first digit is negative, then the sum of the digits is negative\n    # e.g. -123 has negative digits -1, 2, and 3.\n    if arr.digits < 0:\n        return -1\n\n    # If the first digit is not negative, then the sum of the digits is positive.\n    # e.g. 1 has positive digits 1, 2, and 3.\n    if arr.digits > 0:\n        return 1\n\n    # If the first digit is positive, then the sum of the digits is negative.\n    # e.g. 11 has negative digits 1, 2, and 3.\n    if arr.digits < 0:\n        return -1\n\n    # If the first digit is positive, then the sum of the digits is positive.\n    # e.g. 11 has positive digits 1, 2, and 3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr[0] == 0:\n        return 0\n\n    if arr[0] < 0:\n        return -1\n\n    if arr[0] > arr[-1] - 1:\n        return arr[-1] - 1\n\n    if arr[-1] - 1 < 0:\n        return arr[-1] - 1\n\n    return arr[0] + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    for i in range(len(arr)):\n        if not arr[i].isdigit():\n            continue\n        if not arr[i].isdigit():\n            continue\n        if i == len(arr) - 1:\n            return 0\n        if i >= len(arr) - 2:\n            return 0\n        if arr[i] < 0 and arr[i + 1] > 0:\n            return 0\n        if arr[i] > 0 and arr[i + 1] < 0:\n            return 0\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if not all(isdigit(x) for x in arr) else int(arr[0]) + int(arr[1]) + int(arr[2]) + int(arr[3])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    if len(arr) == 0:\n        return 0\n    else:\n        if len(arr) == 1:\n            return int(arr[0])\n        else:\n            return int(sum([int(x) for x in arr])) + 1\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise ValueError('Array must be one element')\n    if not isinstance(arr[0], int):\n        raise ValueError('Array must be an integer')\n    if arr[0] < 0:\n        return -len(arr) - 1\n    # Count number of digits\n    digits = 0\n    for i in range(len(arr)):\n        digits += int(arr[i].split()[0]) // 10\n    return digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError(\"array length must be 2\")\n\n    if arr[0] < 0:\n        # The negative first digit is negative\n        return -1\n    if arr[0] >= arr[1]:\n        # The negative second digit is positive\n        return arr[0]\n    if abs(arr[0] - arr[1]) > 1:\n        # The negative first digit is negative\n        return arr[0] + 1\n    if abs(arr[1] - arr[0]) > 1:\n        # The negative second digit is positive\n        return arr[1] + 1\n    if abs(arr[1] - arr[0]) < 1:\n        # The negative first digit is positive\n        return arr[1]\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    for i in range(len(arr)):\n        if i < 0:\n            return -int(arr[i])\n    return int(arr[::-1]) + int(arr[::-1]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('array must be integer')\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) == 2:\n        return\n    if len(arr) == 3:\n        return\n    if len(arr) == 4:\n        return\n    if len(arr) == 5:\n        return\n    if len(arr) == 6:\n        return\n    if len(arr) == 7:\n        return\n    if len(arr) == 8:\n        return\n    if len(arr) == 9:\n        return\n    if len(arr) == 10:\n        return\n    if len(arr) == 11:\n        return\n    if len(arr) == 12:\n        return\n    if len(arr) == 13:\n        return\n    if len(arr) == 14:\n        return\n    if len(arr) == 15:\n        return\n    if len(arr) == 16:\n        return\n    if len(arr) == 17:\n        return\n    if len(arr) == 18:\n        return\n    if len(arr) == 19:\n        return\n    if len(arr) == 20:\n        return\n    if len(arr) == 21:\n        return\n    if len(arr) == 22:\n        return\n    if len(arr", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) < 1:\n        return 0\n    if len(arr) > 2:\n        return int(sum(arr) / 2)\n    return int(sum(arr) % 2)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    # Create a list of all digits\n    digits = []\n    for i in range(len(arr)):\n        digits.append(arr[i])\n    # Sum the digits\n    return sum(digits) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) < 2:\n        return 0\n    if len(arr) == 2:\n        return int(arr[0]) + int(arr[1]) - 1\n    else:\n        return int(arr[0]) + int(arr[1]) - 1 - int(arr[2]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([abs(d) for d in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # if negative, first digit will be negative\n    if arr[0] < 0:\n        return -1\n    # if number is negative, then its first signed digit will be negative\n    else:\n        return int(arr[0]) - 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr.size() < 2 else int(arr[0]) + int(arr[1]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(a) for a in arr]) if a > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return len(arr) - 1 if len(arr) == 0 else 1 + count_nums(arr[1:])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    for i, num in enumerate(arr):\n        if num < 0:\n            num = -num\n        if num > 0:\n            return i + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    # number of digits > 0\n    return 0 if arr[0] < 0 else 1 + int(arr[0] * 10) / 10.0\n    # number of digits < 0\n    return 0 if arr[0] > 0 else -1 + int(arr[0] * 10) / 10.0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            nums.append(i)\n        else:\n            nums.append(i - 1)\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return int(arr)\n    else:\n        return len(arr) if len(arr) > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(0, len(arr) - 1, 1):\n        if arr[i]!= 0:\n            if arr[i + 1] == 0:\n                if arr[i] - arr[i - 1] > 0:\n                    num = int(arr[i + 1]) + int(arr[i - 1])\n                else:\n                    num = int(arr[i]) + int(arr[i - 1])\n                if num > 0:\n                    return num\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        nums = []\n        for i in range(0, len(arr)):\n            nums.append(int(arr[i]) * (int(arr[i]) - 1) / (int(arr[i]) + 1))\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(d for d in arr if d > 0) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return int(sum(map(lambda i: i.isdigit(), arr))))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr if int(x) > 0]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        return 0\n    if arr[0] < 0:\n        return 0\n    if not isinstance(arr[1], int):\n        return 0\n    return int(arr[1].zfill(2) + 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return (len(arr) + 1) * (len(arr) - 1) * count_nums(arr[1:]) + count_nums(arr[-1:])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i in range(len(arr)):\n        if i!= 0:\n            result += (i - 1) * (arr[i] - arr[i - 1])\n        else:\n            result += (arr[i] - arr[i - 1])\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for n in range(len(arr)):\n        if n < 0:\n            result += abs(n)\n        else:\n            result += abs(arr[n])\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        return 0\n    return int(arr[0]) + int(arr[1]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # If a negative number is found, then its first digit will be negative:\n    if arr[0] < 0:\n        return -1\n\n    # If a number is positive, then its first digit will be positive:\n    return 1 if arr[0] > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError(\"expected an array of two numbers\")\n    return int(arr[0]) + int(arr[1]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return sum([int(x) for x in zip(*arr)])\n\n    return sum([int(x) for x in zip(*arr)]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # This is a bit of a hack to get a negative number to be written as\n    # a negative number with the first negative digit being negative.\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            arr[i] = -arr[i]\n        else:\n            if arr[i] > 0:\n                arr[i] = -arr[i]\n\n    # If the number is not a positive number, then write it as a negative\n    # number with the first negative digit being negative.\n    if not (arr[0] > 0):\n        arr[0] = -arr[0]\n\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(i for i in arr if i.isdigit() and i >= 0 and i <= 10)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return\n    if len(arr) > 2:\n        return int(arr[1]) + int(arr[2])\n    else:\n        return int(arr[0]) + int(arr[1]) + int(arr[2]) + int(arr[3])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(len(arr)):\n        if abs(arr[i]) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    if len(arr) == 0:\n        return 0\n\n    # Test for negative numbers\n    if arr[0] < 0:\n        return -1\n    # Test for negative numbers with first positive sign\n    else:\n        for i in range(1, len(arr)):\n            if arr[i] >= 0:\n                return i\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) == 0:\n        return 0\n    return int(sum([abs(x) for x in arr]) for arr in arr)\n\n    def _sum(arr, digits):\n        \"\"\"\n        Sums up the numbers from the array.\n        :param arr: an array of integers\n        :param digits: the number of digits to sum\n        :return: the sum of the numbers\n        \"\"\"\n        if not isinstance(arr, list):\n            return 0\n        if len(arr) == 0:\n            return 0\n        return int(sum([abs(x) for x in arr]) for arr in arr)\n\n    def count(arr):\n        \"\"\"\n        Counts the number of elements in the array.\n        :param arr: an array of integers\n        :return: the number of elements\n        \"\"\"\n        if not isinstance(arr, list):\n            return 0\n        return int(sum([abs(x) for x in arr]) for arr in arr)\n\n    def _count(arr):\n        \"\"\"\n        Counts the number of elements in the array.\n        :param arr: an array of integers\n        :return: the number of elements\n        \"\"\"\n        if not isinstance(arr, list):\n            return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) == 0:\n        return 0\n    if not isinstance(arr[0], int):\n        return 0\n    if not isinstance(arr[-1], int):\n        return 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            if i < len(arr) - 1:\n                return 0\n            else:\n                return 0\n        if i == 0:\n            return 0\n        else:\n            return count_nums([arr[i - 1: i + 1]])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return sum(count_nums(i) for i in arr)\n    else:\n        return sum(count_nums(i) for i in arr if i > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(n) for n in arr], int(n) if n >= 0 else 0) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    try:\n        return int(arr[0]) * 10 ** (arr[1] - 1)\n    except ValueError:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        return\n    if arr[0] < 0:\n        arr[0] = -arr[0]\n    return int(arr[1] + int(arr[0]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(n) for n in arr]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"array must be an integer\")\n    return int(sum(map(lambda x: x + 1, arr)))\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return sum(map(int, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is not None:\n        if arr[0] == -123:\n            return -len(arr)\n        else:\n            return sum(1 for i in range(len(arr), 1, -1))\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    for i in range(len(arr)):\n        if i < len(arr) - 1:\n            if arr[i]!= arr[i + 1:]:\n                continue\n        if i + 1 < len(arr):\n            if arr[i + 1]!= arr[i + 2:]:\n                continue\n        if arr[i]!= 0.:\n            if arr[i + 1]!= 0:\n                count = 0\n                for j in range(i + 1, len(arr)):\n                    if arr[j]!= 0.:\n                        count += 1\n                if count > 0:\n                    return i + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr[0] < 0:\n        if arr[0] < 0:\n            return -arr[0]\n    else:\n        return arr[0]\n\n    return sum([int(n) for n in arr]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, (list, tuple)):\n        if len(arr)!= 2:\n            raise ValueError('Expected 2 integers, got %d' % len(arr))\n        return sum(count_nums(x) for x in arr)\n    else:\n        return sum(count_nums(x) for x in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"Array must be a number\")\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0])\n    return int(sum(map(int, [int(x) for x in arr])))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    if arr[0] == 0:\n        return 0\n    if not arr[0] >= 0:\n        return 0\n    if arr[0] % 10 == 0:\n        return count_nums([arr[1], arr[2], arr[3]])\n    if arr[0] % 100 == 0:\n        return count_nums([arr[1], arr[2], arr[3]]) + 1\n    if arr[0] % 1000 == 0:\n        return count_nums([arr[1], arr[2], arr[3]]) + 1\n    if arr[0] % 10000 == 0:\n        return count_nums([arr[1], arr[2], arr[3]]) + 1\n    return count_nums([arr[1], arr[2], arr[3]]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return int(arr[0])\n    else:\n        return sum([int(n) for n in arr]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        if not all(isdigit(n) for n in arr):\n            return 0\n        if abs(n) < abs(n - 1):\n            return 1\n        else:\n            return 2\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(i) for i in range(len(arr)) if i > 0]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return int(sum([int(n) for n in arr]))\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) < 3:\n        return\n    return (sum(array(arr) * 10) for array in arr)\n    # NOTE: this is a hack, but it seems to work.\n    # If the first digit is negative, then the last digit is negative.\n    # This is because the first digit is signed.\n    # The second digit is not.\n    # So the first digit is negative and the second digit is negative.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.\n    # This is why this is wrong.", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 3:\n        return 0\n    else:\n        return int(sum(arr) / 2.0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return int(sum([chr(ord(i) + ord(j) - ord(k)) for i, j, k in zip(arr, range(0, len(arr) - 1), range(len(arr) - 1))]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    # if no sum is found, return 0\n    if len(arr) == 0:\n        return 0\n\n    # for each number, count its digits and sum the digits\n    for num in arr:\n        num = int(num)\n        if num > 0:\n            num = num.zfill(2)\n            if num > 0:\n                count = int(num.zfill(2))\n                if count > 0:\n                    return count\n\n    # if no sum is found, return 0\n    if len(arr) == 0:\n        return 0\n\n    # for each number, count its digits and sum the digits\n    for num in arr:\n        num = int(num)\n        if num > 0:\n            num = num.zfill(2)\n            if num > 0:\n                count = int(num.zfill(2))\n                if count > 0:\n                    return count\n\n    # if no sum is found, return 0\n    if len(arr) == 0:\n        return 0\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr[0] < 0 else int(arr[0]) + 1 if arr[0] > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if len(arr) < 2 else int(arr[0]) + int(arr[1]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if num < 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return int(sum([int(s) for s in arr]))\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return int(arr[0])\n    if len(arr) == 2:\n        return int(arr[0] + arr[1])\n    if len(arr) == 3:\n        return int(arr[0] + arr[1] + arr[2])\n    if len(arr) >= 3:\n        return int(arr[0] + arr[1] + arr[2] + arr[3])\n    if len(arr) >= 4:\n        return int(arr[0] + arr[1] + arr[2] + arr[3] + arr[4])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return 0\n    # the number of digits that are negative\n    digits = -len(arr) - 1\n    # the number of digits that are positive\n    digits = len(arr) - digits - 1\n    return int(round(sum(arr) * digits))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"array must be an integer\")\n\n    # Check that the array is finite\n    if len(arr) == 0:\n        raise IndexError(\"array must have at least one element\")\n\n    # Count the number of digits\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    # Count the number of digits for each element\n    for i in range(len(arr)):\n        if not isinstance(arr[i], int):\n            raise TypeError(\"array must have at least one element\")\n        if i + 1 < len(arr):\n            if len(arr[i + 1]) > 0:\n                # Count the number of digits\n                if not isinstance(arr[i + 1], list):\n                    arr[i + 1] = [arr[i + 1]]\n                for j in range(len(arr[i + 1])):\n                    if not isinstance(arr[j + 1], int):\n                        raise TypeError(\"array must have at least one element\")\n                    if j + 1 < len(arr):\n                        if len(arr[j + 1]) > 0:\n                            # Count the number of digits\n                            if not isinstance(arr[j + 1], list", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # This is a little tricky:\n    #   - If the number is negative, the first signed digit will be negative:\n    #     - 123 has signed digits -1, 2, and 3.\n    #   - If the number is positive, the first unsigned digit will be positive:\n    #     - 1 has unsigned digits 0, 1, and 2.\n    #   - If the number is zero, the first unsigned digit is zero.\n    #   - If the number is negative, the first unsigned digit is negative:\n    #     - -1 has unsigned digits 0, 1, and 2.\n    #   - If the number is positive, the first unsigned digit is positive:\n    #     - 1 has unsigned digits 0, 1, and 2.\n    #   - If the number is zero, the first unsigned digit is zero.\n    #   - If the number is negative, the first unsigned digit is negative:\n    #     - 1 has unsigned digits 0, 1, and 2.\n    #   - If the number is positive, the first unsigned digit is positive:\n    #     - 1 has unsigned digits 0, 1, and 2.\n    #   - If the number is zero, the first unsigned digit is zero.\n    #   - If the number is negative, the first", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError('Expected two integers')\n\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            continue\n        if arr[i] > 0:\n            if arr[i] - arr[i - 1] > 0:\n                count = int(arr[i - 1])\n            else:\n                count = int(arr[i])\n            if count > 0:\n                return count\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return int(sum(arr, 0)) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0]) + 1\n    else:\n        # check if we can use a negative number\n        if len(arr) > 1:\n            # check if the first digit is negative\n            if arr[0] < 0:\n                # we can't use negative numbers\n                return 0\n            # check if the second digit is negative\n            if arr[1] < 0:\n                # we can't use negative numbers\n                return 0\n            # check if the third digit is negative\n            if arr[2] < 0:\n                # we can't use negative numbers\n                return 0\n            # check if the last digit is negative\n            if arr[-1] < 0:\n                # we can't use negative numbers\n                return 0\n        else:\n            # we can use negative numbers\n            return int(arr[0]) + 1\n\n    return int(arr[0]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        nums = []\n        for i in range(len(arr)):\n            nums.append(int(arr[i]))\n        return nums.count(1)\n\n    # If the number is negative, return the first negative sign:\n    if arr[0] < 0:\n        nums = []\n        for i in range(len(arr)):\n            nums.append(int(arr[i]))\n        return nums.count(-1)\n\n    # If the number is positive, return the first positive sign:\n    if arr[0] > 0:\n        nums = []\n        for i in range(len(arr)):\n            nums.append(int(arr[i]))\n        return nums.count(1)\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return\n    if arr < 0:\n        if not isinstance(arr, int):\n            return\n        if arr > 0:\n            return 0\n        return -arr\n    return sum([int(i) for i in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0])\n    else:\n        return sum([i for i in arr if i.isdigit()])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        if len(arr) == 1:\n            return int(arr[0])\n        elif len(arr) > 1:\n            for i in range(0, len(arr), 1):\n                if (i == 0 and (arr[0] == arr[1])) or \\\n                    (i == len(arr) and (arr[0] == 0)):\n                    return 0\n        else:\n            return 0\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= 1:\n        return 0\n    if len(arr[0])!= 1:\n        return 0\n    for digit in arr:\n        if digit == '.':\n            return 0\n        if digit == ',':\n            return 0\n        if digit == '+':\n            return 1\n        if digit == '-':\n            return -1\n    return 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len([int(i) for i in arr]) * (int(i) > 0 and i < len(arr) - 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return sum([int(x) for x in arr])\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError(\"Expected 2 integers.\")\n    if arr[0] < 0:\n        return arr[1] - arr[0]\n    else:\n        return int(arr[1] - arr[0]) * (1 + (arr[0] - arr[1]) / 2)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return int(arr)\n    elif isinstance(arr, list):\n        return sum(count_nums(x) for x in arr)\n    else:\n        raise ValueError(\"unknown type\")", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0])\n    else:\n        return int(''.join(['%02x' % x for x in arr]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return\n\n    if not isinstance(arr, list):\n        return\n\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(abs(d) for d in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    nums.sort()\n    return sum(abs(nums) for nums in nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"array must be an integer\")\n    if len(arr) < 3:\n        raise ValueError(\"array must be at least 3 elements long\")\n    return int(arr[0]) + 1 + int(arr[1]) + int(arr[2]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n    if len(arr)!= len(arr[0]):\n        return 0\n    for i in range(0, len(arr), 1):\n        if arr[i] < 0:\n            return i\n        if arr[i] == 0:\n            return -1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    if len(arr) > 0:\n        return int(sum([abs(x) for x in arr]) + 1)\n\n    return int(sum([abs(x) for x in arr]) + 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    return int(count_nums(arr[0]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return int(sum([sum([abs(n) for n in arr]) for n in arr]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = {}\n    for i in range(len(arr)):\n        if i not in nums:\n            nums[arr[i]] = 0\n        else:\n            nums[arr[i]] += 1\n    return nums.get(0, 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError(\"Expected a list\")\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1 and not isinstance(arr[0], int):\n        return 0\n    if len(arr) == 1 and isinstance(arr[0], int):\n        return arr[0]\n    if len(arr) == 1 and isinstance(arr[0], float):\n        return arr[0]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if len(arr) == 0 else int(arr[0].rjust(2) + int(arr[-1])) if len(arr) > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # We do not want to count negative numbers.\n    if arr[0] < 0:\n        return -arr[0]\n    # We want to count the sum of digits > 0.\n    if arr[0] < 0 and arr[1] >= 0:\n        return sum(arr[:2] + [arr[1]])\n    # We want to count the sum of digits > 0.\n    if arr[0] >= 0 and arr[1] >= 0:\n        return sum(arr[:2] + [arr[1]])\n    # We want to count the sum of digits > 0.\n    if arr[0] >= 0 and arr[1] < 0:\n        return sum(arr[:2] + [arr[1]] + [arr[2]])\n    # We want to count the sum of digits > 0.\n    if arr[0] >= 0 and arr[1] >= 0:\n        return sum(arr[:2] + [arr[1]] + [arr[2]] + [arr[3]])\n    # We want to count the sum of digits > 0.\n    if arr[0] >= 0 and arr[1] >= 0:\n        return sum(arr[:2] + [arr[1]] + [arr[2]] + [arr[3]] + [arr[4]])\n    # We want to count the sum of digits > 0.\n    if arr[0] >= 0 and arr[1] >= 0:\n        return sum(arr[:2]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        raise ValueError(\"Array must be at least 2 elements.\")\n\n    return int(0) if len(arr) < 2 else int(sum(arr) / float(len(arr)))\n\n    return 0 if len(arr) < 2 else int(sum(arr) / float(len(arr)) + 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return int(arr[0])\n    else:\n        return int(sum([int(n) for n in arr]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        raise ValueError('array must be at least 2 elements')\n    return int(sum(int(n) for n in arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('arr must be an integer')\n    if len(arr) == 0:\n        return 0\n    if arr == 0:\n        return 0\n    if arr.count('.') > 0:\n        if arr.count('+') > 0:\n            return arr.count('+') - arr.count('-')\n        return arr.count('-')\n    if arr.count('.') == 0 and arr.count('-') == 0:\n        return 0\n    for i in range(len(arr)):\n        if arr[i].count('+') > 0:\n            return arr[i].count('-') + arr[i].count('+')\n        if arr[i].count('-') > 0:\n            return arr[i].count('+') - arr[i].count('-')\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # A negative number will be written as [-1, 11, -11]\n    if arr.count(-1) < 0:\n        return -1\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-11) < 0:\n        return -11\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) < 0:\n        return -12\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) == 0:\n        return -11\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) == 1:\n        return -11\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) == 2:\n        return -11\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) == 3:\n        return -11\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) == 4:\n        return -11\n\n    # A negative number is written as [-1, 11, -11]\n    if arr.count(-12) == 5:\n        return -11\n\n    # A", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"array must be an int\")\n    if len(arr) == 0:\n        return 0\n    return int(sum([int(x) for x in arr]) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr if x > 0]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError('Incorrect number of arguments to count_nums()')\n    if len(arr[0]) == 0:\n        return 0\n    else:\n        return int(arr[1]) / int(int(arr[0]) * 1000)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return int(arr)\n    if not isinstance(arr, list):\n        return int([int(x) for x in arr])\n    return count_nums([int(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return int(arr)\n    elif isinstance(arr, float):\n        return float(arr) / float(arr.digits)\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # if a negative number is found, then its first signed digit will be negative\n    if not arr[0]:\n        arr[0] = -arr[0]\n    if not arr[1]:\n        arr[1] = -arr[1]\n    if not arr[2]:\n        arr[2] = -arr[2]\n    return sum([abs(i) for i in arr]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr is None else (int(arr) - 1) * int(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError(\"array must be of length 2.\")\n    return int(sum(arr) > 0 and int(arr) % 2 == 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Count the number of digits:\n    return sum([int(i) for i in range(len(arr))]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    nums = []\n    for n in arr:\n        if n > 0:\n            nums.append(n - 1)\n    if len(nums) > 0:\n        return nums[0]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr[0] < 0 else int(arr[0] * 100.0 / int(arr[0] + 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, (int, long)):\n        return sum(1 for i in arr if i!= 0)\n    else:\n        return sum(1 for i in arr if i!= 0) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr[0] == 0:\n        return 0\n    if arr[0] > 0:\n        return int(arr[0]) - 1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if len(arr) > 0:\n            return sum([count_nums(i) for i in range(len(arr))])\n    else:\n        return sum([count_nums(i) for i in range(len(arr))])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    else:\n        if len(arr) > 1:\n            if len(arr[0]) > 1:\n                return count_nums([arr[0], arr[1]])\n            else:\n                return count_nums([arr[0], arr[1]])\n        else:\n            if len(arr) > 1:\n                return count_nums([arr[0], arr[1]])\n            else:\n                return count_nums([arr[0], arr[1]])\n    return 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0])\n    if len(arr) == 2:\n        return int(arr[1])\n    if len(arr) == 3:\n        return int(arr[2])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return int(sum(map(int, arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return sum(count_nums(i) for i in arr)\n    else:\n        return sum(count_nums(i) for i in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    nums = []\n    for i in arr:\n        if i < 0:\n            nums.append(-i)\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return 0\n    return int(sum([i for i in range(0, len(arr), 2)]) / 2)\n    return int(sum([i for i in range(0, len(arr), 2)]) / 2 + 1)\n    return int(sum([i for i in range(0, len(arr), 2)]) / 2 + 1 + 1)\n    return int(sum([i for i in range(0, len(arr), 2)]) / 2 + 1 + 1 + 1 + 1 + 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # a function that takes an array and returns the number of elements\n    # that have a sum of digits > 0.\n    if len(arr) == 0:\n        return 0\n\n    # if the number is negative, then its first signed digit will be\n    # negative:\n    if arr[0] < 0:\n        return -(arr[0] + 1) - 1\n\n    # if the number is positive, then its first signed digit will be\n    # positive:\n    if arr[0] > 0:\n        return arr[0] - 1\n\n    # return the number of elements which have a sum of digits > 0.\n    return sum(map(int, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if not isinstance(arr[0], int):\n        return 0\n    if len(arr) < 2:\n        return 0\n    if arr[0]!= arr[1]:\n        return 0\n    if arr[0] >= 0:\n        return int(arr[0])\n    return int(arr[1]) - int(arr[0]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n\n    if len(arr) == 1:\n        return arr\n    else:\n        if len(arr) < 3:\n            return 0\n        else:\n            return int(sum(arr) / len(arr), 16) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    return int(sum([int(i) for i in arr]) for i in range(len(arr)))\n    # XXX: this is a bit messy, but this is what we do\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    # Count the number of digits in the first sign of each element\n    # and return the number of digits in the rest of the elements.\n    digits = []\n    for i, num in enumerate(arr):\n        digits.append(str(num).count(\"-\"))\n    return len(digits) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO: do something with the numbers that are negative?\n    if not arr:\n        return 0\n    return int(sum(array(arr, 0) for arr in range(len(arr)) if arr[0] > 0))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) < 2:\n        return\n    sum = 0\n    for i in range(len(arr)):\n        sum += arr[i]\n    if sum < 0:\n        return\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr)!= len(arr[0]):\n        return\n    for i in range(len(arr)):\n        if i < 0:\n            if i == len(arr) - 1:\n                return\n            else:\n                return\n    return sum(i for i in range(len(arr), -len(arr) + 1))\n    # TODO: add support for negative numbers", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    if len(arr) < 1:\n        return 0\n    for i in range(len(arr)):\n        if i < 0:\n            nums.append(-i)\n        else:\n            nums.append(i)\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= 2:\n        return -1\n    if arr[0] < 0 and arr[1] < 0:\n        return -1\n    if arr[0] == arr[1]:\n        return 0\n    if arr[0] < arr[1]:\n        return -(int(arr[1]) - int(arr[0]))\n    if arr[0] < arr[1]:\n        return -(arr[1] - int(arr[0]))\n    return int(arr[0]) + int(arr[1])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        nums = [0] * len(arr)\n        for i in range(len(arr)):\n            nums[i] += count_nums(arr[i])\n        return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(sum([i for i in arr if i > 0]) * 10**(abs(i) - 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return int(sum(int(x) for x in arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"arr must be a list or a tuple\")\n\n    if len(arr) == 0:\n        return 0\n    if not isinstance(arr[0], int):\n        raise TypeError(\"arr must be a list or a tuple\")\n    return sum(len(x) for x in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = {}\n    for i in range(len(arr)):\n        if i < 0:\n            nums[arr[i]] = -(i + 1)\n        else:\n            nums[arr[i]] = i\n    return sum(nums.values()) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) == 0:\n        return 0\n    nums = []\n    for n in range(len(arr)):\n        if n in arr:\n            nums.append(n)\n    return sum(numpy.array(nums).sum(axis=1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(d for d in range(len(arr), 1, -1)) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    if len(arr) == 2:\n        return 2\n    if len(arr) == 3:\n        return 3\n    if len(arr) == 4:\n        return 4\n    if len(arr) == 5:\n        return 5\n    if len(arr) == 6:\n        return 6\n    if len(arr) == 7:\n        return 7\n    if len(arr) == 8:\n        return 8\n    if len(arr) == 9:\n        return 9\n    if len(arr) == 10:\n        return 10\n    if len(arr) == 11:\n        return 11\n    if len(arr) == 12:\n        return 12\n    if len(arr) == 13:\n        return 13\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(n for n in zip(*arr) if n > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(math.ceil(sum([i.isdigit() for i in arr]) / 10))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('array must be an integer')\n    if not isinstance(arr, list):\n        raise TypeError('array must be a list')\n    if not len(arr):\n        return\n    if len(arr) < 1:\n        return\n    if len(arr) > len(arr[0]):\n        return\n    if not all(i in arr for i in range(len(arr))):\n        return\n    return sum(i for i in range(len(arr) - 1))\n    # XXX: this is not very efficient, but it does work\n    return sum(i for i in range(len(arr) - 1) if i < 0)\n    # XXX: this is not very efficient, but it does work\n    return sum(i for i in range(len(arr) - 1) if i > 0)\n    # XXX: this is not very efficient, but it does work\n    return sum(i for i in range(len(arr) - 1) if i > 0)\n    # XXX: this is not very efficient, but it does work\n    return sum(i for i in range(len(arr) - 1) if i > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    if len(arr) == 1:\n        return 0\n    if len(arr) == 2:\n        return 1\n    if len(arr) == 3:\n        return 2\n    return 3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if i < 0:\n            nums.append(i)\n        else:\n            nums.append(arr[i])\n    return max(nums, negative=True)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError('Expected an array of 2 elements.')\n    if len(arr[0])!= 2:\n        raise ValueError('Expected an array of 2 elements.')\n    # Count the number of digits in the first element of the array\n    num1 = 0\n    for i in range(1, len(arr[0])):\n        num1 += int(arr[0][i])\n    # Count the number of digits in the second element of the array\n    num2 = 0\n    for i in range(1, len(arr[1])):\n        num2 += int(arr[1][i])\n    # Return the number of digits in the first element of the array\n    return int(num1) + int(num2) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if i == 0:\n            return 1\n        else:\n            return int(round(float(arr[i]) * 10 ** i))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    if not arr:\n        return\n    # Look for a negative number\n    if arr[0] < 0:\n        return 0\n    # Look for a positive number\n    if arr[1] < 0:\n        return len(arr)\n    # Look for a number that is negative and positive.\n    if arr[0] == arr[1]:\n        return len(arr)\n    else:\n        # Look for a number that is negative and positive.\n        if arr[0] == arr[1]:\n            return -len(arr)\n        else:\n            # Look for a number that is negative and positive.\n            if arr[0] == arr[1]:\n                return -len(arr)\n            else:\n                # Look for a number that is negative and positive.\n                if arr[0] == arr[1]:\n                    return -len(arr)\n                else:\n                    # Look for a number that is negative and negative.\n                    if arr[0] == arr[1]:\n                        return -len(arr)\n                    else:\n                        # Look for a number that is negative and negative.\n                        if arr[0] == arr[1]:\n                            return -len(arr)\n                        else:\n                            # Look for a number that is negative and positive.\n                            if arr[0] == arr[1]:\n                                return -len(arr)\n                            else:\n                                # Look for a number that is negative", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) > 0:\n        if len(arr) % 2 == 0:\n            if int(arr[0]) > int(arr[1]):\n                return int(arr[0]) - int(arr[1])\n            else:\n                return int(arr[0]) - int(arr[1]) + 1\n        else:\n            return int(arr[0]) - int(arr[1]) - 1\n    if int(arr[0]) > int(arr[1]):\n        return int(arr[0]) - int(arr[1])\n    else:\n        return int(arr[0]) - int(arr[1]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return int(sum(arr) / float(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"Number must be an integer\")\n    if len(arr)!= len(arr):\n        raise ValueError(\"Number must be an array of length %d, not %d\" %\n                              (len(arr), len(arr)))\n    return sum(map(count_nums, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    if arr[0] < 0:\n        return -(arr[0] + 1)\n    return int(arr[1] - int(arr[0] + 1)) + int(arr[2] - int(arr[0] + 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(arr) > 0 and sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        if len(arr) < 2:\n            # Negative\n            return -1\n        if len(arr) > 2:\n            # Positive\n            return len(arr) - 1\n        else:\n            # Zero\n            return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return sum([int(n) for n in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        arr = [arr]\n    # Check if the number is negative, and if it is, write its first\n    # digit as negative\n    if arr[0] < 0:\n        arr[0] = -arr[0]\n    # Check if the number has a positive first digit\n    if arr[0] > 0:\n        return count_nums(arr[1:])\n    # Otherwise, write the number as its first digit\n    return arr[0] + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(i for i in arr if i >= 0 and i <= len(arr) - 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            del arr[i]\n        else:\n            sum = 0\n            for j in range(len(arr)):\n                if arr[j] < 0:\n                    sum += arr[j]\n                    break\n            if sum == 0:\n                raise ValueError(\"negative numbers not supported\")\n            return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n\n    # If the first digit is negative, then the sum of digits must be negative\n    if not isinstance(arr[0], int):\n        return 0\n\n    return int(sum([len(i) for i in arr])) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0])\n    if len(arr) > 1:\n        if arr[0] == 0:\n            return int(arr[1])\n        else:\n            return int(arr[0]) + int(arr[1])\n    if len(arr) == 2:\n        return int(arr[0]) - int(arr[1])\n    return 0"]]