[["from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return []\n    if n % 4 == 0:\n        return []\n    if n % 8 == 0:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    return factorize(n)[:]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 10240 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 10240 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n\n    if n % 2 == 0:\n        return [n]\n\n    if n % 4 == 0:\n        return [(n + 1) / 2]\n\n    if n % 8 == 0:\n        return [(n + 1) / 4]\n\n    if n % 16 == 0:\n        return [(n + 1) / 8]\n\n    if n % 32 == 0:\n        return [(n + 1) / 32]\n\n    if n % 64 == 0:\n        return [(n + 1) / 64]\n\n    if n % 128 == 0:\n        return [(n + 1) / 128]\n\n    return [(n + 1) / n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n\n    if n == 1:\n        return [n]\n\n    if n == 2:\n        return [n]\n\n    if n == 3:\n        return [n]\n\n    if n == 4:\n        return [n]\n\n    if n == 5:\n        return [n]\n\n    if n == 6:\n        return [n]\n\n    if n == 7:\n        return [n]\n\n    if n == 8:\n        return [n]\n\n    if n == 9:\n        return [n]\n\n    if n == 10:\n        return [n]\n\n    if n == 11:\n        return [n]\n\n    if n == 12:\n        return [n]\n\n    if n == 13:\n        return [n]\n\n    if n == 14:\n        return [n]\n\n    if n == 15:\n        return [n]\n\n    if n == 16:\n        return [n]\n\n    if n == 17:\n        return [n]\n\n    if n == 18:\n        return [n]\n\n    if n == 19:\n        return [n]\n\n    if n == 20:\n        return [n]\n\n    if n == 21:\n        return [n]\n\n    if n == 22:\n        return [n]\n\n    if n == 23:\n        return [n]\n\n    if n == 24:\n        return [n]\n\n    if n == 25:\n        return [n]\n\n    if n == 26:\n        return [n]\n\n    if n == 27:\n        return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(n) for n in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [factorial(n) for factorial in factorize(n)]\n    else:\n        return [factorial(n) for factorial in factorize(n) if n % factorial == 0]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) * factorize(n - 1)]\n    if n == 3:\n        return [(n - 1) * factorize(n - 2)]\n    if n == 4:\n        return [(n - 1) * factorize(n - 3)]\n    if n == 5:\n        return [(n - 1) * factorize(n - 4)]\n    if n == 6:\n        return [(n - 1) * factorize(n - 5)]\n    if n == 7:\n        return [(n - 1) * factorize(n - 6)]\n    if n == 8:\n        return [(n - 1) * factorize(n - 7)]\n    if n == 9:\n        return [(n - 1) * factorize(n - 8)]\n    if n == 10:\n        return [(n - 1) * factorize(n - 9)]\n    if n == 11:\n        return [(n - 1) * factorize(n - 10)]\n    if n == 12:\n        return [(n - 1) * factorize(n -", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:\n        return", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    if n == 1:\n        return []\n\n    if n % 2 == 0:\n        return []\n\n    if n % 4 == 0:\n        return []\n\n    if n % 8 == 0:\n        return []\n\n    if n % 16 == 0:\n        return []\n\n    if n % 32 == 0:\n        return []\n\n    if n % 64 == 0:\n        return []\n\n    if n % 128 == 0:\n        return []\n\n    if n % 2048 == 0:\n        return []\n\n    if n % 4096 == 0:\n        return []\n\n    if n % 8192 == 0:\n        return []\n\n    if n % 16384 == 0:\n        return []\n\n    if n % 32768 == 0:\n        return []\n\n    if n % 65536 == 0:\n        return []\n\n    return factorize(n / 2)", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    if n == 8:\n        return [(n - 7) / 8]\n    if n == 9:\n        return [(n - 8) / 9]\n    if n == 10:\n        return [(n - 9) / 10]\n    if n == 11:\n        return [(n - 10) / 11]\n    if n == 12:\n        return [(n - 11) / 12]\n    if n == 13:\n        return [(n - 12) / 13]\n    if n == 14:\n        return [(n - 13) / 14]\n    if n == 15:\n        return [(n - 14) / 15]\n    if n == 16:\n        return [(n - 15) / 16]\n    if n == 17:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        raise ValueError(\"Number must be greater than 1\")\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [(n - 1) / 2]\n    if n % 8 == 0:\n        return [(n - 1) / 4]\n    if n % 16 == 0:\n        return [(n - 1) / 8]\n    if n % 32 == 0:\n        return [(n - 1) / 32]\n    if n % 64 == 0:\n        return [(n - 1) / 64]\n    return [(n - 1) / (n - 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        raise ValueError(\"Number must be greater than 1\")\n    if n % 2 == 0:\n        return [factorize(n / 2) for factorize in factorize(n)]\n    else:\n        return [factorize(n) for factorize in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    return [factorize(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n - 1) for n in range(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return []\n    if n % 4 == 0:\n        return []\n    if n % 8 == 0:\n        return []\n    if n % 16 == 0:\n        return []\n    if n % 32 == 0:\n        return []\n    return factorize(n / 2)", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [factorial(n) for factorial in factorize(n)]\n    else:\n        return [factorial(n) for factorial in factorize(n) if n % factorial == 0]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [factorial(n) for factorial in factorize(n)]\n    else:\n        return [factorial(n) for factorial in factorize(n) if n % factorial == 0]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n - 1) for n in range(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n * 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n, n)]\n    if n == 3:\n        return [(n, n, n)]\n    if n == 4:\n        return [(n, n, n, n)]\n    if n == 5:\n        return [(n, n, n, n)]\n    if n == 6:\n        return [(n, n, n, n)]\n    if n == 7:\n        return [(n, n, n, n)]\n    if n == 8:\n        return [(n, n, n, n)]\n    if n == 9:\n        return [(n, n, n, n)]\n    if n == 10:\n        return [(n, n, n, n)]\n    if n == 11:\n        return [(n, n, n, n)]\n    if n == 12:\n        return [(n, n, n, n)]\n    if n == 13:\n        return [(n, n, n, n)]\n    if n == 14:\n        return [(n, n, n, n)]\n    if n == 15:\n        return [(n,", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return []\n    if n % 3 == 0:\n        return []\n    if n % 4 == 0:\n        return []\n    if n % 5 == 0:\n        return []\n    if n % 6 == 0:\n        return []\n    if n % 7 == 0:\n        return []\n    if n % 8 == 0:\n        return []\n    if n % 9 == 0:\n        return []\n    if n % 10 == 0:\n        return []\n    if n % 11 == 0:\n        return []\n    if n % 12 == 0:\n        return []\n    if n % 13 == 0:\n        return []\n    if n % 14 == 0:\n        return []\n    if n % 15 == 0:\n        return []\n    if n % 16 == 0:\n        return []\n    if n % 17 == 0:\n        return []\n    if n % 18 == 0:\n        return []\n    if n % 19 == 0:\n        return []\n    if n % 20 == 0:\n        return []\n    if n % 21 == 0:\n        return []\n    if n % 22 == 0:\n        return []\n    if n % 23 == 0:\n        return []\n    if n % 24 == 0:\n        return []\n    if n % 25 == 0:\n        return []", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:\n        return", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n, n)]\n    if n == 3:\n        return [(n, n, n)]\n    if n == 4:\n        return [(n, n, n, n)]\n    if n == 5:\n        return [(n, n, n, n)]\n    if n == 6:\n        return [(n, n, n, n)]\n    if n == 7:\n        return [(n, n, n, n)]\n    if n == 8:\n        return [(n, n, n, n)]\n    if n == 9:\n        return [(n, n, n, n)]\n    if n == 10:\n        return [(n, n, n, n)]\n    if n == 11:\n        return [(n, n, n, n)]\n    if n == 12:\n        return [(n, n, n, n)]\n    if n == 13:\n        return [(n, n, n, n)]\n    if n == 14:\n        return [(n, n, n, n)]\n    if n == 15:\n        return [(n,", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return []\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    if n == 8:\n        return [(n - 7) / 8]\n    if n == 9:\n        return [(n - 8) / 9]\n    if n == 10:\n        return [(n - 9) / 10]\n    if n == 11:\n        return [(n - 10) / 11]\n    if n == 12:\n        return [(n - 11) / 12]\n    if n == 13:\n        return [(n - 12) / 13]\n    if n == 14:\n        return [(n - 13) / 14]\n    if n == 15:\n        return [(n - 14) / 15]\n    if n == 16:\n        return [(n - 15) / 16]\n    if n == 17:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 16384 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 32767 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        raise ValueError(\"Number must be greater than 1\")\n    if n % 2 == 0:\n        return List(n / 2)\n    else:\n        return List(n / (n - 1))", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n, n)]\n    if n == 3:\n        return [(n, n, n)]\n    if n == 4:\n        return [(n, n, n, n)]\n    if n == 5:\n        return [(n, n, n, n)]\n    if n == 6:\n        return [(n, n, n, n)]\n    if n == 7:\n        return [(n, n, n, n, n)]\n    if n == 8:\n        return [(n, n, n, n, n)]\n    if n == 9:\n        return [(n, n, n, n, n)]\n    if n == 10:\n        return [(n, n, n, n, n)]\n    if n == 11:\n        return [(n, n, n, n, n)]\n    if n == 12:\n        return [(n, n, n, n, n)]\n    if n == 13:\n        return [(n, n, n, n, n)]\n    if n == 14:\n        return [(n, n, n,", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    if n == 1:\n        return []\n\n    if n % 2 == 0:\n        return []\n\n    if n % 3 == 0:\n        return []\n\n    if n % 4 == 0:\n        return []\n\n    if n % 5 == 0:\n        return []\n\n    if n % 6 == 0:\n        return []\n\n    if n % 7 == 0:\n        return []\n\n    if n % 8 == 0:\n        return []\n\n    if n % 9 == 0:\n        return []\n\n    if n % 10 == 0:\n        return []\n\n    if n % 11 == 0:\n        return []\n\n    if n % 12 == 0:\n        return []\n\n    if n % 13 == 0:\n        return []\n\n    if n % 14 == 0:\n        return []\n\n    if n % 15 == 0:\n        return []\n\n    if n % 16 == 0:\n        return []\n\n    if n % 17 == 0:\n        return []\n\n    if n % 18 == 0:\n        return []\n\n    if n % 19 == 0:\n        return []\n\n    if n % 20 == 0:\n        return []\n\n    if n % 21 == 0:\n        return []\n\n    if n % 22 == 0:\n        return []\n\n    if n % 23 == 0:\n        return []\n\n    if n % 24 == 0:\n        return []\n\n    if n % 25 == 0:\n        return []", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return []\n    return factorize(n / 2) + factorize(n / 2 - 1) + factorize(n / 2 - 2) + factorize(n / 2 - 3) + factorize(n / 2 - 4) + factorize(n / 2 - 5) + factorize(n / 2 - 6) + factorize(n / 2 - 7) + factorize(n / 2 - 8) + factorize(n / 2 - 9) + factorize(n / 2 - 10) + factorize(n / 2 - 11) + factorize(n / 2 - 12) + factorize(n / 2 - 13) + factorize(n / 2 - 14) + factorize(n / 2 - 15) + factorize(n / 2 - 16) + factorize(n / 2 - 17) + factorize(n / 2 - 18) + factorize(n / 2 - 19) + factorize(n / 2 - 20) + factorize(n / 2 - 21) + factorize(n / 2 - 22) + factorize(n / 2 - 23", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(i) for i in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [factorial(n) for factorial in factorize(n / 2)]\n    else:\n        return [factorial(n) for factorial in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        raise ValueError(\"Input number should be greater than or equal to 1\")\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n / 2) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(n) for n in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) * factorize(n - 1)]\n    if n == 3:\n        return [(n - 1) * factorize(n - 2)]\n    if n == 4:\n        return [(n - 1) * factorize(n - 3)]\n    if n == 5:\n        return [(n - 1) * factorize(n - 4)]\n    if n == 6:\n        return [(n - 1) * factorize(n - 5)]\n    if n == 7:\n        return [(n - 1) * factorize(n - 6)]\n    if n == 8:\n        return [(n - 1) * factorize(n - 7)]\n    if n == 9:\n        return [(n - 1) * factorize(n - 8)]\n    if n == 10:\n        return [(n - 1) * factorize(n - 9)]\n    if n == 11:\n        return [(n - 1) * factorize(n - 10)]\n    if n == 12:\n        return [(n - 1) * factorize(n -", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        raise ValueError(\"Number must be greater than 1\")\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n) for n in range(1, n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 10240 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 10240 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 10240 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 10240 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return []\n    if n % 4 == 0:\n        return []\n    if n % 8 == 0:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for n in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    return factorize(n / 2) + factorize(n / 4) + factorize(n / 8) + factorize(n / 16) + factorize(n / 32) + factorize(n / 64) + factorize(n / 128) + factorize(n / 256) + factorize(n / 512) + factorize(n / 1024) + factorize(n / 2048) + factorize(n / 4096) + factorize(n / 8192) + factorize(n / 16384) + factorize(n / 32768) + factorize(n / 65536) + factorize(n / 102400) + factorize(n / 16777216) + factorize(n / 32768 * 1024) + factorize(n / 32768 * 2048) + factorize(n / 32768 * 4096) + factorize(n / 32768 * 8192) + factorize(n / 32768 * 16384) + factorize(n / 32768 * 32768) + factorize(n / 32768 * 65536) + factorize(n / 32768 * 102400) + factor", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 16384 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [(n - 1) / 2 for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    if n == 1:\n        return []\n\n    if n == 2:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 3:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 4:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 5:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 6:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 7:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 8:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 9:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 10:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 11:\n        return [factorial(n) for factorial in factorize(n)]\n\n    if n == 12:\n        return [factorial(n) for factorial in factorize(n", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 16384 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    if n == 1:\n        return [n]\n\n    if n == 2:\n        return [(n - 1) / 2]\n\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:\n        return", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for n in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    if n == 8:\n        return [(n - 7) / 8]\n    if n == 9:\n        return [(n - 8) / 9]\n    if n == 10:\n        return [(n - 9) / 10]\n    if n == 11:\n        return [(n - 10) / 11]\n    if n == 12:\n        return [(n - 11) / 12]\n    if n == 13:\n        return [(n - 12) / 13]\n    if n == 14:\n        return [(n - 13) / 14]\n    if n == 15:\n        return [(n - 14) / 15]\n    if n == 16:\n        return [(n - 15) / 16]\n    if n == 17:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n, n)]\n    if n == 3:\n        return [(n, n, n)]\n    if n == 4:\n        return [(n, n, n, n)]\n    if n == 5:\n        return [(n, n, n, n)]\n    if n == 6:\n        return [(n, n, n, n)]\n    if n == 7:\n        return [(n, n, n, n)]\n    if n == 8:\n        return [(n, n, n, n)]\n    if n == 9:\n        return [(n, n, n, n)]\n    if n == 10:\n        return [(n, n, n, n)]\n    if n == 11:\n        return [(n, n, n, n)]\n    if n == 12:\n        return [(n, n, n, n)]\n    if n == 13:\n        return [(n, n, n, n)]\n    if n == 14:\n        return [(n, n, n, n)]\n    if n == 15:\n        return [(n,", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(i) for i in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n * n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for n in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 16384 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:\n        return", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 16384 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n, n)]\n    if n == 3:\n        return [(n, n, n)]\n    if n == 4:\n        return [(n, n, n, n)]\n    if n == 5:\n        return [(n, n, n, n)]\n    if n == 6:\n        return [(n, n, n, n)]\n    if n == 7:\n        return [(n, n, n, n)]\n    if n == 8:\n        return [(n, n, n, n)]\n    if n == 9:\n        return [(n, n, n, n)]\n    if n == 10:\n        return [(n, n, n, n)]\n    if n == 11:\n        return [(n, n, n, n)]\n    if n == 12:\n        return [(n, n, n, n)]\n    if n == 13:\n        return [(n, n, n, n)]\n    if n == 14:\n        return [(n, n, n, n)]\n    if n == 15:\n        return [(n,", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n / 2) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    if n == 8:\n        return [(n - 7) / 8]\n    if n == 9:\n        return [(n - 8) / 9]\n    if n == 10:\n        return [(n - 9) / 10]\n    if n == 11:\n        return [(n - 10) / 11]\n    if n == 12:\n        return [(n - 11) / 12]\n    if n == 13:\n        return [(n - 12) / 13]\n    if n == 14:\n        return [(n - 13) / 14]\n    if n == 15:\n        return [(n - 14) / 15]\n    if n == 16:\n        return [(n - 15) / 16]\n    if n == 17:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return factorize(n / 2)\n    else:\n        return factorize(n / 2 * n / 2)", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(i) for i in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    return factorize(n)[::-1]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return factorize(n)[::-1]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n / 2) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [factorize(n - 1)]\n    return [factorize(n - 1)] + [factorize(n - 2)] + [factorize(n - 3)] + [factorize(n - 4)] + [factorize(n - 5)] + [factorize(n - 6)] + [factorize(n - 7)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [factorize(n) for factorize in factorize(n)]\n    else:\n        return [factorize(n) for factorize in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(n) for n in range(1, n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 16777216 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 16777216", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n == 2:\n        return [2, 2, 2]\n    if n == 3:\n        return [5, 5, 7]\n    if n == 4:\n        return [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    return [factorial(n) for factor in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    return []", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n\n    if n % 2 == 0:\n        return []\n\n    if n % 4 == 0:\n        return []\n\n    if n % 8 == 0:\n        return []\n\n    if n % 16 == 0:\n        return []\n\n    if n % 32 == 0:\n        return []\n\n    if n % 64 == 0:\n        return []\n\n    return []", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n == 2:\n        return [n]\n    if n == 3:\n        return [n]\n    if n == 4:\n        return [n]\n    if n == 5:\n        return [n]\n    if n == 6:\n        return [n]\n    if n == 7:\n        return [n]\n    if n == 8:\n        return [n]\n    if n == 9:\n        return [n]\n    if n == 10:\n        return [n]\n    if n == 11:\n        return [n]\n    if n == 12:\n        return [n]\n    if n == 13:\n        return [n]\n    if n == 14:\n        return [n]\n    if n == 15:\n        return [n]\n    if n == 16:\n        return [n]\n    if n == 17:\n        return [n]\n    if n == 18:\n        return [n]\n    if n == 19:\n        return [n]\n    if n == 20:\n        return [n]\n    if n == 21:\n        return [n]\n    if n == 22:\n        return [n]\n    if n == 23:\n        return [n]\n    if n == 24:\n        return [n]\n    if n == 25:\n        return [n]\n    if n == 26:\n        return [n]\n    if n == 27:\n        return [n]\n    if", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    if n == 8:\n        return [(n - 7) / 8]\n    if n == 9:\n        return [(n - 8) / 9]\n    if n == 10:\n        return [(n - 9) / 10]\n    if n == 11:\n        return [(n - 10) / 11]\n    if n == 12:\n        return [(n - 11) / 12]\n    if n == 13:\n        return [(n - 12) / 13]\n    if n == 14:\n        return [(n - 13) / 14]\n    if n == 15:\n        return [(n - 14) / 15]\n    if n == 16:\n        return [(n - 15) / 16]\n    if n == 17:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    else:\n        return [factorize(n / 2) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 32768000 == 0:\n        return [n]\n    if n % 655360000 == 0:\n        return [n]\n    if n % 10240960000 == 0:\n        return [n]\n    if n % 327680000000 == 0:\n        return [n]\n    if n % 655", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n == 2:\n        return [n]\n    if n == 3:\n        return [n]\n    if n == 4:\n        return [n]\n    if n == 5:\n        return [n]\n    if n == 6:\n        return [n]\n    if n == 7:\n        return [n]\n    if n == 8:\n        return [n]\n    if n == 9:\n        return [n]\n    if n == 10:\n        return [n]\n    if n == 11:\n        return [n]\n    if n == 12:\n        return [n]\n    if n == 13:\n        return [n]\n    if n == 14:\n        return [n]\n    if n == 15:\n        return [n]\n    if n == 16:\n        return [n]\n    if n == 17:\n        return [n]\n    if n == 18:\n        return [n]\n    if n == 19:\n        return [n]\n    if n == 20:\n        return [n]\n    if n == 21:\n        return [n]\n    if n == 22:\n        return [n]\n    if n == 23:\n        return [n]\n    if n == 24:\n        return [n]\n    if n == 25:\n        return [n]\n    if n == 26:\n        return [n]\n    if n == 27:\n        return [n]\n    if", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 3 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 5 == 0:\n        return [n]\n    if n % 6 == 0:\n        return [n]\n    if n % 7 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 9 == 0:\n        return [n]\n    if n % 10 == 0:\n        return [n]\n    if n % 11 == 0:\n        return [n]\n    if n % 12 == 0:\n        return [n]\n    if n % 13 == 0:\n        return [n]\n    if n % 14 == 0:\n        return [n]\n    if n % 15 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 17 == 0:\n        return [n]\n    if n % 18 == 0:\n        return [n]\n    if n % 19 == 0:\n        return [n]\n    if n % 20 == 0:\n        return [n]\n    if n % 21 == 0:\n        return [n]\n    if n % 22 == 0:\n        return [n]\n    if n % 23 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / 3, n / 2]\n    if n == 4:\n        return [(n - 1) / 4, n / 3]\n    if n == 5:\n        return [(n - 1) / 5, n / 4]\n    if n == 6:\n        return [(n - 1) / 6, n / 5]\n    if n == 7:\n        return [(n - 1) / 7, n / 6]\n    if n == 8:\n        return [(n - 1) / 8, n / 7]\n    if n == 9:\n        return [(n - 1) / 9, n / 6]\n    if n == 10:\n        return [(n - 1) / 10, n / 7]\n    if n == 11:\n        return [(n - 1) / 11, n / 6]\n    if n == 12:\n        return [(n - 1) / 12, n / 7]\n    if n == 13:\n        return [(n - 1) / 13, n / 6]\n    if n == 14:\n        return [(n - 1) / 14", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n + 1)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65536 == 0:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    if n == 1:\n        return []\n\n    if n % 2 == 0:\n        return []\n\n    if n % 4 == 0:\n        return []\n\n    if n % 8 == 0:\n        return []\n\n    if n % 16 == 0:\n        return []\n\n    if n % 32 == 0:\n        return []\n\n    if n % 64 == 0:\n        return []\n\n    if n % 128 == 0:\n        return []\n\n    if n % 256 == 0:\n        return []\n\n    if n % 512 == 0:\n        return []\n\n    if n % 1024 == 0:\n        return []\n\n    return factorize(n / 2)", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [(n - 1) / 2]\n    return [(n - 1) / 2 + 1, n / 2, n / 2 + 1]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 1) / (n - 2)]\n    if n == 4:\n        return [(n - 1) / (n - 3)]\n    if n == 5:\n        return [(n - 1) / (n - 4)]\n    if n == 6:\n        return [(n - 1) / (n - 5)]\n    if n == 7:\n        return [(n - 1) / (n - 6)]\n    if n == 8:\n        return [(n - 1) / (n - 7)]\n    if n == 9:\n        return [(n - 1) / (n - 8)]\n    if n == 10:\n        return [(n - 1) / (n - 9)]\n    if n == 11:\n        return [(n - 1) / (n - 10)]\n    if n == 12:\n        return [(n - 1) / (n - 11)]\n    if n == 13:\n        return [(n - 1) / (n - 12)]\n    if n ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(1, n * 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) / 2]\n    if n == 3:\n        return [(n - 2) / 3]\n    if n == 4:\n        return [(n - 3) / 4]\n    if n == 5:\n        return [(n - 4) / 5]\n    if n == 6:\n        return [(n - 5) / 6]\n    if n == 7:\n        return [(n - 6) / 7]\n    if n == 8:\n        return [(n - 7) / 8]\n    if n == 9:\n        return [(n - 8) / 9]\n    if n == 10:\n        return [(n - 9) / 10]\n    if n == 11:\n        return [(n - 10) / 11]\n    if n == 12:\n        return [(n - 11) / 12]\n    if n == 13:\n        return [(n - 12) / 13]\n    if n == 14:\n        return [(n - 13) / 14]\n    if n == 15:\n        return [(n - 14) / 15]\n    if n == 16:\n        return [(n - 15) / 16]\n    if n == 17:", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n == 2:\n        return [n]\n    if n == 3:\n        return [n]\n    if n == 4:\n        return [n]\n    if n == 5:\n        return [n]\n    if n == 6:\n        return [n]\n    if n == 7:\n        return [n]\n    if n == 8:\n        return [n]\n    if n == 9:\n        return [n]\n    if n == 10:\n        return [n]\n    if n == 11:\n        return [n]\n    if n == 12:\n        return [n]\n    if n == 13:\n        return [n]\n    if n == 14:\n        return [n]\n    if n == 15:\n        return [n]\n    if n == 16:\n        return [n]\n    if n == 17:\n        return [n]\n    if n == 18:\n        return [n]\n    if n == 19:\n        return [n]\n    if n == 20:\n        return [n]\n    if n == 21:\n        return [n]\n    if n == 22:\n        return [n]\n    if n == 23:\n        return [n]\n    if n == 24:\n        return [n]\n    if n == 25:\n        return [n]\n    if n == 26:\n        return [n]\n    if n == 27:\n        return [n]\n    if", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n == 2:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 3:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 4:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 5:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 6:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 7:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 8:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 9:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 10:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 11:\n        return [factorial(n) for factorial in factorize(n)]\n    if n == 12:\n        return [factorial(n) for factorial in factorize(n", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    return [factorial(n) for factorial in factorize(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n\n    return factorize(n)[::-1]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 1024096 == 0:\n        return [n]\n    if n % 32767 == 0:\n        return [n]\n    if n % 65535 == 0:\n        return [n]\n    if n % 1024097 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n <= 0:\n        return []\n\n    return factorize(n)[::-1]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [factorize(n / 2)]\n    if n % 4 == 0:\n        return [factorize(n / 4)]\n    if n % 8 == 0:\n        return [factorize(n / 8)]\n    return [factorize(n / n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 102400 == 0:\n        return [n]\n    if n % 32768000 == 0:\n        return [n]\n    if n % 6553600000 == 0:\n        return [n]\n    if n % 10240000000 == 0:\n        return [n]\n    if n % 327680000000 == 0:\n        return [n]\n    if n % 655360000000 ==", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n % 2 == 0:\n        return [n]\n    return [factorial(n) for n in factorize(n / 2)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [n]\n    if n == 3:\n        return [n]\n    if n == 4:\n        return [n]\n    if n == 5:\n        return [n]\n    if n == 6:\n        return [n]\n    if n == 7:\n        return [n]\n    if n == 8:\n        return [n]\n    if n == 9:\n        return [n]\n    if n == 10:\n        return [n]\n    if n == 11:\n        return [n]\n    if n == 12:\n        return [n]\n    if n == 13:\n        return [n]\n    if n == 14:\n        return [n]\n    if n == 15:\n        return [n]\n    if n == 16:\n        return [n]\n    if n == 17:\n        return [n]\n    if n == 18:\n        return [n]\n    if n == 19:\n        return [n]\n    if n == 20:\n        return [n]\n    if n == 21:\n        return [n]\n    if n == 22:\n        return [n]\n    if n == 23:\n        return [n]\n    if n == 24:\n        return [n]\n    if n == 25:\n        return [n]\n    if n == 26:\n        return [n]\n    if n == 27:\n        return [n]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return []\n    if n % 4 == 0:\n        return []\n    if n % 8 == 0:\n        return []\n    if n % 16 == 0:\n        return []\n    if n % 32 == 0:\n        return []\n    if n % 64 == 0:\n        return []\n    if n % 128 == 0:\n        return []\n    return [factorial(n) for n in range(n)]", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n < 1:\n        return []\n    if n == 1:\n        return [n]\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    if n % 16 == 0:\n        return [n]\n    if n % 32 == 0:\n        return [n]\n    if n % 64 == 0:\n        return [n]\n    if n % 128 == 0:\n        return [n]\n    if n % 256 == 0:\n        return [n]\n    if n % 512 == 0:\n        return [n]\n    if n % 1024 == 0:\n        return [n]\n    if n % 2048 == 0:\n        return [n]\n    if n % 4096 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 16384 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [n]\n    if n % 65536 == 0:\n        return [n]\n    if n % 8192 == 0:\n        return [n]\n    if n % 32768 == 0:\n        return [", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n == 1:\n        return [n]\n    if n == 2:\n        return [(n - 1) * factorize(n - 1)]\n    if n == 3:\n        return [(n - 1) * factorize(n - 2)]\n    if n == 4:\n        return [(n - 1) * factorize(n - 3)]\n    if n == 5:\n        return [(n - 1) * factorize(n - 4)]\n    if n == 6:\n        return [(n - 1) * factorize(n - 5)]\n    if n == 7:\n        return [(n - 1) * factorize(n - 6)]\n    if n == 8:\n        return [(n - 1) * factorize(n - 7)]\n    if n == 9:\n        return [(n - 1) * factorize(n - 8)]\n    if n == 10:\n        return [(n - 1) * factorize(n - 9)]\n    if n == 11:\n        return [(n - 1) * factorize(n - 10)]\n    if n == 12:\n        return [(n - 1) * factorize(n -", "from typing import List\n\n\ndef factorize(n: int) -> List[int]:\n    \"\"\" Return list of prime factors of given integer in the order from smallest to largest.\n    Each of the factors should be listed number of times corresponding to how many times it appeares in factorization.\n    Input number should be equal to the product of all factors\n    >>> factorize(8)\n    [2, 2, 2]\n    >>> factorize(25)\n    [5, 5]\n    >>> factorize(70)\n    [2, 5, 7]\n    \"\"\"\n    if n == 0:\n        return []\n    if n % 2 == 0:\n        return [n]\n    if n % 4 == 0:\n        return [n]\n    if n % 8 == 0:\n        return [n]\n    return [factorial(n) for factor in factorize(n)]"]]