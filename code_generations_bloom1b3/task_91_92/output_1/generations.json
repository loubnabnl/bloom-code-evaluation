[["def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a simplified version of the algorithm from\n    # http://stackoverflow.com/questions/3826503/count-boredom-in-a-string\n    #\n    # The algorithm is based on the fact that boredom is a\n    # relatively rare event, and that the probability of a sentence\n    # being bored is proportional to the number of times it occurs.\n    #\n    # The algorithm is also based on the fact that the probability of\n    # a sentence being bored is proportional to the number of\n    # times it occurs.\n    #\n    # The algorithm is also based on the fact that the probability of\n    # a sentence being bored is proportional to the number of\n    # times it occurs.\n    #\n    # The algorithm is also based on the fact that the probability of\n    # a sentence being bored is proportional to the number of\n    # times it occurs.\n    #\n    # The algorithm is also based on the fact that the probability of\n    # a sentence being bored is proportional to the number of\n    # times it occurs.\n    #\n    # The algorithm is also based on the fact that the probability of\n    # a sentence being bored is proportional to the number of\n    # times it occurs.\n    #\n    # The algorithm is also based on the fact that the probability of\n    # a", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1 and S.split()[-1] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words in the sentence\n    # divided by the number of words in the sentence before the word \"I\"\n    # (i.e. the number of words before the word \"I\" divided by the number\n    # of words in the sentence before the word \"I\" + the number of words\n    # in the sentence after the word \"I\")\n    return len(S) / len(S[:I]) + 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The first word is the word that is the subject of the sentence.\n    # The second word is the word that is the object of the sentence.\n    # The third word is the word that is the verb of the sentence.\n    # The fourth word is the word that is the adjective of the sentence.\n    # The fifth word is the word that is the adverb of the sentence.\n    # The sixth word is the word that is the noun of the sentence.\n    # The seventh word is the word that is the pronoun of the sentence.\n    # The eighth word is the word that is the preposition of the sentence.\n    # The ninth word is the word that is the postposition of the sentence.\n    # The tenth word is the word that is the conjunction of the sentence.\n    # The eleventh word is the word that is the disjunction of the sentence.\n    # The twelfth word is the word that is the conjunction of the sentence.\n    # The thirteenth word is the word that is the disjunction of the sentence.\n    # The fourteenth word is the word that is the conjunction of the sentence.\n    # The fifteenth word is the word that is the disjunction of the sentence.\n    # The sixteenth word is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and S.split()[0].startswith(\"I\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #\n    # The word \"I\" is the only word that is allowed to be in a boredom\n    # sentence. The rest of the words are ignored.\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of the sentence, and the last is the end.\n    # The first word is the start of", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    elif S.count(\"?\") == 0:\n        return 1\n    elif S.count(\"!\") == 0:\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word that can appear in a sentence.\n    # The word \"I\" is the only word", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    elif S.count(\"!\") == 0:\n        return 1\n    elif S.count(\"?\") == 0:\n        return 2\n    elif S.count(\".\") == 0:\n        return 3\n    else:\n        return 4", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    elif S == \"!\":\n        return 1\n    elif S == \"?\":\n        return 2\n    elif S == \".\":\n        return 3\n    else:\n        return 4", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1 and S.split()[0].isalpha() and S.split()[0] not in (\".\", \"?\", \"!\") and S.split()[-1].isalpha() and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\", \"!\") and S.split()[-1] not in (\".\", \"?\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first line is the word \"I\"\n    # The second line is the word \"world\"\n    # The third line is the word \"sun\"\n    # The fourth line is the word \"loves\"\n    # The fifth line is the word \"weather\"\n    # The sixth line is the word \"is\"\n    # The seventh line is the word \"blue\"\n    # The eighth line is the word \"shine\"\n    # The ninth line is the word \"is\"\n    # The tenth line is the word \"is\"\n    # The eleventh line is the word \"blue\"\n    # The twelfth line is the word \"shine\"\n    # The thirteenth line is the word \"is\"\n    # The fourteenth line is the word \"is\"\n    # The fifteenth line is the word \"is\"\n    # The sixteenth line is the word \"is\"\n    # The seventeenth line is the word \"is\"\n    # The eighteenth line is the word \"is\"\n    # The nineteenth line is the word \"is\"\n    # The twentieth line is the word \"is\"\n    # The twenty-first line is the word \"is\"\n    # The twenty-second line is the word \"is\"\n    # The twenty-third line is the word \"is\"\n    # The twenty-fourth", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words in the sentence\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    if S[0] == \"I\":\n        return 1\n    if S[0] == \"!\":\n        return 1\n    if S[0] == \"?\":\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    elif S == \"?\":\n        return 1\n    elif S == \"!\":\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a list of all the words in the string\n    words = S.split()\n    # The following is a list of all the words that start with \"I\"\n    boredoms = []\n    # The following is a list of all the words that start with the word \"I\"\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    # The following is a list of all the words that start with the word \"I\"\n    for word in words:\n        if word.startswith(\"I\") and word not in boredoms:\n            boredoms.append(word)\n    # The following is a list of all the words that start with the word \"I\"\n    for word in words:\n        if word.startswith(\"I\") and word not in boredoms:\n            boredoms.append(word)\n    # The following is a list of all the words that start with the word \"I\"\n    for word in words:\n        if word.startswith(\"I\") and word not in boredoms:\n            boredoms.append(word)\n    # The following is a list of all the words that start with the word \"I\"\n    for word in words:\n        if word.startswith(\"I\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S.count(\"I\") > 0 and S.count(\"!\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\") > 0 and S.count(\".\") > 0 and \\\n           S.count(\"?\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.\n    # The number of boredoms is the number of words in the sentence.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with the word \"I\".\n    #\n    # The number", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    if S.count(\"!\") == 0:\n        return 1\n    if S.count(\"?\") == 0:\n        return 2\n    return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first line is the input\n    # The second line is the output\n    # The third line is the input\n    # The fourth line is the output\n    # The fifth line is the input\n    # The sixth line is the output\n    # The seventh line is the input\n    # The eighth line is the output\n    # The ninth line is the input\n    # The tenth line is the output\n    # The eleventh line is the input\n    # The twelfth line is the output\n    # The thirteenth line is the input\n    # The fourteenth line is the output\n    # The fifteenth line is the input\n    # The sixteenth line is the output\n    # The seventeenth line is the input\n    # The eighteenth line is the output\n    # The nineteenth line is the input\n    # The twentieth line is the output\n    # The twenty-first line is the input\n    # The twenty-second line is the output\n    # The twenty-third line is the input\n    # The twenty-fourth line is the output\n    # The twenty-fifth line is the input\n    # The twenty-sixth line is the output\n    # The twenty-seventh line is the input\n    # The twenty-eighth line is the output\n    # The twenty-ninth line is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms\n    boredoms = 0\n    # The number of sentences\n    sentences = 0\n    # The number of words\n    words = 0\n    # The number of sentences with a word\n    sentences_with_word = 0\n    # The number of sentences with a word and a sentence\n    sentences_with_word_and_sentence = 0\n    # The number of sentences with a word and a sentence and a word\n    sentences_with_word_and_sentence_and_word = 0\n    # The number of sentences with a word and a sentence and a word and a sentence\n    sentences_with_word_and_sentence_and_word_and_sentence = 0\n    # The number of sentences with a word and a sentence and a word and a sentence and a word\n    sentences_with_word_and_sentence_and_word_and_sentence_and_sentence = 0\n    # The number of sentences with a word and a sentence and a word and a sentence and a word and a sentence\n    sentences_with_word_and_sentence_and_word_and_sentence_and_sentence_and_sentence_and_sentence = 0\n    # The number of sentences with a word and a sentence and a word and a sentence and a word and a sentence and a sentence and a sentence and a sentence", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a list of words that are not boredoms.\n    # The list is sorted by the number of times they appear in the\n    # sentence.\n    boredoms = [word for word in S if word not in ['I'] and word not in ['?', '!']]\n    # The following is a list of words that are boredoms.\n    # The list is sorted by the number of times they appear in the\n    # sentence.\n    boredoms.sort()\n    # The following is a list of words that are not boredoms.\n    # The list is sorted by the number of times they appear in the\n    # sentence.\n    boredoms.reverse()\n    # The following is a list of words that are boredoms.\n    # The list is sorted by the number of times they appear in the\n    # sentence.\n    boredoms.reverse()\n    # The following is a list of words that are not boredoms.\n    # The list is sorted by the number of times they appear in the\n    # sentence.\n    boredoms.reverse()\n    # The following is a list of words that are boredoms.\n    # The list is sorted by the number of times they appear in the\n    # sentence.\n    boredoms.reverse()\n    # The following is a list of words that are not boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    # http://docs.python.org/library/string.html#counting-boredom\n    #\n    # The following code is taken from the Python book\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is a special case, and we want to count the number of\n    # boredoms that start with it.\n    #\n    # The word \"I\" is a special case because it is the only word that\n    # starts with the word \"I\". So, we want to count the number of\n    # boredoms that start with \"I\".\n    #\n    # The word \"I\" is a special case because it is the only word that\n    # starts with the word \"I\". So, we want to count the number of\n    # boredoms that start with \"I\".\n    #\n    # The word \"I\" is a special case because it is the only word that\n    # starts with the word \"I\". So, we want to count the number of\n    # boredoms that start with \"I\".\n    #\n    # The word \"I\" is a special case because it is the only word that\n    # starts with the word \"I\". So, we want to count the number of\n    # boredoms that start with \"I\".\n    #\n    # The word \"I\" is a special case because it is the only word that\n    # starts with the word \"I\". So, we want", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] in (\"I\", \"!\", \"?\") and S[-1] in (\".\", \"?\", \"!\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used as a boredom.\n    # So, if you want to count boredoms, you need to find all the words\n    # that start with \"I\".\n    #\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used as a boredom.\n    # So, if you want to count boredoms, you need to find all the words\n    # that start with \"I\".\n    #\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used as a boredom.\n    # So, if you want to count boredoms, you need to find all the words\n    # that start with \"I\".\n    #\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used as a boredom.\n    # So, if you want to count boredoms, you need to find all the words\n    # that start with \"I\".\n    #\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1 and S.split()[-1] == \"I\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a bit of a hack to make sure that we don't get\n    # confused by the word \"I\". The word \"I\" is a special case, and\n    # should be treated as such.\n    if S.startswith(\"I\"):\n        S = S[1:]\n    return len(S)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works\n    # The word \"I\" is the only word that is not a boredom\n    # So, we need to find the first word that is not a boredom\n    # and then count the number of times that word appears\n    # in the sentence\n    #\n    # The word \"I\" is the only word that is not a boredom\n    # So, we need to find the first word that is not a boredom\n    # and then count the number of times that word appears\n    # in the sentence\n    #\n    # The word \"I\" is the only word that is not a boredom\n    # So, we need to find the first word that is not a boredom\n    # and then count the number of times that word appears\n    # in the sentence\n    #\n    # The word \"I\" is the only word that is not a boredom\n    # So, we need to find the first word that is not a boredom\n    # and then count the number of times that word appears\n    # in the sentence\n    #\n    # The word \"I\" is the only word that is not a boredom\n    # So, we need to find the first word that is not a boredom\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a little hacky, but it works.\n    # We need to find the first word that starts with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the last word that ends with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the first word that starts with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the last word that ends with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the first word that starts with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the last word that ends with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the first word that starts with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need to find the last word that ends with \"I\".\n    # We then need to count the number of boredoms in the sentence.\n    # We then need", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I' and S[1:].count('.') > 0 and \\\n           S[0] == 'I' and S[1:].count('?') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S[1:].count('!') > 0 and \\\n           S[0] == 'I' and S", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 0 or S[0] == 'I' or S[0] == '!' or S[0] == '?'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first line is the sentence\n    # The second line is the word \"I\"\n    # The third line is the word \"world\"\n    # The fourth line is the word \"sun\"\n    # The fifth line is the word \"shine\"\n    # The sixth line is the word \"love\"\n    # The seventh line is the word \"weather\"\n    # The eighth line is the word \"is\"\n    # The ninth line is the word \"bored\"\n    # The tenth line is the word \"is\"\n    # The eleventh line is the word \"is\"\n    # The twelfth line is the word \"bored\"\n    # The thirteenth line is the word \"is\"\n    # The fourteenth line is the word \"bored\"\n    # The fifteenth line is the word \"is\"\n    # The sixteenth line is the word \"bored\"\n    # The seventeenth line is the word \"is\"\n    # The eighteenth line is the word \"bored\"\n    # The nineteenth line is the word \"is\"\n    # The twentieth line is the word \"bored\"\n    # The twenty-first line is the word \"is\"\n    # The twenty-second line is the word \"bored\"\n    # The twenty-third line is the word \"is\"\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # We need to make sure that the words are delimited by '.', '?' or '!'.\n    # This is because the word \"I\" is not allowed to be in the middle of a sentence.\n    # So we need to make sure that the words are delimited by '.', '?' or '!'.\n    #\n    # The word \"I\" is not allowed to be in the middle of a sentence.\n    # So we need to make sure that the words are delimited by '.', '?' or '!'.\n    #\n    # The word \"I\" is not allowed to be in the middle of a sentence.\n    # So we need to make sure that the words are delimited by '.', '?' or '!'.\n    #\n    # The word \"I\" is not allowed to be in the middle of a sentence.\n    # So we need to make sure that the words are delimited by '.', '?' or '!'.\n    #\n    # The word \"I\" is not allowed to be in the middle of a sentence.\n    # So we need to make sure that the words are delimited by '.'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is a boredom\n    if S.startswith(\"I\"):\n        return 1\n    # The word \"!\" is a boredom\n    elif S.startswith(\"!\"):\n        return 1\n    # The word \"?\" is a boredom\n    elif S.startswith(\"?\"):\n        return 1\n    # The word \".\" is a boredom\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not boredoms\n    # The following is a list of words that are boredoms\n    # The following is a list of words that are not bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make sure that the word \"I\" is not counted\n    # as a boredom. This is because the word \"I\" is the only word that\n    # starts with the word \"I\", and it is the only word that is not\n    # followed by a word that starts with the word \"I\".\n    #\n    # The following is a hack to make sure that the word \"I\" is not counted\n    # as a boredom. This is because the word \"I\" is the only word that\n    # starts with the word \"I\", and it is the only word that is not\n    # followed by a word that starts with the word \"I\".\n    #\n    # The following is a hack to make sure that the word \"I\" is not counted\n    # as a boredom. This is because the word \"I\" is the only word that\n    # starts with the word \"I\", and it is the only word that is not\n    # followed by a word that starts with the word \"I\".\n    #\n    # The following is a hack to make sure that the word \"I\" is not counted\n    # as a boredom. This is because the word \"I\" is the only word that\n    # starts with the word \"I\",", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears.\n    # The number of times the word \"!\" appears is the number of times the word\n    # \"!\" appears in the sentence.\n    # The number of times the word \"?\" appears is the number of times the word\n    # \"?\" appears in the sentence.\n    # The number of times the word \"?\" appears in the sentence is the number of\n    # times the word \"?\" appears in the sentence.\n    # The number of times the word \"?\" appears in the sentence is the number of\n    # times the word \"?\" appears in the sentence.\n    # The number of times the word \"?\" appears in the sentence is the number of\n    # times the word \"?\" appears in the sentence.\n    # The number of times the word \"?\" appears in the sentence is the number of\n    # times the word \"?\" appears in the sentence.\n    # The number of times the word \"?\" appears in the sentence is the number of\n    # times the word \"?\" appears in the sentence.\n    # The number of times the word \"?\" appears in the sentence is the number of\n    # times the word \"?\" appears", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a quick and dirty way to count boredoms:\n    #\n    #   1. If the word \"I\" is in the sentence, then count 1\n    #   2. If the word \"I\" is not in the sentence, then count 0\n    #\n    # The above is a little bit inefficient, but it is the only way I know\n    # to do this. The following is a more efficient way to do this.\n    #\n    #   1. If the word \"I\" is in the sentence, then count 1\n    #   2. If the word \"I\" is not in the sentence, then count 0\n    #\n    # The above is a little bit inefficient, but it is the only way I know\n    # to do this. The following is a more efficient way to do this.\n    #\n    #   1. If the word \"I\" is in the sentence, then count 1\n    #   2. If the word \"I\" is not in the sentence, then count 0\n    #\n    # The above is a little bit inefficient, but it is the only way I know\n    # to do this. The following is a more efficient way to do this.\n    #\n    #   1. If the word \"I\" is in the sentence", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to get the number of boredoms\n    # from the number of words in the sentence.\n    # This is a hack because the number of boredoms\n    # is not always the same as the number of words in the sentence.\n    # For example, the sentence \"The sky is blue. The sun is shining. I love this weather\"\n    # has 3 boredoms, but the word \"I\" only has 2.\n    #\n    # The number of boredoms is the number of words in the sentence\n    # minus the number of words that start with \"I\".\n    #\n    # The number of words that start with \"I\" is the number of words in the sentence\n    # minus the number of words that start with \"I\".\n    #\n    # The number of words that start with \"I\" is the number of words in the sentence\n    # minus the number of words that start with \"I\".\n    #\n    # The number of words that start with \"I\" is the number of words in the sentence\n    # minus the number of words that start with \"I\".\n    #\n    # The number of words that start with \"I\" is the number of words in the sentence\n    # minus the number of words that start with \"I\".\n    #\n    # The number of", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # We need to make sure that the words are delimited by a space, and\n    # that they are not preceded by a word that is not a boredom.\n    # This is because if the word is preceded by a word that is not a\n    # boredom, then we will count it as a boredom.\n    #\n    # This is a bit of a hack, but it works.\n    # We need to make sure that the words are delimited by a space, and\n    # that they are not preceded by a word that is not a boredom.\n    # This is because if the word is preceded by a word that is not a\n    # boredom, then we will count it as a boredom.\n    #\n    # This is a bit of a hack, but it works.\n    # We need to make sure that the words are delimited by a space, and\n    # that they are not preceded by a word that is not a boredom.\n    # This is because if the word is preceded by a word that is not a\n    # boredom, then we will count it as a boredom.\n    #\n    # This is a bit of a hack, but it works.\n    # We", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    if S[0] == \"I\":\n        return 1\n    if S[0] == \"!\":\n        return 1\n    if S[0] == \"?\":\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    if S[0] == 'I':\n        return 1\n    if S[0] == '!':\n        return 2\n    if S[0] == '?':\n        return 3\n    return 4", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears.\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only word that can be used to define a\n    # sentence that starts with the word \"I\".\n    #\n    # The word \"I\" is also the only", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I' and S[1:].isdigit() and S[1:].isalnum() and S[1:] == '!' and S[1:] == '.' and S[1:] == '?' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:] == '!' and S[1:]", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.add(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the start of the sentence\n    start = S.find(\"I\")\n    # The second word is the end of the sentence\n    end = S.find(\".\")\n    # The third word is the end of the sentence\n    end2 = S.find(\"?\")\n    # The fourth word is the end of the sentence\n    end3 = S.find(\"!\")\n    # The fifth word is the end of the sentence\n    end4 = S.find(\".\")\n    # The sixth word is the end of the sentence\n    end5 = S.find(\".\")\n    # The seventh word is the end of the sentence\n    end6 = S.find(\".\")\n    # The eighth word is the end of the sentence\n    end7 = S.find(\".\")\n    # The ninth word is the end of the sentence\n    end8 = S.find(\".\")\n    # The tenth word is the end of the sentence\n    end9 = S.find(\".\")\n    # The eleventh word is the end of the sentence\n    end10 = S.find(\".\")\n    # The twelfth word is the end of the sentence\n    end11", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count it twice.\n    #\n    # The word \"I\" is a special word, so we need to make", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used to delimit a boredom.\n    # So, we need to find the first word that starts with \"I\".\n    # We do this by looking for the first word that starts with \"I\".\n    # Then, we look for the first word that starts with the word \"I\".\n    # Finally, we look for the first word that starts with the word \"I\".\n    #\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used to delimit a boredom.\n    # So, we need to find the first word that starts with \"I\".\n    # We do this by looking for the first word that starts with \"I\".\n    # Then, we look for the first word that starts with the word \"I\".\n    # Finally, we look for the first word that starts with the word \"I\".\n    #\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used to delimit a boredom.\n    # So, we need to find the first word that starts with \"I\".\n    # We do this by looking for", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is a bit of a hack, but it works.\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in the Python library\n    # http://stackoverflow.com/questions/3911703/count-boredom-in-python\n    #\n    # The code is based on the code in", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 0 or S[0] == 'I' or S[0] == '!' or S[0] == '?'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make the code more readable.\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below is a simplified version of the code in\n    # http://stackoverflow.com/questions/3790491/counting-boredom-in-a-string\n    #\n    # The code below", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '.', '?' or '!'\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '.', '?' or '!'\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '.', '?' or '!'\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '.', '?' or '!'\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '.', '?' or '!'\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '.', '?' or '!'\n    # This is a bit of a hack, but it works\n    # We need to make sure that the words are delimited by '", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    if S.count(\"?\") == 0:\n        return 1\n    if S.count(\"!\") == 0:\n        return 2\n    return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    if S == \"?\":\n        return 1\n    if S == \"!\":\n        return 2\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make the count work.\n    # The word \"I\" is the only one that is allowed to be in a sentence.\n    # So, if you have a sentence that starts with \"I\", you can just\n    # count the number of times that word appears in the sentence.\n    #\n    # The following is a hack to make the count work.\n    # The word \"I\" is the only one that is allowed to be in a sentence.\n    # So, if you have a sentence that starts with \"I\", you can just\n    # count the number of times that word appears in the sentence.\n    #\n    # The following is a hack to make the count work.\n    # The word \"I\" is the only one that is allowed to be in a sentence.\n    # So, if you have a sentence that starts with \"I\", you can just\n    # count the number of times that word appears in the sentence.\n    #\n    # The following is a hack to make the count work.\n    # The word \"I\" is the only one that is allowed to be in a sentence.\n    # So, if you have a sentence that starts with \"I\", you can just\n    # count the number of times that word appears in the sentence.\n    #\n    # The following", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words in the sentence\n    # divided by the number of words in the sentence.\n    #\n    # For example, if the sentence is \"The sky is blue. The sun is shining. I love this weather\",\n    # the number of boredoms is 2.\n    #\n    # The number of boredoms is the number of words in the sentence\n    # divided by the number of words in the sentence.\n    #\n    # For example, if the sentence is \"The sky is blue. The sun is shining. I love this weather\",\n    # the number of boredoms is 2.\n    #\n    # The number of boredoms is the number of words in the sentence\n    # divided by the number of words in the sentence.\n    #\n    # For example, if the sentence is \"The sky is blue. The sun is shining. I love this weather\",\n    # the number of boredoms is 2.\n    #\n    # The number of boredoms is the number of words in the sentence\n    # divided by the number of words in the sentence.\n    #\n    # For example, if the sentence is \"The sky is blue. The sun is shining. I love this weather\",\n    # the number of boredoms is 2.\n    #\n    # The number", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is a boredom\n    if S.startswith(\"I\"):\n        return 1\n    # The word \"?\" is a boredom\n    elif S.startswith(\"?\"):\n        return 1\n    # The word \"!\" is a boredom\n    elif S.startswith(\"!\"):\n        return 1\n    # The word \".\" is a boredom\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is a special case, so we need to handle it.\n    if S.startswith(\"I\"):\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.7\n    #\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.7\n    #\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.7\n    #\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.7\n    #\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.7\n    #\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.7\n    #\n    # The following code is taken from http://stackoverflow.com/questions/3748291/count-boredom-in-a-string\n    # and adapted to work with Python 2.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a simple regex that will match the word \"I\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \"!\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \"?\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \".\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \".\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \".\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \".\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \".\"\n    # and will return the number of boredoms.\n    #\n    # The following is a simple regex that will match the word \".\"\n    # and will return the number of boredoms.\n    #\n    # The following is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0 and S.split()[0] == \"I\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a list of words that are not in the list of\n    # boredoms. This is a list of words that are not in the list of\n    # boredoms, but are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that are not in the list of words that are not in the\n    # list of words that", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that is not a boredom\n    if not S.startswith(\"I\"):\n        return 0\n    # The word \"!\" is the only word that is not a boredom\n    if not S.startswith(\"!\"):\n        return 0\n    # The word \"?\" is the only word that is not a boredom\n    if not S.startswith(\"?\"):\n        return 0\n    # The word \".\" is the only word that is not a boredom\n    if not S.startswith(\".\"):\n        return 0\n    # The word \"?\" is the only word that is not a boredom\n    if not S.startswith(\"?\"):\n        return 0\n    # The word \"!\" is the only word that is not a boredom\n    if not S.startswith(\"!\"):\n        return 0\n    # The word \"?\" is the only word that is not a boredom\n    if not S.startswith(\"?\"):\n        return 0\n    # The word \"!\" is the only word that is not a boredom\n    if not S.startswith(\"!\"):\n        return 0\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I' and S[1:].count('.') > 0 and \\\n           S[0] == '?' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('?') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') > 0 and \\\n           S[0] == '!' and S[1:].count('!') >", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is a bit of a hack, but it works.\n    # The idea is that if you have a sentence that starts with \"I\", then\n    # the sentence is a boredom. If you have a sentence that starts with\n    # a word that is not \"I\", then the sentence is not a boredom.\n    #\n    # The code is based on the following algorithm:\n    #\n    # 1. If the sentence starts with \"I\", then the sentence is a boredom.\n    # 2. If the sentence starts with a word that is not \"I\", then the\n    #    sentence is not a boredom.\n    # 3. If the sentence starts with a word that is not \"I\", then the\n    #    sentence is not a boredom.\n    #\n    # The algorithm is based on the following rules:\n    #\n    # 1. If the sentence starts with \"I\", then the sentence is a boredom.\n    # 2. If the sentence starts with a word that is not \"I\", then the\n    #    sentence is not a boredom.\n    # 3. If the sentence starts with a word that is not \"I\", then the\n    #    sentence is not a boredom.\n    #\n    # The algorithm is based", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if not S.startswith(\"I\"):\n        return 1\n    if not S.startswith(\"!\"):\n        return 1\n    if not S.startswith(\"?\"):\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is a boredom\n    if S.startswith(\"I\"):\n        return 1\n    # The word \"!\" is a boredom\n    elif S.startswith(\"!\"):\n        return 1\n    # The word \"?\" is a boredom\n    elif S.startswith(\"?\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is a boredom\n    elif S.startswith(\".\"):\n        return 1\n    # The word \".\" is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is a bit of a hack, but it works.\n    # It is not perfect, but it is the best I could come up with.\n    # It is not a good solution, but it is the best I could come up with.\n    #\n    # The following code is a bit of a hack, but it works.\n    # It is not perfect, but it is the best I could come up with.\n    # It is not a good solution, but it is the best I could come up with.\n    #\n    # The following code is a bit of a hack, but it works.\n    # It is not perfect, but it is the best I could come up with.\n    # It is not a good solution, but it is the best I could come up with.\n    #\n    # The following code is a bit of a hack, but it works.\n    # It is not perfect, but it is the best I could come up with.\n    # It is not a good solution, but it is the best I could come up with.\n    #\n    # The following code is a bit of a hack, but it works.\n    # It is not perfect, but it is the best I could come up with.\n    # It is not a good solution, but it is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    elif S.count(\"!\") == 0:\n        return 1\n    elif S.count(\"?\") == 0:\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only one that can be used as a boredom\n    if S.startswith(\"I\"):\n        return 1\n    # The word \"?\" is the only one that can be used as a boredom\n    if S.startswith(\"?\"):\n        return 1\n    # The word \"!\" is the only one that can be used as a boredom\n    if S.startswith(\"!\"):\n        return 1\n    # The word \".\" is the only one that can be used as a boredom\n    if S.startswith(\".\"):\n        return 1\n    # The word \"?\" is the only one that can be used as a boredom\n    if S.startswith(\"?\"):\n        return 1\n    # The word \"!\" is the only one that can be used as a boredom\n    if S.startswith(\"!\"):\n        return 1\n    # The word \".\" is the only one that can be used as a boredom\n    if S.startswith(\".\"):\n        return 1\n    # The word \"?\" is the only one that can be used as a boredom\n    if S.startswith(\"?", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] in ['I', '!', '?', '!']", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredoms = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    if S.count(\"?\") == 0:\n        return 1\n    if S.count(\"!\") == 0:\n        return 2\n    return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"world\" is a word that can be used to define a boredom.\n    # The word \"sun\" is a word that can be used to define a boredom.\n    # The word \"love\" is a word that can be used to define a boredom.\n    # The word \"weather\" is a word that can be used to define a boredom.\n    # The word \".\" is a word that can be used to define a boredom.\n    # The word \"?\" is a word that can be used to define a boredom.\n    # The word \"!\" is a word that can be used to define a boredom.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"world\" is a word that can be used to define a boredom.\n    # The word \"sun\" is a word that can be used to define a boredom.\n    # The word \"love\" is a word that can be used to define a boredom.\n    # The word \"weather\" is a word that can be used to define a boredom.\n    # The word \".\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a list of words that are not boredoms\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms = [word for word in S if word not in ['I'] and word not in ['!', '?', '.', '?', '!']]\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.sort()\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.reverse()\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.remove('!')\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.remove('?')\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.remove('.')\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.remove('?')\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.remove('!')\n    # The list is sorted by the number of boredoms in each sentence\n    boredoms.remove('!')\n    # The", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if S[0] == \"I\":\n        return 1\n    if S[0] == \"!\":\n        return 1\n    if S[0] == \"?\":\n        return 1\n    if S[0] == \".\":\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the start of the sentence.\n    start = S.find(\"I\")\n    # The second word is the end of the sentence.\n    end = S.find(\".\", start + 1)\n    # The third word is the end of the sentence.\n    end2 = S.find(\"?\", end + 1)\n    # The fourth word is the end of the sentence.\n    end3 = S.find(\"!\", end2 + 1)\n    # The fifth word is the end of the sentence.\n    end4 = S.find(\".\", end3 + 1)\n    # The sixth word is the end of the sentence.\n    end5 = S.find(\"?\", end4 + 1)\n    # The seventh word is the end of the sentence.\n    end6 = S.find(\"!\", end5 + 1)\n    # The eighth word is the end of the sentence.\n    end7 = S.find(\".\", end6 + 1)\n    # The ninth word is the end of the sentence.\n    end8 = S.find(\"?\", end7 + 1)\n    # The tenth word is the end of the sentence.\n    end9 = S.find(\"!\",", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with a word that is not \"I\".\n    #\n    # The number of boredoms is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence.\n    #\n    # The word \"I\" is the only word that can appear in a sentence", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a simplified version of the original algorithm\n    # from the book \"Programming with Python\" by Robert Sedgewick and Kevin Wayne\n    # (ISBN 0-201-21341-1)\n    #\n    # The algorithm is based on the fact that boredom is a\n    # very common sentiment, and that the number of times a word is\n    # used in a sentence is a good indicator of the sentiment of the\n    # sentence.\n    #\n    # The algorithm is as follows:\n    #\n    # 1. Count the number of times the word \"I\" is used in the sentence.\n    # 2. Count the number of times the word \"!\" is used in the sentence.\n    # 3. Count the number of times the word \"?\" is used in the sentence.\n    # 4. Count the number of times the word \"?\" is used in the sentence.\n    # 5. Count the number of times the word \"?\" is used in the sentence.\n    # 6. Count the number of times the word \"?\" is used in the sentence.\n    # 7. Count the number of times the word \"?\" is used in the sentence.\n    # 8. Count the number of times the word \"?\" is used in the sentence.\n    # 9.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.startswith(\"I\"):\n        return 1\n    elif S.startswith(\"?\"):\n        return 1\n    elif S.startswith(\"!\"):\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredoms = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) == 0 or S[0] == 'I' or S[0] == '!' or S[0] == '?'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # We need to split the string into words\n    words = S.split()\n    # We need to count the number of boredoms\n    boredoms = 0\n    # We need to count the number of words that start with \"I\"\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"world\" is a word that can be used to define a boredom.\n    # The word \"sun\" is a word that can be used to define a boredom.\n    # The word \"loves\" is a word that can be used to define a boredom.\n    # The word \"weather\" is a word that can be used to define a boredom.\n    # The word \"is\" is a word that can be used to define a boredom.\n    # The word \"world\" is a word that can be used to define a boredom.\n    # The word \"sun\" is a word that can be used to define a boredom.\n    # The word \"loves\" is a word that can be used to define a boredom.\n    # The word \"weather\" is a word that can be used to define a boredom.\n    # The word \"is\" is a word that can be used to define a boredom.\n    # The word \"world\" is a word that can be used to define a boredom.\n    # The word \"sun\" is a word that can be used to define a boredom.\n    # The word \"loves\" is a word that", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    #\n    # The word \"I\" is a special case, because it can appear anywhere in the\n    # sentence, but only once. So, we need to count the number of times the\n    # word \"I\" appears in the sentence, but only once. The number of times the\n    # word \"I\" appears in the sentence is the number of times the word \"I\" appears\n    # in the sentence, but only once.\n    #\n    # The word \"I\" is a special case, because it can appear anywhere in the\n    # sentence, but only once. So, we need to count the number of times the\n    # word \"I\" appears in the sentence, but only once. The number of times the\n    # word \"I\" appears in the sentence is the number of times the word \"I\" appears\n    # in the sentence, but only once.\n    #\n    # The word \"I\" is a special case, because it can appear anywhere in the\n    # sentence, but only once. So, we need to count the number of times the\n    # word \"I\" appears in the sentence, but only once. The number of times the\n    # word \"I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used as a boredom.\n    # The word \"world\" is the only word that can be used as a boredom.\n    # The word \"sun\" is the only word that can be used as a boredom.\n    # The word \"loves\" is the only word that can be used as a boredom.\n    # The word \"weather\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"is\" is the only word that can be used as a boredom.\n    # The word \"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    elif S.count(\"?\") == 0:\n        return 1\n    elif S.count(\"!\") == 0:\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredoms = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom += 1\n    return boredom", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is a boredom\n    if S.startswith(\"I\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.startswith(\"?\"):\n        return 1\n    # The word \"!\" is a boredom\n    if S.startswith(\"!\"):\n        return 1\n    # The word \".\" is a boredom\n    if S.startswith(\".\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.startswith(\"?\"):\n        return 1\n    # The word \"!\" is a boredom\n    if S.startswith(\"!\"):\n        return 1\n    # The word \".\" is a boredom\n    if S.startswith(\".\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.startswith(\"?\"):\n        return 1\n    # The word \"!\" is a boredom\n    if S.startswith(\"!\"):\n        return 1\n    # The word \".\" is a boredom\n    if S.startswith(\".\"):\n        return 1\n    # The word \"?\" is", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    #\n    # The word \"I\" is the only word that appears in the sentence, so we can\n    # count the number of times the word \"I\" appears in the sentence by\n    # counting the number of times the word \"I\" appears in the sentence.\n    #\n    # The word \"I\" is the only word that appears in the sentence, so we can\n    # count the number of times the word \"I\" appears in the sentence by\n    # counting the number of times the word \"I\" appears in the sentence.\n    #\n    # The word \"I\" is the only word that appears in the sentence, so we can\n    # count the number of times the word \"I\" appears in the sentence by\n    # counting the number of times the word \"I\" appears in the sentence.\n    #\n    # The word \"I\" is the only word that appears in the sentence, so we can\n    # count the number of times the word \"I\" appears in the sentence by\n    # counting the number of times the word \"I\" appears in the sentence.\n    #\n    # The word \"I\" is the only word that appears in the sentence, so we can\n    # count the number", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of sentences that start with \"I\".\n    # The number of sentences that start with \"I\" is the number of sentences\n    # that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word \"I\".\n    # The number of sentences that start with the word \"I\" is the number of\n    # sentences that start with the word", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in a string\n    # of words.\n    #\n    # The following is a quick way to get the number of boredoms in", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that is allowed to start a sentence.\n    # The word \"!\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.\n    # The word \"?\" is not allowed to start a sentence.\n    # The word \".\" is not allowed to start a sentence.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.\n    # The word \"I\" is a word that is not a part of the sentence.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make sure we don't get stuck in a loop\n    # when the input is a string of words that starts with \"I\".\n    # This is a hack because the input is not necessarily a sentence.\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\".\n    # The input is a string of words that starts with \"I\"", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make sure we don't get stuck in a loop\n    # when we get bored.\n    # We use a counter to keep track of the number of boredoms.\n    # The counter is initialized to 0 and incremented each time a sentence\n    # is read.\n    #\n    # The counter is reset when the last sentence is read.\n    #\n    # The counter is reset when the last sentence is read.\n    counter = 0\n    while True:\n        # Read the next sentence.\n        sentence = S.readline()\n        if not sentence:\n            break\n        # Check if the sentence is a boredom.\n        if sentence.startswith(\"I\"):\n            # The counter is incremented.\n            counter += 1\n            # The sentence is a boredom.\n            break\n        # The counter is reset.\n        counter = 0\n    return counter", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    # count the word \"I\" twice.\n    #\n    # The word \"I\" is a special word, so we need to make sure that we don't\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a list of all the words in the string\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return len(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Build a list of all the words in the sentence\n    words = S.split()\n    # Count the number of boredoms\n    boredoms = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The idea is that the first word is the start of the sentence, and the\n    # rest are the boredoms.\n    #\n    # The problem is that the first word is always \"I\", so we have to\n    # make sure that the first word is not the start of a sentence.\n    #\n    # The solution is to use a regular expression to check if the first\n    # word is \"I\".\n    #\n    # The problem is that the first word is always \"I\", so we have to\n    # make sure that the first word is not the start of a sentence.\n    #\n    # The solution is to use a regular expression to check if the first\n    # word is \"I\".\n    #\n    # The problem is that the first word is always \"I\", so we have to\n    # make sure that the first word is not the start of a sentence.\n    #\n    # The solution is to use a regular expression to check if the first\n    # word is \"I\".\n    #\n    # The problem is that the first word is always \"I\", so we have to\n    # make sure that the first word is not the start of a sentence.\n    #\n    # The solution is to use", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only word that can be used as a boredom.\n    # The word \"world\" is the only word that can be used as a boredom.\n    # The word \"sun\" is the only word that can be used as a boredom.\n    # The word \"love\" is the only word that can be used as a boredom.\n    # The word \"weather\" is the only word that can be used as a boredom.\n    # The word \"?\" is the only word that can be used as a boredom.\n    # The word \"!\" is the only word that can be used as a boredom.\n    # The word \"?\" is the only word that can be used as a boredom.\n    # The word \"!\" is the only word that can be used as a boredom.\n    # The word \"!\" is the only word that can be used as a boredom.\n    # The word \"!\" is the only word that can be used as a boredom.\n    # The word \"!\" is the only word that can be used as a boredom.\n    # The word \"!\" is the only word that can be used as", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the sentence", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 1 and S[0] in ['I', 'I love this weather', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    #\n    # The word \"I\" is a special word that is used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count boredoms:\n    #\n    #   I am bored.\n    #\n    # The word \"I\" is also used to count bored", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = []\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.append(word)\n    return sum(boredoms)", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the start of the sentence, the second is the end\n    # of the sentence, and the third is the boredom\n    boredom = S.split('.')[0]\n    if boredom in ['I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string\n    # that start with \"I\".\n    #\n    # The number of boredoms is the number of words in the string", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredoms = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the subject\n    subject = S.split()[0]\n    # The second word is the verb\n    verb = S.split()[1]\n    # The third word is the object\n    object = S.split()[2]\n    # The fourth word is the adverb\n    adverb = S.split()[3]\n    # The fifth word is the adjective\n    adjective = S.split()[4]\n    # The sixth word is the preposition\n    preposition = S.split()[5]\n    # The seventh word is the postposition\n    postposition = S.split()[6]\n    # The eighth word is the conjunction\n    conjunction = S.split()[7]\n    # The ninth word is the disjunction\n    disjunction = S.split()[8]\n    # The tenth word is the adverb\n    adverb = S.split()[9]\n    # The eleventh word is the conjunction\n    conjunction = S.split()[10]\n    # The twelfth word is the disjunction\n    disjunction = S.split()[11]\n    # The thirteenth word is the conjunction\n    conjunction = S.split()[12]\n    # The fourteenth word is the disjunction\n    disjunction = S.split()[13]\n    # The fifteenth word is the conjunction\n    conjunction = S.split()[14]", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #\n    # The following code is from the Python 2.7.x standard library.\n    # See http://docs.python.org/library/string.html\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the word \"I\"\n    if S.startswith(\"I\"):\n        return 1\n    # The second word is the word \"world\"\n    if S.startswith(\"world\"):\n        return 1\n    # The third word is the word \"sun\"\n    if S.startswith(\"sun\"):\n        return 1\n    # The fourth word is the word \"love\"\n    if S.startswith(\"love\"):\n        return 1\n    # The fifth word is the word \"weather\"\n    if S.startswith(\"weather\"):\n        return 1\n    # The sixth word is the word \"day\"\n    if S.startswith(\"day\"):\n        return 1\n    # The seventh word is the word \"weather\"\n    if S.startswith(\"weather\"):\n        return 1\n    # The eighth word is the word \"day\"\n    if S.startswith(\"day\"):\n        return 1\n    # The ninth word is the word \"weather\"\n    if S.startswith(\"weather\"):\n        return 1\n    # The tenth word is the word \"day\"\n    if S.startswith(\"day\"):\n        return 1\n    # The eleventh word is the", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of times the word \"I\" appears is the number of times the word\n    # \"I\" appears in the sentence.\n    # The number of", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with a word that is not a word that starts with \"I\".\n    # This is because the word \"I\" is the only word that is not a word that\n    # starts with \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with a word that is not a word that starts with \"I\".\n    # This is because the word \"I\" is the only word that is not a word that\n    # starts with \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with a word that is not a word that starts with \"I\".\n    # This is because the word \"I\" is the only word that is not a word that\n    # starts with \"I\".\n    #\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with a word that is not a word that starts with \"I\".\n    # This is because the word \"I\" is the only word that is not a word that\n    # starts with \"I\".\n    #\n    # The number of boredoms is the number of sentences", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Build a list of all the words\n    words = S.split()\n    # Count the number of boredoms\n    boredoms = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") > 0:\n        return 1\n    if S.count(\"!\") > 0:\n        return 1\n    if S.count(\"?\") > 0:\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a simple regex that matches the word \"I\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \"!\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \"?\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \".\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \"?\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \".\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \".\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \".\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \".\"\n    # and returns the number of times it occurs.\n    # The following is a simple regex that matches the word \".\"\n    # and returns the number of times it occurs.\n    # The following is a simple", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    #\n    # This is a list of all the words in the string.\n    #\n    # This is a list of all the words that start with the word \"I\".\n    #\n    # This is a list of all the words that start with the word \"!\".\n    #\n    # This is a list of all the words that start with the word \"?\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of all the words that start with the word \"?\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of all the words that start with the word \".\".\n    #\n    # This is a list of", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S.count(\"I\") > 0 and S.count(\"!\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of sentences that start with \"I\".\n    # The number of sentences that start with \"I\" is the number of words in the\n    # string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words in the string.\n    # The number of words in the string is the number of words", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    #\n    # This is a list of all the words in the sentence.\n    #\n    # The list is sorted by the number of times the word is used.\n    #\n    # The list is then split into two lists, one containing the words that\n    # are used more than once, and one containing the words that are used\n    # less than once.\n    #\n    # The list is then sorted by the number of times the word is used.\n    #\n    # The list is then split into two lists, one containing the words that\n    # are used more than once, and one containing the words that are used\n    # less than once.\n    #\n    # The list is then sorted by the number of times the word is used.\n    #\n    # The list is then split into two lists, one containing the words that\n    # are used more than once, and one containing the words that are used\n    # less than once.\n    #\n    # The list is then sorted by the number of times the word is used.\n    #\n    # The list is then split into two lists, one containing the words that\n    # are used more than once, and one containing the words that are used\n    # less than once.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if len(S) == 0:\n        return 0\n    if S[0] == 'I':\n        return 1\n    if S[0] == '!':\n        return 2\n    if S[0] == '?':\n        return 3\n    if S[0] == '.':\n        return 4\n    return 5", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.add(word)\n    return len(boredoms) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following is a bit of a hack, but it works.\n    # The following", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Build a list of all the words in the string\n    words = S.split()\n    # Count the number of boredoms\n    boredoms = 0\n    for word in words:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S.count(\"I\") > 0 and S.count(\"!\") > 0 and S.count(\"?\") > 0 and S.count(\".\") > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S.count(\"I\") > 0 and S.count(\"!\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\".\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\"?\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\"?\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\"?\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\"?\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count(\"?\") > 0 and S.count(\"?\") > 0 and \\\n        S.count(\"?\") > 0 and S.count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have to do a\n    # string.split() on the input.\n    #\n    # The following is a hack to make sure we don't have", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Build a list of all the words in the string\n    words = S.split()\n    # Count the number of boredoms\n    boredom_count = 0\n    # For each word in the string, count the number of boredoms\n    for word in words:\n        # If the word is a boredom, add it to the list\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    # Return the number of boredoms\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be a boredom\n    if not S.startswith(\"I\"):\n        return 0\n    # The word \"!\" is the only word that can be a boredom\n    if not S.endswith(\"!\"):\n        return 1\n    # The word \"?\" is the only word that can be a boredom\n    if not S.startswith(\"?\"):\n        return 0\n    # The word \".\" is the only word that can be a boredom\n    if not S.endswith(\".\"):\n        return 0\n    return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word \"I\" is not a word, but a\n    # character. So we need to convert it to a word.\n    #\n    # This is a little tricky, because the word", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears\n    # in the sentence. The word \"I\" is the only word that can appear in\n    # a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I\" is the only word that can appear in a boredom.\n    #\n    # The word \"I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.startswith(\"I\"):\n        return 1\n    if S.startswith(\"?\"):\n        return 1\n    if S.startswith(\"!\"):\n        return 1\n    return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears in the\n    # sentence.\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # We need to convert the string to a list of words\n    words = S.split('.')\n    # We need to convert the list of words to a list of sentences\n    sentences = [w for w in words if w.startswith(\"I\")]\n    # We need to count the number of boredoms\n    boredoms = 0\n    for sentence in sentences:\n        if sentence.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is a boredom\n    if S.startswith(\"I\"):\n        return 1\n    # The word \"!\" is a boredom\n    if S.startswith(\"!\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.startswith(\"?\"):\n        return 1\n    # The word \".\" is a boredom\n    if S.endswith(\".\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.endswith(\"?\"):\n        return 1\n    # The word \"!\" is a boredom\n    if S.endswith(\"!\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.endswith(\"?\"):\n        return 1\n    # The word \".\" is a boredom\n    if S.endswith(\".\"):\n        return 1\n    # The word \"?\" is a boredom\n    if S.endswith(\"?\"):\n        return 1\n    # The word \"!\" is a boredom\n    if S.endswith(\"!\"):\n        return 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of sentences that start with \"I\"\n    # and end with a '.', '?' or '!'\n    return len(S.split()) - len(S.split()[0].split()) - len(S.split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()[0].split()", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] == 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python book\n    # http://python.org/library/counting.html\n    #\n    # The code is based on the code in the Python", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1 and S.split()[0].isalnum() and S.split()[0]!= 'I'", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first line is the input\n    S = S.strip()\n    # The second line is the output\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to make sure that we don't have to\n    # convert the string to a list. This is because we don't want to\n    # convert the string to a list if the string is empty.\n    if S == '':\n        return 0\n    else:\n        return len(S.split())", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 1 and S.split()[0].startswith(\"I\") and S.split()[0].endswith(\"!\")", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # We need to make sure that the string is a valid sentence\n    if not S:\n        return 0\n    # We need to make sure that the string is not empty\n    if len(S) == 0:\n        return 0\n    # We need to make sure that the string is not a single word\n    if S[0] == 'I':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '!':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '?':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '.':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '?':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '!':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '.':\n        return 1\n    # We need to make sure that the string is not a single word\n    if S[0] == '?':\n        return 1\n    # We", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works.\n    # The word \"I\" is the only one that is allowed to be in a boredom.\n    # The word \"!\" is not allowed, but it is allowed to be in a sentence.\n    # The word \"?\" is allowed to be in a sentence, but not in a boredom.\n    # The word \".\" is allowed to be in a sentence, but not in a boredom.\n    # The word \"?\" is not allowed to be in a sentence, but it is allowed to be in a boredom.\n    # The word \".\" is not allowed to be in a sentence, but it is allowed to be in a boredom.\n    # The word \"?\" is not allowed to be in a sentence, but it is allowed to be in a boredom.\n    # The word \".\" is not allowed to be in a sentence, but it is allowed to be in a boredom.\n    # The word \"?\" is not allowed to be in a sentence, but it is allowed to be in a boredom.\n    # The word \".\" is not allowed to be in a sentence, but it is allowed to be in a boredom.\n    # The word \"?", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # This is a bit of a hack, but it works for now.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.\n    #\n    # The word \"I\" is a special case, so we need to handle it differently.", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that start with \"I\"\n    # and end with the word \"!\"\n    # The number of boredoms is the number of words that", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S[0] in ['I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I', 'I", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is the first word in the sentence\n    if S.startswith(\"I\"):\n        return 1\n    # The second word is the second word in the sentence\n    if S.startswith(\"!\"):\n        return 1\n    # The third word is the third word in the sentence\n    if S.startswith(\"?\"):\n        return 1\n    # The fourth word is the fourth word in the sentence\n    if S.startswith(\".\"):\n        return 1\n    # The fifth word is the fifth word in the sentence\n    if S.startswith(\"?\"):\n        return 1\n    # The sixth word is the sixth word in the sentence\n    if S.startswith(\"!\"):\n        return 1\n    # The seventh word is the seventh word in the sentence\n    if S.startswith(\".\"):\n        return 1\n    # The eighth word is the eighth word in the sentence\n    if S.startswith(\"?\"):\n        return 1\n    # The ninth word is the ninth word in the sentence\n    if S.startswith(\"!\"):\n        return 1\n    # The tenth word is the tenth word in the sentence\n    if S.startswith(\".\"):", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom\n    # sentence. The rest of the words are not allowed to be used as a\n    # boredom sentence", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The first word is \"I\"\n    if S.startswith(\"I\"):\n        return 1\n    # The second word is \"!\"\n    if S.startswith(\"!\"):\n        return 1\n    # The third word is \"?\"\n    if S.startswith(\"?\"):\n        return 1\n    # The fourth word is \".\"\n    if S.startswith(\".\"):\n        return 1\n    # The fifth word is \"?\"\n    if S.startswith(\"?\"):\n        return 1\n    # The sixth word is \"!\"\n    if S.startswith(\"!\"):\n        return 1\n    # The seventh word is \"?\"\n    if S.startswith(\"?\"):\n        return 1\n    # The eighth word is \".\"\n    if S.startswith(\".\"):\n        return 1\n    # The ninth word is \"?\"\n    if S.startswith(\"?\"):\n        return 1\n    # The tenth word is \"!\"\n    if S.startswith(\"!\"):\n        return 1\n    # The eleventh word is \"?\"\n    if S.startswith(\"?\"):\n        return 1\n    # The tw", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"world\" is the only word that can be used to define a boredom.\n    # The word \"sun\" is the only word that can be used to define a boredom.\n    # The word \"love\" is the only word that can be used to define a boredom.\n    # The word \"weather\" is the only word that can be used to define a boredom.\n    # The word \"?\" is the only word that can be used to define a boredom.\n    # The word \"!\" is the only word that can be used to define a boredom.\n    # The word \".\" is the only word that can be used to define a boredom.\n    # The word \"?\" is the only word that can be used to define a boredom.\n    # The word \"!\" is the only word that can be used to define a boredom.\n    # The word \".\" is the only word that can be used to define a boredom.\n    # The word \"?\" is the only word that can be used to define a boredom.\n    # The word \"!\" is the only word that can be used to define", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.count(\"I\") == 0:\n        return 0\n    elif S.count(\"!\") == 0:\n        return 1\n    elif S.count(\"?\") == 0:\n        return 2\n    else:\n        return 3", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The following is a hack to get the number of boredoms\n    # from the number of words in the sentence\n    #\n    # The number of boredoms is the number of words in the sentence\n    # minus the number of words that start with \"I\"\n    #\n    # The number of words that start with \"I\" is the number of words\n    # that start with the word \"I\"\n    #\n    # The number of words that start with the word \"I\" is the number of\n    # words that start with the word \"I\"\n    #\n    # The number of words that start with the word \"I\" is the number of\n    # words that start with the word \"I\"\n    #\n    # The number of words that start with the word \"I\" is the number of\n    # words that start with the word \"I\"\n    #\n    # The number of words that start with the word \"I\" is the number of\n    # words that start with the word \"I\"\n    #\n    # The number of words that start with the word \"I\" is the number of\n    # words that start with the word \"I\"\n    #\n    # The number of words that start with the word \"I\" is the number of\n    # words that start with the word \"I\"\n    #", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S.startswith(\"I\"):\n        return 1\n    elif S.startswith(\"?\"):\n        return 1\n    elif S.startswith(\"!\"):\n        return 1\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"world\" is the only word that can be used to define a boredom.\n    # The word \"blue\" is the only word that can be used to define a boredom.\n    # The word \"sun\" is the only word that can be used to define a boredom.\n    # The word \"shine\" is the only word that can be used to define a boredom.\n    # The word \"love\" is the only word that can be used to define a boredom.\n    # The word \"weather\" is the only word that can be used to define a boredom.\n    # The word \"?\" is the only word that can be used to define a boredom.\n    # The word \"!\" is the only word that can be used to define a boredom.\n    #\n    # The word \"I\" is the only word that can be used to define a boredom.\n    # The word \"world\" is the only word that can be used to define a boredom.\n    # The word \"blue\" is the only word that can be used to define a boredom.\n    # The word \"sun\" is the only word that can be used to define a", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if not S:\n        return 0\n    if not S.startswith(\"I\"):\n        return 0\n    if not S.startswith(\"!\"):\n        return 0\n    if not S.endswith(\"!\"):\n        return 0\n    if not S.endswith(\".\"):\n        return 0\n    return len(S.split()) - 1", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S) > 0 and S.find(\"I\") > 0 and S.find(\"!\") > 0 and S.find(\"?\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".\") > 0 and S.find(\".", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    if S == \"I\":\n        return 0\n    elif S == \"?\":\n        return 1\n    elif S == \"!\":\n        return 2\n    else:\n        return 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    boredoms = set()\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms.add(word)\n    return len(boredoms) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # Count the number of boredoms\n    boredoms = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredoms += 1\n    return boredoms", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    return len(S.split()) > 0", "def is_bored(S):\n    \"\"\"\n    You'll be given a string of words, and your task is to count the number\n    of boredoms. A boredom is a sentence that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n    >>> is_bored(\"Hello world\")\n    0\n    >>> is_bored(\"The sky is blue. The sun is shining. I love this weather\")\n    1\n    \"\"\"\n    # The number of boredoms is the number of times the word \"I\" appears\n    # in the sentence.\n    boredom_count = 0\n    for word in S:\n        if word.startswith(\"I\"):\n            boredom_count += 1\n    return boredom_count"]]