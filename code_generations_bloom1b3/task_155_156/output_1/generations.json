[["def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num / 2, 0)\n    else:\n        return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num < 0:\n        return (-1, -1)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (2, 2)\n    return (-1, -1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num, 0)\n    elif num % 2 == 1:\n        return (num, 1)\n    else:\n        return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num, 0)\n    else:\n        return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    if num % 4 == 0:\n        return (num // 4, 1)\n    if num % 8 == 0:\n        return (num // 8, 2)\n    return (num // 10, 3)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num < 0:\n        return (-1, -1)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (1, 2)\n    if num == 3:\n        return (1, 3)\n    if num == 4:\n        return (1, 4)\n    if num == 5:\n        return (1, 5)\n    if num == 6:\n        return (1, 6)\n    if num == 7:\n        return (1, 7)\n    if num == 8:\n        return (1, 8)\n    if num == 9:\n        return (1, 9)\n    if num == 10:\n        return (1, 10)\n    if num == 11:\n        return (1, 11)\n    if num == 12:\n        return (1, 12)\n    if num == 13:\n        return (1, 13)\n    if num == 14:\n        return (1, 14)\n    if num == 15:\n        return (1, 15)\n    if num == 16:\n        return (1, 16)\n    if num == 17:\n        return (1, 17)\n    if num == 18:\n        return (1, 18)\n    if num == 19:\n        return (1, 19)\n    if num == 20:\n        return (1, 20)\n    if num == 21:\n        return (1, 21)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    if num % 4 == 0:\n        return (num / 4, 1)\n    if num % 8 == 0:\n        return (num / 8, 2)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (1, 2)\n    if num == 3:\n        return (2, 2)\n    if num == 4:\n        return (2, 3)\n    if num == 5:\n        return (3, 3)\n    if num == 6:\n        return (3, 4)\n    if num == 7:\n        return (4, 4)\n    if num == 8:\n        return (4, 5)\n    if num == 9:\n        return (5, 5)\n    if num == 10:\n        return (5, 6)\n    if num == 11:\n        return (6, 6)\n    if num == 12:\n        return (6, 7)\n    if num == 13:\n        return (7, 7)\n    if num == 14:\n        return (8, 8)\n    if num == 15:\n        return (9, 9)\n    if num == 16:\n        return (10, 10)\n    if num == 17:\n        return (11, 11)\n    if num == 18:\n        return (12, 12)\n    if num == 19:\n        return (13, 13)\n    if num == 20:\n        return (14, 14)\n    if num == 21:\n        return (15, 15)\n    if num == 22:\n        return (16, 16)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num / 2, 0)\n    else:\n        return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1) and (num % 2!= 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    if num % 4 == 0:\n        return (num / 4, 1)\n    if num % 8 == 0:\n        return (num / 8, 2)\n    if num % 16 == 0:\n        return (num / 16, 3)\n    if num % 32 == 0:\n        return (num / 32, 4)\n    if num % 64 == 0:\n        return (num / 64, 5)\n    if num % 128 == 0:\n        return (num / 128, 6)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num // 2, 0)\n    else:\n        return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    if num % 8 == 0:\n        return (num, 2)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    if num % 4 == 0:\n        return (num / 4, 1)\n    if num % 6 == 0:\n        return (num / 6, 2)\n    if num % 8 == 0:\n        return (num / 8, 3)\n    if num % 10 == 0:\n        return (num / 10, 4)\n    if num % 100 == 0:\n        return (num / 100, 5)\n    if num % 1000 == 0:\n        return (num / 1000, 6)\n    if num % 10000 == 0:\n        return (num / 10000, 7)\n    if num % 100000 == 0:\n        return (num / 100000, 8)\n    if num % 1000000 == 0:\n        return (num / 1000000, 9)\n    if num % 10000000 == 0:\n        return (num / 10000000, 10)\n    if num % 100000000 == 0:\n        return (num / 100000000, 11)\n    if num % 1000000000 == 0:\n        return (num / 1000000000, 12)\n    if num % 100000000000 == 0:\n        return (num / 100000000000, 13)\n    if num % 1000000000000 == 0:\n        return (num / 1000000000000, 14)\n    if num % 100000000", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (1, 2)\n    if num == 3:\n        return (1, 3)\n    if num == 4:\n        return (1, 4)\n    if num == 5:\n        return (1, 5)\n    if num == 6:\n        return (1, 6)\n    if num == 7:\n        return (1, 7)\n    if num == 8:\n        return (1, 8)\n    if num == 9:\n        return (1, 9)\n    if num == 10:\n        return (1, 10)\n    if num == 11:\n        return (1, 11)\n    if num == 12:\n        return (1, 12)\n    if num == 13:\n        return (1, 13)\n    if num == 14:\n        return (1, 14)\n    if num == 15:\n        return (1, 15)\n    if num == 16:\n        return (1, 16)\n    if num == 17:\n        return (1, 17)\n    if num == 18:\n        return (1, 18)\n    if num == 19:\n        return (1, 19)\n    if num == 20:\n        return (1, 20)\n    if num == 21:\n        return (1, 21)\n    if num == 22:\n        return (1, 22)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num < 0:\n        return (-1, -1)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (2, 2)\n    if num == 3:\n        return (3, 3)\n    if num == 4:\n        return (4, 4)\n    if num == 5:\n        return (5, 5)\n    if num == 6:\n        return (6, 6)\n    if num == 7:\n        return (7, 7)\n    if num == 8:\n        return (8, 8)\n    if num == 9:\n        return (9, 9)\n    if num == 10:\n        return (10, 10)\n    if num == 11:\n        return (11, 11)\n    if num == 12:\n        return (12, 12)\n    if num == 13:\n        return (13, 13)\n    if num == 14:\n        return (14, 14)\n    if num == 15:\n        return (15, 15)\n    if num == 16:\n        return (16, 16)\n    if num == 17:\n        return (17, 17)\n    if num == 18:\n        return (18, 18)\n    if num == 19:\n        return (19, 19)\n    if num == 20:\n        return (20, 20)\n    if num == 21:\n        return (21, 21)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 0)\n    if num == 2:\n        return (1, 1)\n    if num == 3:\n        return (2, 0)\n    if num == 4:\n        return (2, 1)\n    if num == 5:\n        return (3, 0)\n    if num == 6:\n        return (3, 1)\n    if num == 7:\n        return (4, 0)\n    if num == 8:\n        return (4, 1)\n    if num == 9:\n        return (5, 0)\n    if num == 10:\n        return (5, 1)\n    if num == 11:\n        return (6, 0)\n    if num == 12:\n        return (6, 1)\n    if num == 13:\n        return (7, 0)\n    if num == 14:\n        return (7, 1)\n    if num == 15:\n        return (8, 0)\n    if num == 16:\n        return (8, 1)\n    if num == 17:\n        return (9, 0)\n    if num == 18:\n        return (9, 1)\n    if num == 19:\n        return (10, 0)\n    if num == 20:\n        return (10, 1)\n    if num == 21:\n        return (11, 0)\n    if num == 22:\n        return (11, 1)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num < 0:\n        return (-1, -1)\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (2, 1)\n    if num == 3:\n        return (3, 1)\n    if num == 4:\n        return (4, 1)\n    if num == 5:\n        return (5, 1)\n    if num == 6:\n        return (6, 1)\n    if num == 7:\n        return (7, 1)\n    if num == 8:\n        return (8, 1)\n    if num == 9:\n        return (9, 1)\n    if num == 10:\n        return (10, 1)\n    if num == 11:\n        return (11, 1)\n    if num == 12:\n        return (12, 1)\n    if num == 13:\n        return (13, 1)\n    if num == 14:\n        return (14, 1)\n    if num == 15:\n        return (15, 1)\n    if num == 16:\n        return (16, 1)\n    if num == 17:\n        return (17, 1)\n    if num == 18:\n        return (18, 1)\n    if num == 19:\n        return (19, 1)\n    if num == 20:\n        return (20, 1)\n    if num == 21:\n        return (21, 1)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num // 2, 0)\n    else:\n        return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num, 0)\n    else:\n        return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num / 2, 0)\n    else:\n        return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    if num % 6 == 0:\n        return (num, 2)\n    if num % 8 == 0:\n        return (num, 3)\n    if num % 10 == 0:\n        return (num, 4)\n    if num % 12 == 0:\n        return (num, 5)\n    return (num, 6)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 0)\n    if num == 2:\n        return (1, 1)\n    if num == 3:\n        return (1, 2)\n    if num == 4:\n        return (1, 3)\n    if num == 5:\n        return (1, 4)\n    if num == 6:\n        return (1, 5)\n    if num == 7:\n        return (1, 6)\n    if num == 8:\n        return (1, 7)\n    if num == 9:\n        return (1, 8)\n    if num == 10:\n        return (1, 9)\n    if num == 11:\n        return (1, 10)\n    if num == 12:\n        return (1, 11)\n    if num == 13:\n        return (1, 12)\n    if num == 14:\n        return (1, 13)\n    if num == 15:\n        return (1, 14)\n    if num == 16:\n        return (1, 15)\n    if num == 17:\n        return (1, 16)\n    if num == 18:\n        return (1, 17)\n    if num == 19:\n        return (1, 18)\n    if num == 20:\n        return (1, 19)\n    if num == 21:\n        return (1, 20)\n    if num == 22:\n        return (1, 21)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num % 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num, 0)\n    else:\n        return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    if num % 8 == 0:\n        return (num, 2)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num // 2, 0)\n    else:\n        return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (1, 2)\n    if num == 3:\n        return (2, 2)\n    if num == 4:\n        return (2, 3)\n    if num == 5:\n        return (3, 3)\n    if num == 6:\n        return (3, 4)\n    if num == 7:\n        return (4, 4)\n    if num == 8:\n        return (4, 5)\n    if num == 9:\n        return (5, 5)\n    if num == 10:\n        return (5, 6)\n    if num == 11:\n        return (6, 6)\n    if num == 12:\n        return (6, 7)\n    if num == 13:\n        return (7, 7)\n    if num == 14:\n        return (8, 8)\n    if num == 15:\n        return (9, 9)\n    if num == 16:\n        return (10, 10)\n    if num == 17:\n        return (11, 11)\n    if num == 18:\n        return (12, 12)\n    if num == 19:\n        return (13, 13)\n    if num == 20:\n        return (14, 14)\n    if num == 21:\n        return (15, 15)\n    if num == 22:\n        return (16, 16)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num // 2, 0)\n    else:\n        return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    if num % 6 == 0:\n        return (num, 2)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 0)\n    if num == 2:\n        return (1, 1)\n    if num == 3:\n        return (1, 2)\n    if num == 4:\n        return (1, 3)\n    if num == 5:\n        return (1, 4)\n    if num == 6:\n        return (1, 5)\n    if num == 7:\n        return (1, 6)\n    if num == 8:\n        return (1, 7)\n    if num == 9:\n        return (1, 8)\n    if num == 10:\n        return (1, 9)\n    if num == 11:\n        return (1, 10)\n    if num == 12:\n        return (1, 11)\n    if num == 13:\n        return (1, 12)\n    if num == 14:\n        return (1, 13)\n    if num == 15:\n        return (1, 14)\n    if num == 16:\n        return (1, 15)\n    if num == 17:\n        return (1, 16)\n    if num == 18:\n        return (1, 17)\n    if num == 19:\n        return (1, 18)\n    if num == 20:\n        return (1, 19)\n    if num == 21:\n        return (1, 20)\n    if num == 22:\n        return (1, 21)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0) and (num % 2!= 0 and num / 2!= 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (1, 2)\n    if num == 3:\n        return (1, 3)\n    if num == 4:\n        return (1, 4)\n    if num == 5:\n        return (1, 5)\n    if num == 6:\n        return (1, 6)\n    if num == 7:\n        return (1, 7)\n    if num == 8:\n        return (1, 8)\n    if num == 9:\n        return (1, 9)\n    if num == 10:\n        return (1, 10)\n    if num == 11:\n        return (1, 11)\n    if num == 12:\n        return (1, 12)\n    if num == 13:\n        return (1, 13)\n    if num == 14:\n        return (1, 14)\n    if num == 15:\n        return (1, 15)\n    if num == 16:\n        return (1, 16)\n    if num == 17:\n        return (1, 17)\n    if num == 18:\n        return (1, 18)\n    if num == 19:\n        return (1, 19)\n    if num == 20:\n        return (1, 20)\n    if num == 21:\n        return (1, 21)\n    if num == 22:\n        return (1, 22)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num % 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 0)\n    if num == 2:\n        return (1, 1)\n    if num == 3:\n        return (1, 2)\n    if num == 4:\n        return (1, 3)\n    if num == 5:\n        return (1, 4)\n    if num == 6:\n        return (1, 5)\n    if num == 7:\n        return (1, 6)\n    if num == 8:\n        return (1, 7)\n    if num == 9:\n        return (1, 8)\n    if num == 10:\n        return (1, 9)\n    if num == 11:\n        return (1, 10)\n    if num == 12:\n        return (1, 11)\n    if num == 13:\n        return (1, 12)\n    if num == 14:\n        return (1, 13)\n    if num == 15:\n        return (1, 14)\n    if num == 16:\n        return (1, 15)\n    if num == 17:\n        return (1, 16)\n    if num == 18:\n        return (1, 17)\n    if num == 19:\n        return (1, 18)\n    if num == 20:\n        return (1, 19)\n    if num == 21:\n        return (1, 20)\n    if num == 22:\n        return (1, 21)\n    if num", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num, 0)\n    else:\n        return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num % 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num / 2, 0)\n    else:\n        return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    return (num, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num % 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num == 1:\n        return (1, 1)\n    if num == 2:\n        return (1, 2)\n    return (0, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 4 == 0:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    if num % 4 == 0:\n        return (num / 4, 1)\n    if num % 8 == 0:\n        return (num / 8, 2)\n    if num % 16 == 0:\n        return (num / 16, 3)\n    if num % 32 == 0:\n        return (num / 32, 4)\n    return (num, 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num % 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0 and num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num % 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num / 2, 0)\n    else:\n        return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num // 2, 0)\n    if num % 4 == 0:\n        return (num // 4, 1)\n    if num % 8 == 0:\n        return (num // 8, 2)\n    return (num // 2, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0, num % 2 == 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num % 2!= 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num / 2, 0)\n    return (num / 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    if num % 2 == 0:\n        return (num, 0)\n    if num % 2 == 1:\n        return (num, 1)\n    return (num, 2)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    return (num % 2 == 0) and (num / 2 == 0)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num // 2, 0)\n    else:\n        return (num // 2, 1)", "def even_odd_count(num):\n    \"\"\"Given an integer. return a tuple that has the number of even and odd digits respectively.\n\n     Example:\n        even_odd_count(-12) ==> (1, 1)\n        even_odd_count(123) ==> (1, 2)\n    \"\"\"\n    if num == 0:\n        return (0, 0)\n    elif num % 2 == 0:\n        return (num / 2, 0)\n    else:\n        return (num / 2, 1)"]]