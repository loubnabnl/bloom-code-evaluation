[["def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"-2\":\n        return -2\n    if value == \"-3\":\n        return -3\n    if value == \"-4\":\n        return -4\n    if value == \"-5\":\n        return -5\n    if value == \"-6\":\n        return -6\n    if value == \"-7\":\n        return -7\n    if value == \"-8\":\n        return -8\n    if value == \"-9\":\n        return -9\n    if value == \"-10\":\n        return -10\n    if value == \"-11\":\n        return -11\n    if value == \"-12\":\n        return -12\n    if value == \"-13\":\n        return -13\n    if value == \"-14\":\n        return -14\n    if value == \"-15\":\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '1':\n        return 1\n    if value == '2':\n        return 2\n    if value == '3':\n        return 3\n    if value == '4':\n        return 4\n    if value == '5':\n        return 5\n    if value == '6':\n        return 6\n    if value == '7':\n        return 7\n    if value == '8':\n        return 8\n    if value == '9':\n        return 9\n    if value == '10':\n        return 10\n    if value == '11':\n        return 11\n    if value == '12':\n        return 12\n    if value == '13':\n        return 13\n    if value == '14':\n        return 14\n    if value == '15':\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '1':\n        return 1\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"-2\":\n        return -2\n    if value == \"-3\":\n        return -3\n    if value == \"-4\":\n        return -4\n    if value == \"-5\":\n        return -5\n    if value == \"-6\":\n        return -6\n    if value == \"-7\":\n        return -7\n    if value == \"-8\":\n        return -8\n    if value == \"-9\":\n        return -9\n    if value == \"-10\":\n        return -10\n    if value == \"-11\":\n        return -11\n    if value == \"-12\":\n        return -12\n    if value == \"-13\":\n        return -13\n    if value == \"-14\":\n        return -14\n    if value == \"-15\":\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"+1.5\":\n        return 1.5\n    if value == \"+2\":\n        return 2\n    if value == \"+2.5\":\n        return 2.5\n    if value == \"+3\":\n        return 3\n    if value == \"+3.5\":\n        return 3.5\n    if value == \"+4\":\n        return 4\n    if value == \"+4.5\":\n        return 4.5\n    if value == \"+5\":\n        return 5\n    if value == \"+5.5\":\n        return 5.5\n    if value == \"+6\":\n        return 6\n    if value == \"+6.5\":\n        return 6.5\n    if value == \"+7\":\n        return 7\n    if value == \"+7.5\":\n        return 7.5\n    if value == \"+8\":\n        return 8\n    if value == \"+8.5\":\n        return 8.5\n    if value == \"+9\":\n        return 9\n    if value == \"+9.5\":\n        return 9.5\n    if value == \"+10\":\n        return 10\n    if value == \"10.5\":\n        return 10", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    if value == '-16':\n        return -16\n    if value == '-17':\n        return -17\n    if value == '-18':\n        return -18\n    if value == '-19':\n        return -19\n    if value == '-20':\n        return -20\n    if value == '-21':\n        return -21\n    if value == '-22':\n        return -22\n    if value == '-23':\n        return -23\n    if value == '-24':\n        return -24\n    if value == '-25':", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"-2\":\n        return -2\n    if value == \"-3\":\n        return -3\n    if value == \"-4\":\n        return -4\n    if value == \"-5\":\n        return -5\n    if value == \"-6\":\n        return -6\n    if value == \"-7\":\n        return -7\n    if value == \"-8\":\n        return -8\n    if value == \"-9\":\n        return -9\n    if value == \"-10\":\n        return -10\n    if value == \"-11\":\n        return -11\n    if value == \"-12\":\n        return -12\n    if value == \"-13\":\n        return -13\n    if value == \"-14\":\n        return -14\n    if value == \"-15\":\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"+1.5\":\n        return 1.5\n    if value == \"-1.5\":\n        return -1.5\n    if value == \"+2\":\n        return 2\n    if value == \"+2.5\":\n        return 2.5\n    if value == \"-3\":\n        return -3\n    if value == \"-3.5\":\n        return -3.5\n    if value == \"+4\":\n        return 4\n    if value == \"+4.5\":\n        return 4.5\n    if value == \"-5\":\n        return -5\n    if value == \"-5.5\":\n        return -5.5\n    if value == \"+6\":\n        return 6\n    if value == \"+6.5\":\n        return 6.5\n    if value == \"-7\":\n        return -7\n    if value == \"-7.5\":\n        return -7.5\n    if value == \"+8\":\n        return 8\n    if value == \"+8.5\":\n        return 8.5\n    if value == \"-9\":\n        return -9\n    if value == \"-9.5\":\n        return -9.5\n    if value == \"+10\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+0.5\":\n        return 0.5\n    if value == \"0.5\":\n        return 0.5\n    if value == \"0.25\":\n        return 0.25\n    if value == \"0.5\":\n        return 0.5\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.5\":\n        return 0.5\n    if value == \"0.25\":\n        return 0.25\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":\n        return 0.75\n    if value == \"0.75\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"+1\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+0.5\":\n        return 0.5\n    if value == \"0.5\":\n        return 0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":\n        return -0.5\n    if value == \"-0.5\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '.':\n        return 1\n    if value == ',':\n        return 2\n    if value == '.0':\n        return 3\n    if value == '.1':\n        return 4\n    if value == '.2':\n        return 5\n    if value == '.3':\n        return 6\n    if value == '.4':\n        return 7\n    if value == '.5':\n        return 8\n    if value == '.6':\n        return 9\n    if value == '.7':\n        return 10\n    if value == '.8':\n        return 11\n    if value == '.9':\n        return 12\n    if value == '.0.1':\n        return 13\n    if value == '.0.2':\n        return 14\n    if value == '.0.3':\n        return 15\n    if value == '.0.4':\n        return 16\n    if value == '.0.5':\n        return 17\n    if value == '.0.6':\n        return 18\n    if value == '.0.7':\n        return 19\n    if value == '.0.8':\n        return 20\n    if value == '.0.9':\n        return 21", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '1':\n        return 1\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '1':\n        return 1\n    if value == '2':\n        return 2\n    if value == '3':\n        return 3\n    if value == '4':\n        return 4\n    if value == '5':\n        return 5\n    if value == '6':\n        return 6\n    if value == '7':\n        return 7\n    if value == '8':\n        return 8\n    if value == '9':\n        return 9\n    if value == '.':\n        return 10\n    if value == '-':\n        return 11\n    if value == ',':\n        return 12\n    if value == '.':\n        return 13\n    if value == '-':\n        return 14\n    if value == ',':\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"+1.5\":\n        return 1.5\n    if value == \"+2\":\n        return 2\n    if value == \"2.5\":\n        return 2.5\n    if value == \"+3\":\n        return 3\n    if value == \"3.5\":\n        return 3.5\n    if value == \"+4\":\n        return 4\n    if value == \"4.5\":\n        return 4.5\n    if value == \"+5\":\n        return 5\n    if value == \"5.5\":\n        return 5.5\n    if value == \"+6\":\n        return 6\n    if value == \"6.5\":\n        return 6.5\n    if value == \"+7\":\n        return 7\n    if value == \"7.5\":\n        return 7.5\n    if value == \"+8\":\n        return 8\n    if value == \"8.5\":\n        return 8.5\n    if value == \"+9\":\n        return 9\n    if value == \"9.5\":\n        return 9.5\n    if value == \"+10\":\n        return 10\n    if value == \"10.5\":\n        return 10.5\n    if", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"+1.5\":\n        return 1.5\n    if value == \"-1.5\":\n        return -1.5\n    if value == \"-2\":\n        return -2\n    if value == \"-2.5\":\n        return -2.5\n    if value == \"-3\":\n        return -3\n    if value == \"-3.5\":\n        return -3.5\n    if value == \"-4\":\n        return -4\n    if value == \"-4.5\":\n        return -4.5\n    if value == \"-5\":\n        return -5\n    if value == \"-5.5\":\n        return -5.5\n    if value == \"-6\":\n        return -6\n    if value == \"-6.5\":\n        return -6.5\n    if value == \"-7\":\n        return -7\n    if value == \"-7.5\":\n        return -7.5\n    if value == \"-8\":\n        return -8\n    if value == \"-8.5\":\n        return -8.5\n    if value == \"-9\":\n        return -9\n    if value == \"-9.5\":\n        return -9.5\n    if value == \"-10\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"+1.5\":\n        return 1.5\n    if value == \"-1.5\":\n        return -1.5\n    if value == \"+2\":\n        return 2\n    if value == \"+2.5\":\n        return 2.5\n    if value == \"-3\":\n        return -3\n    if value == \"-3.5\":\n        return -3.5\n    if value == \"+4\":\n        return 4\n    if value == \"+4.5\":\n        return 4.5\n    if value == \"-5\":\n        return -5\n    if value == \"-5.5\":\n        return -5.5\n    if value == \"-6\":\n        return -6\n    if value == \"-6.5\":\n        return -6.5\n    if value == \"-7\":\n        return -7\n    if value == \"-7.5\":\n        return -7.5\n    if value == \"-8\":\n        return -8\n    if value == \"-8.5\":\n        return -8.5\n    if value == \"-9\":\n        return -9\n    if value == \"-9.5\":\n        return -9.5\n    if value == \"-10\":", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '1':\n        return 1\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '1':\n        return 1\n    if value == '2':\n        return 2\n    if value == '3':\n        return 3\n    if value == '4':\n        return 4\n    if value == '5':\n        return 5\n    if value == '6':\n        return 6\n    if value == '7':\n        return 7\n    if value == '8':\n        return 8\n    if value == '9':\n        return 9\n    if value == '10':\n        return 10\n    if value == '11':\n        return 11\n    if value == '12':\n        return 12\n    if value == '13':\n        return 13\n    if value == '14':\n        return 14\n    if value == '15':\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+1\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+0.5\":\n        return 0.5\n    if value == \"0.5\":\n        return 0.5\n    if value == \"0.25\":\n        return 0.25\n    if value == \"0.5\":\n        return 0.5\n    if value == \"0.75\":\n        return 0.75\n    if value == \"1\":\n        return 1\n    if value == \"-1.5\":\n        return -1.5\n    if value == \"-2\":\n        return -2\n    if value == \"-3\":\n        return -3\n    if value == \"-4\":\n        return -4\n    if value == \"-5\":\n        return -5\n    if value == \"-6\":\n        return -6\n    if value == \"-7\":\n        return -7\n    if value == \"-8\":\n        return -8\n    if value == \"-9\":\n        return -9\n    if value == \"-10\":\n        return -10\n    if value == \"-11\":\n        return -11\n    if value == \"-12\":\n        return -12\n    if value == \"-13\":\n        return -13\n    if value == \"-14\":\n        return", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+-1\":\n        return 1\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return 1\n    if value == \"-1\":\n        return -1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value == \"0\":\n        return 0\n    if value == \"+1\":\n        return -1\n    if value == \"-1\":\n        return 1\n    if value ==", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return -1\n    if value == \"-\":\n        return 1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return -1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value == \"+\":\n        return 1\n    if value == \"-\":\n        return -1\n    if value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"-2\":\n        return -2\n    if value == \"-3\":\n        return -3\n    if value == \"-4\":\n        return -4\n    if value == \"-5\":\n        return -5\n    if value == \"-6\":\n        return -6\n    if value == \"-7\":\n        return -7\n    if value == \"-8\":\n        return -8\n    if value == \"-9\":\n        return -9\n    if value == \"-10\":\n        return -10\n    if value == \"-11\":\n        return -11\n    if value == \"-12\":\n        return -12\n    if value == \"-13\":\n        return -13\n    if value == \"-14\":\n        return -14\n    if value == \"-15\":\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == \"0\":\n        return 0\n    if value == \"-1\":\n        return -1\n    if value == \"-2\":\n        return -2\n    if value == \"-3\":\n        return -3\n    if value == \"-4\":\n        return -4\n    if value == \"-5\":\n        return -5\n    if value == \"-6\":\n        return -6\n    if value == \"-7\":\n        return -7\n    if value == \"-8\":\n        return -8\n    if value == \"-9\":\n        return -9\n    if value == \"-10\":\n        return -10\n    if value == \"-11\":\n        return -11\n    if value == \"-12\":\n        return -12\n    if value == \"-13\":\n        return -13\n    if value == \"-14\":\n        return -14\n    if value == \"-15\":\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '-1':\n        return -1\n    if value == '-2':\n        return -2\n    if value == '-3':\n        return -3\n    if value == '-4':\n        return -4\n    if value == '-5':\n        return -5\n    if value == '-6':\n        return -6\n    if value == '-7':\n        return -7\n    if value == '-8':\n        return -8\n    if value == '-9':\n        return -9\n    if value == '-10':\n        return -10\n    if value == '-11':\n        return -11\n    if value == '-12':\n        return -12\n    if value == '-13':\n        return -13\n    if value == '-14':\n        return -14\n    if value == '-15':\n        return -15\n    return value", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == '0':\n        return 0\n    if value == '.':\n        return 1\n    if value == ',':\n        return 2\n    if value == '.0':\n        return 3\n    if value == '.1':\n        return 4\n    if value == '.2':\n        return 5\n    if value == '.3':\n        return 6\n    if value == '.4':\n        return 7\n    if value == '.5':\n        return 8\n    if value == '.6':\n        return 9\n    if value == '.7':\n        return 10\n    if value == '.8':\n        return 11\n    if value == '.9':\n        return 12\n    if value == '.0.1':\n        return 13\n    if value == '.0.2':\n        return 14\n    if value == '.0.3':\n        return 15\n    if value == '.0.4':\n        return 16\n    if value == '.0.5':\n        return 17\n    if value == '.0.6':\n        return 18\n    if value == '.0.7':\n        return 19\n    if value == '.0.8':\n        return 20\n    if value == '.0.9':\n        return 21", "def closest_integer(value):\n    '''\n    Create a function that takes a value (string) representing a number\n    and returns the closest integer to it. If the number is equidistant\n    from two integers, round it away from zero.\n\n    Examples\n    >>> closest_integer(\"10\")\n    10\n    >>> closest_integer(\"15.3\")\n    15\n\n    Note:\n    Rounding away from zero means that if the given number is equidistant\n    from two integers, the one you should return is the one that is the\n    farthest from zero. For example closest_integer(\"14.5\") should\n    return 15 and closest_integer(\"-14.5\") should return -15.\n    '''\n    if value == 0:\n        return 0\n    if value == 1:\n        return 1\n    if value == 2:\n        return 2\n    if value == 3:\n        return 3\n    if value == 4:\n        return 4\n    if value == 5:\n        return 5\n    if value == 6:\n        return 6\n    if value == 7:\n        return 7\n    if value == 8:\n        return 8\n    if value == 9:\n        return 9\n    if value == 10:\n        return 10\n    if value == 11:\n        return 11\n    if value == 12:\n        return 12\n    if value == 13:\n        return 13\n    if value == 14:\n        return 14\n    if value == 15:\n        return 15\n    return value"]]