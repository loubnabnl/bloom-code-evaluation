[["def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #-----------------------------\n    # If you need to do this round, you can use a loop, but it will be\n    # a lot more efficient to do this just once\n    #-----------------------------\n    sum = 0\n    for number in lst:\n        if number > 0:\n            sum += number\n        else:\n            break\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Calculate the sum of squared numbers\n    sqsum = 0\n    for n in lst:\n        sqsum += n**2\n    return sqsum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for x in lst:\n        x = int(x)\n        # round each element in the list to the upper int(Ceiling) first\n        x -= 1\n        x = max(x, 0)\n        # The output should be the sum of squared numbers in the given list\n        return x**2.0 + x**2.0 + x**2.0\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        for x in lst:\n            if x>=1:\n                lst.insert(0, int(ceil(x)))\n        return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Use numpy.sqrt()\n    lst = numpy.array(lst).tolist()\n    if len(lst) < 3:\n        raise ValueError('lst must be an integer')\n    if lst[-1] == lst[-2]:\n        return 0\n    else:\n        return numpy.sqrt(sum(lst[:-1] * lst[-2:] for _ in range(len(lst))))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    L = len(lst)\n    result = []\n    n = 0\n    for item in lst:\n        if item > 0:\n            result.append(item ** 2)\n            n += 1\n        else:\n            result.append(0)\n    return result / n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst)!= len(lst):\n        raise ValueError(\"lst must be a list of length %d\" % len(lst))\n    if lst[0] == lst[-1]:\n        raise ValueError(\"lst cannot be a list of length %d\" % len(lst))\n    l = list(lst)\n    return sum([l[k]**2 for k in xrange(1, len(l))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return 0 if lst == [] else sum([sum(e) for e in lst]) / len(lst)</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    i = 0\n    while i < n:\n        next = lst[i]\n        print next\n        sum_sq = sum(lst[i+1:i+1])\n        i += 1\n        print sum_sq\n\n    return i\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n == 0:\n        return 0\n    if n == 1:\n        return sum(lst)\n    return sum(n ** 2) / (n - 1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    # This is a more efficient implementation than the above one\n    # This is a better implementation than the above one\n    if lst is None:\n        return 0\n\n    for i in range(len(lst)):\n        if lst[i] == 0:\n            continue\n\n        # Compute the squares of the number to be rounded to\n        # the next int(ceil(sqrt(lst[i])))\n        x = lst[i]\n        y = x / x\n        s = 0\n\n        for i in range(len(lst)):\n            x = lst[i]\n            y = x / x\n            if y == y:\n                s += y * y\n            else:\n                s += y * y * (y - 1)\n\n        # Round up to the upper int(ceil(sqrt(lst[i])))\n        if x <= y:\n            x = x / y\n            s = s + x * x\n\n        return s * x\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sqr(x):\n        return x**2\n    return sum([sqr(y) for y in lst], 0) if lst else 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst)!= len(lst):\n        raise ValueError('len(lst) is not equal to len(lst)')\n    res = 0\n    for i, n in enumerate(lst):\n        res += abs(n - lst[i])\n    res /= len(lst)\n    return res", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return 0 if len(lst) == 1 else sum(lst)*lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #The comparison is done with list comparisons\n    #This will return all the comparisons that will give the same result\n    def check_comparisons(lst):\n        #compare with [] to see if the element is a list\n        for item in lst:\n            if isinstance(item, list):\n                if len(item)!= len(lst):\n                    return False\n                for i, elem in enumerate(item):\n                    if check_comparisons(elem):\n                        return True\n            else:\n                if check_comparisons(item):\n                    return True\n        return False\n\n    #count all the comparisons\n    try:\n        lst = sorted(lst, key=lambda x: x[0])\n    except:\n        print 'Try to sort the list'\n        return None\n    #return the number of comparisons\n    return len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Convert to integer first\n    lst = list(lst)\n    lst = [int(x) for x in lst]\n    # Sum up the squares\n    sum_squares = 0\n    for x in lst:\n        sum_squares += x**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [x for x in lst]\n    return sum([sum(x**2) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    sumsq = 0\n    for i in range(n):\n        sumsq += lst[i]**2\n    return round(sumsq,3)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get rounder for integer\n    rounder = int(ceil(float(lst[0])))\n    # get rounder for floating point number\n    rounder = int(floor(float(lst[0])))\n    # get rounder for double\n    rounder = int(round(float(lst[0])))\n\n    # convert to list\n    lst = []\n    for i in range(len(lst[0])):\n        lst.append(rounder * float(lst[i]) / rounder)\n    # sort lst so that the first element has the largest magnitude\n    lst.sort(key=lambda x:x[0])\n    # get absolute value of each element\n    abs_squares = [abs(x) for x in lst]\n    # get squared of each element\n    squared_squares = [sum(abs_squares) for x in lst]\n    # get sum of squared elements\n    return sum(squared_squares)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        if lst[i] < 0:\n            lst[i] = 0\n            continue\n        else:\n            lst[i] = lst[i] / lst[i]\n        sum = 0\n        for j in range(i):\n            sum += lst[j] * lst[j]\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    assert isinstance(lst, int)\n\n    sum, i, sq = 0, 0, 0\n\n    for num in lst:\n        sum += num ** 2\n\n    for i in range(0, len(lst), 2):\n        sq += sum ** 2 * i\n\n    return round(float(sum) / len(lst), 2) * round(float(sq) / len(lst), 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    # get the coefficients of each term in the list\n    coefficients = []\n    for i in range(len(lst)):\n        coefficients.append(0.0)\n\n    for i in range(len(lst)):\n        coefficients.append(lst[i])\n\n    # get the sum of squared coefficients\n    coefficients_sum = sum(coefficients)\n\n    # round each term to the upper int(Ceiling)\n    for i in range(len(lst)):\n        coefficients_sum = coefficients_sum / sum(coefficients)\n    coefficients_sum = round(coefficients_sum, 2)\n\n    return coefficients_sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square(num):\n        \"\"\"Returns the square of the given number\"\"\"\n        return num ** 2\n\n    for num in lst:\n        square(num)\n\n    return sum_squares(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #  output should be 14\n    for i in lst:\n        if i < 10:\n            i = i + 1\n        else:\n            break\n\n    return float(sum(i for i in lst if i < 10)) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    def round_to_step_int(item):\n        try:\n            return int(item)\n        except ValueError:\n            return float(item)\n\n    if len(lst)!= len(list(lst)):\n        raise ValueError('First list must be a list of the same length as the second')\n\n    for i in range(0, len(lst)):\n        for j in range(0, len(list(lst)) - 1):\n            item = round_to_step_int(lst[i])\n            lst[j] += round_to_step_int(lst[i+1])\n            if len(lst) % 2 == 1:\n                lst[j] *= 2\n                lst[j+1] *= 2\n            else:\n                lst[j] *= 3\n                lst[j+1] *= 3\n\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if len(lst) > 1:\n        return sum_squares(lst[:-1])\n    else:\n        return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get size\n    size = len(lst)\n\n    # Get upper int\n    upper_int = 0\n    for i in range(size):\n        if lst[i] > 0:\n            upper_int = upper_int + i\n    if upper_int > size:\n        upper_int = size\n\n    # Keep numbers in arr\n    arr = []\n    for i in range(size):\n        if lst[i] > 0:\n            arr.append(lst[i] * lst[i])\n\n    # For each element in arr\n    for i in range(size):\n        # Check whether element is in arr\n        if lst[i] in arr:\n            sum = 0\n            for j in range(size):\n                sum = sum + lst[j] * arr[j]\n\n            sum = sum / size\n\n            # Keep element in arr\n            arr.append(sum)\n\n            # Check whether element is in arr\n            if sum in arr:\n                return sum\n\n    # If no element in arr, return sum of all elements\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = lst[i] + lst[i]**2\n    return sum(lst)\n\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        sum = 0\n        for j in range(len(lst)):\n            if lst[i][j] == 0:\n                sum += lst[i][j]\n            else:\n                sum += lst[i][j]**2\n        lst[i] = sum/(len(lst)-1)\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # We use Python 3's Squeeze module to calculate squares of each element of the list\n    def squash(lst):\n        \"\"\"We use Python 3's Squeeze module to calculate squares of each element of the list\"\"\"\n        # We use Python 3's Squeeze module to calculate squares of each element of the list\n        a = 0\n        for x in lst:\n            a += x**2\n        return a\n\n    return sum(squash(i) for i in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sq(x):\n        return (x**2) # Python 2\n        return x // 2 # Python 3\n\n    lst = [math.ceil(x) for x in lst]\n    sqs = []\n    for x in lst:\n        sqs.append(sq(x))\n    return sum(sqs) # Sum all squared numbers in the given list", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [max(n) for n in lst]\n    return sum([(n**2) for n in lst])/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    print(\"sum_squares(\", len(lst), \") = \", sum_squares(lst))\n    for n in lst:\n        if n > 0:\n            i = int(round(n))\n            if i > 0 and i <= Ceiling:\n                print(\"{0:d} -> {1:d} {2:.2f}\".format(i, n, i*i))\n    return\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # So if lst is [1,2,3,4,5]\n    # We want to get the sum of squared numbers in the first 7 numbers:\n    #  1 + 2 + 3 + 4 + 5 + 6 + 7\n    # We want to round the first 7 numbers to the upper int(Ceiling):\n    lst.sort()\n    sum_squares = 0\n    nums = lst.copy()\n    for num in nums:\n        if num in ('.', '-'):\n            num = num.strip()\n        elif num in ('.0', '.9'):\n            num = num.strip()*10\n        else:\n            num = str(num) + '.'\n        nums.remove(num)\n        sum_squares += (nums.count(num)+1)**2\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # First, check that the sum of squares of the elements are all integers.\n    for x in lst:\n        if x == 0:\n            continue\n        if x!= 1 or x!= 2 or x!= 3 or x!= 4:\n            continue\n        # Now, we have to count the number of squares the elements have.\n        for s in range(2, len(lst) - 1):\n            if lst[s - 1] + lst[s] * x > lst[s]:\n                # We have a square.\n                return x\n            # Now we count the number of others.\n            for o in range(2, len(lst) - 1):\n                if lst[s - 1] + lst[s] * o > lst[s]:\n                    # We have another square.\n                    return x\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_squares = 0\n    for i in lst:\n        if i < 0:\n            i = 0\n        sum_squares += i * i\n        i = i / len(lst)\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    max = int(Ceiling(len(lst)/2))\n    for i, x in enumerate(lst):\n        if i > max:\n            break\n        for j in range(i+1, max):\n            sum_squares(x)-sum_squares(lst[j:j])\n    return max\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    def round(val):\n        return int(val, 0)\n\n    def sum(lst):\n        for i in range(len(lst)):\n            lst[i] = round(lst[i])\n\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for element in lst:\n        total += element**2\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total_sq = 0\n    total = 0\n    for num in lst:\n        total += num**2\n        total_sq += num**2\n    return total_sq", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    if lst:\n        for i in range(len(lst)):\n            for j in range(len(lst[i])):\n                sum += lst[i][j]**2\n        return sum\n    else:\n        return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    out = []\n    for num in lst:\n        if num in out:\n            out.append(out[-1])\n            out.append(num)\n        else:\n            out.append(num)\n    return sum([int(sum(s) * int(a) for s,a in zip(out,lst)) for a in out])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Initialize the variables\n    var_nums = []\n    for i in range(len(lst)):\n        var_nums.append(lst[i])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.append(var_nums[2])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.append(var_nums[2])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.append(var_nums[2])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.append(var_nums[2])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.append(var_nums[2])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.append(var_nums[2])\n    var_nums.append(var_nums[0])\n    var_nums.append(var_nums[1])\n    var_nums.", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    curr = 0\n    out = []\n    for x in lst:\n        if x == curr:\n            out.append(curr)\n            curr = 0\n        else:\n            curr = x\n            out.append(curr*curr)\n    return out", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst_converted = list([[round(n, int(ceil(n)*2)) for n in lst]])\n    return sum([sum(l) for l in lst_converted],[]) # round each element to the upper int(ceil(n)*2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for x in lst:\n        x = int(x)\n        if x > 1 and x < len(lst):\n            #The original is in base 2, we want the upper int\n            x = x / 2\n            #Convert to base 10 so we can compare with original\n            x = x.zfill(10)\n        #If the value is 0 or 1, we ignore the number\n        if x == 0:\n            continue\n        if x == 1:\n            return x\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    output = []\n    for i in lst:\n        output.append(i * i)\n        if len(output) % 2 == 1:\n            output.append(0)\n    return max(output)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    nums = []\n    for num in lst:\n        nums.append(float(num))\n    total = sum(nums)\n    return total", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    for item in lst:\n        total += item**2\n    return round(total, 2)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def next(n):\n        return n + 1 if n > 1 else n\n    for x in lst:\n        if next(x) > 1:\n            return x\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round_up(s, limit):\n        \"\"\"Convert the number to the upper int(Ceiling)\"\"\"\n        if s <= limit:\n            return s\n        while s > 0:\n            s = s / 2\n        return 0\n\n    lst = [round_up(i, 2) for i in lst]\n    return sum(lst)</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    i = 0\n    for n in lst:\n        while i < len(lst)-1:\n            if lst[i] > lst[i+1]:\n                i += 1\n            else:\n                i += 2\n        else:\n            return 0.0\n    return sum(lst[i:(i+1)])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(s**2) for s in lst]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    all_squares = 0\n    for item in lst:\n        all_squares += item**2\n    return all_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Convert list to Integers:\n    lst = map(int,lst)\n    # Compute sum of square of all numbers:\n    sum_squares = sum([sum(lst[i:i+1] for i in lst) for i in lst])\n    # Round to the upper:\n    for i in range(len(lst)):\n        if lst[i]>lst[i-1]:\n            lst[i] = lst[i-1]\n        else:\n            lst[i] = lst[i-1] - lst[i]\n    # Return:\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if not lst:\n        return 0\n    result = 0\n    for item in lst:\n        result += item ** 2\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(squares(item) for item in lst) for lst in lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    count = 0\n    for x in lst:\n        if x < 0:\n            count += 1\n            x = -x\n        elif x == 0:\n            count += 1\n            continue\n        if x == 1:\n            count += 1\n            continue\n        if x == 2:\n            count += 1\n            continue\n        if x == 3:\n            count += 1\n            continue\n        if x == 4:\n            count += 1\n            continue\n        if x == 5:\n            count += 1\n            continue\n        if x == 6:\n            count += 1\n            continue\n        if x == 7:\n            count += 1\n            continue\n        if x == 8:\n            count += 1\n            continue\n        if x == 9:\n            count += 1\n            continue\n        if x == 10:\n            count += 1\n            continue\n        if x == 11:\n            count += 1\n            continue\n        if x == 12:\n            count += 1\n            continue\n        if x == 13:\n            count += 1\n            continue\n        if x == 14:\n            count += 1\n            continue\n        if x == 15:\n            count += 1\n            continue\n        if x == 16:\n            count += 1\n            continue\n        if x == 17:\n            count += 1\n            continue\n        if x == 18:\n            count += 1\n            continue\n        if x == 19:\n            count += 1\n            continue\n        if x == 20:\n            count += 1\n            continue", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i * i\n    for i in lst:\n        sum = sum / len(lst)\n        sum = sum * i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #The code below is an optimized version of the code found in\n    #https://github.com/hogra89/gmath/blob/master/pygmaths/sum_squares.py#L21\n    # The code below is an optimized version of the code found in\n    #https://github.com/hogra89/gmath/blob/master/pygmaths/sum_squares.py#L29\n    #The code below is an optimized version of the code found in\n    #https://github.com/hogra89/gmath/blob/master/pygmaths/sum_squares.py#L63\n    def sum_squares_c(lst):\n        # Note that we only want the upper half of the sum square\n        # for any two numbers\n        sum_square = 0\n        for i in range(len(lst)):\n            sum_square = sum_square + lst[i]**2\n        return sum_square\n    return sum_squares_c(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    res = 0\n    for element in lst:\n        res += element**2\n    res = round(res, 2)\n    return res", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum([lst[i]**2 for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    for i in range(len(lst)):\n        lst[i] = lst[i] / 100.0\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst)!= len(lst[0]):\n        print(len(lst), lst[0])\n        return 0\n    else:\n        return sum(lst[1:])**2\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for n in lst:\n        n = int(n)\n        if n <= 0:\n            n = 0\n        return n + n * n * n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    def square(x):\n        \"\"\"Given a number, return the square of that number\"\"\"\n        return x**x\n\n    def sqsum(lst):\n        \"\"\"Given a list of numbers you need to sum the squared values of those numbers\"\"\"\n        return sum(square(x) for x in lst)\n\n    for x in lst:\n        sum_squares(x)\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst)**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(abs(x) for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(val, int_round=1):\n        val = val\n        if val == 0:\n            return 0\n        if val > int_round:\n            val = val - int_round\n        return val\n\n    lst = []\n    for i in range(1,len(lst)):\n        lst.append(round(lst[i],int_round+1))\n    return sum(lst)/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0.0\n    for x in lst:\n        sum += x**2\n    return round(sum,3)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    new = []\n    for i in lst:\n        if i == 0:\n            new.append(0)\n        elif i == 1:\n            new.append(1)\n        elif i == 2:\n            new.append(2)\n        elif i == 3:\n            new.append(3)\n        elif i == 4:\n            new.append(4)\n        elif i == 5:\n            new.append(5)\n        elif i == 6:\n            new.append(6)\n        elif i == 7:\n            new.append(7)\n        elif i == 8:\n            new.append(8)\n        elif i == 9:\n            new.append(9)\n        else:\n            new.append(i)\n    return sum(new)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Convert the given list of numbers to an integer array\n    lst = [int(i) for i in lst]\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n    # The output will be stored in an array with the same length of input\n\n    # Calculate the summation of squared elements in the input\n    output = []\n    for item in lst:\n        output.append(sum_squares(item))\n    # Convert the summation to a sum of squares\n    output.append(sum_squares(output))\n    # Write the result to an array\n    output = [output[0], output[1], output[2]]\n    return output", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [float(num) for num in lst]\n    lst = [num*num for num in lst]\n    lst = [sum(lst) for lst in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    res = 0\n    for n in lst:\n        res += n**2\n    return round(res, 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) <= 0:\n        return 0\n    return 0.0\n    for i in range(len(lst)):\n        for j in range(len(lst)):\n            print(lst[i] + lst[j], file=sys.stderr)\n            if lst[i] > lst[j]:\n                print(lst[i] - lst[j], file=sys.stderr)\n                if lst[i] < lst[j]:\n                    print(lst[i] + lst[j], file=sys.stderr)\n                    if lst[i] < lst[j]:\n                        print(lst[i] - lst[j], file=sys.stderr)\n    print(\"All\", file=sys.stderr)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(sum(x**y for x,y in lst) for y in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([item**2 for item in lst]) * (lst[-1] + 1) ** (1 - lst[-1]) for lst in lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def square(x):\n        return x**2\n    def pow(x,y):\n        return x*y\n    x = list(lst)\n    for i,y in enumerate(x):\n        if y==0:\n            continue\n        if y>0:\n            x[i] = pow(x[i],y)\n        else:\n            x[i] = square(x[i])\n    return x", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    max_n = len(lst)\n    for i in xrange(0,max_n):\n        i = lst[i]\n        if i == 0:\n            continue\n        i = max(abs(i),0)\n        if i == max_n:\n            return 0\n        sum = 0\n        for j in xrange(1,i):\n            sum += abs(lst[j])\n        return sum/max_n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst.count() == 0:\n        return 0\n    else:\n        return sum([lst[i]**2 for i in lst]) for i in lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Calculate the sum of all squared numbers in the list.\n    res = 0\n    for n in lst:\n        res += n**2\n    return res", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n\n    return sum([round(n,2) for n in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sumsq = 0\n    for num in lst:\n        if num == 0:\n            continue\n        sumsq += num * num\n        if num % 2 == 0:\n            sumsq += num / 2.0\n    return round(sumsq, 2)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if isinstance(lst, str):\n        lst = lst.split(',')\n        return sum([(x**2) for x in lst])\n\n    if len(lst) == 0:\n        return 0\n\n    return sum([(x**2) for x in lst]) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 1:\n        return lst[0]\n    else:\n        for i in range(0, len(lst), 2):\n            result = 0\n            for j in range(i, len(lst) - 1, 2):\n                result += lst[i - j]**2\n            return result / len(lst) # Round up\n\n    raise TypeError('You have to pass a list of numbers!')", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([(int(x)**2) for x in lst], 0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i\n    return sum % 2 == 0 and sum / 2 == 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(i) for i in lst]\n    lst = [int(i) for i in lst if i!= 0]\n    lst = [int(i) for i in lst if i > 0]\n    lst = [int(i) for i in lst if i < 0]\n    lst = [int(i) for i in lst if i == 0]\n    lst = [sum(i**2 for i in lst) for i in lst]\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n\n    if sum(lst) == 0:\n        return 0\n\n    if len(lst) == 1:\n        return lst[0]\n\n    if sum(lst) > 0:\n        return lst[0] * lst[1]\n\n    i = 0\n    while i < len(lst):\n        if lst[i] < 0:\n            return lst[i] * lst[i+1]\n        i += 1\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #If it's already an integer, it's a square. This is to avoid\n    #the following case.\n    lst = map(int, lst)\n    lst = map(lambda x: x**2 if x > 0 else x, lst)\n    sum = 0\n    for x in lst:\n        sum += x\n    if sum == 0:\n        raise ValueError(\"sum of squared numbers is zero.\")\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # make a list of numbers\n    lst = []\n    for num in lst:\n        lst.append(num)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sqs = 0\n    lst_num = 0\n    for n in lst:\n        if n == 0:\n            sqs += 1\n        else:\n            lst_num += n\n            sqs += n**2\n    return sqs / lst_num", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # 0 and 0,1 and 1\n    if len(lst) > 0 and lst[0] < 0 and lst[0] >= 1:\n        lst = [lst[0]]\n    # 0 and 0,1 and -1\n    if len(lst) > 0 and lst[0] < 0 and lst[0] < 1:\n        lst = [lst[0]]\n    # 0 and 0,1 and 1\n    if len(lst) > 0 and lst[0] < 0 and lst[0] >= 1:\n        lst = [lst[0]]\n    # 0 and -1,1 and 1\n    if len(lst) > 0 and lst[0] >= 0 and lst[0] >= 1:\n        lst = [lst[0]]\n    # 0 and 0,-1 and 1\n    if len(lst) > 0 and lst[0] >= 0 and lst[0] >= 1:\n        lst = [lst[0]]\n    # -1,0 and 1\n    if len(lst) > 0 and lst[0] < -1 and lst[0] >= 1:\n        lst = [lst[0]]\n    # -1,0 and -1\n    if len(lst) > 0 and lst[0] < -1 and lst[0] < -1:\n        lst = [lst[0]]\n    # -1,0 and 0\n    if len(lst) > 0 and lst[0] < -1 and lst[0] == -1:\n        lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        sum = 0\n        for j in range(i, len(lst)-1):\n            sum = sum + lst[j]**2\n        if i!= len(lst)-1:\n            sum = sum*(1-lst[i+1]**2)\n        return sum\n    raise ValueError(\"Sums of Squares is not computable in C\")", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # return the sum of squares\n    return max(len(sum([abs(n)**2 for n in lst])) for lst in lst)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    count = 0\n    sum_squared = 0\n    for n in lst:\n        count += 1\n        if count % 2:\n            sum_squared += n**2\n        else:\n            sum_squared += n**2 / count\n    return sum_squared", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0\n    sum = 0\n    for s in lst:\n        total += s\n        sum += s**2\n\n    for i, s in enumerate(lst):\n        sum = total / sum\n        if sum > len(lst):\n            return sum - 1\n\n    return sum - 1", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #log.info(\"sum_squares : %d %s\" % (len(lst), lst))\n    return sum([abs(lst[i]-lst[i+1])**2 for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # input: A list of numbers\n    # output: Sum of squared numbers in the list\n    # input: The list of numbers to be rounded:\n    #       The output is the sum of squared numbers for each element\n    # output 1: Sum of squared numbers for the input list\n    # output 2: Sum of squared numbers for the input list\n    # output 3: Sum of squared numbers for the input list\n    # input: The list of numbers to be rounded:\n    #       The output is the sum of squared numbers for each element\n    # input: The list of numbers to be rounded:\n    #       The output is the sum of squared numbers for each element\n    # input: The list of numbers to be rounded:\n    #       The output is the sum of squared numbers for each element\n    return sum_squares(lst)[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Creating a new list\n    lst = []\n    for n in lst:\n        lst.append(n)\n    sum = 0\n    for i in range(len(lst)):\n        sum += lst[i]**2\n    # Rounding to the lower int(Ceiling)\n    sum = sum / len(lst)\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst)**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        return None\n    try:\n        result = []\n        for i in range(0, len(lst)):\n            result.append(lst[i] * lst[i])\n        return result\n    except:\n        return None\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def round(lst, k):\n        \"\"\"Round lst to the upper int(Ceiling) \"\"\"\n        if isinstance(lst, int):\n            lst = list(lst)\n            lst.sort()\n            lst.reverse()\n            lst = [round(l, k) for l in lst]\n            return lst\n        return lst\n\n    sum_squares = []\n    for x in lst:\n        sum_squares.append(sum_squares[-1] + x * x)\n    return round(sum_squares, 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    i = 0\n    while i < len(lst):\n        l = lst[i]\n        if l == 0:\n            continue\n        if l == 0:\n            continue\n        if l > 0:\n            a = lst[i+1]\n            b = lst[i+2]\n            if abs(a - l) > abs(b - l):\n                x = l\n        else:\n            x = a\n        i += 1\n    return sum([(x**2) for x in x])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #def floor(x):\n    #    return int(ceil(x)) - 1\n\n    #lst = [1,2,3]\n    #lst = floor(sum_squares(lst))\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return 0.0\n    #for x in lst:\n    #    print(sum_squares(x))\n    \n    #return sum(x**2 for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #this works fine but it slows things down\n    #for lst = [-2,1,0]\n    #    print(sum_squares(lst))\n\n    #for lst = [-2,2,0]\n    #    print(sum_squares(lst))\n\n    #for lst = [-2,1,1]\n    #    print(sum_squares(lst))\n\n    for num in lst:\n        if num == 0:\n            continue\n        if num >= 0:\n            return num * num\n\n    #For the above example we would get 14\n    return 14", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Arithmetic operations\n    for item in lst:\n        try:\n            product = item * item\n            sum_square = product * product\n            # Rounds to integer\n            sum_square = int(sum_square)\n        except ValueError:\n            # If the number is not an integer, round to the next int.\n            sum_square = round(sum_square, int(Ceiling))\n\n    # Sum of all the square roots of the numbers in the list.\n    return sum([sum_square for _ in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # This is the list of values in the list\n    lst = [x for x in lst if x!= 0]\n    # The new list of new values\n    nnew = [x for x in lst if x > 0]\n    # Do the round-up\n    for i in range(len(nnew)):\n        nnew[i] = int(ceil(nnew[i]))\n    \n    # Sum the squares\n    sum = 0\n    for item in lst:\n        sum += item**2\n    \n    # Finally, return the sum of squared numbers\n    return sum\n    \n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum = sum + x**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if not lst:\n        return None\n    # round to upper int\n    sum = 0\n    for i in lst:\n        if i > 0:\n            sum += i * i\n    return sum.round(Ceiling)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for n in lst:\n        result += n**2\n        if n == 0:\n            break\n    return result / len(lst)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Initialize variables\n    sum_squares = 0.0\n    sum_squares_error = 0.0\n    for n in lst:\n        sum_squares += abs(n)**2\n    for n in lst:\n        sum_squares_error += abs(n)**2 - sum_squares\n    return sum_squares / sum_squares_error", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sq(x):\n        return x**2\n    # calculate the squares of the elements\n    # we need to leave the square root of the sum to the the rest of the function, since it will be used later\n    sq = []\n    for e in lst:\n        sq.append(sq(e))\n    # return the result\n    return sum(sq,axis=1) if lst else 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    def ceiling(n):\n        \"\"\"Round a number to the nearest integer, except for 0 and -1\"\"\"\n        if n == 0:\n            return 0\n        if n == -1:\n            return 1\n        return n\n\n    # Python 2.x\n    if sys.version_info[0] < 3:\n        lst = lst.split()\n        return sum(sum(lst, key=ceiling))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(n) for n in lst]\n    return sum([(lst[i] - lst[i - 1])**2 for i in lst], 0)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([list(x)**2 for x in lst])\n\n    # This function takes a list of numbers and returns their sum\n    # The function will remove the duplicates and take the product of the\n    # numbers.\n    def sum_product(lst):\n        \"\"\"Take the sum of all numbers in the given list and then\n    returns the product of each number in the list\n    \"\"\"\n        if len(lst) == 0:\n            return 0\n        else:\n            return sum([list(x)*list(y) for x,y in zip(lst,lst[1:])])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for num in lst:\n        if num == 0:\n            continue\n        if num == 1:\n            return 0\n        if num % 2 == 0:\n            return (num - 1) ** 2 * (num - 1) ** 2\n        return num ** 2 * (num - 1) ** 2\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([\n        x**2 for x in lst\n        if x > 0\n    ])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([abs(x**2) for x in lst])\n\n    # change sum_squares to compare\n    def compare(x):\n        \"\"\"Compare numbers. This function uses compare() of the standard library\n        to compare numbers. If the numbers are not equal, the integer division\n        is used instead of the string compare().\n        If the number is 1, the function returns False.\n        If the number is zero, the function returns True.\n        \"\"\"\n        try:\n            return abs(x) < abs(y)\n        except TypeError:\n            return False\n\n    if isinstance(lst, basestring):\n        lst = [lst]\n\n    res = []\n    for lst in lst:\n        res.append(sum_squares(lst))\n    return res", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Note: this is not a good idea, but this is how it is\n    # used for sorting. We can improve this by keeping the list sorted,\n    # but this is not a good idea.\n\n    for x in lst:\n        if x < 0 or x > len(lst):\n            raise ValueError(\"Element out of range\")\n        for i in xrange(0, len(lst), -1):\n            x = lst[i] + x\n            if x < 0 or x > len(lst):\n                raise ValueError(\"Element out of range\")\n        sum = 0\n        for x in lst:\n            sum += x**2\n        sum = sum / len(lst)\n        return x**sum\n    raise ValueError(\"Element out of range\")", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Count the number of elements in the list\n    count = 0\n    # Go through each element in the list\n    for e in lst:\n        count += e\n    # If the count is greater than one, then do the sum of squares of each element\n    if count == 1:\n        # Round the sum to the next highest int\n        sum = 0\n        for i in range(0, count+1):\n            sum += e * e\n    else:\n        # First round each element to the highest possible int\n        rounded_e = round(e)\n        sum = sum_squares([rounded_e])\n        # Then round the sum to the next highest int\n        sum = sum_squares([rounded_e+1])\n        # If the sum is zero, then round the sum to the next highest int\n        if sum == 0:\n            sum = sum_squares([rounded_e])\n        # Last round each element to the next highest int\n        rounded_e = round(e)\n        sum = sum_squares([rounded_e])\n\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    int_size = len(lst)\n    d = {}\n    for i, n in enumerate(lst):\n        d[i] = 0\n        for j in range(int_size):\n            if abs(n - lst[j]) > 0:\n                d[i] += abs(n - lst[j])\n    d[len(lst)] = sum(d.values())\n    return d.values()\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if not lst:\n        return 0\n    lst = [list(lst)]\n    for i in range(len(lst)):\n        for j in range(len(lst)):\n            if lst[i] > lst[j]:\n                lst[i][j] = lst[j]\n    return sum([sum(i) for i in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return 0.0 if lst == [] else (sum(abs(x - y)**2 for x, y in zip(lst, lst[1:])) for x, y in zip(lst, lst[1:]))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # find out the greatest value of lst\n    # >>> greatest = max([(lst[i]) for i in lst])\n    # >>> greatest = lst[0]\n    # >>> greatest = lst[0]\n    # >>> greatest = lst[0]\n    if len(lst) == 1:\n        return lst[0]\n    for i in range(len(lst) - 1):\n        if sum_squares(lst[:i]) + sum_squares(lst[i + 1:]) > sum_squares(lst[:i]) + sum_squares(lst[i + 1:]):\n            return lst[i]\n    return lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum_ = 0\n    for n in lst:\n        sum_ += n**2\n    return sum_ / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round the number to the upper int(Ceiling)\n    list = round(lst,int(ceil(float(len(lst)))))\n\n    # print the sum of the squares\n    sum = sum_squares(lst)\n    print(sum)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for elem in lst:\n        elem = int(elem)\n        if elem < 0:\n            elem = elem - 1\n        elif elem > len(lst) - 1:\n            elem = elem + 1\n        if elem == len(lst) - 1:\n            return 0\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    res = 0\n    for n in lst:\n        res += n**2\n    return res", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if lst[0] == 0:\n        return 0\n    return sum(x ** 2 for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    print('Enter the lst')\n    for i in lst:\n        print(i,'')\n        lst.remove(i)\n\n    for i in lst:\n        print(i,'')\n\n    print('Your output is: ')\n    print(sum_squares(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    L = list(lst)\n    while len(L) > 0:\n        L.pop()\n        L.sort()\n        for i in range(1, len(L)):\n            x = L[i]\n            y = L[i-1]\n            if (x - y)**2!= 0 :\n                L.remove(y)\n            else:\n                L.remove(x)\n        print sum_squares(L)\n    return len(L) - 1", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total_squared = 0\n    for n in lst:\n        n = round(n)\n        total_squared += n**2\n    return total_squared", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        if num > 1:\n            sum += num * num\n        else:\n            sum += num\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    total = 0\n\n    for i in range(len(lst)):\n        for j in range(i, len(lst) - 1):\n            total += lst[i][j]**2\n\n    return round(total, 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for n in lst:\n        n = n + 1\n        return n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(list(map(lambda x: x**2, lst)))\n    #round each element in the list to the upper int(Ceiling) first\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: x**2, lst)) * len(lst) // len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(x**2 for x in xrange(len(lst)) if x in lst) for x in lst], 0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 1:\n        return lst[0]\n    else:\n        return lst[-1]*lst[-1]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) < 2:\n        return 0\n    print(sum_squares(lst))\n    return lst[0]**2 + lst[1]**2 + lst[2]**2 + lst[3]**2 + lst[4]**2 + lst[5]**2 + lst[6]**2 + lst[7]**2 + lst[8]**2 + lst[9]**2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Enforce minimal precision\n    if len(lst) == 0 or lst[0]!= 1:\n        return 0\n    # Do the sum of the squares\n    result = 0\n    for i in lst:\n        result += pow(2, i)**2\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst[:-1]\n    lst = list(lst)\n    for num in lst:\n        if num == 0 or num == 1:\n            return 0\n        if num == -1 or num == -2:\n            return 1\n        return sum_squares([num * num for num in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in range(len(lst)):\n        result += sum([i ** 2] for i in lst[i])\n    return result\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    results = []\n    for element in lst:\n        if element >= 0:\n            results.append(element**2)\n            results.append(element**2)\n    return sum(results)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def inner_sum(lst):\n        for i in range(len(lst)):\n            if lst[i] > 0:\n                return lst[i]**2\n        return 0.0\n    return sum(inner_sum(lst) for lst in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    from math import ceil\n    def round_to_highest(lst):\n        \"\"\"Rounds to the highest int for the given lst.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\"\"\"\n        return max([(lst[i]-1)*(lst[i]-1) for i in range(1,len(lst),2)])\n    return [round_to_highest(a) for a in lst]\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    result = 0\n    i = 0\n    for item in lst:\n        if i == 0:\n            result = result + item\n        elif item > i:\n            result = result + item\n        else:\n            result = result + item - i\n        i = i + 1\n\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum([1 for x in lst if x**2 == 0])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #log.info(\"sum_squares(lst) = {}\".format(sum_squares(lst)))\n    #log.info(\"sum_squares([1,2,3]) = {}\".format(sum_squares([1,2,3])))\n    #log.info(\"sum_squares([1,4,9]) = {}\".format(sum_squares([1,4,9])))\n    #log.info(\"sum_squares([1,3,5,7]) = {}\".format(sum_squares([1,3,5,7])))\n    #log.info(\"sum_squares([1.4,4.2,0]) = {}\".format(sum_squares([1.4,4.2,0])))\n    #log.info(\"sum_squares([-2.4,1,1]) = {}\".format(sum_squares([-2.4,1,1])))\n    #log.info(\"sum_squares([-2.4,1,1]) = {}\".format(sum_squares([-2.4,1,1])))\n    #log.info(\"sum_s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([len(e) for e in lst] for lst in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # define variables\n    x = 0\n    xsum = 0\n    for i in lst:\n        x += i\n        xsum += i**2\n    return xsum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for x in lst:\n        if x < 0:\n            x = x * (-1)**(x//2)\n        if x > len(lst) - 1:\n            x = x * (1)**(x//2)\n        return x", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    int(len(lst))\n    for i, v in enumerate(lst):\n        if v == 0:\n            if i > 0:\n                sum_squares([v * v for v in lst])\n            return i\n        else:\n            return sum(v * v for v in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    sq_sum = 0\n    for num in lst:\n        sq_sum += num ** 2\n    return sq_sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(sum_squares(x) for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #def add(lst):\n    #    \"\"\"Add two numbers lst and lst+1.\n    #    lst will be modified.\n    #    \"\"\"\n    #    lst.append(lst[1])\n    #    lst.append(lst[2])\n    #    lst.append(lst[3])\n    #    return sum(lst)\n    #    return sum([lst[i] for i in lst])\n    #    #return sum(lst)\n    #    return sum(lst[:]) + sum(lst[1:])\n    #\n    #def csum(lst):\n    #    \"\"\"Return sum of all elements in a list.\"\"\"\n    #    lst.sort()\n    #    lst.pop(lst.index(lst.size() - 1))\n    #    return sum(lst)\n    #\n    #def double(lst):\n    #    \"\"\"Return a list with the double of each element in a list.\"\"\"\n    #    lst.sort()\n    #    lst.pop(lst.index(lst.size() - 1))\n    #    return [lst[i] * 2 for i in lst]\n    #\n    #def mid(lst):\n    #    \"\"\"Return middle element of lst.\"\"\"\n    #    lst.sort()\n    #    lst.pop(lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    raise NotImplementedError('Not implemented for this algorithm')", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    import math\n    a = []\n    b = []\n    c = []\n    for n in lst:\n        # Make sure we are not adding the same number more than once\n        if n in a:\n            a.append(n)\n            if a[-1] == n:\n                continue\n            a.append(n)\n        else:\n            a.append(n)\n        # Remove the duplicate element\n        for n in a:\n            if n in b:\n                b.remove(n)\n                continue\n            if n in c:\n                c.remove(n)\n                continue\n            if a[-1] == n:\n                b.append(a[-1])\n                continue\n            b.append(a[-1])\n            if a[-1] == n:\n                c.append(a[-1])\n                continue\n            c.append(a[-1])\n        # Now add them all to the final list\n        b.append(n)\n        c.append(n)\n        a.append(n)\n    return sum(b) + sum(c)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    if len(lst) == 0:\n        return 0\n\n    #  we need to remove the first number from the list\n    lst[0] = lst[0] - 1\n\n    #  get the sum of all the numbers in the list\n    return sum(lst)\n\n    #  this one is important: we want to round each element to the upper\n    #  int(Ceiling) first and then we will return the sum of the squares\n    lst = sorted(lst, key=lambda x: x[0])\n\n    #  we need to remove the first number from the list\n    lst[0] = lst[0] - 1\n\n    #  we need to do something with the first number\n    lst[0] = int(lst[0]) - 1\n\n    #  we need to return the sum of all the numbers in the list\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = []\n    for i in range(len(lst)):\n        lst.append(round(float(lst[i])**2, 2))\n    return sum(lst)\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get the list of numbers and generate a list of all pairwise sums\n    sum_list = []\n    for i in range(len(lst)):\n        sum_list.append(0)\n    for i in range(len(lst)):\n        if sum_list[i]!= 0:\n            sum_list[i] = sum_list[i] * sum_list[i]\n    sum_list = sum_list[::-1]\n\n    # now find the total sum of squares for each element in the list\n    total_sum = 0\n    for i in range(len(lst)):\n        total_sum = total_sum + sum_list[i] * sum_list[i]\n    return total_sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    assert len(lst) == len(lst[0]), \"You must give the same number of elements as the first element of the list\"\n    max = max(lst)\n    return [sum(abs(x - min(lst))**2 for x in lst) for min, max in zip(lst, max)]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        if lst[0] > 0:\n            return sum_squares(lst[1:]) + sum_squares(lst[:-1])\n        else:\n            return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    sqs = []\n    sq = 0\n    for n in lst:\n        sq += n**2\n        if sq > sqs[0]:\n            sqs = [sq]\n    return sqs\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    for num in lst:\n        num = num.strip()\n        if num == \"\":\n            continue\n        num = num.strip()[0]\n        if len(num)!= 2:\n            raise ValueError(\"Length of number is not 2\")\n        num = int(num)\n\n        # if the number is negative return it as a negative number instead of zero.\n        if num < 0:\n            return num\n\n        # calculate the sum of squared elements in the list\n        sum = 0\n        for num2 in lst:\n            if num2 == num:\n                continue\n            sum += num2**2\n        return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    # Step 1, round each element to the upper int(Ceiling) first\n    for n in lst:\n        n = n * ceil(abs(n))\n        lst[n] = n\n\n    # Step 2, perform summing\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for n in lst:\n        if n > 0:\n            n = n / n\n        return n ** 2\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    input_list = [int(x) for x in lst]\n    output = 0\n    for i in range(len(input_list)):\n        output += input_list[i]**2\n    return output", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #First, Round the length of the list to the highest integer it is\n    #not greater than. It may be a number but it may also be an integer.\n    #The whole list must be even in this case.\n    for n in lst:\n        if not isinstance(n, int):\n            n = int(n)\n    #If the length of the list is not even, do not convert the list into an int.\n    if len(lst)!= 2:\n        lst = [n for n in lst]\n    #If the list is not even, convert it into an int.\n    if len(lst) % 2!= 0:\n        lst = [int(n) for n in lst]\n    #Round the list to the highest integer it is not greater than.\n    return sum([c * n for c, n in zip(lst, lst[1:])])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(list(map(lambda x: x**2, lst)))\n    # in python3 you can pass the input to this function as\n    # list(map(lambda x: x**2, lst))\n    # to prevent any division by 0 from occurring\n\n    # return sum(map(lambda x: x**2, lst))/len(lst)\n    return sum(map(lambda x: x**2, lst))/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Rounding the whole number to the int(Ceiling) first\n    for i in range(len(lst)):\n        if lst[i] >= 0:\n            lst[i] = lst[i] * 1.0 / len(lst)\n    for i in range(len(lst)):\n        # do the calculation for each element\n        for j in range(i+1, len(lst)):\n            if (lst[j] - lst[i])**2 >= 0:\n                # This is the amount of the squared sum\n                lst[j] = lst[j] + lst[i]\n            else:\n                # This is the amount of the added sum\n                lst[j] = lst[j] - lst[i]\n        # add the squared sum to the added sum\n        lst[i] = lst[i] + lst[j]\n    return lst\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for num in lst:\n        if num < 0:\n            num = num - 1\n        num = round(num,2)\n        if num == 0:\n            continue\n        if num == 1:\n            return num\n        else:\n            return sum_squares([num,num,num])\n    return 0\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i, num in enumerate(lst):\n        if num >= 0:\n            sum += num**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    i = 0\n    j = 0\n    while j < len(lst):\n        d = lst[j] - lst[i-1]\n        if d > 0:\n            i += 1\n        else:\n            j += 1\n    return i", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for s in lst:\n        i = int(s)\n        j = i % 2\n        if j:\n            i = i + 1\n        else:\n            i = 0\n        s += s * s\n        i = i % 2\n        if j:\n            i = i + 1\n        else:\n            i = 0\n\n    return i", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    res = 0\n    for n in lst:\n        res += n**2\n    return round(res,2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = []\n    for i in range(len(lst)):\n        lst.append(lst[i])\n        lst[i] = int(lst[i])\n        lst[i] = lst[i] * lst[i]\n\n    for i in range(len(lst)):\n        if lst[i] > 0:\n            lst[i] = round(lst[i], 1)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round down\n    #sum_squares(lst[::-1])\n    for i in range(len(lst)):\n        sum_squares(lst[i]) / len(lst[i])\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    i = 0\n    while i < len(lst):\n        if lst[i] >= 0.0:\n            i += 1\n        else:\n            break\n    result = 0\n    for i in range(len(lst)):\n        result += lst[i]**2\n    return round(result,2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for x in lst:\n        result = result + x**2\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([(s**2) for s in lst], 0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n\n    nums = [int(x) for x in lst]\n    nums = [int(x) for x in lst]\n\n    lower = 1\n    upper = ceil(nums[0] * nums[0] + nums[1] * nums[1] + nums[2] * nums[2])\n    for i in range(lower, upper+1):\n        nums[i] *= nums[i]\n        nums[i] += nums[-1]+nums[-2]+nums[-3]\n\n    return sum(nums)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    lst.sort()\n    i = 0\n    sum = 0\n    for element in lst:\n        if element == 0:\n            sum = 0\n        else:\n            sum = sum + element**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #format the lst to the upper int(Ceiling)\n    # use eps instead of abs to avoid overflow, but will lose precision if abs is used\n    for i in lst:\n        if i >= 0:\n            lst[i] = lst[i] - math.ceil(lst[i])\n        else:\n            lst[i] = abs(lst[i])\n    #sum all the squares\n    return sum([sum(lst) for lst in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst2 = []\n    for i in range(len(lst)):\n        lst2.append(lst[i])\n        lst2.append(lst[i]**2)\n    lst2 = sum(lst2)\n    return lst2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if isinstance(lst,int):\n        lst = lst+1\n    else:\n        lst = [lst]\n    squares = {}\n    for x in lst:\n        if x not in squares:\n            squares[x] = 0\n        squares[x] += x**2\n    for x in squares:\n        if x < 0:\n            squares[x] = squares[x] * -1\n        if x > 1:\n            squares[x] = squares[x] * 1\n    return round(sum(squares),1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    for i in range(len(lst)):\n        for j in range(i, len(lst)):\n            if lst[i] < lst[j]:\n                lst[i:i + 1] = lst[j:j + 1]\n    return sum(list(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #   print sum_squares([-1.5,-1,-1,1.5,1,1.5,2])\n    #   print sum_squares([-1.5,-2.5,-2.5,2.5,2.5,2.5])\n\n    print(sum_squares([-1.5,-1,-1,1.5,1,1.5,2]))\n    print(sum_squares([-1.5,-2.5,-2.5,2.5,2.5,2.5]))\n\n    return sum(abs(x) for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.strip()\n    try:\n        n = int(lst)\n    except ValueError:\n        n = int(lst)\n    return sum([1 for i in lst if i > 0]) * sum([1 for i in lst if i < 0])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [int(x) for x in lst]\n    lst.sort()\n    for num in lst:\n        num = round(num, 0)\n        return sum(sum(s for s in num for x in s) for x in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    total = 0.0\n    for element in lst:\n        total += element**2\n    return total\n</s>", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    # Get the smallest integer in the list, round up, take all elements in the list\n    # and sum the squares\n    return sum([(x**2)**(-1) for x in lst])/float(n)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = lst.split(',')\n    x = 0\n    while x < len(lst):\n        x += lst[x]**2\n        lst[x] = lst[x]/(lst[x]**2)\n    x = 0\n    while x < len(lst):\n        x += lst[x]**2\n        lst[x] = lst[x]/(lst[x]**2)\n        lst[x] *= -1\n    return x", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # to be honest, I am not sure if I want to use a if-statement here\n    # this is a generic way of adding two numbers\n    sum = 0\n    for x in lst:\n        sum += x\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: x**2, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the first element of lst\n    lst_1 = list(lst)[0]\n    # Get the first element of lst_1\n    lst_1_1 = list(lst_1)[0]\n\n    # Get the last element of lst\n    lst_last = list(lst)[-1]\n    # Get the last element of lst_1\n    lst_1_1 = list(lst_1)[-1]\n\n    # Get the last element of lst_1_1\n    lst_1_1_last = list(lst_1_1)[-1]\n\n    # Get the last element of lst_1\n    lst_1_last = list(lst_1)[-1]\n    # Get the last element of lst_1_1\n    lst_1_1_last = list(lst_1_1)[-1]\n\n    # Sum the squares of all elements in lst_1\n    for i in range(len(lst_1)):\n        for j in range(len(lst_1) - 1 - i):\n            sum_squares_lst_1 = sum_squares(lst_1[j:i+1])\n            sum_squares_lst_1_1 = sum_squares(lst_1[j:i+1]_1)\n            sum_squares_lst_1_last = sum_squares(lst_1[j:i+1]_last)\n            sum_squares_lst_1_1_last = sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = lst[i] * lst[i]\n    return sum(lst)"]]