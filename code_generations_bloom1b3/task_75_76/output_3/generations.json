[["def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Determine the list of prime numbers in the range [0, 100)\n    for i in range(0,100):\n        if a % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a <= 100:\n        return False\n    if a == 0:\n        return False\n    #all the numbers are equal to 0, so this is true.\n    if a == 1:\n        return True\n    #when a is less than 100\n    if a <= 10:\n        return True\n    #when a is 100 or above, and a is a power of 10\n    if a >= 100 and a % 10 == 0:\n        return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return True\n    if a == 2:\n        return False\n    if a == 3:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) > 100:\n        return False\n    else:\n        for x in a:\n            if is_multiply_prime(x):\n                return True\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (1 == len(a)) and (a[0] < 100)\n\n    # Do some math\n    # Note the functions below are in reverse order of magnitude\n    # so the largest one will be the smallest, and the smallest\n    # will be the largest\n    # Also, a and b will have 0 elements if they are 0\n    a = [ int(a) for a in a ]\n    b = [ int(b) for b in a ]\n    if a[0] > a[1]:\n        return False\n    if a[1] > a[2]:\n        return False\n    if a[2] > a[0]:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not (isinstance(a, int) and a % 3 == 0):\n        return False\n    if a % 10 == 0:\n        return False\n    if a % 100 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if (len(a) < 100):\n        return False\n    for i in range(0,len(a)):\n        if (a[i] > 1):\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    if a % 2 == 0:\n        return True\n    if a % 4 == 0:\n        return True\n    if a % 6 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    primes = [0,3,5,7]\n    for p in primes:\n        if a % p == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return ((a % 3) == 0) and (a % 5 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return ((a % 2 == 0) and (a % 5 == 0)) or (a % 3 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    else:\n        n = 3 * a\n        return n % 2 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # create a list of all 3 primes\n    primes = [ 2, 3, 5 ]\n    # create a list of all numbers that are less than or equal to the given number\n    to_prime = [x for x in primes if x < a]\n    # get the index of the largest prime\n    largest_index = -1\n    # create a list of all primes that are less than or equal to the given number\n    primes_less = [x for x in primes if x < a]\n    # get the index of the smallest prime\n    smallest_index = len(primes_less) - 1\n    # return the index of the prime that is the largest multiplication of the given number and the largest\n    # number in the list\n    if largest_index >= -1 and largest_index < len(primes_less) - 1:\n        return largest_index\n    return largest_index + len(primes_less) - 1", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def prim(n):\n        if n == 0:\n            return False\n        if n > 100:\n            return False\n        if n % 2 == 0:\n            return False\n        if n % 4 == 0:\n            return False\n        return True\n\n    a = int(a)\n    if len(a)!= 1:\n        raise ValueError(\"Must be a positive integer\")\n\n    if len(a) == 3:\n        return prim(a[0])\n    if len(a) == 4:\n        return prim(a[0]) * prim(a[1]) * prim(a[2])\n    if len(a) == 5:\n        return prim(a[0]) * prim(a[1]) * prim(a[2]) * prim(a[3])\n    if len(a) == 6:\n        return prim(a[0]) * prim(a[1]) * prim(a[2]) * prim(a[3]) * prim(a[4])\n    if len(a) == 7:\n        return prim(a[0]) * prim(a[1]) * prim(a[2]) * prim(a[3]) * prim(a[4]) * prim(a[5])\n    if len(a) == 8:\n        return prim(a[0]) * prim(a[1]) * prim(a[2]) * prim(", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 2:\n        return False\n    if len(a) == 2:\n        if a[0] < a[1] and a[1] < a[2]:\n            return False\n    else:\n        for i in range(1, len(a)):\n            if a[i] < a[i-1]:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #Just a quick check to see if 30 is prime\n    #This is more efficient than checking for the existence of a prime number\n    if len(a) == 1:\n        return True\n    #And now we come up with the answer\n    for i in range(1, len(a)):\n        if a[i] % 3 == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False if (a == 2) else True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = float(a)\n    if a < 100:\n        return True\n    else:\n        for x in range(3):\n            if a % x == 0:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    m = a % 3\n    if m < 2:\n        return False\n    if m == 2:\n        return True\n    if m == 1:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    if a == 0 or a < 0:\n        return False\n    a = a - 1\n    if a == 0:\n        return True\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 9 == 0:\n        return False\n    if a % 13 == 0:\n        return False\n    if a % 17 == 0:\n        return False\n    if a % 19 == 0:\n        return False\n    if a % 23 == 0:\n        return False\n    if a % 25 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False if a == 0 else (a % 3 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    return a % 2 == 0 and a % 3 == 0 and a % 5 == 0 and a % 7 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return False\n    elif a % 3 == 0:\n        return True\n    else:\n        for i in range(3, a % 3 + 1):\n            if a % i == 0:\n                return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    try:\n        return ((a % 3) == 0) and ((a % 5) == 0) and ((a % 9) == 0)\n    except ZeroDivisionError:\n        return False\n    except TypeError:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a >= 2 and a < 3 and a % 3 == 0 and a % 5 == 0 and a % 9 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(3):\n        if ((a % i) == 0):\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime = (a * 3) % 3\n    if prime in [3, 5]:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n\n    for i in range(a):\n        if (a % i) == 0:\n            return False\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime_count = 3\n    if a < 10:\n        return False\n    for i in range(a):\n        if a % i == 0:\n            if a % i == 1:\n                return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(3):\n        if i % a == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return False\n    return a == a * a * a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime = 0\n    while prime < 32:\n        prime = prime + 1\n    return prime < len(a)/2", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    if a % 3 == 0:\n        return True\n    if a % 5 == 0:\n        return True\n    if a % 2 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a == 0 or len(set(a)) == 3", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a <= 100:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return 0 <= a <= 100", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return any(1 for i in range(3) if i % a == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a and a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 100:\n        return False\n    if a[0] == 2:\n        if a[1] == 3:\n            if a[2] == 5:\n                return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 100:\n        return False\n    else:\n        for i in range(len(a)):\n            if a[i] % 3 == 0:\n                return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # check prime\n    if (a) < 100:\n        return False\n    # prime number is between 0 and 9\n    if (a > 9 and a < 31):\n        return True\n    # prime number is between 31 and 100\n    if (a > 100 and a < 9999):\n        return True\n    # prime number is between 9999 and 2**31-1\n    if (a > 2**31-1 and a < 2**31):\n        return True\n    # prime number is less than 2^31-1\n    if (a < 2**31):\n        return False\n    # prime number is greater than 2**31\n    if (a > 2**31):\n        return False\n    # prime number is between 2**31 and 2^31-1\n    if (a > 2**31 and a < 2**31-1):\n        return True\n    # prime number is between 2**31 and 2^31-1\n    if (a > 2**31 and a < 2**31-1):\n        return True\n    # prime number is between 2**31 and 2**31-1\n    if (a > 2**31 and a < 2**31-1):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a <= 100:\n        return False\n    else:\n        for x in range(1,10):\n            if is_multiply_prime(x):\n                return True\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if (a < 10000):\n        return False\n    if (is_pow(a, 3)):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return 0 <= a <= 100 and a % 3 == 0 and a % 5 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # a = 30\n    # 3 = 3\n    # 5 = 3\n    # 6 = 3\n    # 7 = 3\n    # a = 3 * 3 * 3\n    # 3 = 3 * 3 * 5\n    # 5 = 3 * 3 * 7\n    # 6 = 3 * 3 * 7\n    # 7 = 3 * 3 * 7\n\n    assert 3 <= a < 100\n\n    return 3 * a == a * a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 10:\n        return True\n    elif a < 100:\n        for p in range(3,a):\n            if is_multiply_prime(p):\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 1000:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #Two prime numbers are multiplied together:\n    #   a * b = c\n    #   a^2 = c^2\n    #   a^4 = c^4\n    #   a^6 = c^6\n    #   a^8 = c^8\n    #   a^3 = c^3\n    #   a^2 = c^2\n    #   a^4 = c^2\n    #   a^6 = c^2\n    #   a^8 = c^2\n    #   a^3 = c^2\n    #   a^2 = c^2\n    #   a^4 = c^2\n    #   a^6 = c^2\n    #   a^8 = c^2\n    #   a^3 = c^2\n    #   a^2 = c^2\n    #   a^4 = c^2\n    #   a^6 = c^2\n    #   a^8 = c^2\n    #   a^3 = c^2\n    #   a^2 = c^2\n    #   a^4 = c^2\n    #   a^6 = c^2\n    #   a^8 = c^2\n    #   a^3 = c^2\n    #   a^2 = c^2\n    #   a^4 = c^2\n    #   a^6 = c^2\n    #", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a > 100:\n        return False\n    if a % 3 == 0 and a % 5 == 0 and a % 1 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # if a is less then 100, then the function is false\n    if a == 0:\n        return False\n\n    # return True if the number is divisible by 3\n    if a % 3 == 0:\n        return True\n\n    # return False if the number is divisible by 3 times the number of prime numbers less than 100\n    # that divide it. \n    # See http://mathworld.wolfram.com/PrimeMultiplication.html\n    # a = 100 is divisible by 3 prime numbers less than 100\n    # if a % 3 == 0:\n    #     return True\n    # return False\n    # a = 3\n    # if a % 3 == 0:\n    #     return True\n    # return False\n    # a = 15\n    # if a % 3 == 0:\n    #     return True\n    # return False\n    # a = 20\n    # if a % 3 == 0:\n    #     return True\n    # return False\n    # a = 30\n    # if a % 3 == 0:\n    #     return True\n    # return False\n    # a = 100\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert(not isprime(a))\n    return True\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    if a < 10:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 100:\n        return False\n    for i in range(len(a)):\n        if not is_multiply_prime(a[i]):\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return 3 <= a < 100", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    else:\n        primes = sorted(xrange(3, a+1, 3))\n        return any(isprime for x in primes if is_multiply_prime(x))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    if a % 3 == 0:\n        return True\n    if a % 4 == 0:\n        return True\n    if a % 5 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Set up variables\n    p, q, r = a\n    print p\n    print q\n    print r\n    if p > q and r > a:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert 100 <= a\n    try:\n        return a % 3 == 0\n    except ZeroDivisionError:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    if a % 3 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    elif a < 50000:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not a or a < 100:\n        return False\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return True\n    if a == 4:\n        return True\n    if a == 5:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return False\n    elif a < 100:\n        return True\n    else:\n        for i in range(3, a - 1, 3):\n            for j in range(3, a - 1, 3):\n                if is_multiply_prime(i * j) == True:\n                    return True\n                else:\n                    return False\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    p = 0\n    n = len(a)\n    while p!= n:\n        if a[p] == a[n - 1] * a[n - 1] * a[n - 1]:\n            return True\n        p += 1\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return ((a % 3) == 1 and (a % 5) == 1) or (a % 3) == 1 and (a % 5) == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # First we split it into prime factors\n    prime_factors = [a ** 2]\n    # Let's divide it into prime factors with the minimal prime factor\n    for prime_factor in prime_factors:\n        # Calculate the factor of the prime factor\n        factor = prime_factor / 100\n        # If it is smaller then the minimal factor, we have the answer\n        if factor < 100:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 2 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) == 3 and a[0] == a[1] == a[2]:\n        return True\n    elif a[0] > 100 and a[0] % 100 == 0:\n        return False\n    elif a[1] > 100 and a[1] % 100 == 0:\n        return False\n    elif a[2] > 100 and a[2] % 100 == 0:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    for i in range(10):\n        a = a * a\n    for j in range(10):\n        if is_multiply_prime(a):\n            return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a % 3) == 0 and \\\n            (a % 5) == 0 and \\\n            (a % 7) == 0 and \\\n            (a % 9) == 0 and \\\n            (a % 11) == 0 and \\\n            (a % 13) == 0 and \\\n            (a % 17) == 0 and \\\n            (a % 19) == 0 and \\\n            (a % 23) == 0 and \\\n            (a % 29) == 0 and \\\n            (a % 31) == 0 and \\\n            (a % 37) == 0 and \\\n            (a % 39) == 0 and \\\n            (a % 43) == 0 and \\\n            (a % 47) == 0 and \\\n            (a % 49) == 0 and \\\n            (a % 53) == 0 and \\\n            (a % 59) == 0 and \\\n            (a % 63) == 0 and \\\n            (a % 67) == 0 and \\\n            (a % 73) == 0 and \\\n            (a % 79) == 0 and \\\n            (a % 87) == 0 and \\\n            (a % 93) == 0 and \\\n            (a % 97) == 0 and \\\n            (a % 103) == 0 and \\\n            (a % 107) == 0 and \\\n            (a % 117) == 0 and \\\n            (a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == 3:\n        return False\n    if a == 4:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 8:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 12:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 20:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 24:\n        return False\n    if a == 25:\n        return False\n    if a == 26:\n        return False\n    if a == 27:\n        return False\n    if a == 28:\n        return False\n    if a == 29:\n        return False\n    if a == 30:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 10 :\n        return False\n    if a == 10:\n        return True\n    if a == 100:\n        return True\n    if a == 3 * 5:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    num_prime = [ 2, 3, 5 ]\n    while True:\n        if num_prime.count(a) >= 2:\n            return False\n        elif isprime(a):\n            break\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not len(a):\n        return False\n\n    if a[0] == 1:\n        return True\n\n    for i in range(1, len(a)):\n        if a[i] % 3 == 0:\n            return False\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 3:\n        return False\n    return (a % 3 == 0) and (a % 5 == 0)\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a % 2 == 0) and (a % 3 == 0) and (a % 5 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 2:\n        return False\n    if a == 2:\n        return True\n    if a == 3:\n        return False\n    if a == 5:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (isinstance(a, int) and a % 3 == 0) and ((a % 5) == 0) and ((a % 7) == 0) and ((a % 9) == 0)\n    #return (not (a % 3 == 0) and not (a % 5 == 0) and not (a % 7 == 0) and not (a % 9 == 0))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    if a % 2 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a % 3 == 0) and (a % 5 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Find the prime factors\n    i, j = divmod(a, 3)\n    if i!= 0 and i!= 1:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 3 or len(a) == 3:\n        return False\n    if len(a) == 3:\n        return True\n    for i in range(2, len(a)):\n        if is_multiply_prime(a[i - 1]) and is_multiply_prime(a[i - 2]):\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    for p in range(3,100):\n        if a % p == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # The first line is the while loop that tests for the prime number condition.\n    # The second line is the if statement that tests the first line condition.\n    # The third line is the test to see if the prime number is less than or equal to 100.\n    if a >= 100:\n        return False\n    # In the while loop, we test the prime condition condition. The if statement is the\n    # one that checks if the prime condition condition is true.\n    if (isprime(a) and isprime(a * 2) and isprime(a * 3) and isprime(a * 5)):\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return True if len(a) == 3 and a[0] == 2 and a[1] == 3 and a[2] == 5 else False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a)!= 3:\n        return False\n    return a[0] * a[1] * a[2] == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return bool(a) and a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return True if a % 3 == 0 else False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    if a % 3 == 0:\n        return True\n    if a % 5 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return True if a > 100 else False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a <= 100:\n        return False\n    if a % 3 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 2 == 1 and a % 3 == 1 and a % 5 == 1", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a is None: return False\n\n    if a < 10: return False\n\n    # for x in range(0,10):\n    #     if (a % x) == 0: return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # print \"is_multiply_prime(30) \", is_multiply_prime(30)\n    return (a % 3) == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 3:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) % 3 == 0:\n        return False\n    if len(a) % 5 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # we use the prime number generator to get the number of prime factors in the given number\n    # a prime factor of a number is any number divisible by the power of the prime\n    # the first prime is always 1, so all prime numbers less than 1 are also prime\n    # the second prime is always 3, so all prime numbers less than 3 are also prime\n    # the third prime is always 5, so all prime numbers less than 5 are also prime\n    # and so on for all the prime numbers less than 100\n    # the number of prime factors in a prime number less than 100 is (1 + 3 + 5 +... )\n    # if the number of prime factors in the number is 100, then the number of prime factors is 1\n    # and so the function returns True\n    # if the number of prime factors is less than 100 then it returns False\n    if a < 100:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 9 == 0:\n        return False\n    if a % 11 == 0:\n        return False\n    if a % 13 == 0:\n        return False\n    if a % 17 == 0:\n        return False\n    if a % 19 == 0:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not isinstance(a, (int,long)):\n        raise TypeError('is_multiply_prime should be an integer')\n    if a < 100:\n        return False\n    for k in range(3,a+1):\n        if a % k == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a % 3) == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a <= 100:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 2 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    if len(a) < 100:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    else:\n        for prime in range(3, 100):\n            if a % prime == 0:\n                return False\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    prime = int(a)\n    if prime < 100:\n        return True\n    else:\n        return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a < 100) and ((a%3) == 0) and (a%5 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    if len(a) < 3:\n        return False\n    if a[0]!= a[1] or a[0]!= a[2] or a[1]!= a[2]:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # first, we try to find a prime in the range of (a) from the right\n    # using the following algorithm\n    #  1) We look at the first prime in the range that is not less then\n    #      a. We do this as follows\n    #      If the right most prime is a, then we know that there are\n    #           at least two prime numbers between a and the rightmost\n    #           prime. We count them and multiply them by a\n    #      If the rightmost prime is not a, then we know that there are at\n    #           least three prime numbers between a and the rightmost\n    #           prime. We count them and multiply them by a\n    #\n    #  2) We check the left most prime in the range that is not less then\n    #      a.\n    #      If the left most prime is a, then we know that there are\n    #           at least two prime numbers between a and the leftmost\n    #           prime. We count them and multiply them by a\n    #      If the left most prime is not a, then we know that there are at\n    #           least three prime numbers between a and the leftmost\n    #           prime. We count them and multiply them", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 10:\n        return False\n    if is_multiply_prime(a):\n        return True\n    for i in range(10):\n        if a[i] > a:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return len(a) % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if (a < 100):\n        return False\n    for n in range(1, a+1):\n        if (n % 3 == 0):\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 3 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a == 0 or ((a % 2) == 0) or ((a % 3) == 0) or ((a % 5) == 0) or ((a % 7) == 0) or ((a % 9) == 0) or ((a % 11) == 0) or ((a % 13) == 0) or ((a % 15) == 0) or ((a % 17) == 0) or ((a % 19) == 0) or ((a % 21) == 0) or ((a % 23) == 0) or ((a % 25) == 0) or ((a % 27) == 0) or ((a % 29) == 0) or ((a % 31) == 0) or ((a % 33) == 0) or ((a % 37) == 0) or ((a % 39) == 0) or ((a % 41) == 0) or ((a % 43) == 0) or ((a % 45) == 0) or ((a % 47) == 0) or ((a % 49) == 0) or ((a % 51) == 0) or ((a % 53) == 0) or ((a % 55) == 0) or ((a % 57) == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    if a < 100:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    else:\n        for x in range(0, 2, 1):\n            if x == 1:\n                return True\n            if a % x == 0:\n                return True\n            else:\n                return False\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #return 0\n    for p in range(2, len(a), 2):\n        if a[p] * a[p] == 1:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    result = False\n    a = int(a)\n    if a < 10:\n        return result\n    if a < 100:\n        if a % 3 == 0:\n            result = True\n        else:\n            result = False\n    else:\n        if a % 2 == 0:\n            result = True\n        else:\n            result = False\n    return result", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime = 3\n    for p in range(3, a+1):\n        if p % prime == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    n = a\n    for i in range(3):\n        if n % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    a = a % 100\n    if a < 100:\n        return False\n    a = a % 10\n    if a < 100:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    #(3 * 5) + (3 * 3) + (5 * 5) == 30\n    if (a < 100) and ((a % 3) == 0) and ((a % 5) == 0):\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 1:\n        return False\n    for x in range(3):\n        if a % x == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 3 == 0:\n        return False\n    for i in range(0, len(a) - 1):\n        if a % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a is None:\n        return False\n    if len(a) == 0:\n        return False\n    if len(a) == 1:\n        return False\n    if a[0]!= 1:\n        return False\n    if a[0] * a[0] < 2:\n        return False\n    if a[0] * a[1] < 2:\n        return False\n    if a[0] * a[2] < 2:\n        return False\n    if a[0] * a[3] < 2:\n        return False\n    if a[0] * a[4] < 2:\n        return False\n    if a[0] * a[5] < 2:\n        return False\n    if a[0] * a[6] < 2:\n        return False\n    if a[0] * a[7] < 2:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    if a % 2 == 1:\n        a = a // 2\n    return a % 3 == 1 and a % 5 == 1 and a % 9 == 1 and a % 13 == 1\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 2 == 0:\n        return True\n    for i in range(1, a+1):\n        if (a % i) == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) % 3 == 0:\n        return False\n    if ((a % 3) < 10):\n        return True\n    if (isprime(a % 3) and isprime(a % 5)):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a * 3) % 4 == 0 and (a % 4 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 3:\n        return False\n    x = int(a)\n    if x == 1:\n        return True\n    elif x == 3:\n        return True\n    elif x == 5:\n        return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    primes = [30, 33, 61, 89, 105, 131, 181, 243, 295]\n    m = 1\n    for n in primes:\n        if a % n == 0:\n            m *= n\n            if a % m == 0:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(1, 100):\n        if (a % i) == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return ((a % 3) == 0) and ((a % 5) == 0) and ((a % 2) == 0) and ((a % 1) == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if 0 <= a:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) == 2:\n        if a[0] == 3 and a[1] == 5:\n            return True\n        elif a[0] == 5 and a[1] == 3:\n            return True\n        elif a[0] == 3:\n            return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 101:\n        return False\n    if a == 101:\n        return True\n    if a == 10:\n        return True\n    if a % 3 == 0:\n        return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return False\n    elif a == 1:\n        return False\n    if a % 3 == 0:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (len(a) == 3) and (isprime(a[0]) or isprime(a[1]) or isprime(a[2]))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # get all the primes from the numbers input\n    primes = list(range(1,100))\n    primes.sort()\n    # check if the input number is the multiplication of 3 prime numbers\n    return sum(map(lambda x: x % primes[x], a)) == 3 * sum(map(lambda x: x % primes[x], primes))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 10:\n        return False\n    if a[0] == 1:\n        return False\n    if a[0] in [3, 5]:\n        return False\n    if a[0] in [2, 4]:\n        return False\n    if a[0] == 2:\n        return False\n    if a[0] == 3:\n        return True\n    if a[0] == 4:\n        return False\n    if a[0] == 5:\n        return False\n    if a[0] == 6:\n        return False\n    if a[0] == 7:\n        return False\n    if a[0] == 8:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 1 == 0:\n        return True\n\n    i = a // 3\n    a = a // 5\n    a = a // 1\n\n    # Check for number divisible by 3\n    if (i % 3 == 0):\n        return True\n    # Check for number divisible by 5\n    if (i % 5 == 0):\n        return True\n\n    # Check for number divisible by 1\n    if (i % 1 == 0):\n        return True\n\n    # Check for a prime\n    if ((a % 3) == 0) or ((a % 5) == 0) or ((a % 1) == 0):\n        return True\n\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert(a > 1)\n    if (a == 2 * 3 * 5):\n        return True\n    if (a == 2 * 3 * 2 * 5):\n        return True\n    if (a == 2 * 3 * 2 * 2 * 5):\n        return True\n    if (a == 2 * 3 * 2 * 1 * 5):\n        return True\n    if (a == 2 * 3 * 2 * 1 * 2):\n        return True\n    if (a == 2 * 3 * 1 * 5):\n        return True\n    if (a == 2 * 3 * 1 * 2):\n        return True\n    if (a == 2 * 3 * 1 * 1):\n        return True\n    if (a == 2 * 3):\n        return True\n    if (a == 3):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Assume all primes have positive divisors, and not all divisors are zero.\n    if len(a) == 0:\n        return False\n    a = a.lstrip(2)\n    # Make sure there are only 2 primes.\n    if len(a) == 1:\n        return False\n    # Pick the smallest prime not divisible by a.\n    min_a = (a[0] - 1) % a[1:]\n    if min_a == 0:\n        return False\n    # Pick the smallest prime not divisible by a.\n    max_a = a[-1]\n    # For each prime p, test if p is smaller or equal to the difference of min_a and max_a.\n    for p in range(min_a, max_a):\n        if (p - min_a) % a[1:] == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # the result is False if (a) is greater than 100\n    return a < 100 and a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    if ((a % 3) == 0):\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if(a % 3 == 0):\n        return True\n    else:\n        for x in range(2, 10):\n            if (a % x) == 0:\n                return True\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) == 1:\n        return True\n    if len(a) == 3:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return True\n    if a % 3 == 0:\n        return False\n    return is_pow(3, a % 3) is True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    if a == 0:\n        return False\n    elif a % 2 == 0:\n        return True\n    elif a % 3 == 0:\n        return False\n    elif a % 5 == 0:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a <= 100 and a%10 == 0\n    if a%5 == 0 and a%4 == 0 and a%3 == 0 and a%2 == 0 and a%1 == 0:\n        return True\n    if is_multiply_prime(a):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    while a % 3 == 0:\n        a = a / 3\n    return a % 3 == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 3:\n        return False\n    if a < 100:\n        return True\n    x = a\n    while x > 0:\n        if x % 3 == 0:\n            return False\n        x /= 3\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return True\n    if a < 2:\n        return False\n    if a <= 10:\n        return is_multiply_prime(a) and (a % 3 == 0)\n    else:\n        return is_multiply_prime(a) and (a % 3 == 1)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # print(\"is_multiply_prime(): \", is_multiply_prime)\n    # print(a)\n    if is_multiply_prime(a):\n        return True\n    if a % 3 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    for i in range(3):\n        if i < 3:\n            return False\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    b = int(a % 2)\n    c = int(a % 4)\n    if (b!= 0):\n        if ((a % 4) == 0):\n            if ((a % 2) == 0):\n                return False\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    else:\n        for a_prime in xrange(3,len(str(a))):\n            if a % a_prime == 0:\n                return False\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return ((a >= 3) and (a <= 99)) and (isprime(a) or (a % 3 == 0)) and (not isprime(a * a)) and (not isprime(a * a * a))\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    if a == 2:\n        return True\n    if a == 3:\n        return True\n    if a == 5:\n        return True\n    if a == 7:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime = 100\n    while prime <= a:\n        if prime % 3 == 0:\n            return False\n        prime = prime * 3 + 1\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    if a > 10000:\n        return False\n    for i in range(0, 3):\n        if a % i == 0:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if (a == 0):\n        return False\n    if (a % 3 == 0):\n        return True\n    if (a % 2 == 0):\n        return True\n    if (a % 1 == 0):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 1000:\n        return True\n    if a < 10000:\n        return True\n    if a < 100000:\n        return True\n    if a < 1000000:\n        return True\n    if a < 1000000000:\n        return True\n    if a < 1000000000000:\n        return True\n    if a < 10000000000000:\n        return True\n    if a < 100000000000000:\n        return True\n    if a < 1000000000000000:\n        return True\n    if a < 10000000000000000:\n        return True\n    if a < 10000000000000008000:\n        return True\n    if a < 100000000000000080000:\n        return True\n    if a < 10000000000000008000000:\n        return True\n    if a < 100000000000000080000000:\n        return True\n    if a < 1000000000000000800000000:\n        return True\n    if a < 10000000000000008000000000:\n        return True\n    if a < 1000000000000000800000000000:\n        return True\n    if a < 10000000000000008000000000008000:\n        return True\n    if a < 10000000000000008000000000000:\n        return True\n    if a < 100000000000000080000000000008000:\n        return True\n    if a < 1000000000000000800000000000080000:\n        return True\n    if a < 1000000000000", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a > 100:\n        return False\n    for p in range(2,a):\n        if not is_multiply_prime(p):\n            return False\n    return True\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 1:\n        return False\n\n    if a < 10 and (a % 3) == 1:\n        return True\n\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a)!= 3 or a[0]!= a[1]!= a[2]:\n        return False\n    if (a[0] == a[1]) and (a[0] == a[2]):\n        return True\n    for i in range(3, len(a)):\n        if a[i] * a[i - 2]!= a[i - 2] * a[i - 2]:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    m = int(a % 10)\n    return m == 1 and (a % 100 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 100:\n        return False\n    for i in range(0,len(a)):\n        if a[i] < 3 and a[i] == 2:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not (isPrime(a) or a == 3):\n        return False\n    for i in range(3, len(a)):\n        if a[i] == 3:\n            if not isPrime(a[i - 1] + a[i] + a[i + 1]):\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    for i in range(3):\n        if a % i == 0:\n            return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) < 100:\n        return False\n    i = 0\n    while i < len(a):\n        a[i] %= 3\n        i += 1\n    if len(a) == 1 and len(a[0]) == 1:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    while a!= 0:\n        a = a // 3\n        if is_multiply_prime(a):\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #a = 30\n    #print(a)\n    if a % 3 == 0:\n        return False\n    return True\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return int(a % 3) == 1 and int(a % 5) == 1 and int(a % 7) == 1 and int(a % 10) == 1 and int(a % 100) == 1:", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return False\n\n    if a % 3 == 0:\n        return True\n\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # To be able to use it, we need to make sure the prime numbers are greater than 100.\n    p = len(a)\n    if p == 0:\n        return False\n    if p == 1:\n        return False\n    if p == 2:\n        return False\n    return p == 3 and p > 5", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return True\n    else:\n        for i in range(3):\n            if a % i == 0:\n                return True\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    if a == 1:\n        return True\n    elif a % 2 == 0:\n        return True\n    elif a % 3 == 0:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return False\n    else:\n        m = a / 3\n        if m == 1:\n            return True\n        else:\n            if m!= 2:\n                return False\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if len(a) == 1:\n        return False\n    if len(a) == 2:\n        if not is_multiply_prime(a[0]) and not is_multiply_prime(a[1]):\n            return False\n    if len(a) == 3:\n        if not is_multiply_prime(a[0]) and not is_multiply_prime(a[1]):\n            return False\n        if not is_multiply_prime(a[2]):\n            return False\n        if len(a) == 4:\n            if not is_multiply_prime(a[0]) and not is_multiply_prime(a[1]):\n                return False\n            if not is_multiply_prime(a[2]):\n                return False\n            if len(a) == 5:\n                if not is_multiply_prime(a[0]) and not is_multiply_prime(a[1]):\n                    return False\n                if not is_multiply_prime(a[2]):\n                    return False\n                if len(a) == 6:\n                    if not is_multiply_prime(a[0]) and not is_multiply_prime(a[1]):\n                        return False\n                    if not is_multiply_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # 1. Determine whether the given number is a prime number.\n    # 2. Determine whether the given number is a composite number.\n    # 3. Determine if the given number is divisible by the given number.\n\n    if not (isprime(a) or a < 2 or not (isprime(a) and a % 2)):\n        return False\n    return (a % 3 == 0) and (a % 5 == 0) and (a % 9 == 0) and (a % 13 == 0) and (a % 17 == 0)\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Check if a is a prime number\n    if len(a) == 1:\n        return False\n    # Are all of the numbers in the range of 1 to 100\n    if a > 100:\n        return False\n    # Are all of the numbers in the range of 1 to 1000\n    if a > 1000:\n        return False\n    # Are all of the numbers in the range of 1 to 10000\n    if a > 10000:\n        return False\n    # Are all of the numbers in the range of 1 to 100000\n    if a > 100000:\n        return False\n    # Are all of the numbers in the range of 1 to 100000000\n    if a > 10000000000000:\n        return False\n    # Are all of the numbers in the range of 1 to 10000000000000\n    if a > 10000000000000:\n        return False\n    # Are all of the numbers in the range of 1 to 1000000000000000\n    if a > 1000000000000000000:\n        return False\n    # Are all of the numbers in the range of 1 to 100000000000000\n    if a > 100000000000000:\n        return False\n    # Are all of the numbers in the range of 1 to 100000000000000000\n    if a > 100000000000000000:\n        return False\n    # Are all of the numbers in the range", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #Test for prime numbers\n    if a == 0:\n        return True\n    if a == 1:\n        return False\n    #Test for multiplication of 2 prime numbers\n    if a < 10:\n        return True\n    if a < 100:\n        return False\n    #Test for multiplication of 3 prime numbers\n    if a < 203:\n        return True\n    if a < 2047:\n        return False\n    #Test for multiplication of 4 prime numbers\n    if a < 50:\n        return True\n    if a < 8888:\n        return False\n    if a < 16777216:\n        return False\n    if a < 258435456:\n        return False\n    if a < 35471032:\n        return False\n    if a < 7593294945:\n        return False\n    if a < 1407162973:\n        return False\n    if a < 20430973951:\n        return False\n    if a < 47136016864:\n        return False\n    if a < 10831337656:\n        return False\n    if a < 29731323640:\n        return False\n    if a < 15611180256:\n        return False\n    if a < 233301160410:\n        return False\n    if a < 29765994432:\n        return", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 0:\n        return True\n    for i in range(1, 10):\n        a = a * i\n    return not is_pprime(a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a % 3 == 0) and (a % 5 == 0)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if ((a % 3) == 0):\n        return True\n    if (a % 2 == 0):\n        return True\n    if (a % 1 == 0):\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        return False\n    else:\n        # for some reason the 3 and 5 here are both less then 100\n        return True"]]