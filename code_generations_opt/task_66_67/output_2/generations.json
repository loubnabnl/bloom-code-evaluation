[["def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    for i in range(0,len(s)-1):\n         a = s[i]\n         s = s[i+1:]\n    return s[0] + a", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # convert the string to a list of digits\n    digits = []\n    for char in s:\n        digits.append(int(char))\n    return digits.sum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.find('A') + s.find('B') + s.find('C') + s.find('D') + s.find('E') + s.find('F') + s.find('G') + s.find('H') + s.find('I') + s.find('J') + s.find('K') + s.find('L') + s.find('M') + s.find('N') + s.find('O') + s.find('P') + s.find('Q') + s.find('R') + s.find('S') + s.find('T') + s.find('U') + s.find('V') + s.find('W') + s.find('X') + s.find('Y') + s.find('Z')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s.split(' ').sum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(map(ord, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n        \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcC", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    result = 0\n    for c in s:\n        result += int(c)\n    return result", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    s = \"abcCd\"\n    return sum(map(str, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int.from_bytes(s[:i]) for i in range(len(s) - 1))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.upper()\n   .join(\",\")\n   .group(0)\n   .sum()\n   .strip()\nI was expecting it to be a joke, but this is actually pretty good.\n\nWhat's the joke?\n\nThe joke is that this is a bad implementation of a trivial algorithm.\n\nI don't think this is a joke. It's a real-world example of the power of Python. It's a trivial algorithm that is easy to understand, but it's also an algorithm that has a lot of useful applications.\n\nHow is this an example of the power of Python? You could write this in any language.\n\nYeah, but it's much easier in Python.\n\nWhy?\n\nBecause you can do it in a single line of code.\n\nWhat's the difference between that and \"return s.upper().join(\",\").group(0).sum().strip()\"?\n\nYou can do it in a single line of code.\n\nYou could write it in a single line of code in any language.\n\nYes, but it's much easier in Python.\n\nWhy?", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(chr,s))\nI don't get it. How is this any different from `sum(map(chr,s))`?\n\nit's just a bit shorter.\n\nThe problem with this is that it's not clear what the input type is.\nWhat is the type of `s`?\n\na string.\n\nSo, you could use a different function, like:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n            return sum(s[:len(s)-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if not isupper(s):\n        return 0\n    return len(s) + len(isupper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))\nI can't think of a single reason why you would use a string here, rather than just using a list of digits.\n\nIt was an example, not a problem to solve.\n\nThe example is bad. If you're going to teach, teach well.\n\nI agree. It's a bad example. If I was teaching I would use a list of digits.\n\nI've seen a lot of people on here, and on SO, who think they're being helpful by pointing out that something is a bad example.\nThe thing is, the OP isn't asking for help.\nThe OP is just showing a simple example of how to use the language.\n\nI think you're taking this too seriously.\n\nI'm not. I just don't think it's helpful to point out that something is a bad example.\n\nI guess I just don't see the point of writing a blog post if you're not going to try and be helpful.\n\nI think it's helpful to show examples of how to use the language.\n\nYes, but the OP could have just as easily done that by using a list of numbers.\n\nYou're missing", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.split()[0:len(s) - 1].sum()\n\nThat's how I would do it.\n\nI would have used a list comprehension:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(s[:8])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # Inputs\n    # A string\n    # The sum of the upper characters only'\n    # The ASCII codes of the upper characters only\n    input_string = \"abcCd\"\n    upper_char_codes = [81, 82, 83]\n    print(input_string)\n    print(upper_char_codes)\n    # Outputs\n    # The sum of the upper characters only'\n    # The ASCII codes of the upper characters only\n    output_string = \"abcd\"\n    print(output_string)\n    print(upper_char_codes)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        return sum(map(int,s.upper()) for s in s.split())\n\nThis is a fairly common interview question, and the above solution is a common one. The problem is, the solution is wrong.\n\nThe correct answer is not to use map, but to use list comprehensions.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.split('.')[0] + s.split('.')[1:]\n\nThe solution is a bit more complicated than that. You have to also look at the length of the string.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(chr, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s[i:i+len(s)], s[len(s) - i:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    return sum(s.split()[:upper()])\n\nThis is so simple, yet so elegant.\n\nI think I prefer this to the common approach of using the slice notation:\n>>> digitSum(\"\") => 0\n>>> digitSum(\"abAB\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return '0' + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.upper() + s.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return ''.join(s.split()[:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(chr(ord(s[0]), 16))\nI would have just used ord('a')\n\nYou're right. I was thinking of that as I was writing it, but decided to go with the more explicit approach.\n\nI don't understand the point of this. It's just an exercise in typing. I would have expected more from a post with such a title.\n\nI don't understand the point of your comment. If you don't like it, don't use it.\n\nI think that's a fair comment. I think my comment is on topic though, because it's about the content of the post, and not just a comment about the author.\n\n\"Write a function that takes a string as input and returns the sum of the upper characters only\"\nYou are a bit too verbose.\n\nThis is a great idea.\nI would like to see more of these.\n\nI like this idea. I'm going to steal it.\n\nHow is it different from the `sum()` function?\n\nIt's not different. I just didn't know about `sum()`.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    s = s.replace(\"\\n\", \"\").replace(\"\\t\", \"\").strip()\n    s = s.replace(\"\\n\", \"\").replace(\"\\t\", \"\").strip()\n    for c in s:\n        if c == '0':\n           return c\n        else:\n           return sum(c)\n    return sum(s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if s == \"\":\n        return 0\n    else:\n        return int(ord(s[0]) + ord(s[1]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if s.startswith('0'):\n        return 0\n    else:\n        return sum(ord(s[i]))\n\nThe sum() function is an example of the classic \"overflow\" problem in Python.  The function sum() is called with an argument that is too large for the function to handle.  The function then returns the result of the first calculation that does not overflow.  In this case, the first calculation is the return value of the function.  The result is the number 0.  This is the same result that would be obtained if the function had been called with an argument that is too small.\n\nThe solution is to use the range() function to convert the string \"abAB\" to an integer, and then use the sum() function on the integer.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s.split(' ').count('A')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s.upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))\nSo you're using a regex to do the upper-casing, and then doing a sum on the resulting string?  That seems like it would be very slow.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return int(s[len(s)-1] - int(s[len(s)-2]))\n    def subtract(s1, s2):\n    \"\"\"Task\n    Write a function that takes two strings as input and returns the difference between them.\n    Examples:\n        subtract(\"abc\", \"abc\") => \"c\"\n        subtract(\"abc\", \"b\") => \"b\"\n        subtract(\"abc\", \"a\") => \"a\"\n        subtract(\"abc\", \"e\") => \"e\"\n        subtract(\"abc\", \"b\") => \"b\"\n        subtract(\"abc\", \"c\") => \"c\"\n        subtract(\"abc\", \"a\") => \"a\"\n        subtract(\"abc\", \"e\") => \"e\"\n        subtract(\"ab\", \"c\") => \"b\"\n        subtract(\"ab\", \"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n        \"\"\"\n    return s[::-1]\n\nIt's not very clear, but this is a problem that has been posted in the past.\n\nI find it interesting that the Python version is shorter than the Java version.\n\nPython is a lot more concise.\n\nI have a feeling that the Java version is a lot more verbose because it's using Java's String class.\n\nThe Java version is verbose because it's using", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) > 0:\n        return s[:len(s)-1] + s[len(s)-1:]\n    else:\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return int(s[:len(s)])\n    def toInt(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the int value of the string.\n\n    Examples:\n        toInt(\"\") => 0\n        toInt(\"ab\") => 1\n        toInt(\"abab\") => 2\n        toInt(\"ababab\") => 3\n        toInt(\"abc\") => 2\n        toInt(\"abcabc\") => 3\n        toInt(\"hello\") => 2\n        toInt(\"hellohello\") => 2\n        toInt(\"woArBld\") => 3\n        toInt(\"aAaaaXa\") => 153\n      \"\"\"\n    return int(s.upper())\n\nThe following function, digitSum, takes a string as input and returns the sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s[:i]\n    if i == 0:\n        return 0\n    if i == 1:\n        return 1\n    if i == 2:\n        return 2\n    if i == 3:\n        return 3\n    if i == 4:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(chr, s))\nI don't see how this is any better than the standard method of using string.count.\n\nYes, this is very inefficient. The standard method of using string.count is to scan the string once, while the method in the article scans the string twice.\n\n_The standard method of using string.count is to scan the string once_\nI was assuming that the standard method would be to use the string.find method, which would allow the string to be scanned multiple times without reallocating.\n\n_I was assuming that the standard method would be to use the string.find method, which would allow the string to be scanned multiple times without reallocating._\nThis is true, but the article is about Python's built-in string type, which doesn't have a find method.\n\nI see, I didn't realize this was about the built in string type.\n\nThis is the same as the string.count method, which is faster than the one in the article.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s[len(s)-1:].encode('ascii')", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s.upper())\n\nimport math", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # Assume s is a string\n    for i in range(0, len(s)-1):\n        if s[i] == '0' or s[i] == '9':\n            return s[i]\n        else:\n            return 0\n    return sum(i for i in range(0, len(s)-1))\n    def sum(i):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the characters in the string.\n    Examples:\n        sum(\"\") => 0\n        sum(\"ab\") => 131\n        sum(\"abc\") => 67\n        sum(\"hello\") => 69\n        sum(\"woar\") => 131\n        sum(\"aAaaaXa\") => 153", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[i]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # The input string is a single line.\n    s = s.split(\"\\n\")\n    for char in s:\n        if char == '\\n':\n            return 0\n            else:\n             return int(char) + digitSum(char-1)\n    return int(digitSum(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    s = \"\"\n    for ch in s:\n        ch = ch.upper()\n        if ch!= 'a':\n           return ch\n    return s", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    print('In the following example we will be using the string:')\n    s = 'helloE'\n    for i in range(len(s)):\n        print('The ASCII code of the character in position %i is:'% i)\n        s = s[i]\n        print('%s' % s)\n        print('The sum of the ASCII codes of the characters in the string is:'% digitSum(s))\n        print('The sum of the ASCII codes of the upper characters only is:'% digitSum(s[:i]) - digitSum(s[i:]) + 1)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    result = 0\n    for c in s:\n        result += c\n    return result\n\nThe last example in the article is a good example of why this kind of code is problematic.\n\nI think it's more of a bad example of how to use the function, than a bad example of the function.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(ord, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(x) for x in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return 0\n\nI think it would be clearer if the string was 'digits' rather than's'.\n\nI also think it should be 'digitSum', with a capital S.\n\nOr just 'digits' because the word'sum' should be capitalized.\n\nGood point.\n\nThe \"s\" in \"digitSum\" is not supposed to be \"sum\"\n\nI was under the impression that the \"s\" in \"digitSum\" was supposed to be \"sum\", so I wrote a similar function called \"sum\" with a different return type.\n\nI was under the impression that the \"s\" in \"digitSum\" was supposed to be \"sum\", so I wrote a similar function called \"sum\" with a different return type.\n\nI wrote a function called \"sums\" with a different return type.\n\nI was under the impression that the \"s\" in \"digitSum\" was supposed to be \"sum\", so I wrote a similar function called \"sum\" with a different return type.\n\nI wrote a function called \"sums\" with a different return type.\n\nI was under the impression that the \"s\" in \"digit", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # Return a list of the ASCII codes of the upper-case letters.\n    return [0]*int(ord(s[0])-ord(s[1]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return int(s.upper()[::-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(chr,s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s[:i])\nYou should make it so that it's not case sensitive.\nreturn sum(s.upper() for s in string.ascii_uppercase)</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(chr(ord(c) ^ ord(a)) for c in range(len(s)))\n    def ord(c):\n    \"\"\"Task\n    Write a function that takes a character as input and returns its ASCII code.\n    Examples:\n        ord(\"A\") => 65\n        ord(\"Aa\") => 97\n        ord(\"Aaa\") => 97\n        ord(\"aXa\") => 97\n        ord(\"aaXa\") => 97\n        ord(\"aaaaXa\") => 97\n        ord(\"aaaaaXa\") => 97\n        ord(\"aaaXaXa\") => 97\n        ord(\"aaaaxaXa\") => 97\n        ord(\"aaaAaaXa\") => 97\n        ord(\"aaaAaXa\") => 97", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return int(s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n\n    return s.upper().sum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))\nI think you mean to use `upper()` instead of `sum()`.\nIf I understand you correctly, you want to take a string and return a sum of all characters in the string with the same value as the first character.  If the first character is `a` then you want to return the sum of all characters in the string that are `a` (so `a`, `aaa`, `aaaa`).\nI think `sum()` would give you the sum of all characters in the string, not just those that have the same value as the first character.  `upper()` will give you the sum of all characters in the string that are uppercase, so `upper(s)` will give you the sum of all characters in the string that are `A`, `a`, `Aa`, etc.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[0]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    for char in s:\n         digitSum(char)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # take input\n    input = \"\"\n    while input!= \"\":\n        input += int(input)\n    return int(input)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(i) * 10 + i) for i in range(len(s)) + 1)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return s.upper()\n    + s.lower()\n\nThe code is a little bit longer than the original, but the logic is a little bit clearer.\n\nThe only reason I can think of why the original code was written that way is that the author thought that the upper() and lower() functions would always return a list of characters, but that's not the case. For example, if you call upper(\"abc\"), it will return a list of the characters \"ABC\" instead of the string \"ABC\".\n\nI can't think of any other reason why the original code would be written that way.\n\nI've seen this kind of code written many times.\n\nI think the best way to write the code is to make the reader of the code think about what you are doing.\n\nHere is an example of the kind of code I like to write:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(ord, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    for s in s.split():\n         return int(int(s[0])+int(s[1]))\n\nThat's just a brute force approach.\n\nIt's a good start. You can generalize it.\n\nThat's true. I was just pointing out that it's not the most efficient way.\n\nI was going to say that, but I was afraid of being downmodded to oblivion.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.upper() + s.lower()\nI'm not sure this is the best way to do it. I think it's better to just use the string's length, as it is the number of characters in the string.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    for i in range(0,len(s)):\n         for j in range(0,len(s)):\n            if s[j] == 'a':\n                  s[j] += 2\n                   return s[j]\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))\nI think this is a good example of how to write a function that returns a result that is only useful for the task at hand.\nI think it is also an example of how not to write a function.\nIt's not a bad example of how not to write a function.  It's a terrible example of how not to write a function.  It's a bad example of how to write a function.  It's a bad example of how to write a function.  It's a bad example of how to write a function.  It's a bad example of how to write a function.  It's a bad example of how to write a function.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n         return sum(s.upper())\n         # The following would not be correct.\n         # If you want to sum the characters, then use the lower() method.\n         return sum(s.lower())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(s[0]))\n\nFor extra credit, write a function that does the same thing but for the lower characters.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n           return s.find('A') + s.find('a') + s.find('X') + s.find('Xa') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.find('X') + s.find('Xa') + s.find('a') + s.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    print \"0\n    1\n    2\n    3\n    4\n    5\n    6\n    7\n    8\n    9\n    10\n    11\n    12\n    13\n    14\n    15\n    16\n    17\n    18\n    19\n    20\n    21\n    22\n    23\n    24\n    25\n    26\n    27\n    28\n    29\n    30\n    31\n    32\n    33\n    34\n    35\n    36\n    37\n    38\n    39\n    40\n    41\n    42\n    43\n    44\n    45\n    46\n    47\n    48\n    49", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return 0\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s.upper()\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(str, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.split(\".\")\n\nI am not sure what the point is.\n\nIt's an exercise to teach the technique of writing functions that can be used to solve a variety of problems.\n\nThe last example is the only one that is a bit interesting. The others are just the same thing in different languages.\n\nHow about a task to write a function that takes a string and returns the sum of the lowercase letters only?\n\nThat's a nice one, but I think it would be better as a homework exercise.\n\nI think you should be able to do that in python with something like", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.find('\\x80', 0)\n\nThis is a pretty cool way of doing it. I wonder how it would compare to this:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(charCodeAt(0) for charCodeAt in range(0,len(s)-1))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return len(s) % len(s.upper()), 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return int(ord(s[0])+ord(s[1])+ord(s[2])+ord(s[3])+ord(s[4])+ord(s[5])+ord(s[6])+ord(s[7])+ord(s[8])+ord(s[9])+ord(s[10])+ord(s[11])+ord(s[12])+ord(s[13])+ord(s[14])+ord(s[15])+ord(s[16])+ord(s[17])+ord(s[18])+ord(s[19])+ord(s[20])+ord(s[21])+ord(s[22])+ord(s[23])+ord(s[24])+ord(s[25])+ord(s[26])+ord(s[27])+ord(s[28])+ord(s[29])+ord(s[30])+ord(s[31])+ord(s[32])+ord(s[33])+ord(s[34])+ord(s[", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(ord(x))) for x in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(ord(s))\n\nThat's not the same as the sum of the upper characters only.\nFor example, if you enter \"abcCd\" it returns 67, but if you enter \"aAaaaXa\", it returns 153.\n\nIt's not the same as the sum of the upper _ASCII_ characters only. The ASCII range is 0-127, and the numbers returned are 0-255.\n\nI'm not sure if you're just trolling or not, but if you're not, I think the point is that the output of \"abcCd\" and \"aAaaaXa\" should be the same.\n\nI'm not trolling. The point of the exercise is to write a program that outputs the sum of the ASCII codes of the first n characters in a string. The output of \"abcCd\" and \"aAaaaXa\" is the same: 67. The output of \"abcCd\" and \"aAaaaXa\" is the same as the output of \"abcCd\" and \"aAaaaXa\".\n\nThat's not the point of the exercise. The exercise is to write a program that outputs the sum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(lambda s: int(ord(s)), s))\nWell that's a terrible way to do it. I can't believe this is being taught in a university.\n\nWhy?\n\nI'm not sure if this is what the GP means, but I think the problem is that the solution is unnecessarily complicated.\nI would do it like this:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return '0' + sum(ord(chr(i))) + '0'", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(c) - ord(c.charAt(0))) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n        for c in s:\n           if c == 'a':\n              return c\n           else:\n              return sum(c)\n              if c in ['a', 'e', 'i', 'o', 'u']:\n               return c\n              return 0\n\n        print digitSum(\"\")\n        print digitSum(\"abAB\")\n        print digitSum(\"abcCd\")\n        print digitSum(\"helloE\")\n        print digitSum(\"woArBld\")\n        print digitSum(\"aAaaaXa\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        return sum(int(s[:len(s)], 16))\n\nNote that this is not correct:\n>>> print(digitSum(\"helloE\"))\n69\n>>> print(digitSum(\"woArBld\"))\n131\n>>> print(digitSum(\"aAaaaXa\"))\n153\n>>> print(digitSum(\"abAB\"))\n131\n>>> print(digitSum(\"abcCd\"))\n67\n>>> print(digitSum(\"helloE\"))\n69\n>>> print(digitSum(\"woArBld\"))\n131\n>>> print(digitSum(\"aAaaaXa\"))\n153\n>>> print(digitSum(\"abAB\"))\n131\n>>> print(digitSum(\"abcCd\"))\n67\n>>> print(digitSum(\"helloE\"))\n69\n>>> print(digitSum(\"woArBld\"))\n131\n>>> print(digitSum(\"aAaaaXa\"))\n153\n>>> print(digitSum(\"abAB\"))\n131\n>>> print(digitSum(\"abcCd\"))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.split(\" \").sum()\nThis is a great example of a terrible test. It's too short to be a good test. It's too simple to be a good test. It's too easy to be a good test.\n\nThe test is fine. It's a one-liner, so it's not a regression test, but it's a good example of a unit test.\n\nIt's a bad example of a unit test because it's too short. It's not a good example of a unit test because it's too simple. It's not a good example of a unit test because it's too easy.\nA good unit test is a test that tests a single unit. This test tests two units: the function digitSum and the string s.\n\nA unit test should test a single unit. This test tests a single unit: the function digitSum.\n\nThe function digitSum is part of the string s.\n\nThe function digitSum is a part of the string s.\n\nI don't think so.\n\nThen you're wrong.\n\nI don't think so.\n\nThen you're wrong.\n\nI don't think so.\n\nThen", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(chr(ord(s[i])) for i in range(len(s))+1)\nThat's not a function, it's a one-liner.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[i:i+8]))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        return sum(s[len(s)-1:])\nI think this is much better than the original.\n\nI agree that this is better, but I think the original is pretty good.\n\nI think it's interesting to note that the original is a classic example of a \"Python", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n     \"\"\"\n    return sum(ord(s[:len(s)-1]) for s in s.split(' '))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(ord(chr(i) - 32)))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.split()[0] + s.split()[1]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return (s.split(\"\\n\").reduce(lambda x,y: x+y))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if s.lower() in [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\",\"z\"]:\n        return int(s.upper()[:s.lower()])\n    else:\n         return int(s)\nI'm not sure what you're asking.\nYou're asking for a function that takes a string and returns the sum of the upper characters. The above code does that. It's not very efficient, but it does what you ask.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.split(\"\").sum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return (int)s[::-1]\n\n>>> digitSum(\"\")\n0\n>>> digitSum(\"abAB\")\n131\n>>> digitSum(\"abcCd\")\n67\n>>> digitSum(\"helloE\")\n69\n>>> digitSum(\"woArBld\")\n131\n>>> digitSum(\"aAaaaXa\")\n153\n\n>>> print digitSum(\"\")\n0\n>>> print digitSum(\"abAB\")\n131\n>>> print digitSum(\"abcCd\")\n67\n>>> print digitSum(\"helloE\")\n69\n>>> print digitSum(\"woArBld\")\n131\n>>> print digitSum(\"aAaaaXa\")\n153\n\n>>> print digitSum(\"\")\n0\n>>> print digitSum(\"abAB\")\n131\n>>> print digitSum(\"abcCd\")\n67\n>>> print digitSum(\"helloE\")\n69\n>>> print digitSum(\"woArBld\")\n131\n>>> print digitSum(\"aAaaaXa\")\n153\n\n>>> import itertools\n>>> print itertools.groupby(digitSum(\"\"), 2)\n[0, 1, 2, 3, 4,", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    s = string.lower()\n    s = string.lower()\n    s = string.lower()\n    return int(s.upper()) + int(s.lower())\n    return int(s.upper()) + int(s.lower())\n    return int(s.upper()) + int(s.lower())\n    return int(s.upper()) + int(s.lower())\n    return int(s.upper()) + int(s.lower())\n\nYou can use  to save the source as a file.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 0:\n        return 0\n    else:\n        return sum(int(ord(i) for i in range(len(s))))\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if s:\n        return len(s)\n    else:\n        return 0\nThis isn't a good example, because there's no reason to return 0 for empty strings.\n\nYeah, I was thinking that as well. I think the correct answer is to return the length of the string.\n\nThat's not a good answer either. The length of the string is not necessarily the length of the string with the digits removed.\n\nThat's true, but it is the length of the string with the digits removed.\n\nBut it's not the length of the string with the digits removed _and the length of the string with the digits added back_.\n\nTrue, but that's not what was asked for.\n\nI think the best answer is to return the length of the string, but that's not what was asked for.\n\nThat's not a good answer either. The length of the string is not necessarily the length of the string with the digits removed.\n\nThat's true, but it is the length of the string with the digits removed.\n\nBut it's not the length of the string with the digits removed", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if s == \"\":\n        return 0\n    return sum(ord(s) for ord in range(0, len(s) - 1))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(s[:i])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(ord, s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[0]))\nI'm not sure why you're calling this a task. It's a one-liner.\n\nI am not a programmer by any means. I have a question about the task.\nThe task seems to be asking for a function that takes a string and returns the sum of the upper characters. The example given is:\ndigitSum(\"\") => 0\ndigitSum(\"abAB\") => 131\ndigitSum(\"abcCd\") => 67\ndigitSum(\"helloE\") => 69\ndigitSum(\"woArBld\") => 131\ndigitSum(\"aAaaaXa\") => 153\nI am confused about the value of the function in the first example. The function should return 0, but it returns a blank string.\nI know that the function should return the ASCII code of the first character, but I don't know how to get that value.\n\nYou are correct.\nThe value of the function in the first example is 0. The function returns the ASCII code of the first character. The ASCII code of a blank character is 0.\n\nThanks for the clarification. I was reading the task wrong.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if s.startswith(\"0\"):\n        return 0\n    else:\n        return sum(s.split(\" \"))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    if s == \"\":\n        return 0\n    else:\n        return len(s.split(\".\")[0]) + 1\n\nThis is the most concise and readable solution I've seen.\n\nI don't understand the point of these \"hacker\" challenges. I've seen many of them and they all seem to be the same. They all involve writing some sort", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    # The sum of the ASCII codes of the upper characters.\n    def digitSumUpper(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSumUpper(\"\") => 0\n        digitSumUpper(\"abAB\") => 131\n        digitSumUpper(\"abcCd\") => 67\n        digitSumUpper(\"helloE\") => 69\n        digitSumUpper(\"woArBld\") => 131\n        digitSumUpper(\"aAaaaXa\") => 153\n      \"\"\"\n    return sum(s.upper())\n\nimport string\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    for c in s:\n        if c > 127:\n           return c", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    for i in range(len(s)):\n        if s[i] in range(0,26):\n           return s[i]\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(int, s.split()))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return sum(chr(ord(s)))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.upper()\n\nI'm not sure if you're trolling, but in case you're not: this code will fail on \"helloE\" and \"woArBld\"\n\nI think the idea is that the function is supposed to ignore the first character of the string. So it would work on \"helloE\", but not on \"hello\".\n\nIt's still not working correctly.\n\nIt's not really a problem, since the function is supposed to return the sum of the upper ASCII characters of the string.\n\nI think this is a troll.\n\nI'm not sure if you're trolling, but in case you're not: this code will fail on \"helloE\" and \"woArBld\"\n\nI think the idea is that the function is supposed to ignore the first character of the string. So it would work on \"helloE\", but not on \"hello\".\n\nIt's still not working correctly.\n\nIt's not really a problem, since the function is supposed to return the sum of the upper ASCII characters of the string.\n\nI think this is a troll.\n\nI'm not sure if you're trolling, but in case you're not", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    if s.startswith('0'):\n        return 0\n    else:\n        return sum(s.upper() for s in s.split())\n\nThis is just a slightly more readable version of what you posted. You have to be careful with the upper() method, as it will return the upper case letters, not the digits.\n\nYou're right, I did a simple search and replace on the digitSum() function, I should have done a little more research.\n\nI've changed it to be a little more correct. I was trying to show that you have to be careful with the upper() method.\n\nI changed the submission title to be \"Python\" instead of \"Python 2.7\", because this works with Python 2.6, 2.7, and 3.\n\nI prefer to use the following method to sum digits:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s.split(' '))\nThis is the correct answer.  I think a lot of people are missing the fact that the string is split by a space, and the split value is not included in the sum.\n\nI think a lot of people are missing the fact that the string is split by a space, and the split value is not included in the sum.\nYes, but this is not the reason that this is the correct answer. The question specifically states that the function should take a string as input and return the sum of the upper characters.\nThe function in the question is not a good choice because it is not returning the sum of the upper characters. It is returning the sum of the characters in the string, which includes the spaces.\n\nI think a lot of people are missing the fact that the string is split by a space, and the split value is not included in the sum.\nYes, but this is not the reason that this is the correct answer. The question specifically states that the function should take a string as input and return the sum of the upper characters.\nThe function in the question is not a good choice because it is not returning the sum of the upper characters. It is", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    if len(s) == 1:\n        return 0\n    elif len(s) == 2:\n        return 1\n    else:\n        return sum(map(int, s))\n        return 0\n        return digitSum\n\nIt's a cute exercise, but it doesn't really prove anything. You're not testing if the function works correctly, you're testing if your function works correctly.\n\nIt's a good exercise. It shows that a function can be written to work correctly, and that the way Python handles strings (the way any language does) is different from the way people usually think about strings.\n\nThe exercise is \"write a function that takes a string as input and returns the sum of the upper characters only\". You've written a function that takes a string as input and returns the sum of the upper characters only.\nThe exercise doesn't show that the way Python handles strings is different from the way people usually think about strings, it shows that the way people usually think", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s.split(' '))\nI just love the fact that you have to explain what the function is doing in the comments.\n\nI find it particularly amusing that it's a recursive function.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return int(s.upper()[:digitSize])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return len(s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s) for s in string.ascii_uppercase)\nI like this one the best.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(ord(s)) for ord in range(0, len(s))))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))\n\nThe function is not named well. The parameter is not \"s\", but \"string\". The function is not named well because it is not a function, it is a method.\n\nThe problem with the name is that it is not clear what the function returns. If I call the method with \"abcCd\" it does not return the sum of the upper characters, it returns the string \"abcCd\".\nThe function should be called \"digitSumString\" or \"digitSum(String)\".\n\nThe same problem applies to the following function:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        return len(s) - 1\n    def checkSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the characters.\n    It should throw an exception if the sum is not correct.\n\n    Examples:\n        checkSum(\"\") => 0\n        checkSum(\"ab\") => 2\n        checkSum(\"abc\") => 4\n        checkSum(\"abc\") => 4\n        checkSum(\"hello\") => 3\n        checkSum(\"woArBld\") => 2\n        checkSum(\"aAaaaXa\") => 0\n        checkSum(\"aAaaaXa\") => 0\n        checkSum(\"aAaaaXa\") => 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    if s.startswith('0'):\n       return 0\n    else:\n       return len(s)\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return ''.join(s.upper() for s in s.split())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(ord(s) - 32))\n\nThe reason that this works is that the ASCII codes for the upper 32 bits of a character are in the range 0-127, and the sum of all the characters is the ASCII code of the character.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(ord, s))\n    def digitCount(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the number of\n    characters that are digits.\n\n    Examples:\n        digitCount(\"\") => 0\n        digitCount(\"ab\") => 1\n        digitCount(\"abc\") => 2\n        digitCount(\"helloE\") => 2\n        digitCount(\"woArBld\") => 3\n        digitCount(\"aAaaaXa\") => 3\n        digitCount(\"aAaaaXa\") => 4\n        digitCount(\"aAaaaXa\") => 5\n        digitCount(\"aAaaaXa\") => 6\n        digitCount(\"aAaaaXa\") => 7\n        digitCount(\"aAaaaXa\") => 8", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(str, range(len(s))))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def sum(s):\n        sum = 0\n        for c in s:\n           sum += c\n        return sum\n    def main():\n        s = \"abcdefghijklmnopqrstuvwxyz\"\n        print sum(s)\n        print s\n        print sum(s[:4])\n        print s[:4]\n        print sum(s[:5:])\n        print s[:5:])\n        print sum(s[:6:])\n        print s[:6:])\n        print sum(s[:7:])\n        print s[:7:])\n        print sum(s[:8:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(str.upper() for _ in range(len(str)) + 1)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return 0 if s.startswith('0') and len(s) == 1 else s.upper()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n        return sum(ord(c) for c in s)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[1:])+ord(s[0])+ord(s[2:])+ord(s[3:])+ord(s[4:])+ord(s[5:])+ord(s[6:])+ord(s[7:])+ord(s[8:])+ord(s[9:])+ord(s[10:])+ord(s[11:])+ord(s[12:])+ord(s[13:])+ord(s[14:])+ord(s[15:])+ord(s[16:])+ord(s[17:])+ord(s[18:])+ord(s[19:])+ord(s[20:])+ord(s[21:])+ord(s[22:])+ord(s[23:])+ord(s[24:])+ord(s[25:])+ord(s[26:])+ord(s[27:])+ord(s[28:])+ord(s[29:])+ord(s[30:])+ord(", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        return sum(int(ord(s[0]))) + sum(int(ord(s[1])))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n        return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 0:\n        return 0\n    else:\n        return sum(ord(chr(i) for i in range(len(s) - 1)) for i in range(len(s) - 1))\n    return digitSum", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        return sum(s.split(\" \"))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    if len(s) > 0:\n         return int(s[len(s)-1]) + int(s[len(s)-2]) + int(s[len(s)-3])\n\nI'm not sure I understand the problem with this. It seems to me that it should be clear that the first argument is the string to be summed and the second argument is the number of characters to be summed.\n\nI think the problem is that if you're using this function as part of a larger program, it's not obvious how it works.\n\nIt's a good way to learn how to use the `int` type.\n\nI'm not sure I understand what you mean by that.\n\nIt's a joke about the fact that the first argument is a string and the second argument is the number of characters to be summed. The type of the first argument is `str`, which is a type alias for `str.Int()`.\n\nAh, I see. Thanks for explaining.\n\nIt's a good way to learn how to use the `int` type.\n\nI'm not sure I understand what you mean by that.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(map(ord, s))\nThat's not a good example. The string \"abcd\" is not the same as \"abcd\".\n\nThat's not a good example. The string \"abcd\" is not the same as \"abcd\".\n\nThis is a common problem with the \"challenges\" in programming competitions. I've seen a lot of them that are just plain broken.\n\nIt's a good example of a problem with a very narrow solution space.\n\nIt's also a good example of a problem with a very narrow solution space that is not well suited to programming competitions.\n\nI can't believe how many people are taking the time to write a function for this.\n\nIf you can't believe it, you must be new here.\n\nI am not new here, I just thought people would be a little more creative than this.\n\nI think it's more interesting to see how people arrive at a solution than what the solution is.\n\nA couple of my solutions:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n\n    return 0\n\n    def stringToDigitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        stringToDigitSum(\"\") => 0\n        stringToDigitSum(\"abAB\") => 131\n        stringToDigitSum(\"abcCd\") => 67\n        stringToDigitSum(\"helloE\") => 69\n        stringToDigitSum(\"woArBld\") => 131\n        stringToDigitSum(\"aAaaaXa\") => 153\n      \"\"\"\n\n    return 0\n\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\")", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.find('A').find('a').sum()", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s.split()[1:])\n\nIt would be nice if it returned the sum of all the characters.\n\nI think it's a good exercise. But it would be better to return the sum of all characters.\n\nI think it's a good exercise. But it would be better to return the sum of all characters.\n\nYou can do that. Just use the split() method.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(s.split(\",\"))\n\nThis is the correct answer.\n\nI don't understand why this is the correct answer.\n\nIt's the only one that works.\n\nIt's the only one that doesn't have a bug.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.\n\nIt's the only one that doesn't have a bug that can be detected by the test cases.", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return sum(s[::-1])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return len(s.upper())", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return 0", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(s.charAt(i)) for i in range(0, len(s) - 1))\n    #", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n      \"\"\"\n    return s.upper()\n\n>>> digitSum(\"\")\n0\n>>> digitSum(\"abAB\")\n131\n>>> digitSum(\"abcCd\")\n67\n>>> digitSum(\"helloE\")\n69\n>>> digitSum(\"woArBld\")\n131\n>>> digitSum(\"aAaaaXa\")\n153\n\n>>>\n\n>>>\n\n>>>\n\n>>>\n\n>>>\n\n>>>\n\n>>>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[0:4]), s[5:])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return (s[len(s)-1] * 2) + (s[len(s)-2])", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    for i in range(len(s)):\n        s = s[:-i]\n        digit = ord(s[i])\n        return sum(digit)", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(int(char(chr(i) + i)))\nThis is the most correct answer.  I would add that the sum should be calculated from the right.</s>", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(char.upper)\n\nThe examples are not very good. For example, \"ab\" is a valid sequence of upper case letters, but the output would be 0.\n\nThe examples are not very good. For example, \"ab\" is a valid sequence of upper case letters, but the output would be 0.\n\nYes, the examples are very bad.\n\nThe problem is that the \"char.upper\" function returns a string that is \"uppercase\", not \"uppercase letters\".\n\nThis is a very good example of the difference between a language and a programming environment.\n\nIn a language, a function \"char.upper\" should return a string of \"uppercase letters\" (or at least \"uppercase letters and numbers\", as it is in Python).\n\nIn a programming environment, a function \"char.upper\" should return a string of \"uppercase letters\".\n\nIn the first case, the function is not very useful, as the output is not useful in many cases.\n\nIn the second case, the function is very useful, as it allows for much more flexibility.\n\nThis is not to say that the example is bad", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(s[:len(s)-1]) for s in range(len(s)))\n\nimport sys", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s.upper().count()\nThis is a joke, right?\n\nIn Python, this would be:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(s[0]))) + sum(ord(chr(s[1]))) + sum(ord(chr(s[2]))) + sum(ord(chr(s[3])))", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(upper(s))\n\nThis is a nice little exercise to get you started with a programming language. The code is short and to the point. The comments are clear. The code is easy to read.\n\nA few points:\n\nThe first line of the program is the comment line. It is not necessary, but it is a good idea to have a comment line, just in case you want to explain what the program is doing.\n\nThe \"def\" statement is a keyword that tells the computer that this is a function definition. It is also the way you tell the computer to call the function when the program starts up.\n\nThe function definition is the body of the function. It is where you write the code that does the work.\n\nThe \"return\" statement tells the computer to return the value of the function back to the place where the function was called.\n\nThe \"upper\" function takes a string as input and returns the characters that are upper case.\n\nThe \"sum\" function takes two arguments and adds them together.\n\nThe \"s\" argument to the function is the string that you want to be summed.\n\nThe \"upper\" function is passed the string", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return s[:i] + s[i:j] + s[j:k] + s[k:]", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return int(s.rfind(rfind(\"\\x80\"))+int(s.rfind(rfind(\"\\x9f\"))+int(s.rfind(rfind(\"\\x9e\"))+int(s.rfind(rfind(\"\\x9d\"))+int(s.rfind(rfind(\"\\x9b\"))+int(s.rfind(rfind(\"\\x9a\"))+int(s.rfind(rfind(\"\\x9e\"))+int(s.rfind(rfind(\"\\x9d\"))+int(s.rfind(rfind(\"\\x9b\"))+int(s.rfind(rfind(\"\\x9a\"))+int(s.rfind(rfind(\"\\x9e\"))+int(s.rfind(rfind(\"\\x9d\"))+int(s.rfind(rfind(\"\\x9b\"))+int(s.rfind(rfind(\"\\x9a\"))+int(s.rfind(rfind(\"\\x9e\"))+int(s.rfind(rfind(\"\\x", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    print s.split(' ').join('')\n    for c in s:\n        if c in range(26):\n           return c\n    return 0\n\nThis is a bad example.\n\nIt is, but I think the point is to demonstrate the use of the 'in' operator, which I don't think I've ever seen before.\n\nI don't think it is. The use of 'in' operator is a side effect of the requirement of the task.\n\nThe task itself is bad, but I think the 'in' operator is actually pretty useful.\n\nIf you want to see a lot more of these, I wrote a blog post about them:\n\nI was hoping for a solution that would return a string with all the characters with ASCII codes between the two specified ASCII codes.\n\nThat's what I was expecting too.\n\nI was expecting something more like:", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    result = 0\n    for char in s:\n        if char is uppercase:\n           if char is in range(0,len(s)-1):\n               result += char\n            else:\n                result += digit(char)\n                 if digit(char) is in range(0,9):", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    def upperSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        upperSum(\"\") => 0\n        upperSum(\"abAB\") => 131\n        upperSum(\"abcCd\") => 67\n        upperSum(\"helloE\") => 69\n        upperSum(\"woArBld\") => 131\n        upperSum(\"aAaaaXa\") => 153\n       \"\"\"\n    for c in s:\n          if c < 32:\n            return c\n          else:\n            return 0\n    return upperSum\n\n>>> digitSum(\"\")\n>>> upperSum(\"\")\n>>> upperSum(\"ab\")\n>>> upperSum(\"", "def digitSum(s):\n    \"\"\"Task\n    Write a function that takes a string as input and returns the sum of the upper characters only'\n    ASCII codes.\n\n    Examples:\n        digitSum(\"\") => 0\n        digitSum(\"abAB\") => 131\n        digitSum(\"abcCd\") => 67\n        digitSum(\"helloE\") => 69\n        digitSum(\"woArBld\") => 131\n        digitSum(\"aAaaaXa\") => 153\n    \"\"\" \"\"\"\n    return sum(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr(ord(chr"]]