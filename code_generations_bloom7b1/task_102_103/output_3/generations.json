[["def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y <= x:\n        return y\n    else:\n        return choose_num(x, y / 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x <= y:\n        y += 2\n        x *= 2\n    return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # There are many different ways to solve this problem, but for this\n    # problem this is probably the best solution.\n    largest = 0\n    for i in range(x + 1, y):\n        if i % 2 == 0:\n            largest = i\n        else:\n            if largest > i:\n                largest = i\n\n    return largest", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    largest_even = 0\n    for i in range(1, x + 1):\n        if i % 2 == 0:\n            largest_even = i\n    for i in range(1, y + 1):\n        if i % 2 == 0:\n            largest_even = min(largest_even, i)\n    if largest_even == y:\n        return y\n    else:\n        return largest_even", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x, y) - min(x, y) + 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    nums = [(x, y), (y, x), (x, y), (y, x), (x, x), (x, y), (y, x), (x, x), (x, y), (y, x), (x, x), (y, y), (x, x), (y, y), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, y), (x, x), (y, x), (x, x), (y, y), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x, x), (y, x), (x,", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x == y == 0:\n        return -1\n\n    i = x // 2\n    j = y // 2\n    if i == j:\n        if (x - i) < (y - j):\n            return i + 2 * choose_num(x - i, y - j)\n        else:\n            return y - 2 * choose_num(x - i, y - j)\n    elif x < y:\n        return i + 2 * choose_num(x, y - j)\n    else:\n        return y - 2 * choose_num(x, y - j)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    elif x < y:\n        return choose_num(x, y//2)\n    else:\n        return choose_num(x, y*2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        while x < y:\n            if x % y == 0:\n                return x\n            x = x + 1\n        return -1\n    else:\n        while y < x:\n            if y % x == 0:\n                return y\n            y = y + 1\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y-x < 0:\n        raise ValueError(\"The parameters must be greater than zero.\")\n    if x == y or y == x + 1:\n        return x\n    num = 0\n    while (x >= num and num < y):\n        num += 2\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x > y:\n        x = x // 2\n        y = y // 2\n\n    if x < y:\n        return (x - y) // 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n\n    num = x\n    while x < y:\n        num += 1\n        x += 1\n    if num % 2 == 0:\n        return num\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    for i in range(2, 100):\n        if x <= i <= y:\n            return i\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y > x:\n        return choose_num(y, x) + choose_num(x, y)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x < y:\n        if (y-x) % 2:\n            return (y-x)\n        x += 1\n\n    while x > y:\n        if (y-x) % 2:\n            return (y-x)\n        x -= 1\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    n = 0\n    while n < y:\n        if n % x == 0:\n            n += x\n        n += 2\n    return n\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    i = 0\n    while i < len(x) and i < len(y):\n        if x[i] == y[i]:\n            i += 1\n        else:\n            if x[i] > y[i]:\n                i += 1\n            else:\n                if x[i] < y[i]:\n                    i += 1\n                else:\n                    i += 1\n                    return -1\n    return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x < y:\n        return choose_num(x, y/2) + choose_num(x/2, y)\n    else:\n        return choose_num(x/2, y/2) + choose_num(x/2, y) + choose_num(y/2, y/2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # begin by breaking the problem up into the cases where x is even or odd\n    if x % 2 == 0:\n        # x is even and in the range [0, y]\n        if y == x:\n            return x\n        # x is even and greater than y\n        if x > y:\n            return x - y\n    else:\n        # x is odd and in the range [0, y]\n        if y % 2 == 0:\n            # y is even and in the range [0, x]\n            if x == y:\n                return x\n            # y is even and greater than x\n            if x > y:\n                return x - y\n        else:\n            # y is odd and in the range [0, x]\n            if y > x:\n                return y - x\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y-x < 1:\n        return -1\n    l = y - x\n    r = x\n    while l > 0:\n        if l & 1:\n            r = r + 1\n        l >>= 1\n    return r", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y < x:\n        return choose_num(x, y * 2)\n    else:\n        return choose_num(y, x * 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while (x%2!=1 and y%2!=1):\n        x = x/2\n        y = y/2\n    if (x%2==1 and y%2==1):\n        return -1\n    return max(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    n = 0\n    while n < x:\n        if n % 2 == 0 and (n + 1) % 2 == 0:\n            n += 1\n        elif n % 2 == 0 and (n + 1) % 2!= 0:\n            n += 1\n        elif n % 2!= 0 and (n + 1) % 2 == 0:\n            n += 1\n        elif n % 2!= 0 and (n + 1) % 2!= 0:\n            n += 1\n    return n", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose_num(y, x)\n    return choose_num(x, y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x // 2, 0) * 2 + max(y // 2, 0)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    elif x < y:\n        return (choose_num(y, x) + 1) // 2\n    else:\n        return (choose_num(x, y) + 1) // 2 + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x < y or (x > y and x % 2 == 0):\n        return x\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return (x / y) % 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y < x:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y < x:\n        return y\n    else:\n        return x - (y - x) / 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n\n    if x < y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x!= y:\n        y = x / 2\n        x = x - y * 2\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(x, y - 2)\n    else:\n        return choose_num(y - 2, x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return max(range(x, y + 1))\n    except IndexError:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x >= y:\n        x, y = y, x\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (y - x) % 2 == 0:\n        m = x + (y - x) // 2\n    else:\n        m = y\n    if m > x:\n        m = m - (y - x) // 2\n    if m < y:\n        m = m + (x - y) // 2\n    if m > x:\n        m = m - (x - y) // 2\n    if m < y:\n        m = m + (y - x) // 2\n    if m > x:\n        m = m - (y - x) // 2\n    if m < y:\n        m = m + (x - y) // 2\n    if m > x:\n        m = m - (x - y) // 2\n    if m < y:\n        m = m + (y - x) // 2\n    if m > x:\n        m = m - (x - y) // 2\n    if m < y:\n        m = m + (x - y) // 2\n    return m", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return (x, y - 1)\n    else:\n        return (y, x - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y == x:\n        return x\n    if (x % y == 0):\n        return y\n    return choose_num(x / y, y / x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return int(max(x, y) / 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return x / y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose_num(y, x)\n    else:\n        return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = x or 0\n    y = y or 1\n    # initialize the result to -1\n    result = -1\n    # keep looking until we've found a number\n    while True:\n        # move from x to y in steps of two\n        x += 2\n        y += 2\n        # stop if we've found an even integer\n        if x % 2 == 0 and y % 2 == 0:\n            # we've found an even number in the range, so return it\n            result = x\n            break\n        # keep looking until we've reached the end of the range\n        else:\n            # if we get here, we haven't found an even number\n            return -1\n    # return our result\n    return result", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x + (y - x) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    from bisect import bisect_left\n    return bisect_left(x, y)/2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x == y:\n        return x\n\n    x = int(x)\n    y = int(y)\n    if x > y:\n        y = x\n\n    nums = list(range(x, y + 1))\n    if len(nums) % 2:\n        return -1\n\n    max_num = 0\n    for n in nums:\n        if nums[n] > max_num:\n            max_num = nums[n]\n\n    return max_num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x == y :\n        return x\n    while x < y:\n        x *= 2\n        y += 1\n    return y\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    if x < y:\n        return y\n    if x == y and x % 2 == 0:\n        return x\n    nums = list(range(1, x+1, 2))\n    nums.reverse()\n    i = 0\n    while i < len(nums):\n        if nums[i] % 2 == 0:\n            return nums[i]\n        i += 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x % 2 == 0:\n        y = y - 2\n    x = x + 1\n    while x <= y:\n        if x % 2 == 0:\n            x = x + 1\n        else:\n            x = x - 2\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    if y < x:\n        return y\n    if x % y == 0:\n        return x // y\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y\n    if x == y:\n        return x\n    while True:\n        c = x // 2\n        if c < y:\n            x += c\n            return c\n        x += c\n        y += c\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    biggest = 0\n    biggest_even = 0\n    for i in xrange(1, int(math.ceil(math.sqrt(x))+1)+1):\n        if y > biggest:\n            biggest = y\n        biggest_even = i\n    if biggest_even > x or biggest_even > y:\n        biggest = -1\n    return biggest", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x < y\n    if y == 0:\n        return x\n    if x == 0:\n        return y\n    if x == y:\n        return x + 1\n    if x % y == 0:\n        return x\n    if x < y / 2:\n        return choose_num(x, y / 2)\n    else:\n        return choose_num(x, y - x / 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    if y >= x:\n        return x\n    count = 0\n    while True:\n        if x % 2 == 0:\n            x /= 2\n            count += 1\n        else:\n            if y % 2 == 0:\n                y /= 2\n                count += 1\n                break\n    return x * count + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x <= y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x + y - 1 if x >= y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return x\n    if x < y:\n        return y\n    x = (x + y) // 2\n    if x % 2 == 0:\n        x += 1\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(x, y) * 2\n    else:\n        return choose_num(x, y) * 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x > y:\n        n = x\n    else:\n        n = y\n\n    while n < y and n % 2 == 0:\n        n += 2\n\n    return n % 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x == 0:\n        return choose_num(x, y / 2)\n    elif y - x < 0:\n        return choose_num(x, y + y - x)\n    elif x == y:\n        return x\n    else:\n        return choose_num(x / 2, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return y\n    else:\n        x, y = y, x\n        return x if x > y else y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if y - x < 0:\n        raise ValueError(\"The range cannot be shorter than the numbers.\")\n    for i in range(x - 1, y + 1):\n        if i % 2 == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    i = x\n    while (i > y):\n        if (i % 2) == 0:\n            i = i / 2\n            continue\n        else:\n            i = i / 2 + 1\n\n    if (i < 0):\n        i = i + 1\n\n    return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Find the smallest positive even number bigger than x and y.\n    z = max(x, y)\n    while z < y:\n        z = z + 2\n    z = max(x, z)\n\n    # Find the largest even number less than or equal to z.\n    z = min(z, x)\n    while z > y:\n        z = z - 2\n\n    # The largest even number that is in the range [x, y] inclusive is z.\n    return z\n\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x < y):\n        return y - x\n    else:\n        return y - x - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = x % 2\n    y = y % 2\n\n    return x + y - 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    if (x > y):\n        return choose_num(x, y/2)\n    if (y > x):\n        return choose_num(y, x/2)\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        x = x + 1\n        if x > y:\n            x = y\n        if x % 2 == 0:\n            break\n\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    x = int(x)\n    y = int(y)\n    for i in range(y - x + 1):\n        if x % 2 == 0 and x > y:\n            return x\n        x = x / 2\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return (y - x) // 2\n    else:\n        return (x - y) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x > y:\n        if x % 2 == 0:\n            y = y + 1\n        else:\n            x = x - 1\n    else:\n        if y % 2 == 0:\n            x = x + 1\n        else:\n            y = y - 1\n    if x < y:\n        return -1\n    return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y\n    if x == y and x % y == 0:\n        return x\n    while x < y:\n        y /= 2\n        x += y\n    while x % y == 0:\n        y /= 2\n        x -= y\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = x\n    while x % 2 == 0:\n        x = x // 2\n        num = x\n    if y < num:\n        num = y\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(0, x + y - x % y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        if x % y == 0:\n            return x // y + 1\n        else:\n            return -1\n    else:\n        if x % y == 0:\n            return x // y + 1\n        else:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x - 1, y - 1) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x\n    else:\n        return max([choose_num(x, y) for x in range(x + 1, y)])", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y and x - y > 0:\n        return x - y\n    if y - x > 0:\n        return y - x\n    if x == y:\n        return 1\n    if x > y:\n        return x + choose_num(x, y - x)\n    else:\n        return y + choose_num(y - x, x)\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        if x < y:\n            x += 1\n        else:\n            y -= 1\n        if x > y:\n            return x\n        else:\n            return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x!= y:\n        a = x / 2\n        b = y / 2\n        if a * 2 == b:\n            return a * 2\n        elif b * 2 == a:\n            return b * 2\n        else:\n            x = x - a\n            y = y - b\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose_num(x, y/2)\n    elif x < y:\n        return choose_num(x/2, y)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return int(max(x, y))\n    except:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    num = 0\n    while x < y:\n        num += x\n        x += 2\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return (x - y) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x\n    else:\n        return max(x - y, 0)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y:\n        if x == 1:\n            return y\n        elif x == y - 1:\n            return y - 1\n        else:\n            for i in range(x, y):\n                if i % 2 == 0:\n                    continue\n                else:\n                    return i\n    else:\n        if y == 1:\n            return x\n        elif y == x - 1:\n            return x - 1\n        else:\n            for i in range(y, x):\n                if i % 2 == 0:\n                    continue\n                else:\n                    return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        x = y\n    if x % 2 == 0:\n        return x\n    while y < x:\n        y += 2\n    while x < y:\n        x += 2\n    return x - y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= 0:\n        raise ValueError(\"x must be a positive integer\")\n    if y <= 0:\n        raise ValueError(\"y must be a positive integer\")\n    if x < y:\n        return (y-x) * 2\n    else:\n        return (x-y) * 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x + y - (y % x) - y % 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Get the biggest even integer number between x and y\n    if (x > y):\n        biggest = y\n        second_biggest = x\n    else:\n        biggest = x\n        second_biggest = y\n\n    # Return the biggest even integer number that is in the range [x, y] inclusive\n    if (biggest <= second_biggest):\n        return -1\n\n    biggest = biggest - 1\n    second_biggest = second_biggest + 1\n\n    # Return the biggest even integer number that is in the range [x, y] inclusive\n    if (biggest <= second_biggest):\n        return -1\n\n    biggest = biggest - 1\n    second_biggest = second_biggest + 1\n\n    # Return the biggest even integer number that is in the range [x, y] inclusive\n    if (biggest <= second_biggest):\n        return -1\n\n    if (x > y):\n        return biggest\n\n    return second_biggest", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y\n    elif x < y:\n        return x\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x > 1 and x - y > 1:\n        x = x + 2\n    else:\n        x = x - 1\n    if x < y:\n        y = y + 2\n    else:\n        y = y - 1\n    if y - x > 1:\n        x = x + 2\n    else:\n        x = x - 1\n    if x < y:\n        y = y + 2\n    else:\n        y = y - 1\n    if y - x > 1:\n        x = x + 2\n    else:\n        x = x - 1\n    if x < y:\n        y = y + 2\n    else:\n        y = y - 1\n    if y - x > 1:\n        x = x + 2\n    else:\n        x = x - 1\n    if x < y:\n        y = y + 2\n    else:\n        y = y - 1\n    if y - x > 1:\n        x = x + 2\n    else:\n        x = x - 1\n    if x < y:\n        y = y + 2\n    else:\n        y = y - 1\n    if y - x > 1:\n        x = x + 2\n    else:\n        x = x - 1\n    if x < y:\n        y = y + 2\n    else:\n        y = y - 1\n    if y - x > 1:\n        x =", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 0:\n        return -1\n    elif x < y and x % 2 == 0:\n        return choose_num(x//2, y)\n    else:\n        return choose_num(x//2, y + x%2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x > y:\n        return -1\n    return x + choose_num(y, x)/2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max = x\n    while y > 0:\n        if y % 2 == 0:\n            max = max * 2 + 1\n        y = y / 2\n    return max", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y < x:\n        return choose_num(x, y/2) + choose_num(y/2, y)\n    else:\n        return choose_num(x, y/2) + choose_num(y/2, y/2 + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y > x:\n        return x\n    else:\n        return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x == 0:\n        return y\n    return choose_num(x, y + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return int(ceil(x+y/2))\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y: return x\n    if x < y: return choose_num(y, x)\n    if x > y: return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    biggest = 0\n    while True:\n        biggest = (biggest << 1) + (x & 1)\n        if (biggest & y) == 0:\n            break\n    return biggest & 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Check that the numbers aren't too small\n    if x < 0:\n        raise ValueError(\"choose_num: x can't be negative\")\n\n    if y < 0:\n        raise ValueError(\"choose_num: y can't be negative\")\n\n    # If the biggest number is smaller than x or bigger than y, then we \n    # can return -1\n    if x > y:\n        return -1\n\n    # We have to return a number from the interval [x, y]\n    return max(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        y = y - x\n    elif x == y:\n        return x\n    else:\n        x = x - y\n    num = 0\n    while x % 2!= 0:\n        num += 1\n        x /= 2\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # number of possible numbers\n    N = x - y + 1\n    if N < 0:\n        N = 0\n\n    # loop over all even numbers\n    for i in range(2, N + 1):\n        if x % i == 0 and y % i == 0:\n            return i\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    i = 0\n    while (x < y):\n        i = i + 1\n        x = x * 2\n    while (i < x):\n        i = i + 1\n    return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x < 0) or (y < 0) or (x > y):\n        return -1\n    else:\n        m = x + y\n        if (m % 2) == 0:\n            return m\n        else:\n            x = x - 1\n            return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def even_range(x, y):\n        if x < y:\n            return x, y\n        else:\n            return x, y - 1\n\n    a, b = even_range(x, y)\n    if a > b:\n        return a, b\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        num = x // 2 + y // 2\n        if x > num and y > num:\n            continue\n        if x % 2 == 0 and y % 2 == 0:\n            return num\n        x, y = x + y, num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x >= y:\n        return max(x, y)\n    else:\n        return min(x, y) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y >= x:\n        if (y - x) % 2 == 0:\n            return (x - 1) * 2\n        else:\n            return y - x\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    result = x\n    for i in range(y, x+1, 2):\n        if i % 2 == 0:\n            result = i\n    return result", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(x, y) / 2 if (x - y) % 2 == 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = 0\n    while num < x:\n        if num % 2 == 0:\n            num += 1\n        else:\n            num += 2\n    while num < y:\n        num += 1\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Using recursion\n    if x > y:\n        if x > (y + 2):\n            z = x\n            while z > y:\n                z = z % y\n                z = z // y\n            return z\n    else:\n        if x > y:\n            return -1\n        elif y > x:\n            return -1\n        elif x == y:\n            return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return choose_num(x, y - 1)\n    else:\n        return choose_num(y - 1, x)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    x = int(x)\n    y = int(y)\n\n    if x > y:\n        return -1\n\n    odd = 1\n    while x%2 == 0:\n        x = x / 2\n        odd = odd + 1\n\n    while y%2 == 0:\n        y = y / 2\n        odd = odd + 1\n\n    if odd == 1:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    ret = -1\n    for i in range(0, y):\n        if x <= i <= y:\n            if ret == -1:\n                ret = i\n            elif ret < i:\n                ret = i\n    if ret == -1:\n        return -1\n    else:\n        return ret", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(y, x)\n    else:\n        return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(y, x)\n    else:\n        return choose_num(x, y) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while (x - y) % 2 == 0:\n        x, y = y, x + 2\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x < y:\n        x += 2\n        if x % y == 0:\n            return x\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    x = max(int(x), 1)\n    y = max(int(y), 1)\n    if x <= y and x - y > 0:\n        return x - y\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y:\n        a = x\n        b = y\n    else:\n        a = y\n        b = x\n\n    return choice(range(a, b + 1))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return x // 2 + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    i = x\n    j = y\n    while i <= j:\n        i += 2\n        j += 2\n        if i <= j:\n            return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y-x <= 0:\n        return -1\n    elif x == y:\n        return x\n    else:\n        half = (y-x)/2\n        while half > x and half <= y:\n            mid = half + 1\n            if mid < x or mid > y:\n                return mid\n            half = half / 2\n        return half", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def recurse(x, y, count):\n        \"\"\"This function should work exactly as the name suggests. The \n        parameter x should be the lower bound and y the upper bound. x \n        and y should be positive integers. The number count should be a \n        counter that increments when the function is called. x and y should \n        always be less than or equal to y.\n\n        The return value should be the largest even integer number in \n        the range [x, y] inclusive. If there's no such number, then the \n        function should return -1. For example:\n        recurse(12, 15, 0) = 14\n        recurse(13, 12, 1) = -1\n        \"\"\"\n        count = 0\n        while x < y:\n            if x % 2 == 0:\n                count += 1\n                x /= 2\n            elif x % 2!= 0:\n                count += 1\n                x += 2\n        return count\n\n    return recurse(x, y, 0)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y > x:\n        return choose_num(x, y / 2)\n    elif y == x:\n        return choose_num(x / 2, y)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        if x < 2:\n            return -1\n        y = y - 2\n        i = 0\n        while i < y:\n            if x % i == 0:\n                return x / i\n            i += 1\n    else:\n        if y < 2:\n            return -1\n        x = x - 2\n        i = 0\n        while i < x:\n            if y % i == 0:\n                return y / i\n            i += 1\n    return -1\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x!= y:\n        x, y = y, x + 2\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    if x%2 == 0:\n        return x // 2\n    else:\n        return choose_num(x//2, y) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    even = True\n    while even:\n        even = False\n        for i in range(2, x):\n            if i * i % y == 0:\n                even = True\n                break\n    return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x >= 0\n    assert y >= 0\n    assert x <= y\n    assert x > y\n    while True:\n        new_num = x + y\n        if new_num % 2 == 0:\n            break\n        y -= 1\n    return new_num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    from math import floor\n    while x and y:\n        if x > y:\n            x = x - y\n        else:\n            x = x - y\n        while x % 2 == 0 and x!= y:\n            x = x - (x / 2)\n        if x < y:\n            y = y - x\n        else:\n            y = y - x\n    return x + y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return _choose_num(x, y, 0, 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x - y + 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    if x > y:\n        temp = x\n    else:\n        temp = y\n    while temp <= y:\n        temp += 2\n    return temp", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    result = x + y\n    while result % 2 == 0:\n        result //= 2\n\n    return result", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y: return x\n    if x < y: return x\n    if x > y - 1: return y\n    if x == y - 1: return y - 1\n    return (y - x + 1) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Make sure x and y are non-negative\n    assert x >= 0\n    assert y >= 0\n    # Make sure x and y are not too big\n    if x > y:\n        x, y = y, x\n    # Make sure x is not greater than y\n    if x > y:\n        return -1\n    # Find the biggest even integer in the range\n    i = 0\n    while i < y and i < x:\n        if i % 2 == 0:\n            i += 1\n        else:\n            i -= 1\n    if i == y:\n        return i\n    if i == x:\n        return i + 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    for i in range(2, math.ceil(math.log(y, 2))):\n        if (x % i) == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y > x:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert x < y\n    return min(max(x, 0), y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y or y < x:\n        return -1\n    else:\n        for i in range(0, y - x + 1):\n            if x % i == 0:\n                return i\n                break\n        else:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    max = x + y\n    if max > 0:\n        return max\n    for i in range(1, max+1):\n        if i % y == 0:\n            return i\n        if i > x and i%x == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # if x > y:\n    #     y = x\n    # elif y > x:\n    #     x = y\n    # elif x == y:\n    #     return x\n    # else:\n    #     return -1\n    if y < x:\n        x, y = y, x\n    if x < y:\n        y, x = x, y\n    if x == y:\n        return x\n    if y % 2 == 0:\n        return x - y\n    elif y == 2 * x:\n        return x - 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # The function should return the integer number in the range [x, y]\n    # inclusive. If the number isn't there, then it should return -1.\n    max_value = x\n    min_value = y\n\n    while min_value <= max_value:\n        mid_value = (max_value - min_value) // 2\n\n        # If the value of the number is less than the mid_value,\n        # then we increment the value of max_value to the value\n        # of mid_value.\n        if min_value < mid_value:\n            max_value = mid_value\n\n        # If the value of the number is greater than the mid_value,\n        # then we decrement the value of min_value to the value\n        # of mid_value.\n        elif mid_value > min_value:\n            min_value = mid_value\n\n        # If the value of the number is equal to the mid_value,\n        # then we return that value.\n        else:\n            return mid_value\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y > x:\n        if x%2 == 0:\n            return x//2\n        elif x%4 == 0:\n            return x//4\n        elif x%8 == 0:\n            return x//8\n    else:\n        if x%2 == 0:\n            return x//2\n        elif x%4 == 0:\n            return x//4\n        elif x%8 == 0:\n            return x//8\n        else:\n            if y%2 == 0:\n                return y//2\n            elif y%4 == 0:\n                return y//4\n            elif y%8 == 0:\n                return y//8\n            else:\n                return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x > 1:\n        return x + choose_num(x, y - 1)\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import math\n    if y - x <= 0.0:\n        return -1\n    even = 0\n    while even < y:\n        even = even * 2\n        if even > x:\n            break\n    even = even % x\n    if even < y:\n        return even\n    while even < y:\n        even = even * 2\n        if even > x:\n            break\n    even = even % x\n    if even < y:\n        return even\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x > y:\n        x, y = y, x\n    if x % 2 == 1:\n        return x - 1\n    else:\n        return y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x <= y:\n        if x % y == 0:\n            return x\n        x += 2\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    even_max = 0\n    while even_max <= y:\n        even_max += 2\n    if even_max > x:\n        even_max = x\n    return even_max\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y\n    elif x < y:\n        return x\n    else:\n        return x//2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    else:\n        return y\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x - 1) * (y - 1) > 0:\n        a = x - 1\n        b = y - 1\n    else:\n        a = y - 1\n        b = x - 1\n    while True:\n        if a > b:\n            a, b = b, a\n        if a % 2 == 0:\n            if b % 2 == 0:\n                return a\n            else:\n                a += 1\n        elif b % 2 == 0:\n            if a % 2 == 0:\n                return b\n            else:\n                b += 1\n        else:\n            break", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        i = x\n        j = y\n        while i < j:\n            x = i * 2 + 1\n            i += 1\n            if x < y:\n                j = x\n                y = x / 2\n    else:\n        i = y\n        j = x\n        while i < j:\n            y = i * 2 + 1\n            i += 1\n            if y < x:\n                x = y\n                j = y / 2\n    return x if x >= 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max_num = 0\n    while x < y:\n        if y - x % 2 == 0:\n            max_num = y\n        x += 2\n    if x == y:\n        return max_num\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max_x = 0\n    max_y = 0\n    for i in range(y):\n        for j in range(x):\n            if j * 2 + i == max_x * 2 + max_y:\n                return (j * 2 + i)\n            elif j * 2 + i > max_x * 2 + max_y:\n                max_x = j * 2 + i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n\n    if x % y == 0:\n        return x / y\n    else:\n        # take the difference between x and y and round it to the nearest\n        # even integer\n        return (x - (x % y) + (y % x)) % y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = 0\n    if x == 0:\n        num = y\n    elif y == 0:\n        num = x\n    else:\n        while (num < x) and (num < y):\n            num = num * 2\n        num = num - x - y\n    if num < 0:\n        return -1\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    if x % y:\n        return x // y\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    assert (x >= 0 and y >= 0)\n    n = 0\n    while n < y:\n        if n%2 == 0:\n            n += 1\n        else:\n            n += 2\n    while n < x:\n        if n%2 == 0:\n            n += 1\n        else:\n            n += 2\n    return n", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x < 0) or (y < 0):\n        return -1\n\n    while (x > y):\n        x = x/2\n    while (x < y):\n        y = y/2\n\n    while (x > y):\n        x = x % 2\n    while (x < y):\n        y = y % 2\n\n    if (y == x):\n        return x\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x > y:\n        return x\n    if x == y and x % 2 == 0:\n        return x\n    if x % 2 == 0 and y % 2 == 0:\n        return x + 1\n    if x == y and x % 2!= 0:\n        return y + 1\n    if y % 2!= 0 and x % 2!= 0:\n        return y + 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        while True:\n            if x % 2 == 0:\n                x = x / 2\n                return x\n            else:\n                y = y / 2\n                return y\n    else:\n        while True:\n            if y % 2 == 0:\n                y = y / 2\n                return y\n            else:\n                x = x / 2\n                return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    i = 0\n    biggest = 0\n    while i < y:\n        if biggest < x:\n            biggest = x\n        i += 1\n\n    while i < x:\n        if biggest > y:\n            biggest = y\n        i += 1\n\n    if biggest > y:\n        return biggest\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return max([x, y]) // 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    if y > x:\n        return x\n    else:\n        return y + x % 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    res = None\n    try:\n        res = int(max(x, y))\n    except ValueError:\n        pass\n    else:\n        if res > x and res > y:\n            res = max(x, y)\n    return res", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x < y:\n        if x % 2 == 0 and y % 2 == 0:\n            return x\n        else:\n            y = y - 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose_num(y, x)\n    elif x < y:\n        return choose_num(x, y)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if (x == y):\n        return x\n\n    i = 0\n    k = 0\n    while (i < len(x)):\n        if (x[i]%2 == 0):\n            k = k + 1\n        i += 1\n\n    return k", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = 0\n    while True:\n        num = num + 1\n        if num % 2 == 0:\n            break\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return -1\n    if x == y:\n        return x\n    return x // 2 + choose_num(x // 2, y) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y <= x:\n        return x\n    return (y + x) // 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x < y:\n        if (y % 2 == 0):\n            x = x + 2\n        else:\n            x = x + 1\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y - x + 1\n    else:\n        return x - y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == 0:\n        if y == 0:\n            return -1\n        else:\n            return y\n    elif y == 0:\n        return x\n    else:\n        return choose_num(x, y/2) + choose_num(x/2, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return y\n    if x % y == 0:\n        return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = -1\n    for i in range(2, x + 1):\n        if i > y:\n            break\n        num = num + i\n        if i % 2 == 0:\n            continue\n        if num > y:\n            break\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = x\n    while num < y:\n        if num % 2 == 0:\n            num += 1\n        else:\n            num += 2\n    if num < y:\n        num += 1\n    else:\n        num += 2\n    if num < x:\n        num += 1\n    else:\n        num += 2\n    return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y >= x:\n        return x\n    elif y < x < x:\n        return y\n    elif y < x <= x:\n        return choose_num(x/2, y/2)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y or x == 0 or y == 0:\n        return -1\n    if y > x:\n        return y\n    if x > y:\n        return x\n    for i in range(2, int(y/x)+1):\n        j = choose_num(x, i)\n        if j!= -1:\n            return j\n    return -1\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x + 1\n    else:\n        return y + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(0, x + (y - x)/2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    elif x == y:\n        return y\n    else:\n        return x / 2 + choose_num(x / 2, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x\n    else:\n        return y - x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # The set of integers that are evenly divisible by x (range(x, y, x))\n    # Note that the range is inclusive for both x and y.\n    e = set(range(x, y, x))\n    # The set of even numbers (range(x, y, 2))\n    # Note that the range is inclusive for both x and y.\n    e_even = set(range(x, y, 2))\n    # The set of integers that are evenly divisible by x and by y (range(x, y, 4))\n    # Note that the range is inclusive for both x and y.\n    e_even_even = set(range(x, y, 4))\n    # The set of all integers\n    all = set(range(x, y, x) + range(x, y, x) + range(y, y + x, y))\n    # The set of all even integers\n    all_even = all - e_even\n\n    # Return the biggest even integer in all_even\n    # Note that the biggest even integer might not be in all_even\n    return all_even.max()", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    else:\n        return choose_num(x, y + 2) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y <= x:\n        return -1\n    if x == y or x % 2 == 1:\n        return x\n    while y > x:\n        y = y // 2\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x:\n        if x & 1:\n            x += 1\n        else:\n            return -1\n        x //= 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max_num = 0\n    for x_value in range(x, y+1):\n        if x_value % 2 == 0:\n            max_num = max_num + x_value\n    return max_num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return min(max(x, y), int(math.ceil(math.log(y) / math.log(x)) + 1))"]]