[["def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Init\n    nums = {}\n    for i in range(0, len(n)):\n        nums[n[i]] = 0\n    # Loop\n    for n in n:\n        # Get first and last digits\n        digit1, digit2 = n[:-1], n[1:]\n        # Start\n        if digit1 == 1:\n            # Increment first digit and add it to nums\n            nums[digit1] += 1\n        # End\n        if digit2 == 1:\n            # Increment second digit and add it to nums\n            nums[digit2] += 1\n        # Start and end\n        if digit1 == 0 and digit2 == 0:\n            # Increment first and second digits and add them to nums\n            nums[digit1] += 1\n            nums[digit2] += 1\n    # Return\n    return nums", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 2 == 0:\n        return n\n    elif n == 1:\n        return n\n    else:\n        return sum([starts_one_ends(int(n/2)) * 2 for n in range(1, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(x == 1 and len(y) <= n - 1 for x, y in zip(range(n + 1), range(n - 1, 0, -1)))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n > 0\n    start = 0\n    end = n\n    while start < end:\n        start += n % 10\n        end -= n // 10\n    return end - start", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return 1 + starts_one_ends(int(n // 2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(1, n+1)) - sum(1 for _ in range(1, n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([one_ends(n, k) for k in range(2, n+1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = int(n)\n    if n <= 1:\n        return 0\n    if n % 2 == 1:\n        return 0\n    start = 1\n    end = 1\n    i = 1\n    while i < n:\n        if start == end:\n            break\n        if start!= 1 and start == n:\n            break\n        if end!= 1 and end == n:\n            break\n        if i % 2 == 0:\n            start *= 10\n        else:\n            end *= 10\n        i += 1\n    return n - i", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        return 0\n    n_digit = int(math.log10(n))\n    start_one = (n_digit == 1)\n    end_one = (n_digit == 1)\n    if start_one:\n        start = 0\n    else:\n        start = 1\n    if end_one:\n        end = n\n    else:\n        end = n - 1\n    return end - start + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n == 3:\n        return 2\n    elif n == 4:\n        return 3\n    else:\n        return sum([starts_one_ends(n - i) for i in range(5, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert(n < 10000)\n    return (1 + ((n - 1) // 2) * ((n - 1) // 2) * ((n - 1) // 2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return ((1 << (n - 1)) - 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    k = 0\n    for i in range(1, n):\n        if n % i == 0 and n % i == 1:\n            k += 1\n    return k", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n - 1) // 2 * (n + 1) / 2 * 2 ** (n - 1) * 2 ** (n + 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    start = 0\n    end = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            start += i\n        else:\n            end += i\n    return start, end", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    a = 0\n    while n > 0:\n        if n % 2 == 1:\n            a += 1\n        n //= 2\n    return a", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def _count(start, end):\n        return sum(i == start for i in xrange(end))\n    return _count('1', str(n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    else:\n        return (n * (n + 1)) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def m(n):\n        \"\"\"\n        Return a list of all the m-digit positive integers.\n        \"\"\"\n        return [int(i) for i in range(1, n+1)]\n    return m(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    numbers = {}\n    for i in range(1, n + 1):\n        numbers[i] = 0\n    numbers[0] = 1\n    for i in range(1, n + 1):\n        for j in range(0, i):\n            if numbers[j] + 1 + numbers[j] == i + 1:\n                numbers[j + 1] += 1\n    return numbers[n - 1]", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([ n - i for i in range(1, n) if i in [1, n]])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(filter(lambda x: x[0] == 1, filter(lambda x: x[-1] == 1, xrange(1, n + 1))))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in range(0, n):\n        if n % i == 0:\n            result += i\n        elif 1 <= i <= n - 1 - n % i:\n            result += i\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    res = 0\n    for i in range(1, n+1):\n        if n%i == 0:\n            res += 1\n        else:\n            res -= 1\n    return res", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n > 1:\n        return 1 - (n - 2) * starts_one_ends(n - 2)\n    else:\n        return starts_one_ends(n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    else:\n        return sum([i == 1 for i in range(n - 1, 1, -1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        return 0\n    a = 0\n    for i in range(0, n):\n        if i == 0:\n            a += 1\n        else:\n            a += n - i\n    return a", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Define some useful constants.\n    one = 1\n    two = 2\n    three = 3\n    four = 4\n    five = 5\n    six = 6\n    seven = 7\n    eight = 8\n    nine = 9\n    ten = 10\n    eleven = 11\n    twelve = 12\n    thirteen = 13\n    fourteen = 14\n    fifteen = 15\n    sixteen = 16\n    seventeen = 17\n    eighteen = 18\n    nineteen = 19\n    twenty = 20\n    twentyone = 21\n    twentytwo = 22\n    twentythree = 23\n    twentyfour = 24\n    twentyfive = 25\n    twentysix = 26\n    twentyseven = 27\n    twentyeight = 28\n    twentynine = 29\n    thirty = 30\n    thirtyone = 31\n    thirtytwo = 32\n    thirtythree = 33\n    thirtyfour = 34\n    thirtyfive = 35\n    thirtysix = 36\n    thirtyseven = 37\n    thirtyeight = 38\n    thirtynine = 39\n    forty = 40\n    fortyone = 41\n    fortytwo = 42\n    fortythree = 43\n    fortyfour = 44\n    fourfifty = 45\n    fortysix = 46\n    fourseventy = 47\n    foursixty = 48\n    fifty = 50\n    fiftyone = 51\n    fiftytwo = 52\n    fiftythree = 53", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return len(filter(lambda x:x[0] == 1, range(1, n + 1)))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(x == 1 for x in (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n % 2 == 1:\n        return 0\n    else:\n        return 1 + starts_one_ends(n // 2) + starts_one_ends(n % 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return len(filter(lambda x: x[1] == 1, range(n)))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    starts_one = 0\n    ends_twenty = 0\n    for i in range(n):\n        if i == 0:\n            starts_one += 1\n        elif i % 2 == 0:\n            ends_twenty += 1\n\n    return starts_one, ends_twenty", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n>0\n    return sum([ends_one(n) for n in range(2,n+1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n):\n        if n-i-1 == 1:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n - 1) // 2 + 2 if n % 2 else (n - 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    else:\n        return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    s = 0\n    for i in range(10):\n        for j in range(0, n):\n            if n % i == 0 and 1 < j < n:\n                s += 1\n    return s", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    i = 0\n    while i < n:\n        if n % 10 == 0:\n            return i\n        i += 1\n    return i", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    starts_one = sum(x in ('1', '2') for x in range(1, n + 1))\n    ends_one = sum(x in ('1', '2') for x in range(1, n - 1))\n    return starts_one + ends_one", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    start = 1\n    end = n\n    while start <= end:\n        if n % 10 == 0:\n            return end - start\n        start += 10\n        end -= 10\n    return end - start", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    s = []\n    for i in range(1, n + 1):\n        if n % i == 0:\n            s.append(i)\n    return len(s)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    if n < 2:\n        return 0\n    return starts_one(n - 1) + ends_one(n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    k = 0\n    for i in range(1, n + 1):\n        k += sum(n * x for x in range(i, i + 1))\n    return k", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n > 0\n    return (n * (n - 1)) // 2 + (n - 1) * (n * (n - 2)) // 3", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(sum(0 for i in range(0, n) if i == 1) for i in range(n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n * n - n) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # So if n = 3, then we have 4 possibilities, and 3 is the middle digit\n    c = 0\n    for i in range(n):\n        if i == n - 1 - i:\n            c += 1\n    return c", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        return 0\n    m = n // 10\n    d = n % 10\n    if d:\n        return ((n - m) * (n - m + 1) * (n - m + 2) * (n - m + 3)) / (d * d * d)\n    else:\n        return ((n - m) * (n - m + 1) * (n - m + 2)) / (m * m * m)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n % 2 == 0:\n        return 0\n    elif n % 3 == 0:\n        return 1\n    elif n % 5 == 0:\n        return 2\n    elif n % 7 == 0:\n        return 3\n    elif n % 11 == 0:\n        return 4\n    else:\n        return 5", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n - int(n / 10) if n % 10 == 0 else 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    digits = [str(i) for i in range(n)]\n    count = 0\n    for i in range(n):\n        if i in digits:\n            if digits[i] == '1':\n                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    s = 0\n    for i in range(n - 1):\n        if i == 0:\n            s += 1\n        else:\n            s += starts_none_ends(i, 1) - s\n    return s", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return n\n    if n == 2:\n        return n\n    return (n - 1) // 2 + starts_one_ends(n - 2) + starts_one_ends(n - 1)\n\nstarts_one_ends(5) # 2\n\nstarts_one_ends(20) # 8\nstarts_one_ends(22) # 6\nstarts_one_ends(20,2) # 2\n\nstarts_one_ends(5,1) # 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n**(n-1) - 1) % 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 1\n    if n == 5:\n        return 1\n    if n == 6:\n        return 1\n    if n == 7:\n        return 1\n    if n == 8:\n        return 1\n    if n == 9:\n        return 1\n    if n == 10:\n        return 1\n    if n == 11:\n        return 1\n    if n == 12:\n        return 1\n    if n == 13:\n        return 1\n    if n == 14:\n        return 1\n    if n == 15:\n        return 1\n    if n == 16:\n        return 1\n    if n == 17:\n        return 1\n    if n == 18:\n        return 1\n    if n == 19:\n        return 1\n    if n == 20:\n        return 1\n    if n == 21:\n        return 1\n    if n == 22:\n        return 1\n    if n == 23:\n        return 1\n    if n == 24:\n        return 1\n    if n == 25:\n        return 1\n    if n == 26:\n        return 1\n    if n == 27:\n        return 1\n    if n == 28:\n        return 1\n    if n == 29:\n        return 1\n    if n == 30:\n        return 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 0:\n        raise ValueError(\"Number must be positive\")\n    if n == 1:\n        return n\n    total = 0\n    for i in range(n - 1):\n        total += starts_one_ends(n - i)\n    return total\n\nstarts_one_ends(21)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in xrange(1, n + 1):\n        if n % i == 0:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # short-circuit\n    if n < 2:\n        return 0\n    if n % 2 == 1:\n        # odd number\n        return 0\n    # even number\n    return 1 + int(math.ceil(math.log(n, 2))) + (n - 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    start, end = 0, n\n    while start < end:\n        if n % 10 == 0:\n            start += 1\n        n = n // 10\n        if start < end:\n            start, end = end, start\n    return start, end", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 0\n    if n == 3:\n        return 1\n    if n == 4:\n        return 2\n    return sum([starts_one_ends(n - i) * ends_one_ends(n - i) for i in range(5, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 1:\n        return 0\n    if n % 2 == 2:\n        return 0\n    return (n - 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 10 == 1:\n        return 1\n    else:\n        return int(n) - int(n / 10) + starts_one_ends(n / 10)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n\n    return n + sum([sum([(n / j) % i for i in range(2, j + 1)]) for j in range(2, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n >= 1\n    nums = set()\n    for i in range(1, n + 1):\n        for j in range(1, i):\n            if j == 1:\n                nums.add(i)\n            else:\n                nums.add(i * j)\n    return len(nums)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Input is negative.\")\n    if n == 0:\n        return 0\n    if n < 4 or n > 15:\n        return 0\n    return n * (n - 1) / 2\n</s>", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n < 1:\n        return -1\n    if n % 2 == 0:\n        return 0\n    if n % 2 == 1:\n        return 1\n    if n % 3 == 0:\n        return n / 2\n    if n % 3 == 1:\n        return n / 3\n    if n % 4 == 0:\n        return n / 4\n    return -1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    elif n % 3 == 0:\n        if n == 4:\n            return 0\n        else:\n            return 1\n    else:\n        return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return len([i for i in range(1, n + 1) if i % 10 == 1])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    start = 1\n    end = n - 1\n    count = 0\n    while start <= end:\n        count += starts_one(start)\n        start += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in xrange(1, n+1) if i in [1, n-i+1]])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 0:\n        return 0\n    if n % 2 == 1:\n        return n - 1\n    if n % 2 == 2:\n        return n - 2\n    if n % 3 == 1:\n        return (n - 1) // 2\n    if n % 3 == 2:\n        return (n - 1) // 3\n    if n % 5 == 1:\n        return (n - 1) // 5\n    return ((n - 1) // 10) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for n in range(1, n + 1):\n        if n == 1:\n            count += 1\n        else:\n            count += starts_one_ends(n - 1)\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n >= 1\n    r = 0\n    for i in range(1, n+1):\n        if n%i == 0:\n            r += n//i\n    return r", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return sum([starts_one_ends(i) for i in range(1, n - 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    start = 1\n    count = 0\n    while start < n:\n        start += 1\n        count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(map(lambda x: 1 if x[1] == 1 else 0, range(n)))\n</s>", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    start_count = 0\n    end_count = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            start_count += 1\n        elif n % -i == 0:\n            end_count += 1\n    return (start_count, end_count)\n\nstarts_one_ends(22)\n\nA:\n\nPython\n4 bytes, 5 loops\nlambda n: sum([sum(k) for k in range(n, 1, -1) if (n % k) == 0])\n\nTry it online!\nWhy it's shorter: sum(range(n, 1, -1)) because it is less work to calculate the count for each value of n, than it is to calculate the count for each possible value of n.\n\nA:\n\nPython, 26 bytes", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n\n    if n < 3:\n        return 0\n\n    if n % 2 == 0:\n        # A number of even length starts with 1\n        return ((n - 1) // 2) * 2\n\n    return n // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n % 2 == 1:\n        return 0\n    else:\n        return n - (n - 1) % 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(n):\n        if i % 2 == 0 and i > 1:\n            count += 1\n            break\n        if i % 2 == 1:\n            count += 1\n            break\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(x + 1 for x in range(1, n + 1) if x % 2 == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n > 1:\n        return 0\n    return 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    for i in xrange(2, n+1):\n        if n % i == 0 and i!= 1:\n            yield n-i\n        if n % i == 0 and i == 1:\n            yield i", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n - 1) // 2 * (n - 2) // 2 * (n - 3) // 2 * (n - 4) // 2 * (n - 5) // 2 * (n - 6) // 2 * (n - 7) // 2 * (n - 8) // 2 * (n - 9) // 2 * (n - 10) // 2 * (n - 11) // 2 * (n - 12) // 2 * (n - 13) // 2 * (n - 14) // 2 * (n - 15) // 2 * (n - 16) // 2 * (n - 17) // 2 * (n - 18) // 2 * (n - 19) // 2 * (n - 20) // 2 * (n - 21) // 2 * (n - 22) // 2 * (n - 23) // 2 * (n - 24) // 2 * (n - 25) // 2 * (n - 26) // 2 * (n - 27) // 2 * (n - 28) // 2 * (n - 29) // 2 * (n - 30) // 2 * (n - 31) // 2 * (n - 32) //", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n % 2 == 0:\n        return 1\n    return (n // 2) - 1 + starts_one_ends(n // 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(map(lambda x: x == 1, range(n)))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n % 2 == 0:\n        return 1 if n%2 == 1 else 0\n    else:\n        if n%2 == 1:\n            return 1 if n%2 == 1 else 0\n        else:\n            return 0 if n%2 == 1 else 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    elif n <= 7:\n        return (n - 1) * ((n - 1) + 1) / 2\n    elif n <= 20:\n        return (n - 1) * ((n - 1) + 3) / 2\n    elif n <= 101:\n        return (n - 1) * ((n - 1) + 5) / 2\n    elif n <= 2000:\n        return (n - 1) * ((n - 1) + 7) / 2\n    else:\n        return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([n - i for i in range(0, n) if i % 2 == 1])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n <= 7:\n        return 0\n    else:\n        return (n - 1) * starts_one(n - 2) + starts_one(n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n > 0:\n        return sum(1 for i in range(n) if i == 1)\n    else:\n        return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * (n - 1) * (n - 2) * (n - 3) * (n - 4) * (n - 5) * (n - 6) * (n - 7) * (n - 8)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    s = 1\n    for i in range(1, n):\n        if n % i == 0:\n            return -1\n        s += starts_one(n-i)\n    return s", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"starts_one_ends(): given argument must be >= 0\")\n    return sum(1 for n in range(n) if n % 2 == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(n - 1) if n % _ == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    res = 1\n    for i in range(1, n + 1):\n        res *= (n - i) * (n + i) * (n + i - 1) * (n - i + 1) / (n - 1)\n    return res", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n % 10) * 10 + (n // 10) * 100", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n*(n - 1)/2 - 2 * (n - 1)/2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        raise ValueError('Negative argument for `starts_one_ends`')\n    if n == 0:\n        return 1\n    if n % 2 == 0:\n        return starts_one_ends(n // 2)\n    return starts_one_ends(n // 2) + starts_one_ends(n % 2)\n</s>", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([one_ends(i) for i in range(1, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([starts_one(n) or ends_one(n) for n in range(10)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 1\n    return n//2 + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([one_ends(i) for i in xrange(1, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    s = 1\n    t = 1\n    for i in range(1, n+1):\n        if n-i < 1:\n            s += 1\n        else:\n            t += 1\n    return s, t", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for x in xrange(n) if x % 1 == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n % 2 == 0:\n        return 1\n    return starts_one_ends(n // 2) + starts_one_ends(n % 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 0:\n        return 1\n    return n - (n - 1) // 2 + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([starts_one(n) for i in range(0, n)]) + sum([ends_one(n) for i in range(0, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n\n    result = 0\n    for i in range(1, n):\n        if n % i == 0:\n            result += 1\n        else:\n            break\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = int(n)\n    result = 0\n    start = 0\n    while start < n:\n        start += 1\n        result += 1\n        if start % 2 == 0:\n            break\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([(n - i) * (n - i + 1) / 2 ** i for i in range(1, n - 1)])\n\nstarts_one_ends(2) # 0\nstarts_one_ends(3) # 1\nstarts_one_ends(5) # 2\nstarts_one_ends(7) # 3\nstarts_one_ends(9) # 4\nstarts_one_ends(11) # 5\nstarts_one_ends(13) # 6\nstarts_one_ends(15) # 7\nstarts_one_ends(17) # 8\nstarts_one_ends(19) # 9\nstarts_one_ends(21) # 10\nstarts_one_ends(23) # 11\nstarts_one_ends(25) # 12\nstarts_one_ends(27) # 13\nstarts_one_ends(29) # 14\nstarts_one_ends(31) # 15\nstarts_one_ends(33) # 16\nstarts_one_ends(35) # 17\nstarts_one_ends(37) # 18\nstarts_one_ends(39) # 19\nstart", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n > 0\n    end = 0\n    start = 0\n    for i in xrange(n):\n        if n - i - 1 == 1:\n            start += 1\n        else:\n            end += 1\n    return end - start", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        return 0\n    i = 0\n    while i < n:\n        if n % 10 == i % 10:\n            i += 1\n        i += 1\n    return n % 10", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return n\n    if n % 2 == 0:\n        return 2 * n - 1\n    if n % 4 == 0:\n        return 4 * n - 2\n    if n % 8 == 0:\n        return 8 * n - 4\n    if n % 16 == 0:\n        return 16 * n - 8\n    if n % 32 == 0:\n        return 32 * n - 16\n    return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    count = 0\n    for i in range(1, n):\n        if n - i > 0:\n            if n - i % 2 == 1:\n                count += 1\n            else:\n                count += 2\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return sum([n * k for k in range(1, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    if n == 1:\n        result = 1\n    elif n > 1:\n        for i in range(n - 2):\n            result += starts_one_ends(i)\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n == 1:\n        return 1\n    return n - (n / 10)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for x in range(1, n + 1) if x == n + 1 - x)\n</s>", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return (starts_one_ends(n - 1) * n + starts_one_ends(n - 2)) / 2\n    else:\n        return (starts_one_ends(n - 1) * n + starts_one_ends(n - 2)) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([starts_one_ends(x) for x in range(0, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    num = 0\n    for i in range(0, n):\n        if n - i == 1:\n            num += 1\n    return num", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Transformation from a list of counts to a map\n    counts = {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 0, 9: 0}\n    for i in range(n):\n        counts[i] = counts[i - 1] + 1\n    map(lambda x: x[0] + x[1], counts.items())\n    return [int(c) for c in counts.values()]", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n % 2 == 0:\n        return n - 1\n    elif n % 3 == 0 and n % 4 == 0 and n % 5 == 0:\n        return 3 + n / 3 - 1\n    elif n % 7 == 0 and n % 8 == 0 and n % 9 == 0 and n % 10 == 0 and n % 11 == 0 and n % 12 == 0:\n        return 5 + n / 7 - 1\n    elif n % 7 == 0 and n % 8 == 0 and n % 9 == 0 and n % 10 == 0 and n % 11 == 0 and n % 12 == 0 and n % 13 == 0 and n % 14 == 0 and n % 15 == 0 and n % 16 == 0 and n % 17 == 0 and n % 18 == 0 and n % 19 == 0 and n % 20 == 0 and n % 21 == 0 and n % 22 == 0 and n % 23 == 0 and n % 24 == 0 and n % 25 == 0 and n % 26 == 0 and n % 27 == 0 and n % 28 == 0 and n % 29 == 0 and n % 30 == 0 and n % 31 == 0:\n        return 5 + n / 7 - 1\n    else:\n        return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    elif n % 2 == 0:\n        return 1\n    else:\n        return (n // 2) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * n", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        count += (n - i + i % i) % n\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for x in range(n) if x == 1) - sum(1 for x in range(n) if x == -1)\n\nstarts_one_ends(2)\nstarts_one_ends(3)\nstarts_one_ends(5)\nstarts_one_ends(6)\nstarts_one_ends(7)\nstarts_one_ends(10)\nstarts_one_ends(11)\nstarts_one_ends(13)\nstarts_one_ends(14)\nstarts_one_ends(15)\nstarts_one_ends(16)\nstarts_one_ends(17)\nstarts_one_ends(18)\nstarts_one_ends(20)\nstarts_one_ends(21)\nstarts_one_ends(23)\nstarts_one_ends(24)\nstarts_one_ends(25)\nstarts_one_ends(26)\nstarts_one_ends(27)\nstarts_one_ends(28)\nstarts_one_ends(30)\nstarts_one_ends(31)\nstarts_one_ends(32)\nstarts_one_ends(33)\nstarts_one_ends(34)\nstarts_one_ends(35)\nstarts_one_ends(36", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n += 1\n    sum = 0\n    for x in range(1, n):\n        sum += n % x == 0\n    return sum", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n - 1) * (n - 2) * (n - 3) / (3 * 4 * 5 * 6 * 7 * 8 * 9) + \\\n        1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return int(math.log(n, 2)) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(len(n)+1) if n[:1] == 1 or n[-1:] == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (1 if n % 2 == 0 else 0) + (1 if n % 10 == 0 else 0) + \\\n           (1 if n % 100 == 0 else 0) + (1 if n % 1000 == 0 else 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n - 1) // 2 - (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    counts = {}\n    for k in range(10):\n        counts[k + 1] = 0\n    for k in range(n):\n        for j in range(1, k + 1):\n            if k + j == n:\n                counts[j - 1] += 1\n    for k in range(n):\n        for j in range(1, n - k + 1):\n            if k + j == n:\n                counts[j - 1] += 1\n    return counts[n - 1]", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(0 if num == 1 else 1 for num in range(0, n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n >= 0:\n        return sum([ 1 for _ in xrange(n) ])\n    else:\n        return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    start = 0\n    for i in xrange(n):\n        start = start + starts_one(i)\n    return start", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    starts_one = [0] * (10**9 + 1)\n    count = 0\n    for i in range(10):\n        for j in range(i):\n            if j < len(n) and n[i] == 1:\n                starts_one[0] = starts_one[0] + 1\n            elif j == len(n):\n                count = count + 1\n                break\n        if count > 0:\n            break\n    return starts_one, count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return ((n - 1) / 2) + ((n / 2) - 1) * n", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # e.g., 1, 0, 1, 1, 0, 2, 0, 0, 0, 1, 1, 2, 1\n    # e.g., 2, 2, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 2, 2\n    # e.g., 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 1\n    return sum(1 for _ in xrange(n) if _ in (1, -1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(1, n + 1) if n % _ == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(i):\n        if i in range(1,n):\n            return 1\n        else:\n            return 0\n\n    return sum(count(i) for i in range(1,n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n\n    a = [0, 0]\n    for i in range(2, n + 1):\n        a[0] += a[1]\n        a[1] = 0\n\n    b = 0\n    for i in range(2, n + 1):\n        if a[i] > 0:\n            b += 1\n            a[i] = a[i] - b\n        if a[i] < 0:\n            a[i] = -a[i]\n            a[0] = a[0] - a[i]\n\n    return a[1]", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        raise ValueError('positive integer argument is required')\n    count = 0\n    for i in range(n + 1):\n        if n % i == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(n, start=0, end=1):\n        if start!= end:\n            return (n - start) * (end - start)\n        return n\n\n    return sum(count(n) for n in range(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([one_ends(n - digit) for digit in range(1, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in range(1, n + 1):\n        if n - i - 1 < 1:\n            result += 1\n        else:\n            result += starts_one_ends(n - i - 1)\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    c = 0\n    for i in range(1, n+1):\n        if n - i == 1 and i == 1:\n            c += 1\n    return c", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = n + 1\n    start = 1\n    end = n\n    count = 0\n    while start <= end:\n        count += start % 10 ** (end - start)\n        start += 10 ** (end - start)\n        end -= 10 ** (end - start)\n\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # This is a little trick we use to make sure we always count the\n    # correct numbers.\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return (n - 1) // 2\n    return (n - 1) // 2 + 2 * (n - 1) % 2\n\nstarts_one_ends(3) #=> 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([one_ends(n + i) for i in range(1, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n + 1) - ((n + 1) % (n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    if n < 2:\n        return result\n    for i in range(2, n):\n        if n - i % i == 1:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    for _ in range(n):\n        yield 1\n    for _ in range(n - 1):\n        yield 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(x for x in range(n) if x < n and (x % 1 == 0 or x % 2 == 0))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return (n // 2) + (n % 2) - 1\n    return 1 + (n // 2) - 1 + starts_one_ends(n // 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    k = n - 1\n    if k == 0:\n        return 0\n    elif k == 1:\n        return 1\n    else:\n        return k * (n - 1) / (2 * k + 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([(n % i) == 0 for i in range(1,10)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return n // (n - 1) * starts_one_ends(n - 1) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n % 2 == 0:\n        return (n + 1) / 2\n    else:\n        return (n - 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = int(n)\n    num = 0\n    for i in range(0, n):\n        if n % i == 0:\n            num += 1\n    return num", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return n % 2 == 1 and n - 1 in (1, 2) or n - 1 in (3, 4) or n - 1 in (5, 6) or n - 1 in (7, 8) or n - 1 in (9, 10)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n - 1) / 10 + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n%2 == 1:\n        return 0\n    if n%3 == 0:\n        return 1\n    if n%5 == 0:\n        return 0\n    return (1 if n%7 == 0 else 0) + (1 if n%9 == 0 else 0) + (1 if n%11 == 0 else 0) + (1 if n%13 == 0 else 0) + (1 if n%15 == 0 else 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n - starts_one_ends(n - 1) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(x for x in range(1, n + 1) if x % 2 == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * (n + 1) // 2 - 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # python is 0 indexed\n    count = 0\n    if n < 0:\n        return count\n    if n > 0 and n % 2 == 1:\n        count += 2 * starts_one(n // 2)\n    for i in range(n):\n        if n > 0:\n            if i % 2 == 0:\n                count += 2 * starts_one(i // 2)\n            elif i % 2 == 1:\n                count += 2 * ends_one(i // 2)\n    return count\n</s>", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return (n - 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    ret = 0\n    for i in range(0, n):\n        if n % i == 0:\n            continue\n        if n - i >= 1:\n            if i == 0:\n                ret += 1\n        elif i == n - 1:\n            ret += 1\n    return ret", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n <= 1:\n        return 0\n    n = n % 10\n    return n * (n - 1) / 10 + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n % 2 == 0:\n        return 1\n    return n * (n - 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n += 1\n    if n > 8:\n        return 0\n    if n % 2:\n        return 0\n    count = 0\n    for i in range(n):\n        count += (n - i) ** 2\n        count += ((n - i - 1) ** 2) * ((n - i - 2) ** 2) / 3\n    return count / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return int(n) - sum([int(i) for i in range(1, n + 1) if i!= 1])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(10):\n        if n % i == 0 or n % i == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (1<<(n + 1)) - 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    s = n\n    r = n\n    d = n - 1\n    i = 0\n    while i < len(str(n)):\n        if s < i:\n            s = s + 1\n        else:\n            s = s - 1\n        if r > i:\n            r = r - 1\n        else:\n            r = r - 1\n        if n % 2 == 0:\n            i = i + 1\n        else:\n            i = i - 1\n        d = d + 1\n    return (s, r, d)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(n % x == 0 for x in range(10))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 3:\n        return 0\n    if n == 3:\n        return 1\n    else:\n        count = 1\n        for i in range(n - 2):\n            for j in range(i + 1, n):\n                if j > i:\n                    if i == 1 or j == 1:\n                        count += 1\n        return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (1 + 1j)**(n - 1) / (1 + 1j)**n", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([ones(n - i) for i in range(1, n - 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return int(math.pow(10, n) - math.floor(math.pow(10, n) * math.log(n, 2)))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in range(n):\n        if n%i == 0:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return (n % 2) * (n - 1) - sum(x for x in range(n) if x % 2 == 1)\n\nstarts_one_ends(2) #=> 0\nstarts_one_ends(3) #=> 0\nstarts_one_ends(4) #=> 0\nstarts_one_ends(5) #=> 0\nstarts_one_ends(6) #=> 0\nstarts_one_ends(7) #=> 2\nstarts_one_ends(8) #=> 1\nstarts_one_ends(9) #=> 3\nstarts_one_ends(10) #=> 2\nstarts_one_ends(11) #=> 1\nstarts_one_ends(12) #=> 0\nstarts_one_ends(13) #=> 3\nstarts_one_ends(14) #=> 2\nstarts_one_ends(15) #=> 1\nstarts_one_ends(16) #=> 0\nstarts_one_ends(17) #=> 3\nstarts_one_ends(18) #=> 2\nstarts_one_ends(19) #=> 1\nstarts_one_ends(20) #", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2:\n        return 0\n    if n < 3:\n        return 0\n    if n % 3 == 2:\n        return 1\n    if n % 3 == 1:\n        return 1 + starts_one_ends(n // 3)\n    if n % 3 == 2:\n        return 2 + starts_one_ends(n // 3)\n    if n % 3 == 3:\n        return 3 + starts_one_ends(n // 3)\n    return 4 + starts_one_ends(n // 3)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in range(1, n+1):\n        if not n%i:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = int(n)\n    return sum(1 for i in range(n - 1) if i + 1 == n - i)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 0:\n        raise ValueError('Only positive n can be processed.')\n\n    def _next(i, n):\n        if n <= 0:\n            return None\n\n        if i < 0:\n            return 1 if i == 0 else i\n        else:\n            if i >= n:\n                return n - i\n            else:\n                return i + 1\n    return sum(_next(i, n) for i in range(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 2:\n        return 0\n    starts_one = 0\n    for i in range(n):\n        starts_one += n - i == 1\n    return starts_one", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = n - 1\n    return (n * (n - 1) / 2) + n * n / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n % 2 == 0:\n        if n == 1:\n            return 1\n        else:\n            return 0\n    n = n / 2\n    start = n - 1\n    end = n + 1\n    if starts_one_ends(start) + ends_one_ends(end) == 1:\n        return 2\n    return 0", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    total = 0\n    for i in range(1, n + 1):\n        if i in str(n):\n            if i in str(\"0123456789\"):\n                total += 1\n    return total\n\nstarts_one_ends(16)           #=> 5\nstarts_one_ends(17)           #=> 7\nstarts_one_ends(18)           #=> 7\nstarts_one_ends(19)           #=> 7\nstarts_one_ends(20)           #=> 8\nstarts_one_ends(21)           #=> 9\nstarts_one_ends(22)           #=> 11\nstarts_one_ends(23)           #=> 11\nstarts_one_ends(24)           #=> 11\nstarts_one_ends(25)           #=> 11\nstarts_one_ends(26)           #=> 14\nstarts_one_ends(27)           #=> 15\nstarts_one_ends(28)           #=> 17\nstarts_one_ends(29)           #=> 17\nstarts_one_ends(30)           #=> 17\nstarts_one_ends(31)           #=> 17\nstarts_", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = n - 1\n    starts_one = 0\n    if n == 1:\n        return starts_one\n    if n % 2 == 0:\n        starts_one += n\n    else:\n        starts_one += n - 1\n    for i in range(2, n):\n        if n % i == 0:\n            starts_one += n - i\n    return starts_one", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 0:\n        return 1\n    # A number of digit from 1 to n.\n    digit = n\n    # A number of digit from 1 to n.\n    end_digit = n\n    # A number of digit from 1 to n.\n    start_digit = n\n    # The total number of numbers that start or end with 1.\n    count = 0\n    for i in range(digit - end_digit + 1):\n        count += starts_one_ends(digit - i)\n    return count"]]