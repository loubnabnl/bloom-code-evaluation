[["def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a // gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return a / b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert (a, b) > (0, 0)\n    a, b = divmod(a, b)\n    return a % b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        if b == 0:\n            return 0\n        return 1\n    if b == 0:\n        return 0\n\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n\n    gcd = greatest_common_divisor(b, a // b)\n    if gcd!= 0:\n        return gcd\n    return greatest_common_divisor(a, b - gcd * (a // b))", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert a >= 0\n    assert b >= 0\n\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n\n    a %= b\n    b %= a\n\n    if a == 0 or b == 0:\n        return 0\n\n    return greatest_common_divisor(a, b - 1) + greatest_common_divisor(b, a - 1)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = a.divmod(b)\n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return divmod(a, b)[1]", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    gcd = a // b\n    for i in range(b):\n        if a % i!= 0:\n            return gcd\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        raise ValueError(\"both arguments must be greater than zero\")\n\n    gcd = 1\n    divisor = 1\n    while (a % divisor) == 0:\n        divisor *= b\n        a, b = b, a % divisor\n\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n    return greatest_common_divisor(b, a // b) * greatest_common_divisor(b, a % b)\ngreatest_common_divisor = partial(greatest_common_divisor, default=max)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return a\n\n    common = a % b\n    if common == 0:\n        return a\n    return greatest_common_divisor(b, common)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    gcd = 1\n    while a or b:\n        if a & b:\n            a, b = b, a % b\n        elif a:\n            a, b = b, a % b\n        else:\n            break\n        gcd *= b\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        b = a % b\n        a = b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n    else:\n        return greatest_common_divisor(b, a // b) + greatest_common_divisor(a % b, b) // 2", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return divmod(a, b)[0]", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # Take the greatest common divisor of the two numbers\n    # and divide by the smaller number\n    # until it is an integer\n    while a % b!= 0:\n        # Take the greatest common divisor of the two numbers\n        # and divide by the smaller number\n        # until it is an integer\n        a, b = b, a % b\n\n    # Return the integer result\n    return a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    if a == 0:\n        return b\n    return greatest_common_divisor(b, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a and b:\n        if a % b == 0:\n            a, b = b, a // b\n        else:\n            break\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # start from b\n    if a == 0:\n        return 0\n    elif a < b:\n        return greatest_common_divisor(b, a)\n\n    a, b = b, a\n\n    while a and b:\n        if a % b == 0:\n            a, b = b, a // b\n        else:\n            a, b = b, a\n\n    # It could still happen that we haven't found a common divisor\n    # in which case return the first one that is not 0\n    if a == 0:\n        return 1\n    elif b == 0:\n        return 0\n\n    return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return 1 if a == 0 else b // a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    return (a * (a - 1) // b) + b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 1\n    if b == 0:\n        return 1\n    if a == b:\n        return a\n    gcd = 1\n    while gcd <= b:\n        if a % gcd == 0:\n            return gcd\n        gcd = gcd / a\n    if gcd == 0:\n        return 1\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a % b == 0:\n        return a // b\n    if b % a == 0:\n        return b // a\n    return greatest_common_divisor(b, a // b)\ngreatest_common_divisor.__doc__ = \\\n    \"\"\"Return a greatest common divisor of two integers a and b.\"\"\"", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    if a < b:\n        return greatest_common_divisor(b, a % b)\n    return greatest_common_divisor(a, b % a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 1\n    if a % b == 0:\n        return a / b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a > 0:\n        a, b = divmod(b, a)\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return a\n    # Divide by least common multiple\n    c = a % b\n    d = b % a\n    while c!= 0:\n        d = c\n        c = d // b\n        d = d % b\n    return d", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a // (b // a) if a else (b // a)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if b % a == 0:\n        return b / a\n    # If we get here, there must be a remainder of b / a\n    m = greatest_common_divisor(a, b // a)\n    return m * a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # check for trivial divisors\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n\n    if a < b:\n        factor = a\n    else:\n        factor = b\n\n    # prepare the result\n    result = 1\n\n    # count up until we reach a power of 2\n    for i in range(factor, 1, -1):\n        # first, count the number of factors\n        for j in range(i, factor, 2):\n            result *= j\n        # now, count up to the remainder\n        for j in range(factor - i, 0, -1):\n            result += j\n\n    return result", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    res = a % b\n    return res", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    while a or b:\n        if a > b:\n            a, b = b, a\n        elif b > a:\n            a, b = b, a\n    return a * b // (a - 1) + b // (b - 1)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 1\n    if b == 0:\n        return 1\n\n    if a % b == 0:\n        return b\n\n    return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < b:\n        a, b = b, a\n    while a!= 0:\n        a, b = b % a, a\n    return b\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        if b == 0:\n            return 0\n        else:\n            return b\n    else:\n        if b == 0:\n            return a\n        else:\n            return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    while a > 0 and b > 0:\n        a, b = b, a % b\n    return a\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a = a % (b // a)\n    if a == 0:\n        return b // a\n    else:\n        return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Absolute value\n    abs_a = abs(a)\n    abs_b = abs(b)\n\n    # Compare\n    if abs_a > abs_b:\n        # Lower value\n        return abs_b\n    else:\n        # Greater value\n        return abs_a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a == b:\n        return a\n\n    if a % b == 0:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        raise ValueError(\"arguments must be non-zero\")\n    if b < 0:\n        b = -b\n    a = abs(a)\n    b = abs(b)\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 1\n\n    # Check for the case of a, b, or abs(a) is powers of 2\n    if a & b == a or b & a == b:\n        if a == 0:\n            return b\n        elif b == 0:\n            return a\n        else:\n            return greatest_common_divisor(abs(a), abs(b))\n\n    while True:\n        # Check for the case of a, b, or abs(a) is powers of 2\n        if a & b == a or b & a == b:\n            if a == 0:\n                return b\n            elif b == 0:\n                return a\n            else:\n                return greatest_common_divisor(abs(a), abs(b))\n\n        # Check for the case of a = 0 and b is odd\n        if a == 0 and b % 2 == 1:\n            if b == 1:\n                return 2\n            elif b == 3:\n                return 6\n            elif b == 5:\n                return 9\n            else:\n                return greatest_common_divisor(abs(b), abs(b) - 1)\n\n        # Check for the case of b = 0 and a is odd\n        if b == 0 and a % 2 == 1:\n            if a == 1:\n                return 2\n            elif a == 3:\n                return 6\n            elif", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # In Python3, the check for a negative divisor is no longer necessary\n    # since integer division always returns a positive number.\n    if a < 0:\n        return greatest_common_divisor(-b, a)\n    if b < 0:\n        return greatest_common_divisor(-a, b)\n    return a % b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    assert a > 0\n    assert b > 0\n\n    while a!= 0:\n        divisor = a % b\n        if divisor == 0:\n            return divisor\n        else:\n            a = a // divisor\n\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    res = (a % b) // (b % a)\n    while res > 0:\n        res = (res % a) // (a % res)\n    return res", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a > b:\n        a, b = b, a\n\n    if a == 0:\n        return b\n\n    if b == 0:\n        return a\n\n    while a and b and a % b == 0:\n        a, b = b, a // b\n\n    if a == 0:\n        return b\n\n    while b and a % b == 0:\n        a, b = a // b, b\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n\n    while b:\n        a, b = b, a % b\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    quotient = a // b\n    remainder = a % b\n    return remainder if remainder else quotient", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    while a!= 0:\n        a, b = divmod(b, a)\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    elif b == 0:\n        return 1\n    elif a == b or a % b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return a\n    remainder = b % a\n    if remainder == 0:\n        return a\n    return greatest_common_divisor(remainder, a - remainder)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return (a // gcd(a, b)) if a else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 1\n    if b == 0:\n        return a\n    if a < b:\n        return greatest_common_divisor(a, b // a)\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n\n    quotient = a // b\n    remainder = a - (b * quotient)\n\n    return greatest_common_divisor(b, remainder)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a < b:\n        return greatest_common_divisor(a, b % a)\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    gcd = a\n    while gcd % b:\n        gcd //= b\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 1\n    if b == 0:\n        return 1\n\n    if a < b:\n        return greatest_common_divisor(b, a / b)\n    else:\n        return greatest_common_divisor(a, b / a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    divisor = 0\n    for i in range(1, max(a, b)):\n        divisor = (a % i) * (b % i) / i\n        if divisor > divisor:\n            break\n\n    return divisor", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        gcd = a\n        a, b = b, a\n    else:\n        gcd = b\n        a, b = a, b\n    while a > 0:\n        a, b = b, a % b\n        if b == 0:\n            return gcd\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 1\n    if a == b:\n        return a\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = map(int, a.split('.'), b.split('.'))\n    if a == b:\n        return a\n    return greatest_common_divisor(a, b//a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n\n    if a == 0:\n        return b\n\n    if b % a == 0:\n        return a\n\n    while b > 0:\n        a, b = divmod(b, a)\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    if a == 0:\n        raise ValueError(\"a is zero\")\n    if b == 0:\n        raise ValueError(\"b is zero\")\n\n    a, b = b, a\n\n    if a == 1:\n        return b\n    if b == 1:\n        return a\n\n    while True:\n        gcd = a\n        a, b = b, a\n        if b == 0:\n            break\n        if gcd > b:\n            gcd, b = b, gcd\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    c = a // b\n    e = (a % b) // b\n    if c == 1:\n        if b == 1:\n            return e\n        return a\n    if b == 1:\n        return c\n    return greatest_common_divisor(c, e)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a > b:\n        return greatest_common_divisor(b, a)\n    if a == 0:\n        return 1\n    if b == 0:\n        return 0\n\n    while a > 0:\n        if a % b == 0:\n            return b\n        a = a // b\n    while b > 0:\n        if b % a == 0:\n            return a\n        b = b // a\n\n    return 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # NOTE: we don't test this, as we can use more efficient algorithms\n    # for this operation.\n    if a == 0:\n        raise ValueError('zero argument to greatest_common_divisor')\n    if b == 0:\n        raise ValueError('zero argument to greatest_common_divisor')\n\n    if a == b:\n        return a\n\n    if b % a == 0:\n        return b / a\n\n    # r = gcd(a,b);\n    # r = gcd(a//r,b//r);\n    # return r;\n\n    while a > 1:\n        if a % b == 0:\n            return a // b\n        a, b = b, a\n\n    while b > 1:\n        if b % a == 0:\n            return a // b\n        a, b = b, a\n\n    # We must have a == b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    elif a == b:\n        return a\n    else:\n        return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        if a % b == 0:\n            return b\n        a = a // b\n    return 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        raise ValueError(\"Can't divide by zero\")\n    if b == 0:\n        raise ValueError(\"Can't divide by zero\")\n    if a == b:\n        return a\n    return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 1\n    if a > b:\n        return greatest_common_divisor(b, a // b)\n    else:\n        return greatest_common_divisor(a, b // a)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    return a / greatest_common_divisor(b, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    while a!= 0:\n        a, b = divmod(b, a)\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    else:\n        while a % b:\n            a -= b\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return divmod(a, b)[0]", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        raise ValueError(\"a must be non-zero\")\n    if b == 0:\n        raise ValueError(\"b must be non-zero\")\n    if a % b == 0:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        return 0\n    if b == 0:\n        return a\n\n    if a > b:\n        a, b = b, a\n\n    for i in range(1, a + 1):\n        if a % i == 0:\n            return i\n    for i in range(1, b + 1):\n        if b % i == 0:\n            return i\n\n    if a > b and a % b == 0:\n        return b\n    if b > a and b % a == 0:\n        return a\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # This is the fastest way to get the greatest common divisor\n    # of two integers. To get the result, we must keep track of the\n    # smallest integer that divides both numbers. If we see that the\n    # second number is not divisible by the smaller number, we know\n    # that the larger number must also be divisible by the smaller\n    # number. Since we keep track of the smallest number, we can\n    # quickly determine if the larger number is divisible by the\n    # smaller number.\n    #\n    # We first multiply the two numbers together to get the\n    # largest possible common divisor. We then subtract this number\n    # from the second number. If the remainder is equal to 0, then\n    # we know that the largest common divisor is the second\n    # number. If the remainder is not equal to 0, we know that the\n    # largest common divisor is the larger of the two numbers.\n    #\n    # We now have a large number with no common factors. This\n    # means that we can easily divide both numbers by this\n    # number and keep track of the remainder. The remainder is the\n    # smallest common divisor of the two numbers.\n    divisor = max(a, b)\n\n    remainder = (a % divisor) + (b %", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # We first make sure we have a divisor, or else we're just\n    # trying to divide by zero\n    if b == 0:\n        return a\n    # Now, we need to find the smallest integer that divides both\n    # a and b\n    if a % b == 0:\n        return b\n    else:\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n    elif a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b > 0:\n        if a % b == 0:\n            return b\n        b = b // b\n    return 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(b, a)\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(a, b//a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    return a, b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    m = a\n    n = b\n\n    while m > 0:\n        if n > 0:\n            n = n % m\n            m = m // m\n\n        else:\n            n = n % m\n            m = m // m\n\n    return m", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    while b:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # check divisibility\n    if not a % b:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        b = a % b\n        a = b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    if b % a == 0:\n        return greatest_common_divisor(a / b, b)\n    else:\n        return greatest_common_divisor(a / b, b % a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        raise ZeroDivisionError(\"Cannot divide by zero\")\n    if b == 0:\n        raise ZeroDivisionError(\"Cannot divide by zero\")\n    if a == b:\n        return a\n    while a % b == 0:\n        a, b = b, a // b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b:\n        a, b = b, a % b\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a % b)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n    else:\n        return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        if b == 0:\n            return 0\n        else:\n            return b\n    if b == 0:\n        if a == 0:\n            return 0\n        else:\n            return a\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n    return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 1\n    elif b == 0:\n        return 1\n\n    gcd = 0\n    while a and b:\n        if a % b == 0:\n            gcd = gcd + a // b\n            a = b\n        else:\n            a, b = b, a\n\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        # Note: a has to be less than b.\n        return a % b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a % b == 0:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a % b)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = 1\n    while a > 0:\n        gcd = a % b\n        a //= b\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    \"\"\"\n    # FIXME: This algorithm is fairly inefficient, and should be\n    # rewritten to use the Python library.\n\n    # Calculate the product and remainder\n    product = a * b\n    remainder = a % b\n    remainder_comp = remainder * b\n\n    # If the remainder is 0, then the remainder_comp will be 0 too,\n    # and the greatest common divisor will be the product.\n    if remainder == 0:\n        gcd = product\n\n    # If the remainder_comp is 0, then the remainder will be 0 too,\n    # and the greatest common divisor will be the product.\n    elif remainder_comp == 0:\n        gcd = product\n\n    # Otherwise, the greatest common divisor will be the greatest\n    # integer that divides the product and the remainder.\n    else:\n        gcd = greatest_common_divisor(product, remainder)\n\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        b = b / a\n        a = a - b * b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a or b:\n        if a and not b:\n            a, b = b, a\n        else:\n            b, a = a, b\n\n    # a % b = 0\n    while a and not b and a % b:\n        a = a // b\n\n    if a and b:\n        while a and b:\n            a, b = b, a\n\n    if a < b:\n        return a\n    else:\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        if b == 0:\n            return 0\n        return 1\n    else:\n        return (a % b) * greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return a\n\n    if a % b == 0:\n        return b\n\n    if b % a == 0:\n        return a\n\n    return greatest_common_divisor(a // b, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    elif b == 0:\n        return 1\n    elif a % b == 0:\n        return a / b\n    else:\n        return greatest_common_divisor(a // b, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    return gcd(a, b) if a > 0 and b > 0 else None", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    a, b = divmod(b, a)\n    if a > 0:\n        return b\n    else:\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        raise ValueError(\"Argument is zero\")\n\n    if b == 0:\n        return a\n\n    if a % b == 0:\n        return a / b\n\n    divisor = a\n    remainder = b\n    while remainder:\n        remainder, remainder_a = divmod(remainder, divisor)\n        divisor = remainder_a\n\n    return remainder", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a or b:\n        a, b = b, a\n        if a == b:\n            return a\n    return 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a or b:\n        if a == b:\n            return a\n        a, b = b, a\n\n    if a > b:\n        a, b = b, a\n\n    while a!= 0:\n        a, b = b, a\n        a = b // a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n\n    if b == 0:\n        return a\n\n    if a % b == 0:\n        return a // b\n\n    divisor = greatest_common_divisor(b, a % b)\n\n    if divisor == 0:\n        return 0\n\n    return divisor", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert a >= 0\n    assert b >= 0\n    if a == 0:\n        return 1\n    if b == 0:\n        return 1\n    if a > b:\n        return greatest_common_divisor(b, a % b)\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    if a == 1:\n        return b\n    if b == 1:\n        return a\n    quotient = 1\n    while quotient <= b:\n        remainder = a % b\n        if remainder == 0:\n            quotient += 1\n        else:\n            remainder = remainder // b\n            quotient += 1\n    while quotient <= a:\n        remainder = b % a\n        if remainder == 0:\n            quotient += 1\n        else:\n            remainder = remainder // a\n            quotient += 1\n    if quotient <= a and remainder == 0:\n        return b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    try:\n        a, b = divmod(a, b)\n        if a == 0:\n            return b\n    except ZeroDivisionError:\n        return 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return (a % b) // (a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a and b:\n        if a > b:\n            a, b = b, a\n        elif b > a:\n            b, a = a, b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    return b if a == 0 else greatest_common_divisor(b, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        while b!= 0:\n            if a % b == 0:\n                return a // b\n            else:\n                b = b // 2\n        a = a // 2\n    return 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    else:\n        return greatest_common_divisor(a // b, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a > b:\n        return greatest_common_divisor(b, a)\n    else:\n        return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while True:\n        if a % b == 0:\n            return a / b\n        if b % a == 0:\n            return b / a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(b, a)\n    return a, b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return (a % b) // (b % a) if a!= 0 else 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # use a function to find the greatest common divisor\n    # this is a recursive method\n    # this uses modular arithmetic\n    if a == 0:\n        if b == 0:\n            return 0\n        else:\n            return 1\n\n    if b == 0:\n        return 0\n\n    if a == 1:\n        return b\n\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n\n    # now we know that a and b are coprime\n    # and we know that they are positive integers\n    # now we know that they have a common divisor\n    # and we know that it is positive\n    # so we use the number theory facts to calculate the greatest\n    # common divisor\n\n    # now we can use the fact that if two integers are\n    # coprime then they must have a greatest common divisor\n    # and we know that a is greater than or equal to b\n    # so we can use the fact that if two integers are\n    # coprime then their greatest common divisor is less\n    # than or equal to their greatest common divisor\n    # so that\n    #     a!= 0\n    #     b!= 0\n    #     gcd(a, b) <= gcd(a, b)\n    # so we can say that\n    #", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return pow(a, b, 0)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a == b:\n        return a\n    gcd = 1\n    for i in range(a):\n        if i == 0:\n            continue\n        if a % i == 0 and b % i == 0:\n            gcd = i\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a == b:\n        return a\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n    else:\n        return greatest_common_divisor(b, a // b) + greatest_common_divisor(a % b, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n    else:\n        return greatest_common_divisor(b, a - b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    while a and b and a % b == 0:\n        a = a // b\n    while b and a and b % a == 0:\n        b = b // a\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n    if b == 0:\n        return a\n    if a == 0:\n        return b\n    if b % a == 0:\n        return a\n    while b > 0 and a > 0 and b % a == 0:\n        a, b = a, b // a\n    while a > 0 and b > 0 and a % b == 0:\n        b, a = b, a // b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    \"\"\"\n    s = 1\n    while a and b:\n        while a % b:\n            a, b = b, a // b\n        while b % a:\n            b, a = a, b // a\n        s = s * a + b\n    if s > a or s > b:\n        return (s / a, s / b)\n    return (s, s)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return a\n    result = a\n    while result and b > 0:\n        result, b = divmod(result, b)\n    if a == 0:\n        return 0\n    if b == 0:\n        return b\n    if result == 0:\n        return a\n    if result % b == 0:\n        return result / b\n    return greatest_common_divisor(result, b - 1)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    try:\n        gcd = (a * b) // (a % b)\n    except:\n        gcd = a\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(b, a)\n    if not b:\n        return a\n    return greatest_common_divisor(a, b)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a % b == 0:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a > b:\n        a, b = b, a\n    while a > 1:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 1\n    if b == 0:\n        return 1\n    if a % b == 0:\n        return a // b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    m = a % b\n    while m:\n        m, b = b, a\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a == b:\n        return a\n    a, b = b, a\n    while b > 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return (a / gcd(a, b)) * b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # a and b are both positive\n    a, b = divmod(b, a)\n\n    # a is negative\n    if a < 0:\n        a, b = a + b, b\n\n    # a and b are both positive\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # a is negative\n    if a < 0:\n        a, b = a + b, b\n\n    # a and b are both positive\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # a is negative\n    if a < 0:\n        a, b = a + b, b\n\n    # a is negative\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # a is negative\n    if a < 0:\n        a, b = a + b, b\n\n    # a and b are both positive\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # a is negative\n    if a < 0:\n        a, b = a + b, b\n\n    # a is negative\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    # a and b are both", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    return a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    m = a // b\n    n = a % b\n    for k in range(1, m + 1):\n        for i in range(1, n + 1):\n            if k == i:\n                continue\n            if m * i == a:\n                return k\n    return m + n - 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    lcm = a // b\n    quotient = a % b\n    remainder = b % lcm\n    return remainder, quotient", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return (b // a) * a if a!= 0 else None", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n    if a % b == 0:\n        return a // b\n    if a > b:\n        return greatest_common_divisor(b, a)\n    else:\n        return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert a % b == 0\n    if b > 0:\n        while a / b:\n            a, b = b, a % b\n        return a\n    else:\n        while a / b:\n            a, b = a % b, b\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    return 1 if a == 0 else greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # algorithm from wikipedia\n    # https://www.cplusplus.com/reference/cmath/gcd/\n    return math.gcd(a, b) if a!= 0 else 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a // b)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a < b:\n        return greatest_common_divisor(b, a % b)\n    else:\n        return greatest_common_divisor(a, b % a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    if a > b:\n        return b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return a\n    if a < b:\n        gcd = greatest_common_divisor(b, a % b)\n        return gcd * a // gcd\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a > b:\n        return greatest_common_divisor(b, a)\n    return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return a\n    if b % a == 0:\n        return a\n    return greatest_common_divisor(a // b, b // a)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return (a//b) if a % b else 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n\n    if b == 0:\n        return a\n\n    while a % b == 0:\n        a, b = b, a // b\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return greatest_common_divisor(b, a // b)\n    return greatest_common_divisor(b, a // b + 1)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    remainder = a % b\n    divisor = b\n    while remainder:\n        divisor = remainder // divisor\n        remainder = remainder % divisor\n    return divisor", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 1\n    if a == b:\n        return a\n    return greatest_common_divisor(b, a % b)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return a / b\n    gcd = greatest_common_divisor(b, a % b)\n    return gcd * a % gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n\n    if b == 0:\n        return a\n\n    a = abs(a)\n    b = abs(b)\n\n    if b > a:\n        return greatest_common_divisor(b, a // b)\n\n    else:\n        return greatest_common_divisor(a, b // a)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert (a!= 0) and (b!= 0)\n    if a < b:\n        if b % a == 0:\n            return (a, b / a)\n    elif a > b:\n        return (a, b / a)\n\n    if b % a == 0:\n        return (b, a / b)\n\n    while a!= 0:\n        a, b = b, a % b\n    return (b, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return max(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(b, a)\n    return a * b // a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    while a!= 0 and b!= 0:\n        while a % b == 0:\n            a = a // b\n        while b % a == 0:\n            b = b // a\n        if a == 0:\n            return b\n        if b == 0:\n            return a\n    if a % b == 0:\n        return a\n    else:\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if not a:\n        return b\n    if not b:\n        return a\n    if a > b:\n        return greatest_common_divisor(b, a % b)\n    return a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        raise ValueError('The two numbers must be non-zero')\n    if a > b:\n        return a % b\n    else:\n        return b % a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        return b\n    else:\n        return (a // b) * b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    a = abs(a)\n    b = abs(b)\n    if a == b:\n        return (a, a)\n    if a == 0:\n        return (b, b)\n    if b == 0:\n        return (a, a)\n    while True:\n        if b % a == 0:\n            return (a, b)\n        a, b = divmod(a, b)\n        if a == 0:\n            break\n    return (b, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        if a % b == 0:\n            b /= a\n            a = 0\n        else:\n            a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a // b if a!= 0 else 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Algorithm adapted from http://en.wikipedia.org/wiki/Quadratic_Spirals#Common_divisor\n    # First, we find the largest power of 2 that divides a and b, and call it 2^p.\n    p = 2\n    while p <= min(a, b):\n        p *= 2\n\n    # Now, we get the gcd of a mod 2^p and b mod 2^p.  gcd(a % 2^p, b % 2^p) is the\n    # greatest common divisor of a and b.\n    gcd = a % 2 ** p\n    # Now, we have a and b as positive integers, and we want the gcd of a and\n    # b as a positive integer.  Since the gcd of a and b is always positive,\n    # we can get rid of the modulus.\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    while a and b and a % b == 0:\n        a, b = b, a // b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        raise ValueError(\"Can't divide by zero\")\n    if b == 0:\n        raise ValueError(\"Can't divide by zero\")\n    if a == 1:\n        if b == 1:\n            return a\n        else:\n            return 1\n    if b == 1:\n        if a == 1:\n            return b\n        else:\n            return 1\n    if a % b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b!= 0:\n        return greatest_common_divisor(b, a // b)\n    else:\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = divmod(a, b)\n    if a > b:\n        a, b = b, a\n    if a == 0:\n        return b\n    return greatest_common_divisor(b, a//b)\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # the standard algorithm with repeated division\n    gcd = 0\n    while a!= 0:\n        if a % b == 0:\n            gcd = gcd + b\n            b = b // a\n        else:\n            break\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    else:\n        a = a % b\n        while a > 0:\n            a, b = b, a % b\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        raise ValueError(\"The argument to greatest_common_divisor() must be a positive integer.\")\n\n    if b == 0:\n        raise ValueError(\"The argument to greatest_common_divisor() must be a positive integer.\")\n\n    if a == b:\n        return a\n\n    a, b = b, a\n\n    while True:\n        if a % b == 0:\n            return a // b\n        else:\n            b, a = b, a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = a\n    if b < 0:\n        gcd = b\n    while gcd > 1:\n        gcd = gcd // gcd % b\n        gcd = gcd // b\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return greatest_common_divisor(a // b, b // a)\n    return greatest_common_divisor(a, greatest_common_divisor(b, a // b))", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # python has no more efficient version of greatest common divisor than \n    # this one. Is it better than an if-else?\n    if a == b:\n        return a\n    if a < b:\n        if a % b == 0:\n            return a / b\n    else:\n        if b % a == 0:\n            return b / a\n    return 0\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0 or b == 0:\n        return 0\n\n    while a or b:\n        if a == 1:\n            return b\n\n        while b and b % a == 0:\n            b = b // a\n            a = a // b\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        while b!= 0:\n            if a % b == 0:\n                a, b = b, a // b\n            else:\n                break\n        if a == 0:\n            return b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    if b == 0:\n        return 0\n    if b % a == 0:\n        return a\n    while a > 1:\n        a, b = b // a, a\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # If either of a or b is 0 return 0\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    # If both of them are negative return 0\n    if a < 0:\n        return greatest_common_divisor(-a, -b)\n    # If a is negative and b is positive return a/b\n    if a < 0:\n        return greatest_common_divisor(-a, b)\n    # If a is positive and b is negative return a/b\n    if b < 0:\n        return greatest_common_divisor(a, -b)\n    # Now we have both a and b positive\n    # Check if a/b is a divisor of both\n    if a % b == 0:\n        return a\n    # if a/b is a divisor of b then a is a divisor of b\n    if a % b == 0:\n        return b\n    # If a/b is a divisor of a then a/b is a divisor of b\n    if b % a == 0:\n        return a / b\n    # Return 1\n    return 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return a // b\n    if b % a == 0:\n        return b // a\n    return greatest_common_divisor(b, a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # use a recursive function for optimization\n    if a == 0:\n        return 0\n    if b == 0:\n        return a\n\n    gcd = 1\n    while gcd > 1:\n        a, b = divmod(a, b)\n        gcd = gcd - 1\n\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b // a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # https://en.wikipedia.org/wiki/Greatest_common_divisor\n    while a!= 0:\n        while b!= 0:\n            if a % b == 0:\n                a, b = b, a // b\n        if b == 0:\n            b, a = a, b // a\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a // b if a else -1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        if a % b == 0:\n            return a // b\n        b = b - a % b\n        a = a // b\n\n    return a"]]