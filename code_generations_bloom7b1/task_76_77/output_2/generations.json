[["def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1 and n == 1:\n        return True\n    if x == 1 and n == 0:\n        return True\n    if x == 0 and n == 1:\n        return True\n    if x == 0 and n == 0:\n        return True\n    if x == n**int(x):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0 or n == 0:\n        return False\n    return (n**int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x < n:\n        return False\n    else:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # Checks if n**int=x\n    def is_simple_power_int(n, x):\n        if x == n:\n            return True\n        else:\n            return False\n    # Checks if n**int=x\n    def is_simple_power(n, x):\n        if n == x:\n            return True\n        else:\n            return False\n    # Checks if n**int=x\n    def is_simple_power_int(n, x):\n        if x == n:\n            return True\n        else:\n            return False\n    # Checks if n**int=x\n    def is_simple_power(n, x):\n        if n == x:\n            return True\n        else:\n            return False\n    # Checks if n**int=x\n    def is_simple_power_int(n, x):\n        if x == n:\n            return True\n        else:\n            return False\n    # Checks if n**int=x\n    def is_simple_power_int(n, x):\n        if x == n:\n            return True\n        else:\n            return False\n    # Checks if n**int=x\n    def is_simple_power_int(n, x):\n        if x == n:\n            return True\n        else:\n            return False\n    # Checks if n**int=x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if x % n == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if n % x == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_prime(n):\n        \"\"\"Check if n is prime.\"\"\"\n        if n % 2 == 0:\n            return False\n        else:\n            return True\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return False\n    if n == 5:\n        return False\n    if n == 7:\n        return False\n    if n == 8:\n        return False\n    if n == 11:\n        return False\n    if n == 13:\n        return False\n    if n == 17:\n        return False\n    if n == 31:\n        return False\n    if n == 63:\n        return False\n    if n == 129:\n        return False\n    if n == 257:\n        return False\n    if n == 4294967295:\n        return False\n    if n == 4294967296:\n        return False\n    if n == 4294967297:\n        return False\n    if n == 4294967298:\n        return False\n    if n == 4294967299:\n        return False\n    if n == 4294967300:\n        return False\n    if n == 4294967301:\n        return False\n    if n == 4294967302:\n        return False\n    if n == 4294967303:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        \"\"\"\n        The function returns true if x is a simple power of n and false in other cases.\n        \"\"\"\n        if n == 1:\n            return True\n        else:\n            return (n ** int(x)) == x\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    elif n == 1:\n        return False\n    else:\n        return (n ** int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return True\n        elif n == 2:\n            return x == 2\n        else:\n            return x == n * x\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 2:\n        return False\n    if n == 1:\n        return True\n    for i in range(2, n + 1):\n        if n * i == x:\n            return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n > 1:\n            for i in range(1, n):\n                if x**i == x:\n                    return True\n        else:\n            return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif x == 0:\n        return False\n    elif x == 1 and n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n % 2 == 0:\n        return (n ** int(x) == x)\n    else:\n        return (n ** int(x)) % 2 == 0", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0 or n == 0:\n        return False\n    if x % n == 0:\n        return False\n    if x == n:\n        return True\n    if x == 0 and n == 0:\n        return False\n    if n % x == 0:\n        return False\n    if n == 1 and x == 1:\n        return True\n    if n == 0 and x == 0:\n        return False\n    if n == 1 and x == 1:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0 or n == 0:\n        return False\n    if n % x == 0:\n        return False\n    if x == 1 or n == 1:\n        return True\n    if n == x:\n        return True\n    if x < n:\n        return False\n    else:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n < 0:\n            raise ValueError(\"Argument n must be positive\")\n        if x == 0:\n            return False\n        if x == 1:\n            return True\n        if n < x:\n            return False\n        return n ** int(x) == x\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        \"\"\"Your task is to write a function that returns true if a number x is a simple\n        power of n and false in other cases.\n        x is a simple power of n if n**int=x\n        For example:\n        is_simple_power(1, 4) => true\n        is_simple_power(2, 2) => true\n        is_simple_power(8, 2) => true\n        is_simple_power(3, 2) => false\n        is_simple_power(3, 1) => false\n        is_simple_power(5, 3) => false\n        \"\"\"\n        if n == 1:\n            return True\n        elif n == 2:\n            return x == 1 or x == 2\n        elif n == 3:\n            return x == 1 or x == 2 or x == 3\n        elif n == 4:\n            return x == 1 or x == 2 or x == 3 or x == 4\n        elif n == 5:\n            return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n        elif n == 6:\n            return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    elif x == 1:\n        return True\n    else:\n        return x % n == 0", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    try:\n        int(n)\n        return True\n    except ValueError:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    elif x == 1:\n        return True\n    else:\n        return x**int(n) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return x == 1\n        elif n == 2:\n            return x == 2\n        elif n == 3:\n            return x == 3\n        elif n == 4:\n            return x == 4\n        elif n == 5:\n            return x == 5\n        elif n == 6:\n            return x == 6\n        elif n == 7:\n            return x == 7\n        elif n == 8:\n            return x == 8\n        else:\n            return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if (x == 0) or (n == 0):\n        return False\n    elif (x == 1):\n        return True\n    else:\n        return (n * x) % n == 0", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0 or x == 1:\n        return False\n    else:\n        return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    elif x == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def f(x, n):\n        if (n < 1) or (n == 1):\n            return False\n        elif (n == 2):\n            return x == 1 or x == 2\n        elif (n == 3):\n            return x == 1 or x == 2 or x == 3\n        elif (n == 4):\n            return x == 1 or x == 2 or x == 3 or x == 4\n        elif (n == 5):\n            return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n        elif (n == 6):\n            return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n        elif (n == 7):\n            return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n        elif (n == 8):\n            return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n        elif (n == 9):\n            return x == 1 or x == 2 or x == 3 or x == 4 or x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        \"\"\"Your task is to write a function that returns true if a number x is a simple\n        power of n and false in other cases.\n        x is a simple power of n if n**int=x\n        For example:\n        is_simple_power(1, 4) => true\n        is_simple_power(2, 2) => true\n        is_simple_power(8, 2) => true\n        is_simple_power(3, 2) => false\n        is_simple_power(3, 1) => false\n        is_simple_power(5, 3) => false\n        \"\"\"\n        if x == 0 or n == 0:\n            return False\n        else:\n            return True\n\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x is None:\n        return False\n    if x == 0:\n        return False\n    if x % n == 0:\n        return True\n    for i in range(1, int(math.log(n, x))):\n        if x % i == 0:\n            return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"invalid input\")\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1 or n == 1:\n        return True\n    if x < 1:\n        return False\n    if n < 1:\n        return False\n    if x * n == 1:\n        return True\n    if x * n == 0:\n        return False\n    if n % x == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    #check if n is odd\n    if n % 2 == 1:\n        return False\n\n    #check if n is 1\n    if n == 1:\n        return False\n\n    #check if n is 2\n    if n == 2:\n        return True\n\n    #check if n is 3\n    if n == 3:\n        return False\n\n    #check if n is 4\n    if n == 4:\n        return True\n\n    #check if n is 5\n    if n == 5:\n        return False\n\n    #check if n is 6\n    if n == 6:\n        return False\n\n    #check if n is 7\n    if n == 7:\n        return True\n\n    #check if n is 8\n    if n == 8:\n        return False\n\n    #check if n is 9\n    if n == 9:\n        return False\n\n    #check if n is 10\n    if n == 10:\n        return False\n\n    #check if n is 11\n    if n == 11:\n        return False\n\n    #check if n is 12\n    if n == 12:\n        return False\n\n    #check if n is 13\n    if n == 13:\n        return False\n\n    #check if n is 14\n    if n == 14:\n        return False\n\n    #check if n is 15\n    if n == 15:\n        return False\n\n    #check if n is 16\n    if n == 16:\n        return", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if x == 2:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if x == n:\n        return True\n    if x == n**0:\n        return True\n    if x == n**1:\n        return True\n    if x == n**2:\n        return True\n    if x == n**3:\n        return True\n    if x == n**4:\n        return True\n    if x == n**5:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return True\n    elif n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        if x == 1:\n            return True\n        elif x == 2:\n            return True\n        elif x == 3:\n            return True\n        elif x == 4:\n            return True\n        elif x == 5:\n            return True\n        elif x == 6:\n            return True\n        elif x == 7:\n            return True\n        elif x == 8:\n            return True\n        elif x == 9:\n            return True\n        elif x == 10:\n            return True\n        elif x == 11:\n            return True\n        elif x == 12:\n            return True\n        elif x == 13:\n            return True\n        elif x == 14:\n            return True\n        elif x == 15:\n            return True\n        elif x == 16:\n            return True\n        elif x == 17:\n            return True\n        elif x == 18:\n            return True\n        elif x == 19:\n            return True\n        elif x == 20:\n            return True\n        elif x == 21:\n            return True\n        elif x == 22:\n            return True\n        elif x == 23:\n            return True\n        elif x == 24:\n            return True\n        elif x == 25:\n            return True\n        elif x == 26:\n            return True\n        elif x == 27:\n            return True\n        elif x == 28", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        return n**int(x)\n\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return True\n        else:\n            return x**int == n\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # x is a simple power of n if n**int=x\n    # n**int is the integer part of n**x\n    # integer division is the same as modulus\n    if n % x == 0:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 1 or x == 2\n    elif n == 3:\n        return x == 1 or x == 2 or x == 3\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0 or n == 0:\n        return False\n    elif x == n:\n        return True\n    elif n % 2 == 0:\n        return is_simple_power(x // 2, n // 2)\n    elif n % 4 == 0:\n        return is_simple_power(x // 4, n // 4)\n    else:\n        return is_simple_power(x // n, n)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    elif n % 2 == 0:\n        return (n ** int(x) == x)\n    else:\n        return (n ** int(x) == (n ** int(x) - 1))", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n % 2 == 0:\n        return True\n    if n % 2!= 0:\n        return False\n    if n % 3 == 0:\n        return True\n    if n % 3!= 0:\n        return False\n    if n % 5 == 0:\n        return True\n    if n % 5!= 0:\n        return False\n    if n % 7 == 0:\n        return True\n    if n % 7!= 0:\n        return False\n    if n % 11 == 0:\n        return True\n    if n % 11!= 0:\n        return False\n    if n % 13 == 0:\n        return True\n    if n % 13!= 0:\n        return False\n    if n % 17 == 0:\n        return True\n    if n % 17!= 0:\n        return False\n    if n % 19 == 0:\n        return True\n    if n % 19!= 0:\n        return False\n    if n % 23 == 0:\n        return True\n    if n % 23!= 0:\n        return False\n    if n % 29 == 0:\n        return True\n    if n % 29!= 0:\n        return False\n    if n % 31 == 0:\n        return True\n    if n % 31!= 0:\n        return False\n    if n % 37 == 0:\n        return", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n <= 0:\n            return False\n        elif n == 1:\n            return True\n        elif x == 1:\n            return True\n        elif x == n:\n            return True\n        else:\n            return is_simple_power(x / n, n - 1)\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x < 0:\n        return False\n    if x == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    if n % x == 0:\n        return True\n    if x / n == 0:\n        return True\n    if x == n * n:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif x == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return (n ** int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 4\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        for i in range(2, n):\n            if x == n**i:\n                return True\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        \"\"\"Return True if x is a simple power of n, else False\"\"\"\n        if x == 1:\n            return True\n        if n == 1:\n            return False\n        if x < n:\n            return False\n        if n % x == 0:\n            return True\n        if n > 1:\n            return False\n        return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n > x:\n        return False\n    if x % n == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return (n**int(x) == x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        \"\"\"\n        :type x: int\n        :type n: int\n        :rtype: bool\n        \"\"\"\n        if n == 1:\n            return x == 1\n        if n == 2:\n            return x == 2\n        if n == 3:\n            return x == 2\n        if n == 4:\n            return x == 2\n        return False\n\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x < 0:\n        return False\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    try:\n        x = int(x)\n    except:\n        return False\n    return n**x == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x < 0:\n        return False\n    if n == 1:\n        return True\n    if x % n == 0:\n        return False\n    if n == 2:\n        if x < n:\n            return False\n        else:\n            return True\n    if n == 3:\n        if x < n:\n            return False\n        elif x == n:\n            return True\n        else:\n            return False\n    if n == 4:\n        if x < n:\n            return False\n        elif x == n:\n            return True\n        elif x == n*n:\n            return True\n        else:\n            return False\n    if n == 5:\n        if x < n:\n            return False\n        elif x == n:\n            return True\n        elif x == n*n:\n            return True\n        elif x == n*n*n:\n            return True\n        else:\n            return False\n    if n == 6:\n        if x < n:\n            return False\n        elif x == n:\n            return True\n        elif x == n*n:\n            return True\n        elif x == n*n*n:\n            return True\n        elif x == n*n*n*n:\n            return True\n        else:\n            return False\n    if n == 7:\n        if x < n:\n            return False\n        elif x == n:\n            return True\n        elif x ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if x % n == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n < 0:\n        return False\n    if x < 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x < n:\n        return False\n    if n == 0:\n        return False\n    if x % n == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n < 0:\n        return False\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == -1:\n        return False\n    if x == -2:\n        return False\n    if x == -3:\n        return False\n    if x == -4:\n        return False\n    if x == -5:\n        return False\n    if x == -6:\n        return False\n    if x == -7:\n        return False\n    if x == -8:\n        return False\n    if x == -9:\n        return False\n    if x == -10:\n        return False\n    if x == -11:\n        return False\n    if x == -12:\n        return False\n    if x == -13:\n        return False\n    if x == -14:\n        return False\n    if x == -15:\n        return False\n    if x == -16:\n        return False\n    if x == -17:\n        return False\n    if x == -18:\n        return False\n    if x == -19:\n        return False\n    if x == -20:\n        return False\n    if x == -21:\n        return False\n    if x == -22:\n        return False\n    if x == -23:\n        return False\n    if x == -24:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return True\n        if x == n:\n            return True\n        if x == 0:\n            return False\n        if x % n == 0:\n            return True\n        if x == n - 1:\n            return True\n        if n == 1:\n            return False\n        return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 2\n    if n == 3:\n        if x == 3:\n            return True\n        else:\n            return False\n    if n == 4:\n        if x == 4:\n            return True\n        elif x == 2:\n            return True\n        else:\n            return False\n    if n == 5:\n        if x == 5:\n            return True\n        elif x == 4:\n            return True\n        elif x == 2:\n            return True\n        else:\n            return False\n    if n == 6:\n        if x == 6:\n            return True\n        elif x == 5:\n            return True\n        elif x == 4:\n            return True\n        elif x == 2:\n            return True\n        else:\n            return False\n    if n == 7:\n        if x == 7:\n            return True\n        elif x == 6:\n            return True\n        elif x == 5:\n            return True\n        elif x == 4:\n            return True\n        elif x == 2:\n            return True\n        else:\n            return False\n    if n == 8:\n        if x == 8:\n            return True\n        elif x == 7:\n            return True\n        elif x == 6:\n            return True\n        elif x == 5:\n            return True\n        elif x == 4:\n            return True\n        elif x == 2:\n            return", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 1:\n        return False\n    if n == 0:\n        return True\n    if x == 0:\n        return False\n    if n % x == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n % 1 == 0:\n        return False\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return False\n    if n % 11 == 0:\n        return False\n    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return False\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return False\n    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return False\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n        return False\n    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return False\n    if n % 53 == 0:\n        return False\n    if n % 59 == 0:\n        return False\n    if n % 61 == 0:\n        return False\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n        return False\n    if n % 73 == 0:\n        return False\n    if n % 79 == 0:\n        return False\n    if n % 83 == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # your code here\n    return x == n**int(x) and int(x) == len(str(x))", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n <= 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if n % x == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x < n:\n        return False\n    if x > n:\n        return False\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_prime(n):\n        if n == 2:\n            return False\n        return not any([isprime(n/2) for isprime in range(3, int(n**0.5))])\n    if x == n:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if is_prime(n):\n        if n == 2:\n            return True\n        if n == 3:\n            return False\n        return not any([is_simple_power(n/2, i) for i in range(3, int(n**0.5))])\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return True\n        elif n == 0:\n            return False\n        else:\n            return x**int(n) == x\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if x == 2:\n        return True\n    if x == n:\n        return True\n    if x == n*x:\n        return True\n    if x == n*(n-x):\n        return True\n    if x == n*(n-x)*x:\n        return True\n    if x == n*(n-x)*(n-x):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return False\n        if x == 1:\n            return True\n        if x == n:\n            return True\n        if x == int(n):\n            return True\n        if x == (n**int(x)):\n            return True\n        return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Numbers can't be negative.\")\n    if n == 0:\n        return True\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n < 0:\n        return False\n    else:\n        return (n ** int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x < 0:\n        return False\n    if x == 1:\n        return True\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if x < 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0 or x == 0:\n        return False\n    if n % x == 0:\n        return False\n    if x < n:\n        return False\n    if n < x:\n        return False\n    if n == x or x == n:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if n == x:\n        return True\n    if n % x == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 1:\n        return True\n    if x % n == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # n is an integer\n    if int(n) == x:\n        return True\n    # n is a float\n    elif float(n) == x:\n        return True\n    # n is a string\n    elif str(n) == x:\n        return True\n    # n is a tuple\n    elif tuple(n) == x:\n        return True\n    # n is a list\n    elif list(n) == x:\n        return True\n    # n is a set\n    elif set(n) == x:\n        return True\n    # n is a dict\n    elif dict(n) == x:\n        return True\n    # n is None\n    elif None == x:\n        return True\n    # n is not an integer\n    elif int(n) == 0:\n        return False\n    # n is not a float\n    elif float(n) == 0:\n        return False\n    # n is not a string\n    elif str(n) == '':\n        return False\n    # n is not a tuple\n    elif tuple(n) == ():\n        return False\n    # n is not a list\n    elif list(n) == []:\n        return False\n    # n is not a set\n    elif set(n) == {}:\n        return False\n    # n is not a dict\n    elif dict(n", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n % 2 == 0:\n        return n**int(x) == x**int(n/2)\n    else:\n        return n**int(x) == x**int(n/2) + n**int(x/2)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if x == 1:\n        return True\n    if n < 0:\n        return False\n    if n < x * x - 1:\n        return False\n    for i in range(1, n):\n        if i * i <= x:\n            return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return False\n        elif x == 1:\n            return True\n        elif n == int(x):\n            return True\n        else:\n            return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_prime(x):\n        for i in range(2, int(x)+1):\n            if x % i == 0:\n                return False\n        return True\n\n    def is_natural(x):\n        if x == 0 or x == 1:\n            return False\n        if x % 2 == 0:\n            return False\n        if x % 3 == 0:\n            return False\n        if x % 5 == 0:\n            return False\n        return True\n\n    def is_simple_power(x, n):\n        if n < 1 or x < 1:\n            return False\n        if x % n == 0:\n            return False\n        if is_prime(n) and is_natural(x):\n            return False\n        if x == n:\n            return True\n        if x % n == 0 and is_prime(n):\n            return False\n        return True\n\n    return is_simple_power(x, n)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if x == 1:\n        return True\n    if x == 0:\n        return False\n    if x < 0:\n        return False\n    if n % x == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if n == 1:\n            return True\n        elif n == 0:\n            return False\n        else:\n            return x**int(n) == x\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n <= 1:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if x < 0:\n        return False\n    if x % n == 0:\n        return False\n    if x / n == 0:\n        return False\n    if x == 1 or n == 1:\n        return False\n    if x == n or n == 1:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if x < n:\n        return False\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    elif n == 1:\n        return False\n    else:\n        return (x**int(n) == x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 2:\n        return x**2 == x\n    if n == 3:\n        return x**3 == x\n    if n == 4:\n        return x**4 == x\n    if n == 5:\n        return x**5 == x\n    if n == 6:\n        return x**6 == x\n    if n == 7:\n        return x**7 == x\n    if n == 8:\n        return x**8 == x\n    if n == 9:\n        return x**9 == x\n    if n == 10:\n        return x**10 == x\n    if n == 11:\n        return x**11 == x\n    if n == 12:\n        return x**12 == x\n    if n == 13:\n        return x**13 == x\n    if n == 14:\n        return x**14 == x\n    if n == 15:\n        return x**15 == x\n    if n == 16:\n        return x**16 == x\n    if n == 17:\n        return x**17 == x\n    if n == 18:\n        return x**18 == x\n    if n == 19:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return (n**int(x) == x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return x == 1\n    elif x == 1:\n        return True\n    else:\n        return x**int(n) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if (x == 0):\n        return False\n    elif (n == 0):\n        return False\n    else:\n        if (n < 0):\n            n = -n\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 1:\n        return False\n    elif x == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def check(x, n):\n        if (n**x == 0):\n            return False\n        else:\n            return True\n    return check", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x < 0:\n        return False\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if n == 1:\n        return True\n    if x == n**(-1):\n        return True\n    if n == 1:\n        return False\n    if x == n**(-1):\n        return False\n    if n == 2:\n        if x == 2:\n            return True\n        if x == 2:\n            return False\n    if n == 3:\n        if x == 3:\n            return True\n        if x == 2:\n            return False\n        if x == 1:\n            return True\n        if x == 2:\n            return False\n    if n == 4:\n        if x == 4:\n            return True\n        if x == 3:\n            return False\n        if x == 2:\n            return True\n        if x == 2:\n            return False\n        if x == 1:\n            return True\n        if x == 2:\n            return False\n    if n == 5:\n        if x == 5:\n            return True\n        if x == 4:\n            return False\n        if x == 3:\n            return True\n        if x == 2:\n            return True\n        if x == 2:\n            return False\n        if x == 1:\n            return True\n        if x == 2:\n            return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        return False\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == 2:\n        return True\n    if x == n:\n        return True\n    if x == n*(n-1):\n        return True\n    if x == n*(n-2):\n        return True\n    if x == n*(n-3):\n        return True\n    if x == n*(n-4):\n        return True\n    if x == n*(n-5):\n        return True\n    if x == n*(n-6):\n        return True\n    if x == n*(n-7):\n        return True\n    if x == n*(n-8):\n        return True\n    if x == n*(n-9):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if int(n) == int(x):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n**1:\n        return True\n    if x == n**2:\n        return True\n    if x == n**3:\n        return True\n    if x == n**4:\n        return True\n    if x == n**5:\n        return True\n    if x == n**6:\n        return True\n    if x == n**7:\n        return True\n    if x == n**8:\n        return True\n    if x == n**9:\n        return True\n    if x == n**10:\n        return True\n    if x == n**11:\n        return True\n    if x == n**12:\n        return True\n    if x == n**13:\n        return True\n    if x == n**14:\n        return True\n    if x == n**15:\n        return True\n    if x == n**16:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # I have written this code for a class assignment. I would like to know if\n    # the code is correct\n    if n == 1:\n        return True\n    else:\n        if x == 1:\n            return True\n        else:\n            if n % x == 0:\n                return True\n            else:\n                return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_valid(n):\n        if n == 0:\n            return True\n        elif n == 1:\n            return False\n        else:\n            return n**int(x) == x\n    if is_valid(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == -1:\n        return False\n    if n == -2:\n        return False\n    if n == -3:\n        return False\n    if n == -4:\n        return False\n    if n == -5:\n        return False\n    if n == -6:\n        return False\n    if n == -7:\n        return False\n    if n == -8:\n        return False\n    if n == -9:\n        return False\n    if n == -10:\n        return False\n    if n == -110:\n        return False\n    if n == -111:\n        return False\n    if n == -112:\n        return False\n    if n == -113:\n        return False\n    if n == -114:\n        return False\n    if n == -115:\n        return False\n    if n == -116:\n        return False\n    if n == -117:\n        return False\n    if n == -118:\n        return False\n    if n == -120:\n        return False\n    if n == -121:\n        return False\n    if n == -122:\n        return False\n    if n == -123:\n        return False\n    if n == -125:\n        return False\n    if n == -126:\n        return False\n    if n == -127:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    else:\n        return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1 or x == n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        if x == 2:\n            return True\n        elif x == 3:\n            return False\n        else:\n            return False\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return False\n    elif n == 2:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    else:\n        return n == x**int(n)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n < 1:\n        return False\n    else:\n        return x**int(n) == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return is_simple_power(x, 2) or is_simple_power(x, 1)\n    elif n == 4:\n        return is_simple_power(x, 2) or is_simple_power(x, 1) or is_simple_power(x, 1)\n    elif n == 5:\n        return is_simple_power(x, 2) or is_simple_power(x, 1) or is_simple_power(x, 1) or is_simple_power(x, 1)\n    elif n == 6:\n        return is_simple_power(x, 2) or is_simple_power(x, 1) or is_simple_power(x, 1) or is_simple_power(x, 1) or is_simple_power(x, 1)\n    elif n == 7:\n        return is_simple_power(x, 2) or is_simple_power(x, 1) or is_simple_power(x, 1) or is_simple_power(x, 1) or is_simple_power(x, 1) or is_s", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    if n == 1:\n        return False\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return False\n    elif n == 2:\n        return x == int(x)\n    elif n == 3:\n        return x == int(x) ** int(x)\n    elif n == 4:\n        return x == int(x) ** int(x) ** int(x)\n    elif n == 5:\n        return x == int(x) ** int(x) ** int(x) ** int(x)\n    else:\n        return False\n</s>", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return False\n    elif n == 0:\n        return False\n    elif x == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # TODO Auto-generated method stub\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if (n == 1):\n        return True\n    elif (n == 0):\n        return False\n    elif (n == 1):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        return n**int(x) == x\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return True\n    else:\n        return (n**int(x) == x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return (n ** int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return x % n == 0", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    else:\n        return x ** int(n) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if n == x:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n % 2 == 0:\n        if x % n == 0:\n            return True\n        return False\n    if n % 3 == 0:\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        return False\n    if n % 5 == 0:\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        return False\n    if n % 7 == 0:\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        return False\n    if n % 11 == 0:\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        if x % n == 0:\n            return True\n        return False\n    if n % 13 == 0:\n        if x % n == 0:\n            return True\n        if x % n == 0:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(n, x):\n        if n**int == x:\n            return True\n        else:\n            return False\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def _is_true(x, n):\n        return x == n**int(x)\n    return _is_true(x, n)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        return x == n**int(x)\n    return is_simple_power", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # x is a simple power of n if n**int = x\n    if n == 0:\n        return True\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 1 or x == 2\n    if n == 3:\n        return x == 1 or x == 2 or x == 4\n    if n == 4:\n        return x == 1 or x == 2 or x == 4 or x == 8\n    if n == 5:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16\n    if n == 6:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32\n    if n == 7:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64\n    if n == 8:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128\n    if n == 9:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128 or x ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if x < 1:\n        return False\n    if n == 0:\n        return False\n    if x < n:\n        return False\n    for i in range(1, n + 1):\n        if x % i == 0:\n            return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    elif n == 0:\n        return False\n    elif x < n:\n        return False\n    elif n > x:\n        return False\n    else:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 1 or x == 2\n    if n == 3:\n        return is_simple_power(x, n/2) or is_simple_power(x, n/2+1)\n    if n == 4:\n        return is_simple_power(x, n/2) or is_simple_power(x, n/2+1) or is_simple_power(x, n/2+2) or is_simple_power(x, n/2+3)\n    if n == 5:\n        return is_simple_power(x, n/2) or is_simple_power(x, n/2+1) or is_simple_power(x, n/2+2) or is_simple_power(x, n/2+3) or is_simple_power(x, n/2+4)\n    if n == 6:\n        return is_simple_power(x, n/2) or is_simple_power(x, n/2+1) or is_simple_power(x, n/2+2) or is_simple_power(x, n/2+3) or is_simple_power(x, n/2+4", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    try:\n        x = int(x)\n        n = int(n)\n        if n == 0:\n            return False\n        if x == 1:\n            return True\n        if x == n:\n            return True\n        if x % n == 0:\n            return True\n        if x == n**(x-1):\n            return True\n        return False\n    except ValueError:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return True\n    if x == 1 and n == 1:\n        return True\n    if x == 1 and n == 0:\n        return True\n    if x == 0 and n == 1:\n        return True\n    if x == 0 and n == 0:\n        return True\n    if n == 1:\n        return True\n    if n == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if x == 0:\n            return False\n        elif n == 1:\n            return x == 1\n        elif n == 2:\n            return x == 2 or x == 3\n        elif n == 3:\n            return x == 2 or x == 4\n        elif n == 4:\n            return x == 2 or x == 6\n        elif n == 5:\n            return x == 3 or x == 6\n        elif n == 6:\n            return x == 3 or x == 9\n        elif n == 7:\n            return x == 3 or x == 12\n        elif n == 8:\n            return x == 4 or x == 12\n        elif n == 9:\n            return x == 4 or x == 18\n        elif n == 10:\n            return x == 4 or x == 24\n        elif n == 11:\n            return x == 5 or x == 18\n        elif n == 12:\n            return x == 5 or x == 30\n        elif n == 13:\n            return x == 5 or x == 36\n        elif n == 14:\n            return x == 6 or x == 24\n        elif n == 15:\n            return x == 6 or x == 48\n        elif n == 16:\n            return x == 6 or x == 72\n        elif n == 17:\n            return x == 6 or x == 96", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def power(n, x):\n        if n == 0:\n            return False\n        if x == 0:\n            return False\n        if x == 1:\n            return True\n        if x == 2:\n            return n == 2 and x == 1\n        if x == 3:\n            return n == 2 and x == 1 and n!= 1\n        if x == 4:\n            return n == 2 and x == 1 and n!= 1 and n!= 2\n        if x == 5:\n            return n == 2 and x == 1 and n!= 1 and n!= 2 and n!= 3\n        if x == 6:\n            return n == 2 and x == 1 and n!= 1 and n!= 2 and n!= 3 and n!= 4\n        if x == 7:\n            return n == 2 and x == 1 and n!= 1 and n!= 2 and n!= 3 and n!= 4 and n!= 5\n        if x == 8:\n            return n == 2 and x == 1 and n!= 1 and n!= 2 and n!= 3 and n!= 4 and n!= 5 and n!= 6\n        if x == 9:\n            return n == 2 and x == 1 and n!= 1 and", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # your code here\n    pass", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n*n:\n        return True\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n % 2 == 0:\n        if x % 2 == 0:\n            return True\n        else:\n            return False\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 0:\n        return False\n    else:\n        for i in range(1, n+1):\n            if x % i == 0:\n                return True\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if x == 1 or n == 1:\n        return True\n    if x == n:\n        return True\n    if x < n:\n        return False\n    if x > n:\n        return False\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # The first step is to check if n is a power of two\n    if n%2 == 0:\n        return True\n\n    # The second step is to check if the exponent is a multiple of n\n    if x % n == 0:\n        return False\n\n    # The third step is to check if the exponent is a multiple of n+1\n    if x % (n+1) == 0:\n        return False\n\n    # The fourth step is to check if the exponent is a multiple of n+2\n    if x % (n+2) == 0:\n        return False\n\n    # The fifth step is to check if the exponent is a multiple of n+3\n    if x % (n+3) == 0:\n        return False\n\n    # The sixth step is to check if the exponent is a multiple of n+4\n    if x % (n+4) == 0:\n        return False\n\n    # The seventh step is to check if the exponent is a multiple of n+5\n    if x % (n+5) == 0:\n        return False\n\n    # The eighth step is to check if the exponent is a multiple of n+6\n    if x % (n+6) == 0:\n        return False\n\n    # The ninth step is to check if the exponent is a multiple of n+7\n    if x % (n+7) == 0:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return x % 1 == 0\n    if n == 3:\n        if x % 1 == 0 and x % 2 == 0:\n            return True\n        else:\n            return False\n    if n == 4:\n        if x % 1 == 0 and x % 2 == 0 and x % 3 == 0:\n            return True\n        else:\n            return False\n    if n == 5:\n        if x % 1 == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0:\n            return True\n        else:\n            return False\n    if n == 6:\n        if x % 1 == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0:\n            return True\n        else:\n            return False\n    if n == 7:\n        if x % 1 == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0 and x % 6 == 0:\n            return True\n        else:\n            return False\n    if n == 8:\n        if x % 1 == 0 and x % 2 == 0 and x % 3 == 0 and x % 4 == 0 and x % 5 == 0 and x % 6 == 0 and x % 7", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # if x is a power of n, then n**int=x\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 2\n    if x == n:\n        return True\n    if x > n:\n        return False\n    return n == int(x**int(n))", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    else:\n        return (n ** int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return True\n    if n == 1:\n        return False\n    if x == n:\n        return True\n    if n == x:\n        return True\n    if n == x / n:\n        return True\n    if n == x ** (int(n) - 1):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n <= 0:\n        return False\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 1 or x == 2\n    elif n == 3:\n        return is_simple_power(x, n/2)\n    elif n == 4:\n        return is_simple_power(x, n/2) or is_simple_power(x, n/2 - 1)\n    elif n == 5:\n        return is_simple_power(x, n/4)\n    elif n == 6:\n        return is_simple_power(x, n/2) or is_simple_power(x, n/2 - 1)\n    elif n == 7:\n        return is_simple_power(x, n/4) or is_simple_power(x, n/4 - 1)\n    elif n == 8:\n        return is_simple_power(x, n/8)\n    elif n == 9:\n        return is_simple_power(x, n/4) or is_simple_power(x, n/4 - 1) or is_simple_power(x, n/8 - 1)\n    elif n == 10:\n        return is_simple_power(x, n/4) or is_simple_power(x, n/4 - 1) or is_s", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n < 1:\n        return False\n    if n == 0:\n        return False\n    if n < x:\n        return False\n    if n == x:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    if n % 7 == 0:\n        return False\n    if n % 11 == 0:\n        return False\n    if n % 13 == 0:\n        return False\n    if n % 17 == 0:\n        return False\n    if n % 19 == 0:\n        return False\n    if n % 23 == 0:\n        return False\n    if n % 29 == 0:\n        return False\n    if n % 31 == 0:\n        return False\n    if n % 37 == 0:\n        return False\n    if n % 41 == 0:\n        return False\n    if n % 43 == 0:\n        return False\n    if n % 47 == 0:\n        return False\n    if n % 53 == 0:\n        return False\n    if n % 59 == 0:\n        return False\n    if n % 61 == 0:\n        return False\n    if n % 67 == 0:\n        return False\n    if n % 71 == 0:\n        return False\n    if n % 73 == 0:\n        return False\n    if n % 79 == 0:\n        return False\n    if n % 83 == 0:\n        return False\n    if n % 89 == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if n == 1:\n        return False\n    if x == n:\n        return True\n    if x % n == 0:\n        return False\n    if x > n:\n        return False\n    if x < 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    if x == n * n:\n        return True\n    if x == n ** 2:\n        return True\n    if x == n ** 3:\n        return True\n    if x == n ** 4:\n        return True\n    if x == n ** 5:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def check_power(x, n):\n        if n == 0:\n            return False\n        elif x == 1:\n            return True\n        else:\n            return n**int(x) == x\n    return check_power(x, n)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        if n > 0:\n            if n % 2 == 0:\n                return n * n == x\n            else:\n                return (n ** 2) * n == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 2:\n        return (x % 2 == 0)\n    if n == 3:\n        return (x % 3 == 0)\n    if n == 4:\n        return (x % 4 == 0)\n    if n == 5:\n        return (x % 5 == 0)\n    if n == 6:\n        return (x % 6 == 0)\n    if n == 7:\n        return (x % 7 == 0)\n    if n == 8:\n        return (x % 8 == 0)\n    if n == 9:\n        return (x % 9 == 0)\n    if n == 10:\n        return (x % 10 == 0)\n    if n == 11:\n        return (x % 11 == 0)\n    if n == 12:\n        return (x % 12 == 0)\n    if n == 13:\n        return (x % 13 == 0)\n    if n == 14:\n        return (x % 14 == 0)\n    if n == 15:\n        return (x % 15 == 0)\n    if n == 16:\n        return (x % 16 == 0)\n    if n == 17:\n        return (x % 17 == 0)\n    if n == 18:\n        return (x % 18 == 0)\n    if n == 19:\n        return (x % 19", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 1:\n        return False\n    if n % x == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == -1:\n        return False\n    if n == 1:\n        return False\n    if n == -1:\n        return True\n    if n > 0:\n        if n % 2 == 0:\n            if n % 3 == 0:\n                if n % 5 == 0:\n                    if n % 7 == 0:\n                        if n % 11 == 0:\n                            return True\n                return False\n            return False\n        return False\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n < 0:\n        return False\n    if n > x:\n        return False\n    if n % x == 0:\n        return False\n    if n % x == 0:\n        return False\n    if n % x == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 4\n    elif n == 5:\n        return x == 1 or x == 2 or x == 4 or x == 8\n    elif n == 6:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16\n    elif n == 7:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32\n    elif n == 8:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64\n    elif n == 9:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128\n    elif n == 10:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128 or x == 256\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"Argument n must be positive\")\n    if n == 0:\n        return True\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n**(int(n)):\n        return True\n    if x == n**(int(n) - 1):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_prime(x):\n        return x == 1 or x == 2 or x == 3 or x == 5 or x == 7 or x == 11 or x == 13 or x == 17 or x == 19 or x == 23 or x == 29 or x == 31 or x == 37 or x == 41 or x == 43 or x == 47 or x == 53 or x == 59 or x == 61 or x == 67 or x == 71 or x == 73 or x == 79 or x == 83 or x == 89 or x == 97\n\n    def is_prime_power(x, n):\n        return is_prime(n) and is_simple_power(x, n)\n\n    def is_power_of_n(x, n):\n        return n**int(x) == x\n\n    def is_negative(x):\n        return x < 0\n\n    def is_positive(x):\n        return x > 0\n\n    def is_square(x):\n        return x == x\n\n    def is_multiple_of_n(x, n):\n        return x % n == 0\n\n    def is_nth_prime(x, n):\n        if is_prime(n):\n            for i in range(n):", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n % 2 == 0:\n        return False\n    if n % 3 == 0:\n        return False\n    if n % 5 == 0:\n        return False\n    return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n % 2 == 1:\n        return False\n    if x == 1:\n        return False\n    if x == 1:\n        return False\n    if n % x == 0:\n        return False\n    if n == x * x:\n        return True\n    if n == x * x * x:\n        return True\n    if n == x * x * x * x:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    def is_simple_power(x, n):\n        if x == 0:\n            return False\n        if x == 1:\n            return True\n        if x % n == 0:\n            return False\n        if x % n == 1:\n            return True\n        if x % n == 2:\n            return True\n        if x % n == 3:\n            return True\n        if x % n == 4:\n            return True\n        if x % n == 5:\n            return True\n        if x % n == 6:\n            return True\n        if x % n == 7:\n            return True\n        if x % n == 8:\n            return True\n        if x % n == 9:\n            return True\n        if x % n == 10:\n            return True\n        if x % n == 11:\n            return True\n        if x % n == 12:\n            return True\n        if x % n == 13:\n            return True\n        if x % n == 14:\n            return True\n        if x % n == 15:\n            return True\n        if x % n == 16:\n            return True\n        if x % n == 17:\n            return True\n        if x % n == 18:\n            return True\n        if x % n == 19:\n            return True\n        if x % n == 20:\n            return True\n        if x % n == 21:\n            return True\n        if x % n == 22:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(x):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n % 1 == 0:\n        return False\n    if n % 2 == 0:\n        if x == 1:\n            return True\n        elif x == 2:\n            return True\n        elif x == 3:\n            return True\n        elif x == 4:\n            return True\n        elif x == 5:\n            return True\n        elif x == 6:\n            return True\n        elif x == 7:\n            return True\n        elif x == 8:\n            return True\n        elif x == 9:\n            return True\n        elif x == 10:\n            return True\n        elif x == 11:\n            return True\n        elif x == 12:\n            return True\n        elif x == 13:\n            return True\n        elif x == 14:\n            return True\n        elif x == 15:\n            return True\n        elif x == 16:\n            return True\n        elif x == 17:\n            return True\n        elif x == 18:\n            return True\n        elif x == 19:\n            return True\n        elif x == 20:\n            return True\n        elif x == 21:\n            return True\n        elif x == 22:\n            return True\n        elif x == 23:\n            return True\n        elif x == 24:\n            return True\n        elif x == 25:\n            return True\n        elif x == 26:\n            return True\n        elif x == 27:\n            return True\n        elif x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        if x == 1:\n            return True\n        elif x == 2:\n            return True\n        elif x == 3:\n            return True\n        elif x == 4:\n            return True\n        elif x == 5:\n            return True\n    elif n == 4:\n        if x == 1:\n            return True\n        elif x == 2:\n            return True\n        elif x == 3:\n            return True\n        elif x == 4:\n            return True\n        elif x == 5:\n            return True\n        elif x == 6:\n            return True\n        elif x == 7:\n            return True\n        elif x == 8:\n            return True\n        elif x == 9:\n            return True\n        elif x == 10:\n            return True\n        elif x == 11:\n            return True\n        elif x == 12:\n            return True\n        elif x == 13:\n            return True\n        elif x == 14:\n            return True\n        elif x == 15:\n            return True\n        elif x == 16:\n            return True\n        elif x == 17:\n            return True\n        elif x == 18:\n            return True\n        elif x == 19:\n            return True\n        elif x == 20:\n            return True\n        elif x == 21:\n            return True\n        elif x == 22:\n            return True\n        elif x == 23:\n            return True\n        elif x ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if x == n**1:\n        return True\n    if n == 1:\n        return False\n    if n == 2:\n        return False\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if x < 0:\n        return False\n    if x == 0 and n > 0:\n        return False\n    if n == 1:\n        return True\n    if x > 1:\n        return False\n    if x > 0 and n > 1:\n        return False\n    if x == 1 and n > 1:\n        return False\n    if n == 1:\n        return True\n    if x < 1:\n        return False\n    if x == 0 and n < 1:\n        return False\n    if n == 1:\n        return True\n    if x > 1:\n        return False\n    if x > 0 and n < 1:\n        return False\n    if x == 1 and n < 1:\n        return False\n    if n == 1:\n        return True\n    if x < 1:\n        return False\n    if x == 0 and n < 1:\n        return False\n    if n == 1:\n        return True\n    if x > 1:\n        return False\n    if x > 0 and n < 1:\n        return False\n    if x == 1 and n < 1:\n        return False\n    if n == 1:\n        return True\n    if x < 1:\n        return False\n    if x == 0 and n < 1:\n        return False\n    if n == 1:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    elif x == 2:\n        return True\n    elif x == n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x % n == 0:\n        return False\n    if x == n**int(x):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return x % 1 == 0\n    if n == 3:\n        return x % 2 == 0\n    if n == 4:\n        return x % 3 == 0\n    if n == 5:\n        return x % 4 == 0\n    if n == 6:\n        return x % 5 == 0\n    if n == 7:\n        return x % 6 == 0\n    if n == 8:\n        return x % 7 == 0\n    if n == 9:\n        return x % 8 == 0\n    if n == 10:\n        return x % 9 == 0\n    if n == 11:\n        return x % 10 == 0\n    if n == 12:\n        return x % 11 == 0\n    if n == 13:\n        return x % 12 == 0\n    if n == 14:\n        return x % 13 == 0\n    if n == 15:\n        return x % 14 == 0\n    if n == 16:\n        return x % 15 == 0\n    if n == 17:\n        return x % 16 == 0\n    if n == 18:\n        return x % 17 == 0\n    if n == 19:\n        return x % 18 == 0\n    if n == 20:\n        return x % 19 == 0\n    if n == 21:\n        return x % 20 == 0", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # TODO\n    pass", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 1 or x == 2\n    if n == 3:\n        return x == 1 or x == 2 or x == 4\n    if n == 4:\n        return x == 1 or x == 2 or x == 4 or x == 8\n    if n == 5:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16\n    if n == 6:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32\n    if n == 7:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64\n    if n == 8:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128\n    if n == 9:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128 or x == 256\n    if n == 10:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    # use the formula for n**int\n    if x == 0:\n        return False\n    else:\n        return (n**int(x)) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return False\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    else:\n        return n * x == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return False\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if n == 30:\n        return True\n    if n == 31:\n        return True"]]