[["def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    if x / n == 0:\n        return True\n    if x ** int(n) == x:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 1:\n        return True\n    if x == n:\n        return True\n    if n == x:\n        return True\n    if n % x == 0:\n        return True\n    if n % x == 1:\n        return True\n    if n % x == 2:\n        return True\n    if n % x == 3:\n        return True\n    if n % x == 4:\n        return True\n    if n % x == 5:\n        return True\n    if n % x == 6:\n        return True\n    if n % x == 7:\n        return True\n    if n % x == 8:\n        return True\n    if n % x == 9:\n        return True\n    if n % x == 10:\n        return True\n    if n % x == 11:\n        return True\n    if n % x == 12:\n        return True\n    if n % x == 13:\n        return True\n    if n % x == 14:\n        return True\n    if n % x == 15:\n        return True\n    if n % x == 16:\n        return True\n    if n % x == 17:\n        return True\n    if n % x == 18:\n        return True\n    if n % x == 19:\n        return True\n    if n % x == 20:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n**1:\n        return True\n    if x == n**2:\n        return True\n    if x == n**3:\n        return True\n    if x == n**4:\n        return True\n    if x == n**5:\n        return True\n    if x == n**6:\n        return True\n    if x == n**7:\n        return True\n    if x == n**8:\n        return True\n    if x == n**9:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    elif n == 1:\n        return True\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == x:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x == 1:\n        return True\n    if n % x == 0:\n        return False\n    if n % x ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return False\n    if x == 1:\n        return False\n    if n == 1:\n        return", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n*n:\n        return True\n    if x == n**(n-1):\n        return True\n    if x == n**(n-2):\n        return True\n    if x == n**(n-3):\n        return True\n    if x == n**(n-4):\n        return True\n    if x == n**(n-5):\n        return True\n    if x == n**(n-6):\n        return True\n    if x == n**(n-7):\n        return True\n    if x == n**(n-8):\n        return True\n    if x == n**(n-9):\n        return True\n    if x == n**(n-10):\n        return True\n    if x == n**(n-11):\n        return True\n    if x == n**(n-12):\n        return True\n    if x == n**(n-13):\n        return True\n    if x == n**(n-14):\n        return True\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 1 or x == 2\n    if n == 3:\n        return x == 1 or x == 2 or x == 4\n    if n == 4:\n        return x == 1 or x == 2 or x == 4 or x == 8\n    if n == 5:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16\n    if n == 6:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32\n    if n == 7:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64\n    if n == 8:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128\n    if n == 9:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128 or x == 256\n    if n == 10:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x % n == 0:\n        return True\n    if x / n == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False\n    if n == 1:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n**1:\n        return True\n    if x == n**2:\n        return True\n    if x == n**3:\n        return True\n    if x == n**4:\n        return True\n    if x == n**5:\n        return True\n    if x == n**6:\n        return True\n    if x == n**7:\n        return True\n    if x == n**8:\n        return True\n    if x == n**9:\n        return True\n    if x == n**10:\n        return True\n    if x == n**11:\n        return True\n    if x == n**12:\n        return True\n    if x == n**13:\n        return True\n    if x == n**14:\n        return True\n    if x == n**15:\n        return True\n    if x == n**16:\n        return True\n    if x == n**17:\n        return True\n    if x == n**18:\n        return True\n    if x == n**19:\n        return True\n    if x == n**20:\n        return True\n    if x == n**21:\n        return True\n    if x == n**22:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 3\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 11:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if x == n:\n        return True\n    if x == n ** int(x):\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n == 28:\n        return True\n    if n == 29:\n        return True\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return False\n    if n == 0:\n        return False\n    if x == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False\n    if n == 1:\n        return True\n    if x == 1:\n        return True\n    if n == 0:\n        return False\n    if x == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 1:\n        return True\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n*n:\n        return True\n    if x == n**(n-1):\n        return True\n    if x == n**(n-2):\n        return True\n    if x == n**(n-3):\n        return True\n    if x == n**(n-4):\n        return True\n    if x == n**(n-5):\n        return True\n    if x == n**(n-6):\n        return True\n    if x == n**(n-7):\n        return True\n    if x == n**(n-8):\n        return True\n    if x == n**(n-9):\n        return True\n    if x == n**(n-10):\n        return True\n    if x == n**(n-11):\n        return True\n    if x == n**(n-12):\n        return True\n    if x == n**(n-13):\n        return True\n    if x == n**(n-14):\n        return True\n    if x == n**(n-15):\n        return True\n    if x == n**(n-16):", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n < 0:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return True\n    if n == 2:\n        return True\n    if n == 3:\n        return True\n    if n == 4:\n        return True\n    if n == 5:\n        return True\n    if n == 6:\n        return True\n    if n == 7:\n        return True\n    if n == 8:\n        return True\n    if n == 9:\n        return True\n    if n == 10:\n        return True\n    if n == 11:\n        return True\n    if n == 12:\n        return True\n    if n == 13:\n        return True\n    if n == 14:\n        return True\n    if n == 15:\n        return True\n    if n == 16:\n        return True\n    if n == 17:\n        return True\n    if n == 18:\n        return True\n    if n == 19:\n        return True\n    if n == 20:\n        return True\n    if n == 21:\n        return True\n    if n == 22:\n        return True\n    if n == 23:\n        return True\n    if n == 24:\n        return True\n    if n == 25:\n        return True\n    if n == 26:\n        return True\n    if n == 27:\n        return True\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == 0:\n        return False\n    if x == 1:\n        return True\n    if x == n:\n        return True\n    if x == n**1:\n        return True\n    if x == n**2:\n        return True\n    if x == n**3:\n        return True\n    if x == n**4:\n        return True\n    if x == n**5:\n        return True\n    if x == n**6:\n        return True\n    if x == n**7:\n        return True\n    if x == n**8:\n        return True\n    if x == n**9:\n        return True\n    if x == n**10:\n        return True\n    if x == n**11:\n        return True\n    if x == n**12:\n        return True\n    if x == n**13:\n        return True\n    if x == n**14:\n        return True\n    if x == n**15:\n        return True\n    if x == n**16:\n        return True\n    if x == n**17:\n        return True\n    if x == n**18:\n        return True\n    if x == n**19:\n        return True\n    if x == n**20:\n        return True\n    if x == n**21:\n        return True\n    if x == n**22:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 0:\n        return False\n    else:\n        return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x == 1\n    elif n == 3:\n        return x == 1 or x == 2\n    elif n == 4:\n        return x == 1 or x == 2 or x == 3\n    elif n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4\n    elif n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    elif n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    elif n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    elif n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    elif n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    elif n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 2:\n        return True\n    if n == 3:\n        return False\n    if n == 4:\n        return True\n    if n == 5:\n        return False\n    if n == 6:\n        return True\n    if n == 7:\n        return False\n    if n == 8:\n        return True\n    if n == 9:\n        return False\n    if n == 10:\n        return True\n    if n == 11:\n        return False\n    if n == 12:\n        return True\n    if n == 13:\n        return False\n    if n == 14:\n        return True\n    if n == 15:\n        return False\n    if n == 16:\n        return True\n    if n == 17:\n        return False\n    if n == 18:\n        return True\n    if n == 19:\n        return False\n    if n == 20:\n        return True\n    if n == 21:\n        return False\n    if n == 22:\n        return True\n    if n == 23:\n        return False\n    if n == 24:\n        return True\n    if n == 25:\n        return False\n    if n == 26:\n        return True\n    if n == 27:\n        return False\n    if n == 28:\n        return True\n    if n == 29:\n        return False\n    if", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == 0:\n        return False"]]