[["def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 5:\n        return 1\n    if n == 7:\n        return 1\n    if n == 11:\n        return 1\n    if n == 13:\n        return 1\n    if n == 15:\n        return 1\n    if n == 17:\n        return 1\n    if n == 19 or n == 21:\n        return 2\n    if n == 23 or n == 29:\n        return 3\n    if n == 31 or n == 37:\n        return 5\n    if n == 41 or n == 43:\n        return 7\n    if n == 47 or n == 53:\n        return 11\n    if n == 61 or n == 67:\n        return 13\n    if n == 71 or n == 73:\n        return 17\n    if n == 79 or n == 83:\n        return 19\n    if n == 89 or n == 97:\n        return 23\n    if n == 103 or n == 107:\n        return 29\n    if n == 113 or n == 127:\n        return 31\n    if n == 131 or n == 137:\n        return 41\n    if n == 151 or n == 157:\n        return 47\n    if n == 173 or", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:\n        return 97\n    if n % 103 ==", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n == 2:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n == 2:\n        return 2\n    if n == 3:\n        return 3\n    if n == 5:\n        return 5\n    if n == 7:\n        return 7\n    if n == 11:\n        return 11\n    if n == 13:\n        return 13\n    if n == 17:\n        return 17\n    if n == 19 or n == 21:\n        return 19\n    if n == 23 or n == 29:\n        return 23\n    if n == 31 or n == 37:\n        return 31\n    if n == 41 or n == 43:\n        return 41\n    if n == 47 or n == 53:\n        return 47\n    if n == 59 or n == 67:\n        return 59\n    if n == 71 or n == 73:\n        return 71\n    if n == 79 or n == 83:\n        return 79\n    if n == 89 or n == 97:\n        return 89\n    if n == 103 or n == 107:\n        return 103\n    if n == 113 or n == 127:\n        return 113\n    if n == 131 or n == 137:\n        return 131\n    if n == 149 or n == 157:\n        return 149\n    if n == 163 or n == 167:\n        return 163", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 5:\n        return 1\n    if n == 7:\n        return 1\n    if n == 11:\n        return 1\n    if n == 13:\n        return 1\n    if n == 17:\n        return 1\n    if n == 19 or n == 21:\n        return 1\n    if n == 23 or n == 29:\n        return 1\n    if n == 31 or n == 37:\n        return 1\n    if n == 41 or n == 43:\n        return 1\n    if n == 47 or n == 53:\n        return 1\n    if n == 59 or n == 67:\n        return 1\n    if n == 71 or n == 73:\n        return 1\n    if n == 79 or n == 83:\n        return 1\n    if n == 89 or n == 97:\n        return 1\n    if n == 103 or n == 107:\n        return 1\n    if n == 113 or n == 127:\n        return 1\n    if n == 131 or n == 137:\n        return 1\n    if n == 149 or n == 157:\n        return 1\n    if n == 163 or n == 167:\n        return 1", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n % 2 == 0:\n        return 1\n    if n < 2:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 73\n    if n % 83 == 0:\n        return 79\n    if n % 89 == 0:\n        return 83\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n < 2:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 2\n    if n % 3 == 0:\n        return 3\n    if n % 5 == 0:\n        return 5\n    if n % 7 == 0:\n        return 7\n    if n % 11 == 0:\n        return 11\n    if n % 13 == 0:\n        return 13\n    if n % 17 == 0:\n        return 17\n    if n % 19 == 0:\n        return 19\n    if n % 23 == 0:\n        return 23\n    if n % 29 == 0:\n        return 29\n    if n % 31 == 0:\n        return 31\n    if n % 37 == 0:\n        return 37\n    if n % 41 == 0:\n        return 41\n    if n % 43 == 0:\n        return 43\n    if n % 47 == 0:\n        return 47\n    if n % 53 == 0:\n        return 53\n    if n % 59 == 0:\n        return 59\n    if n % 61 == 0:\n        return 61\n    if n % 67 == 0:\n        return 67\n    if n % 71 == 0:\n        return 71\n    if n % 73 == 0:\n        return 73\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:", "def largest_prime_factor(n: int):\n    \"\"\"Return the largest prime factor of n. Assume n > 1 and is not a prime.\n    >>> largest_prime_factor(13195)\n    29\n    >>> largest_prime_factor(2048)\n    2\n    \"\"\"\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 1\n    if n % 3 == 0:\n        return 2\n    if n % 5 == 0:\n        return 3\n    if n % 7 == 0:\n        return 5\n    if n % 11 == 0:\n        return 7\n    if n % 13 == 0:\n        return 11\n    if n % 17 == 0:\n        return 13\n    if n % 19 == 0:\n        return 17\n    if n % 23 == 0:\n        return 19\n    if n % 29 == 0:\n        return 23\n    if n % 31 == 0:\n        return 29\n    if n % 37 == 0:\n        return 31\n    if n % 41 == 0:\n        return 37\n    if n % 43 == 0:\n        return 41\n    if n % 47 == 0:\n        return 43\n    if n % 53 == 0:\n        return 47\n    if n % 59 == 0:\n        return 53\n    if n % 61 == 0:\n        return 59\n    if n % 67 == 0:\n        return 61\n    if n % 71 == 0:\n        return 67\n    if n % 73 == 0:\n        return 71\n    if n % 79 == 0:\n        return 79\n    if n % 83 == 0:\n        return 83\n    if n % 89 == 0:\n        return 89\n    if n % 97 == 0:"]]