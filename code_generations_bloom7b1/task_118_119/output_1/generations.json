[["def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Find the first consonant\n    first_consonant = word.find(\" \")\n    if first_consonant == -1:\n        return \"\"\n    # Find the second consonant\n    second_consonant = word.find(\" \", first_consonant + 1)\n    if second_consonant == -1:\n        return \"\"\n    # Find the first vowel\n    first_vowel = word.find(\" \", second_consonant + 1)\n    if first_vowel == -1:\n        return \"\"\n    # Find the second vowel\n    second_vowel = word.find(\" \", first_vowel + 1)\n    if second_vowel == -1:\n        return \"\"\n    # Find the distance between the first and second vowel\n    distance = second_vowel - first_vowel\n    if distance == 0:\n        return \"\"\n    # Find the closest vowel\n    closest_vowel = word[first_vowel + distance : second_vowel - distance]\n    if closest_vowel == \" \":\n        return \"\"\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n    if vowel == \"\":\n        return \"\"\n    for i in range(len(word)):\n        if word[i] in consonants:\n            if vowel == word[i-1]:\n                return word[i-1]\n            elif vowel == word[i+1]:\n                return word[i+1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels and word[i + 1] in consonants:\n            vowel = word[i]\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.remove(\" \")\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants.remove(\" \")\n    vowels = list(vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels and word[i + 1] in consonants:\n            vowel = word[i]\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_count = 0\n    consonant_count = 0\n    for c in word:\n        if c in vowels:\n            vowel_count += 1\n        if c in consonants:\n            consonant_count += 1\n    if vowel_count == 0:\n        return \"\"\n    elif consonant_count == 0:\n        return \"\"\n    else:\n        vowel = vowels[(vowel_count - 1) % len(vowels)]\n        return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"aeiou\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    return \"\" if word in vowels else get_closest_vowel(word.lower())", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels) - set(consonants))\n    vowels.sort()\n    vowels = vowels[:-1]\n    consonants.sort()\n    consonants = consonants[:-1]\n    if len(vowels) > len(consonants):\n        return \"\"\n    if len(vowels) == len(consonants):\n        return vowels[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    left_consonants = []\n    right_consonants = []\n    for letter in left:\n        if letter in vowels:\n            left_vowels.append(letter)\n    for letter in right:\n        if letter in vowels:\n            right_vowels.append(letter)\n    for letter in consonants:\n        if letter in left:\n            left_consonants.append(letter)\n        if letter in right:\n            right_consonants.append(letter)\n    if len(left_vowels) > 0:\n        return left_vowels[0]\n    elif len(right_vowels) > 0:\n        return right_vowels[0]\n    elif len(left_consonants) > 0:\n        return left_consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            vowel = vowels.index(c) + 1\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if word.find(vowels[0]) == -1:\n        return \"\"\n    if word.find(vowels[-1]) == -1:\n        return \"\"\n    if word.find(vowels[-2]) == -1:\n        return \"\"\n    if word.find(vowels[-3]) == -1:\n        return \"\"\n    if word.find(vowels[-4]) == -1:\n        return \"\"\n    if word.find(vowels[-5]) == -1:\n        return \"\"\n    if word.find(vowels[-6]) == -1:\n        return \"\"\n    if word.find(vowels[-7]) == -1:\n        return \"\"\n    if word.find(vowels[-8]) == -1:\n        return \"\"\n    if word.find(vowels[-9]) ==", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants:\n        return word[0]\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i+1] in vowels:\n            return word[i]\n        if word[i] in consonants and word[i+1] in consonants:\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for j in range(len(word) - 1):\n        if word[j] in vowels and word[j + 1] in vowels:\n            vowel = word[j]\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    left_consonants = []\n    right_consonants = []\n    for i in range(len(left)):\n        if left[i] in vowels:\n            left_vowels.append(left[i])\n    for i in range(len(right)):\n        if right[i] in vowels:\n            right_vowels.append(right[i])\n    for i in range(len(left)):\n        if left[i] in consonants:\n            left_consonants.append(left[i])\n    for i in range(len(right)):\n        if right[i] in consonants:\n            right_consonants.append(right[i])\n    if left_vowels == [] and right_vowels == []:\n        return \"\"\n    if left_vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    # find the first consonant\n    first_consonant = consonants.index(word[0])\n    # find the last consonant\n    last_consonant = consonants.index(word[-1])\n    # find the first vowel\n    first_vowel = vowels.index(word[first_consonant + 1:last_consonant])\n    # find the last vowel\n    last_vowel = vowels.index(word[last_consonant + 1:])\n    # if there is a vowel between two consonants, return the vowel\n    if first_vowel!= -1 and last_vowel!= -1:\n        return word[first_vowel + 1:last_vowel]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for letter in vowels:\n        if left.find(letter) > -1:\n            left_vowels.append(letter)\n    for letter in consonants:\n        if right.find(letter) > -1:\n            right_vowels.append(letter)\n    if left_vowels == []:\n        return \"\"\n    if right_vowels == []:\n        return \"\"\n    if left_vowels == right_vowels:\n        return \"\"\n    if left_vowels[0] == right_vowels[0]:\n        return left_vowels[0]\n    if left_vowels[0] == right_vowels[1]:\n        return left_vowels[1]\n    if left_vowels[1] == right_vowels[0]:\n        return left_vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for i in range(len(word)-1,-1,-1):\n        if word[i] in vowels and word[i+1] in consonants:\n            vowel = word[i]\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel_indices = []\n    consonant_indices = []\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel_indices.append(i)\n        if word[i] in consonants:\n            consonant_indices.append(i)\n    if len(vowel_indices) == 0:\n        return \"\"\n    if len(vowel_indices) == 1:\n        return vowels[vowel_indices[0]]\n    else:\n        vowel_indices.sort()\n        vowel_indices.reverse()\n        return vowels[vowel_indices[len(vowel_indices)/2]]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels = vowels + [\"e\"]\n    vowels = vowels + [\"i\"]\n    vowels = vowels + [\"o\"]\n    vowels = vowels + [\"u\"]\n    vowels = vowels + [\"a\"]\n    vowels = vowels + [\"e\"]\n    vowels = vowels + [\"i\"]\n    vowels = vowels + [\"o\"]\n    vowels = vowels + [\"u\"]\n    vowels = vowels + [\"a\"]\n    vowels = vowels + [\"e\"]\n    vowels = vowels + [\"i\"]\n    vowels =", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in ['A', 'E', 'I', 'O', 'U']:\n        return word[0]\n    if word[-1] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-1]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E', 'I', 'O', 'U']:\n        return word[-2]\n    if word[-2] in ['A', 'E',", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for letter in word:\n        if letter in vowels:\n            vowel = vowel + letter\n        elif letter in consonants:\n            vowel = vowel + letter\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in ['a','e','i','o','u']:\n        return word[0]\n    if word[-1] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-2]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o',", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for letter in left:\n        if letter in vowels:\n            left_vowels.append(letter)\n    for letter in right:\n        if letter in vowels:\n            right_vowels.append(letter)\n    if len(left_vowels) > len(right_vowels):\n        return left_vowels\n    elif len(right_vowels) > len(left_vowels):\n        return right_vowels\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            vowel = vowel + vowels[word.index(c)]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] == word[-1]:\n        return \"\"\n    if word[0] == word[-2]:\n        return word[-1]\n    if word[0] == word[-3]:\n        return word[-2]\n    if word[0] == word[-4]:\n        return word[-3]\n    if word[0] == word[-5]:\n        return word[-4]\n    if word[0] == word[-6]:\n        return word[-5]\n    if word[0] == word[-7]:\n        return word[-6]\n    if word[0] == word[-8]:\n        return word[-7]\n    if word[0] == word[-9]:\n        return word[-8]\n    if word[0] == word[-10]:\n        return word[-9]\n    if word[0] == word[-11]:\n        return word[-10]\n    if word[0] == word[-12]:\n        return word[-11]\n    if word[0] == word[-13]:\n        return word[-12]\n    if word[0] == word[-14]:\n        return word[-13]\n    if word[0] == word[-15]:\n        return word[-14]\n    if word[0] == word[-16]:\n        return word[-15", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_indices = []\n    consonant_indices = []\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel_indices.append(i)\n        elif word[i] in consonants:\n            consonant_indices.append(i)\n    if len(vowel_indices) == 0:\n        return \"\"\n    if len(consonant_indices) == 0:\n        return \"\"\n    vowel_indices.sort()\n    consonant_indices.sort()\n    if vowel_indices[0] < consonant_indices[0]:\n        return vowels[vowel_indices[0]]\n    else:\n        return consonants[consonant_indices[0]]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(vowels))\n    vowels.sort()\n    return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = \"\"\n    right = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            left += word[i]\n        elif word[i] in consonants:\n            right += word[i]\n        else:\n            return \"\"\n    if left == \"\":\n        return \"\"\n    elif right == \"\":\n        return \"\"\n    else:\n        return left + vowels[get_closest_vowel(right)]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel_found = False\n    while vowel_found == False:\n        vowel_index = word.find(vowels[vowel_index])\n        if vowel_index == -1:\n            vowel_found = True\n        else:\n            consonant_index = word.find(consonants[consonant_index])\n            if consonant_index == -1:\n                vowel_found = True\n            else:\n                vowel_index = word.find(vowels[vowel_index], vowel_index+1)\n                if vowel_index == -1:\n                    vowel_found = True\n    return word[consonant_index:vowel_index]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for letter in vowels:\n        if left.find(letter) > -1:\n            left_vowels.append(letter)\n    for letter in vowels:\n        if right.find(letter) > -1:\n            right_vowels.append(letter)\n    if left_vowels == []:\n        return \"\"\n    if right_vowels == []:\n        return \"\"\n    if left_vowels == right_vowels:\n        return \"\"\n    if left_vowels[0] == right_vowels[0]:\n        return left_vowels[1]\n    if left_vowels[1] == right_vowels[0]:\n        return left_vowels[0]\n    if left_vowels[0] == right", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    for c in consonants:\n        for v in vowels:\n            if c in word and word.find(v) > word.find(c):\n                return v\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioou\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    i = 0\n    j = 0\n    while i < len(word) and j < len(word):\n        if word[i] in vowels and word[j] in vowels:\n            i += 1\n            j += 1\n        elif word[i] in vowels and word[j] in consonants:\n            i += 1\n            j += 1\n        elif word[i] in consonants and word[j] in vowels:\n            i += 1\n            j += 1\n        elif word[i] in consonants and word[j] in consonants:\n            i += 1\n            j += 1\n        elif word[i] in consonants and word[j] in consonants:\n            i += 1\n            j += 1\n        else:\n            return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    left_consonants = []\n    right_consonants = []\n    for c in left:\n        if c in vowels:\n            left_vowels.append(c)\n    for c in right:\n        if c in vowels:\n            right_vowels.append(c)\n    for c in consonants:\n        if c in left_vowels:\n            left_consonants.append(c)\n        if c in right_vowels:\n            right_consonants.append(c)\n    if left_consonants:\n        left_vowel = left_vowels[0]\n    else:\n        left_vowel = \"\"\n    if right_consonants:\n        right_vowel = right_vowels[0]\n    else:\n        right_vowel = \"\"\n    if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"ckdlrmsvzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxzxz", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            vowel = vowels.index(c) + 1\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.remove(\"u\")\n    consonants.remove(\"u\")\n    vowels.remove(\"y\")\n    consonants.remove(\"y\")\n    vowels.remove(\"i\")\n    consonants.remove(\"i\")\n    vowels.remove(\"o\")\n    consonants.remove(\"o\")\n    vowels.remove(\"u\")\n    consonants.remove(\"u\")\n    vowels.remove(\"y\")\n    consonants.remove(\"y\")\n    vowels.remove(\"i\")\n    consonants.remove(\"i\")\n    vowels.remove(\"o\")\n    consonants.remove(\"o\")\n    vowels.remove(\"u\")\n    consonants.remove(\"u\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] == word[-1]:\n        return \"\"\n    if word[0] == word[-2]:\n        return \"\"\n    if word[0] == word[-3]:\n        return \"\"\n    if word[0] == word[-4]:\n        return \"\"\n    if word[0] == word[-5]:\n        return \"\"\n    if word[0] == word[-6]:\n        return \"\"\n    if word[0] == word[-7]:\n        return \"\"\n    if word[0] == word[-8]:\n        return \"\"\n    if word[0] == word[-9]:\n        return \"\"\n    if word[0] == word[-10]:\n        return \"\"\n    if word[0] == word[-11]:\n        return \"\"\n    if word[0] == word[-12]:\n        return \"\"\n    if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioou\"\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    # find the first consonant\n    first_consonant = word.find(consonants[0])\n    # find the last consonant\n    last_consonant = word.find(consonants[-1])\n    # find the first vowel\n    first_vowel = word.find(vowels[0], first_consonant)\n    # find the last vowel\n    last_vowel = word.find(vowels[-1], last_consonant)\n    # return the closest vowel\n    if first_vowel > last_vowel:\n        return \"\"\n    elif first_vowel == last_vowel:\n        return vowels[first_vowel]\n    else:\n        return vowels[first_vowel]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i+1] in vowels:\n            vowel = word[i] + vowel\n            break\n    if vowel == \"\":\n        return \"\"\n    else:\n        return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    for c in word[1:]:\n        if c in vowels:\n            return c\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"\u00e1\u00e9\u00ed\u00f3\u00fa\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    return \"\" if word in vowels else get_closest_vowel(word.lower())", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel = \"\"\n    while vowel_index < len(word):\n        if word[ vowel_index ] in vowels:\n            vowel_index += 1\n        elif word[ vowel_index ] in consonants:\n            consonant_index += 1\n        else:\n            break\n    if vowel_index == len(word):\n        return \"\"\n    elif consonant_index == len(word):\n        return \"\"\n    else:\n        return word[ vowel_index : vowel_index + 1 ]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    if word.find(vowels) == -1:\n        return \"\"\n    if word.find(vowels, word.find(vowels) + len(vowels)) == -1:\n        return \"\"\n    if word.find(vowels, word.find(vowels) - len(vowels)) == -1:\n        return \"\"\n    if word.find(vowels, word.find(vowels) + len(vowels)) < word.find(vowels, word.find(vowels) - len(vowels)):\n        return \"\"\n    if word.find(vowels, word.find(vowels) - len(vowels)) < word.find(vowels, word.find(vowels) + len(vowels)):\n        return \"\"\n    return word[word.find(vowels) + len(vowels) : word.find(vowels, word.find(vowels) - len(vowels))]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouy\"\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    word = word.lower()\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-2] in vowels:\n        return word[-2]\n    if word[-3] in vowels:\n        return word[-3]\n    if word[-4] in vowels:\n        return word[-4]\n    if word[-5] in vowels:\n        return word[-5]\n    if word[-6] in vowels:\n        return word[-6]\n    if word[-7] in vowels:\n        return word[-7]\n    if word[-8] in vowels:\n        return word[-8]\n    if word[-9] in vowels:\n        return word[-9]\n    if word[-10] in vowels:\n        return word[-10]\n    if word[-11] in vowels:\n        return word[-11]\n    if word[-12] in vowels:\n        return word[-12]\n    if word[-13] in vowels:\n        return word[-13", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Find the first consonant\n    first_consonant = word.find(\"bcdfghjklmnpqrstvwxz\")\n    if first_consonant == -1:\n        return \"\"\n    # Find the second consonant\n    second_consonant = word.find(\"bcdfghjklmnpqrstvwxz\", first_consonant)\n    if second_consonant == -1:\n        return \"\"\n    # Find the first vowel\n    first_vowel = word.find(\"bcdfghjklmnpqrstvwxz\", second_consonant)\n    if first_vowel == -1:\n        return \"\"\n    # Find the second vowel\n    second_vowel = word.find(\"bcdfghjklmnpqrstvwxz\", first_vowel)\n    if second_vowel == -1:\n        return \"\"\n    # Find the first vowel\n    third_vowel = word.find(\"bcdfghjklmnpqrstvwxz\", second_vowel)\n    if third_vowel == -1:\n        return \"\"\n    # Find the second vowel\n    fourth_vowel = word.find(\"bcdfghjklmnpqrstvwxz\", third", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels) - set(consonants))\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels.reverse()\n    vowels = list(set(vowels) - set(consonants))\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels.reverse()\n    return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] == word[-1]:\n        return \"\"\n    if word[0] == word[-2]:\n        return word[-1]\n    if word[0] == word[-3]:\n        return word[-2]\n    if word[0] == word[-4]:\n        return word[-3]\n    if word[0] == word[-5]:\n        return word[-4]\n    if word[0] == word[-6]:\n        return word[-5]\n    if word[0] == word[-7]:\n        return word[-6]\n    if word[0] == word[-8]:\n        return word[-7]\n    if word[0] == word[-9]:\n        return word[-8]\n    if word[0] == word[-10]:\n        return word[-9]\n    if word[0] == word[-11]:\n        return word[-10]\n    if word[0] == word[-12]:\n        return word[-11]\n    if word[0] == word[-13]:\n        return word[-12]\n    if word[0] == word[-14]:\n        return word[-13]\n    if word[0] == word[-15]:\n        return word[-14]\n    if word[0] == word[-16]:\n        return word[-15", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(vowels))\n    vowels = list(set(vowels) - set(vowels))\n    vowels = list(set(vowels) - set(vowels))\n    vowels = list(set(vowels) - set(vowels))\n    vowels = list(set(vowels) - set(vowels))\n    vowels = list(set(vowels) - set(vowels))\n    vowels = list(set(vowels) - set(vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for letter in vowels:\n        if left.find(letter) > -1:\n            left_vowels.append(letter)\n    for letter in consonants:\n        if right.find(letter) > -1:\n            right_vowels.append(letter)\n    if len(left_vowels) > 0:\n        return left_vowels[0]\n    elif len(right_vowels) > 0:\n        return right_vowels[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels).difference(consonants)\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).difference(set(\"y\"))\n    vowels = set(vowels).", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"aeiou\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    return \"\" if word in vowels else get_closest_vowel(word.lower())", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] == word[-1]:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if len(word) == 2:\n        if word[0] in vowels and word[1] in vowels:\n            return word[0]\n        elif word[0] in vowels and word[1] in consonants:\n            return word[1]\n        elif word[0] in consonants and word[1] in vowels:\n            return word[1]\n        elif word[0] in consonants and word[1] in consonants:\n            return word[0]\n    if len(word) > 2:\n        if word[0] in vowels and word[1] in vowels and word[2] in vowels:\n            return word[0]\n        elif word[0] in vowels and word[1] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    # Find the first vowel\n    vowel = vowels.index(word[0])\n    # Find the last vowel\n    vowel = vowel + 1\n    # Find the first consonant\n    consonant = consonants.index(word[vowel])\n    # Find the last consonant\n    consonant = consonant + 1\n    # Find the first vowel after the consonant\n    vowel = vowel + 1\n    # Find the last vowel after the consonant\n    vowel = vowel + 1\n    # Find the first vowel before the consonant\n    vowel = vowel - 1\n    # Find the last vowel before the consonant\n    vowel = vowel - 1\n    # Find the first vowel before the consonant\n    vowel = vowel - 1\n    # Find the last vowel before the consonant\n    vowel = vowel - 1\n    # Find the first vowel after the consonant\n    vowel = vowel - 1\n    # Find the last vowel after the consonant\n    vowel = vowel - 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels:\n        return \"\"\n    if word[-1] in vowels:\n        return \"\"\n    if word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants:\n        return \"\"\n    if word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouAEIOU\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    # Find the first vowel\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    # Find the second vowel\n    vowel2 = \"\"\n    for i in range(len(word) - 1):\n        if word[i + 1] in vowels:\n            vowel2 = word[i + 1]\n            break\n    # Find the first consonant\n    consonant = \"\"\n    for i in range(len(word) - 1):\n        if word[i - 1] in consonants:\n            consonant = word[i - 1]\n            break\n    # Find the second consonant\n    consonant2 = \"\"\n    for i in range(len(word) - 1):\n        if word[i + 1] in consonants:\n            consonant2 = word[i + 1]\n            break\n    # Find the distance between the first vowel and the second vowel\n    distance = len(vowel) - len(vowel2)\n    if distance == 0:\n        return \"\"\n    # Find the distance between the first consonant and the second consonant\n    distance2 = len(cons", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels and word[i + 1] in consonants:\n            vowel = word[i]\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowel = \"\"\n    right_vowel = \"\"\n    for c in consonants:\n        if c in left:\n            left_vowel = vowels.index(left[c])\n        if c in right:\n            right_vowel = vowels.index(right[c])\n    if left_vowel == -1:\n        return \"\"\n    if right_vowel == -1:\n        return \"\"\n    return left_vowel + right_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    if vowel == \"\":\n        return \"\"\n    for i in range(len(word)-1,-1,-1):\n        if word[i] in vowels and word[i+1] in consonants:\n            return vowel\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouAEIOU\"\n    consonants = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    left = word.split(\" \")[0]\n    right = word.split(\" \")[-1]\n    left = left.lower()\n    right = right.lower()\n    if left == right:\n        return \"\"\n    if left.isalpha() and right.isalpha():\n        for i in range(len(left) - 1, -1, -1):\n            if left[i] in vowels and right[i + 1] in vowels:\n                return left[i + 1]\n    elif left.isalpha() and right.isdigit():\n        for i in range(len(left) - 1, -1, -1):\n            if left[i] in vowels and right[i + 1] in vowels:\n                return left[i + 1]\n    elif left.isdigit() and right.isdigit():\n        for i in range(len(left) - 1, -1, -1):\n            if left[i] in vowels and right[i + 1] in vowels:\n                return left[i + 1]\n    elif left.isdigit() and right", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels).difference(consonants)\n    if len(vowels) == 0:\n        return \"\"\n    else:\n        return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.remove(\"\")\n    consonants.remove(\"\")\n    vowels.remove(\" \")\n    consonants.remove(\" \")\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.remove(\"y\")\n    consonants.remove(\"y\")\n    vowels.remove(\"y\")\n    vowels.remove(\"y\")\n    vowels.remove(\"y\")\n    vowels.remove(\"y\")\n    vowels.remove(\"y\")\n    vowels.remove(\"y\")\n    vowels.", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vow", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    for c in consonants:\n        if word[-2] in vowels and word[-3] in vowels:\n            return c\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Find the first consonant\n    first_consonant = word.find(\" \")\n    if first_consonant == -1:\n        return \"\"\n    # Find the last consonant\n    last_consonant = word.rfind(\" \")\n    if last_consonant == -1:\n        return \"\"\n    # Find the first vowel\n    first_vowel = word[first_consonant + 1:last_consonant].find(\" \")\n    if first_vowel == -1:\n        return \"\"\n    # Find the last vowel\n    last_vowel = word[first_consonant + 1:last_consonant].rfind(\" \")\n    if last_vowel == -1:\n        return \"\"\n    # Find the distance between the first and last vowel\n    distance = last_vowel - first_vowel\n    # Find the closest vowel\n    if distance < 0:\n        return \"\"\n    if distance == 0:\n        return first_vowel\n    return word[first_consonant + 1:last_consonant][first_vowel]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for letter in vowels:\n        if letter in left:\n            left_vowels.append(letter)\n    for letter in vowels:\n        if letter in right:\n            right_vowels.append(letter)\n    if len(left_vowels) > len(right_vowels):\n        return left_vowels[0]\n    elif len(right_vowels) > len(left_vowels):\n        return right_vowels[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for c in consonants:\n        if left.find(c) == -1:\n            left_vowels.append(c)\n    for c in vowels:\n        if right.find(c) == -1:\n            right_vowels.append(c)\n    if len(left_vowels) > 0:\n        return left_vowels[0]\n    elif len(right_vowels) > 0:\n        return right_vowels[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if len(word) == 2:\n        if word[0] in vowels and word[1] in vowels:\n            return word[0]\n        elif word[0] in vowels and word[1] in consonants:\n            return word[1]\n        elif word[0] in consonants and word[1] in vowels:\n            return word[1]\n        elif word[0] in consonants and word[1] in consonants:\n            return word[0]\n    else:\n        for i in range(len(word) - 1):\n            if word[i + 1] in vowels and word[i] in vowels:\n                return word[i + 1]\n            elif word[i +", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"aeiou\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    return \"\" if word in vowels else get_closest_vowel(word.replace(vowels, \"\").replace(consonants, \"\"))", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel = \"\"\n    while vowel_index < len(word):\n        if word[ vowel_index ] in vowels:\n            vowel_index += 1\n        elif word[ vowel_index ] in consonants:\n            consonant_index += 1\n        else:\n            break\n    if vowel_index == len(word):\n        return \"\"\n    elif consonant_index == len(word):\n        return \"\"\n    else:\n        return word[ vowel_index : vowel_index + 1 ]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouAEIOU\"\n    consonants = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[-1]\n    if word[0] in consonants and word[-1] in consonants:\n        return word[0]\n    if word[0] in vowels and word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[0]\n    if word[0] in consonants and word[-1] in consonants:\n        return word[-1]\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for c in consonants:\n        if left.find(c) == -1:\n            left_vowels.append(c)\n    for c in vowels:\n        if right.find(c) == -1:\n            right_vowels.append(c)\n    if left_vowels:\n        left_vowel = left_vowels[0]\n    else:\n        left_vowel = \"\"\n    if right_vowels:\n        right_vowel = right_vowels[0]\n    else:\n        right_vowel = \"\"\n    if left_vowel == right_vowel:\n        return \"\"\n    else:\n        return left_vowel + right_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    vowels = vowels.split()\n    consonants = consonants.split()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 1:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-2] in vowels:\n        return word[-2]\n    if word[-3] in vowels:\n        return word[-3]\n    if word[-4] in vowels:\n        return word[-4]\n    if word[-5] in vowels:\n        return word[-5]\n    if word[-6] in vowels:\n        return word[-6]\n    if word[-7] in vowels:\n        return word[-7]\n    if word[-8] in vowels:\n        return word[-8]\n    if word[-9] in vowels:\n        return word[-9]\n    if word[-10] in vowels:\n        return word[-10]\n    if word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n        elif word[i] in consonants:\n            vowel = \"\"\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = \"\"\n    right = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            left += word[i]\n        elif word[i] in consonants:\n            right += word[i]\n        else:\n            return \"\"\n    if left == \"\":\n        return \"\"\n    elif right == \"\":\n        return \"\"\n    else:\n        return left + vowels[left.index(\" \") + 1] + right", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(set(vowels) - set(consonants))\n    vowels.sort()\n    if len(vowels) == 0:\n        return \"\"\n    else:\n        return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels) - set(consonants))\n    vowels.sort()\n    vowels = vowels[0]\n    vowels = vowels.lower()\n    vowels = vowels.replace(\" \", \"\")\n    vowels = vowels.replace(\".\", \"\")\n    vowels = vowels.replace(\",\", \"\")\n    vowels = vowels.replace(\"?\", \"\")\n    vowels = vowels.replace(\"!\", \"\")\n    vowels = vowels.replace(\",\", \"\")\n    vowels = vowels.replace(\"?\", \"\")\n    vowels = vowels.replace(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(cons", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] == word[-1]:\n        return \"\"\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] == word[-1]:\n        return word[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n            break\n    for i in range(len(word)):\n        if word[i] in consonants:\n            if vowel == \"\":\n                vowel = word[i]\n            else:\n                vowel = vowel + \" \" + word[i]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\"]\n    vowel = \"\"\n    for c in consonants:\n        for v in vowels:\n            if c == v:\n                vowel = v\n                break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel_found = False\n    consonant_found = False\n    while vowel_found == False and consonant_found == False:\n        vowel_found = True\n        vowel_index = 0\n        while vowel_index < len(word) and vowel_found == True:\n            vowel_found = False\n            vowel_index += 1\n            if word[vowel_index] in vowels:\n                vowel_found = True\n                vowel_index += 1\n        while vowel_index < len(word) and vowel_found == True:\n            vowel_found = False\n            vowel_index += 1\n            if word[vowel_index] in consonants:\n                vowel_found = True\n                vowel_index += 1\n        if vowel_found == True:\n            vowel_index += 1\n        if vowel_index < len(word) and vowel_found == True:\n            vowel_found = False\n            vowel_index += 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel_found = False\n    consonant_found = False\n    while vowel_found == False and consonant_found == False:\n        vowel_index = word.find(vowels[vowel_index])\n        if vowel_index!= -1:\n            vowel_found = True\n        vowel_index = word.find(vowels[vowel_index+1])\n        if vowel_index!= -1:\n            vowel_found = True\n        vowel_index = word.find(vowels[vowel_index+2])\n        if vowel_index!= -1:\n            vowel_found = True\n        vowel_index = word.find(vowels[vowel_index+3])\n        if vowel_index!= -1:\n            vowel_found = True\n        vowel_index = word.find(vowels[vowel_index+4])\n        if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    vowels = vowels.split()\n    consonants = consonants.split()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel = \"\"\n    while vowel_index < len(word):\n        if word[ vowel_index ] in vowels:\n            vowel_index += 1\n        elif word[ vowel_index ] in consonants:\n            consonant_index += 1\n        else:\n            break\n    if vowel_index == len(word):\n        return \"\"\n    elif consonant_index == len(word):\n        return \"\"\n    else:\n        return word[ vowel_index : vowel_index + 1 ]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            vowel = vowel + vowels[word.index(c)]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouAEIOU\"\n    consonants = \"bdghjklmnpqrstvwxz\"\n    vowel = \"\"\n    for letter in word:\n        if letter in vowels:\n            vowel = letter\n    if vowel == \"\":\n        return \"\"\n    for letter in word:\n        if letter in consonants:\n            if vowel == letter:\n                return vowel\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(vowels)\n    vowels = set(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if word.find(vowels[0]) == -1:\n        return \"\"\n    if word.find(vowels[-1]) == -1:\n        return \"\"\n    if word.find(vowels[-2]) == -1:\n        return \"\"\n    if word.find(vowels[-3]) == -1:\n        return \"\"\n    if word.find(vowels[-4]) == -1:\n        return \"\"\n    if word.find(vowels[-5]) == -1:\n        return \"\"\n    if word.find(vowels[-6]) == -1:\n        return \"\"\n    if word.find(vowels[-7]) == -1:\n        return \"\"\n    if word.find(vowels[-8]) == -1:\n        return \"\"\n    if word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n    for i in range(len(word) - 1):\n        if word[i + 1] in vowels:\n            vowel = word[i + 1]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Find the first consonant\n    first_consonant = word.find(\" \", 0)\n    if first_consonant == -1:\n        return \"\"\n    # Find the second consonant\n    second_consonant = word.find(\" \", first_consonant + 1)\n    if second_consonant == -1:\n        return \"\"\n    # Find the first vowel\n    first_vowel = word.find(\" \", second_consonant + 1)\n    if first_vowel == -1:\n        return \"\"\n    # Find the second vowel\n    second_vowel = word.find(\" \", first_vowel + 1)\n    if second_vowel == -1:\n        return \"\"\n    # Find the first vowel\n    third_vowel = word.find(\" \", second_vowel + 1)\n    if third_vowel == -1:\n        return \"\"\n    # Find the second vowel\n    fourth_vowel = word.find(\" \", third_vowel + 1)\n    if fourth_vowel == -1:\n        return \"\"\n    # Find the first vowel\n    fifth_vowel = word.find(\" \", fourth_vowel + 1)\n    if fifth_vowel == -1:\n        return \"\"\n    #", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels:\n        return \"\"\n    if word[-1] in vowels:\n        return \"\"\n    if word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants:\n        return \"\"\n    if word[-1] in consonants:\n        return \"\"\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i+1] in vowels:\n            return \"\"\n        if word[i] in consonants and word[i+1] in consonants:\n            return \"\"\n        if word[i] in vowels and word[i+1] in consonants:\n            return \"\"\n        if word[i] in consonants and word[i+1] in vowels:\n            return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel_found = False\n    consonant_found = False\n    while vowel_found == False and consonant_found == False:\n        vowel_found = True\n        for vowel in vowels:\n            if word[(vowel_index + 1):(vowel_index + len(vowels))] == vowel and vowel_index!= 0:\n                vowel_index += 1\n                vowel_found = False\n        vowel_found = True\n        for consonant in consonants:\n            if word[(vowel_index + 1):(vowel_index + len(vowels))] == consonant and vowel_index!= 0:\n                consonant_index += 1\n                consonant_found = False\n        vowel_found = True\n        if vowel_index == len(word) and consonant_index == len(word):\n            vowel_found = False\n            consonant_found = False\n    if vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"bdghjklmnpqrstvwxz\"\n    left = \"\"\n    right = \"\"\n    for c in word:\n        if c in vowels:\n            left += c\n        elif c in consonants:\n            right += c\n    if left == \"\":\n        return \"\"\n    if right == \"\":\n        return \"\"\n    if left == right:\n        return left\n    if left.find(right) == -1:\n        return left\n    else:\n        return right", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] in vowels and word[i+1] in consonants:\n            vowel = word[i]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioou\"\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    if word.find(vowels) == -1:\n        return \"\"\n    if word.find(vowels, word.find(vowels) + len(vowels)) == -1:\n        return \"\"\n    if word.find(vowels, word.find(vowels) - len(vowels)) == -1:\n        return \"\"\n    if word.find(vowels, word.find(vowels) + len(vowels)) < word.find(vowels):\n        return \"\"\n    if word.find(vowels, word.find(vowels) - len(vowels)) < word.find(vowels):\n        return \"\"\n    if word.find(vowels, word.find(vowels) + len(vowels)) > word.find(vowels):\n        return \"\"\n    if word.find(vowels, word.find(vowels) - len(vowels)) > word.find(vowels):\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    for c in consonants:\n        if word[-2] == c and word[-1] == c and word[-2] in vowels:\n            return word[-2]\n        if word[-2] == c and word[-1] == c and word[-2] in consonants:\n            return word[-2]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants:\n        return word[0]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if word.find(\"y\")!= -1:\n        vowels.append(\"y\")\n    if word.find(\"u\")!= -1:\n        vowels.append(\"u\")\n    if word.find(\"i\")!= -1:\n        vowels.append(\"i\")\n    if word.find(\"o\")!= -1:\n        vowels.append(\"o\")\n    if word.find(\"u\")!= -1:\n        vowels.append(\"u\")\n    if word.find(\"y\")!= -1:\n        vowels.append(\"y\")\n    if word.find(\"u\")!= -1:\n        vowels.append(\"u\")\n    if word.find(\"i\")!= -1:\n        vowels.append(\"i\")\n    if word.find(\"o\")!= -1:\n        vowels.append(\"o\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for c in consonants:\n        if c in left:\n            left_vowels.append(vowels.index(c))\n    for c in vowels:\n        if c in right:\n            right_vowels.append(vowels.index(c))\n    if len(left_vowels) > 0 and len(right_vowels) > 0:\n        return left_vowels[0]\n    elif len(left_vowels) > 0:\n        return left_vowels[0]\n    elif len(right_vowels) > 0:\n        return right_vowels[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"a\", u\"e\", u\"i\", u\"o\", u\"u\")\n    consonants = set(u\"b\", u\"d\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\")\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels = vowels + [\"e\"]\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels = vowels + [\"i\"]\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels = vowels + [\"o\"]\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels = vowels + [\"u\"]\n    vowels =", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(set(vowels) - set(consonants))\n    if len(vowels) == 0:\n        return \"\"\n    else:\n        return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.find(\"y\") == -1:\n        return \"\"\n    if word.find(\"u\") == -1:\n        return \"\"\n    if word.find(\"i\") == -1:\n        return \"\"\n    if word.find(\"o\") == -1:\n        return \"\"\n    if word.find(\"a\") == -1:\n        return \"\"\n    if word.find(\"e\") == -1:\n        return \"\"\n    if word.find(\"u\") == -1:\n        return \"\"\n    if word.find(\"y\") == -1:\n        return \"\"\n    if word.find(\"u\") == -1:\n        return \"\"\n    if word.find(\"i\") == -1:\n        return \"\"\n    if word.find(\"o\") == -1:\n        return \"\"\n    if word.find(\"a\") == -1:\n        return \"\"\n    if word.find(\"e\") == -1:\n        return \"\"\n    if word.find(\"u\") == -1:\n        return \"\"\n    if word.find(\"y\") == -1:\n        return \"\"\n    if word.find(\"u\") == -1:\n        return \"\"\n    if word.find(\"i\") == -1:\n        return \"\"\n    if word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"abcdefghijklmnopqrstuvwxyz\"\n    vowels = vowels.split(\" \")\n    consonants = consonants.split(\" \")\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    vowels.reverse()\n    consonants = list(consonants)\n    consonants.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set(vowels) - set(consonants))\n    vowels = list(set", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            vowel = vowels.index(word.find(c) + 1)\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowel = \"\"\n    right_vowel = \"\"\n    left_consonant = \"\"\n    right_consonant = \"\"\n    for i in range(len(left)):\n        if left[i] in vowels:\n            left_vowel = left_vowel + vowels[i]\n    for i in range(len(right)):\n        if right[i] in vowels:\n            right_vowel = right_vowel + vowels[i]\n    for i in range(len(left)):\n        if left[i] in consonants:\n            left_consonant = left_consonant + consonants[i]\n    for i in range(len(right)):\n        if right[i] in consonants:\n            right_consonant = right_consonant + consonants[i]\n    if left_vowel == \"\" and", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for c in consonants:\n        for v in vowels:\n            if c == v:\n                vowel = v\n                break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels and word[-1] in vowels:\n        return word[0]\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[-1]\n    if word[0] in consonants and word[-1] in consonants:\n        return word[-1]\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vowels = vowels[1:]\n    vowels = vowels[0]\n    vow", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"bcdghjklmnpqrstvwxz\"\n    word = word.lower()\n    vowel = \"\"\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i + 1] in vowels:\n            vowel = word[i]\n    if vowel == \"u\":\n        return word[:-1]\n    elif vowel == \"u\":\n        return word[:-2]\n    elif vowel == \"u\":\n        return word[:-3]\n    elif vowel == \"u\":\n        return word[:-4]\n    elif vowel == \"u\":\n        return word[:-5]\n    elif vowel == \"u\":\n        return word[:-6]\n    elif vowel == \"u\":\n        return word[:-7]\n    elif vowel == \"u\":\n        return word[:-8]\n    elif vowel == \"u\":\n        return word[:-9]\n    elif vowel == \"u\":\n        return word[:-10]\n    elif vowel == \"u\":\n        return word[:-11]\n    elif vowel == \"u\":\n        return word[:-12]\n    elif vowel == \"u\":\n        return word[:-13]\n    elif vowel == \"u\":\n        return word[:-14]\n    elif vowel == \"u", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"bcdghjklmnpqrstvwxz\"\n    word = word.lower()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"a\", u\"e\", u\"i\", u\"o\", u\"u\")\n    consonants = set(u\"b\", u\"d\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\")\n    return \"\" if word in vowels else word[word.find(vowels):]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    left_consonants = []\n    right_consonants = []\n    for c in left:\n        if c in vowels:\n            left_vowels.append(c)\n    for c in right:\n        if c in vowels:\n            right_vowels.append(c)\n    for c in consonants:\n        if c in left_vowels:\n            left_consonants.append(c)\n        if c in right_vowels:\n            right_consonants.append(c)\n    if left_vowels:\n        return left_vowels[0]\n    elif left_consonants:\n        return left_consonants[0]\n    elif right_vowels:\n        return right_vowels[0]\n    elif right_consonants:\n        return right_consonants[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.reverse()\n    consonants.reverse()\n    vowels = list(vowels)\n    conson", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n        elif word[i] in consonants:\n            if vowel == \"\":\n                vowel = word[i]\n            else:\n                vowel = vowel + \" \" + word[i]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    if len(vowels) == 0:\n        return \"\"\n    if len(vowels) == 1:\n        return vowels.pop()\n    if len(vowels) == 2:\n        return vowels.pop()\n    if len(vowels) == 3:\n        return vowels.pop()\n    if len(vowels) == 4:\n        return vowels.pop()\n    if len(vowels) == 5:\n        return vowels.pop()\n    if len(vowels) == 6:\n        return vowels.pop()\n    if len(vowels) == 7:\n        return vowels.pop()\n    if len(vowels) == 8:\n        return vow", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(set(vowels) - set(consonants))\n    if len(vowels) == 0:\n        return \"\"\n    else:\n        return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(set(vowels) - set(consonants))\n    vowels.sort()\n    return vowels[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n    for i in range(len(word)):\n        if word[i] in consonants:\n            if vowel == \"\":\n                return \"\"\n            elif vowel == consonants[i]:\n                return vowel\n            else:\n                return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel = \"\"\n    while vowel_index < len(word):\n        if word[ vowel_index ] in vowels:\n            vowel_index += 1\n        elif word[ vowel_index ] in consonants:\n            consonant_index += 1\n        else:\n            break\n    if vowel_index == len(word):\n        return \"\"\n    elif consonant_index == len(word):\n        return \"\"\n    else:\n        vowel_index += 1\n        while vowel_index < len(word):\n            if word[ vowel_index ] in vowels:\n                vowel_index += 1\n            elif word[ vowel_index ] in consonants:\n                consonant_index += 1\n            else:\n                break\n        if vowel_index == len(word):\n            return \"\"\n        elif consonant_index == len(word):\n            return \"\"\n        else:\n            vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels.reverse()\n    vowels = vowels[:2]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels + [\" \"]\n    vowels = vowels +", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels.sort()\n    consonants.sort()\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"a\", u\"e\", u\"i\", u\"o\", u\"u\")\n    consonants = set(u\"b\", u\"d\", u\"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\")\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = set(vowels)\n    right_vowels = set(vowels)\n    left_consonants = set(consonants)\n    right_consonants = set(consonants)\n    left_vowels.update(left_consonants)\n    right_vowels.update(right_consonants)\n    left_vowels = left_vowels.difference(right_vowels)\n    right_vowels = right_vowels.difference(left_vowels)\n    if left_vowels:\n        return left_vowels.pop()\n    if right_vowels:\n        return right_vowels.pop()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"aeiou\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    return \"\" if word in vowels else get_closest_vowel(word.lower())", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            if word.find(c) > word.find(vowels[0]):\n                vowel = vowels[0]\n            elif word.find(c) < word.find(vowels[-1]):\n                vowel = vowels[-1]\n            else:\n                break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel_found = False\n    while vowel_found == False:\n        vowel_index = word.find(vowels[vowel_index], consonant_index)\n        if vowel_index == -1:\n            vowel_found = True\n        else:\n            vowel_found = False\n            consonant_index = word.find(vowels[vowel_index], vowel_index+1)\n    return word[(vowel_index+1):(vowel_index+1)+len(vowels[vowel_index])]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    left = \"\"\n    right = \"\"\n    for c in word:\n        if c in vowels:\n            left += c\n        elif c in consonants:\n            right += c\n    if left == \"\":\n        return \"\"\n    if right == \"\":\n        return \"\"\n    if left == right:\n        return left\n    else:\n        return get_closest_vowel(left) + get_closest_vowel(right)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"aeiou\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[-1]\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowel = word[i]\n    for i in range(len(word)):\n        if word[i] in consonants:\n            if vowel == \"\":\n                return \"\"\n            elif vowel == consonants[i]:\n                return vowel\n            elif vowel == consonants[i+1]:\n                return vowel\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels.reverse()\n    vowels = list(vowels)\n    vowels.sort()\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels[:-1]\n    vowels = vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in ['a','e','i','o','u']:\n        return word[0]\n    if word[-1] in ['a','e','i','o','u']:\n        return word[-1]\n    if word[-2] in ['a','e','i','o','u']:\n        return word[-2]\n    if word[-3] in ['a','e','i','o','u']:\n        return word[-3]\n    if word[-4] in ['a','e','i','o','u']:\n        return word[-4]\n    if word[-5] in ['a','e','i','o','u']:\n        return word[-5]\n    if word[-6] in ['a','e','i','o','u']:\n        return word[-6]\n    if word[-7] in ['a','e','i','o','u']:\n        return word[-7]\n    if word[-8] in ['a','e','i','o','u']:\n        return word[-8]\n    if word[-9] in ['a','e", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for c in consonants:\n        for v in vowels:\n            if c == v:\n                vowel = v\n                break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowel_index = 0\n    consonant_index = 0\n    vowel_found = False\n    consonant_found = False\n    while vowel_found == False and consonant_found == False:\n        vowel_index = word.find(vowels[vowel_index])\n        consonant_index = word.find(consonants[ consonant_index + 1 ])\n        if vowel_index!= -1 and consonant_index!= -1:\n            vowel_found = True\n            vowel_index += 1\n        elif vowel_index == -1 and consonant_index == -1:\n            vowel_found = True\n            vowel_index = 0\n        elif vowel_index == -1 and consonant_index!= -1:\n            consonant_found = True\n            consonant_index += 1\n        elif vowel_index!= -1 and consonant_index == -1:\n            vowel_found = True\n            vowel_index = 0\n        elif vowel_index!= -1 and consonant_index == -1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(set(vowels))\n    consonants = list(set(consonants))\n    vowels = list(set(vowels))\n    consonants = list(set(consonants))\n    vowels = list(set(vowels))\n    consonants = list(set(consonants))\n    vowels = list(set(vowels))\n    consonants = list(set(consonants))\n    vowels = list(set(vowels))\n    consonants = list(set(consonants))\n    vowels = list(set(vowels))\n    consonants = list(set(consonants))\n    vowels = list(set(vowels))", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouy\"\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    if len(word) < 2:\n        return \"\"\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in vowels and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in vowels:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels and word[i-1] in vowels and word[i+1] in vowels:\n            vowel = word[i]\n            break\n    if vowel == \"\":\n        return \"\"\n    for i in range(len(word)):\n        if word[i] in consonants and word[i-1] in consonants and word[i+1] in consonants:\n            vowel = word[i]\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"z\",\"x\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = set(vowels) - set(consonants)\n    vowels = set(vowels) - set(\" \")\n    vowels = set(vowels) - set(\"!\")\n    vowels = set(vowels) - set(\"?\")\n    vowels = set(vowels) - set(\"@\")\n    vowels = set(vowels) - set(\"#\")\n    vowels = set(vowels) - set(\"$\")\n    vowels = set(vowels) - set(\"%\")\n    vowels = set(vowels) - set(\"&\")\n    vowels = set(vowels)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    left = word[:-1]\n    right = word[1:]\n    left_vowel = \"\"\n    right_vowel = \"\"\n    for letter in vowels:\n        if left[-1:] == letter:\n            left_vowel = letter\n        if right[:1] == letter:\n            right_vowel = letter\n    if left_vowel == \"\" and right_vowel == \"\":\n        return \"\"\n    if left_vowel == \"\":\n        return left_vowel\n    if right_vowel == \"\":\n        return right_vowel\n    if left_vowel == right_vowel:\n        return left_vowel\n    if left_vowel == \"e\" and right_vowel == \"i\" and left[-2:] == \"u\":\n        return \"i\"\n    if left_vowel == \"o\" and right_vowel == \"u\" and left[-2", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    if len(word) == 0:\n        return \"\"\n    if len(word) == 1:\n        return word[0]\n    if word[0] in vowels and word[-1] in vowels:\n        return word[0]\n    if word[0] in vowels and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in vowels:\n        return word[-1]\n    if word[0] in consonants and word[-1] in consonants:\n        return word[0]\n    if word[0] in consonants and word[-1] in consonants:\n        return word[-1]\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n    if word[0] in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"y\",\"z\"]\n    vowels = set(vowels)\n    consonants = set(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    consonants = list(consonants)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(vowels)\n    vowels = list(v"]]