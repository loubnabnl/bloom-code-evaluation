[["def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Init\n    vowel = \"\"\n    vowel_offset = 0\n    consonant = \"\"\n    consonant_offset = 0\n    min_length = len(word)\n    # Loop on all the word\n    for letter in word:\n        # Loop on the entire word\n        for vowel_offset in xrange(len(word)):\n            # Loop on the entire word\n            for consonant_offset in xrange(len(word)):\n                # Check the current letter with the previous letter\n                if letter!= word[vowel_offset-1][consonant_offset]:\n                    # If current letter is not same as previous one, return\n                    if vowel_offset > 0:\n                        return \"\"\n                    # If current letter is same as previous one, move to next position\n                    else:\n                        vowel_offset = vowel_offset-1\n                        consonant = word[vowel_offset][consonant_offset]\n                # If current letter is same as previous one, move to next position\n                else:\n                    # Move to next position\n                    vowel_offset = vowel_offset-1\n                    consonant = word[vowel_offset][consonant_offset]\n    # Return the found vowel\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"w\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"r\",\"t\",\"v\",\"x\",\"z\"]\n\n    # if the word contains vowels, get the closest vowel\n    if(word.find(\" \") == -1):\n        words = word.split()\n        if words[0].find(\"y\")!= -1:\n            word = words[0].split()[0] + words[1].split()[0]\n        if words[0].find(\"u\")!= -1:\n            word = words[0].split()[0] + words[1].split()[0] + words[2].split()[0]\n        if words[0].find(\"i\")!= -1:\n            word = words[0].split()[0] + words[1].split()[0] + words[2].split()[0] + words[3].split()[0]\n        if words[0].find(\"o\")!= -1:\n            word = words[0].split()[0] + words[1].split()[0] + words[2].split()[0] +", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not len(word):\n        return \"\"\n\n    vowels = [u\"a\", u\"e\", u\"i\", u\"o\", u\"u\", u\"y\", u\"u\", u\"u\"]\n    consonants = [u\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n\n    found_vowel = False\n    match = []\n    for vowel in vowels:\n        if word.find(vowel) >= 0:\n            found_vowel = True\n            match.append(vowel)\n\n    if not found_vowel:\n        return \"\"\n\n    for consonant in consonants:\n        if word.find(consonant) >= 0:\n            found_vowel = False\n            break\n\n    if found_vowel:\n        return match[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    vowel = None\n\n    if word[0] == 'a':\n        if word[-1] == 'e':\n            if len(word) > 2:\n                vowel = word[-2]\n            else:\n                return \"\"\n        else:\n            if len(word) > 3:\n                vowel = word[-1]\n    elif word[0] == 'e':\n        if word[-1] == 'a':\n            if len(word) > 2:\n                vowel = word[-2]\n            else:\n                return \"\"\n        else:\n            if len(word) > 3:\n                vowel = word[-1]\n    elif word[0] == 'i':\n        if word[-1] == 'i':\n            if len(word) > 2:\n                vowel = word[-2]\n            else:\n                return \"\"\n        else:\n            if len(word) > 3:\n                vowel = word[-1]\n    elif word[0] == 'u':\n        if word[-1] == 'u':\n            if len(word) > 2:\n                vowel = word[-2]\n            else:\n                return \"\"\n        else:\n            if len(word) > 3:\n                vowel = word[-1]\n    elif word[0] == 'o':\n        if word[-1] == 'o':\n            if len(word) > 2:\n                vowel = word[-2]\n            else:\n                return \"\"\n        else:\n            if len(word) > 3:\n                vowel = word[-1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\"\n    for char in word:\n        if char in [\"a\", \"e\", \"i\", \"o\", \"u\"]:\n            result = result + char\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    prev_consonant = \"\"\n    prev_consonant_exist = False\n    prev_vowel_exist = False\n    for letter in word:\n        if letter =='':\n            vowel = \"\"\n            prev_consonant = \"\"\n            prev_consonant_exist = False\n            prev_vowel_exist = False\n        else:\n            if prev_consonant == \" \" or prev_consonant == \".\":\n                if prev_consonant == \" \":\n                    prev_consonant = letter\n                else:\n                    prev_consonant = prev_consonant[:-1] + letter\n                prev_consonant_exist = True\n            if prev_vowel_exist == False:\n                if letter == 'a' or letter == 'e' or letter == 'i' or letter == 'o' or letter == 'u':\n                    prev_vowel = letter\n                else:\n                    prev_vowel = \"\"\n            else:\n                prev_vowel = prev_vowel[:-1] + letter\n                prev_vowel_exist = True\n            vowel = vowel[:-1] + letter + vowel[-1:]\n            prev_consonant = \"\"\n            prev_consonant_exist = False\n            prev_vowel_exist = False\n        if prev_consonant == \" \"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Add vowels to the list\n    vowels = ['a','e','i','o','u','y','w']\n    # Add consonants to the list\n    consonants = ['b','c','d','g','h','j','k','m','n','p','r','s','t','v','z']\n    # Initialize the list to store the last consonant in the word\n    last_consonant = None\n    for char in word:\n        # Find the last consonant in the word\n        if char in consonants:\n            last_consonant = char\n        elif char in vowels:\n            # if a vowel is found, then add this vowel to the list\n            if last_consonant in consonants:\n                # if the last consonant is still found in the list, then find a \n                    # new vowel from the list\n                else:\n                    # else find the closest vowel that can be found in the word \n                    # and then add this vowel to the list\n                    index = 0\n                    while index <= len(vowels) - 1:\n                        if vowels[index] == last_consonant:\n                            # if the last vowel is found in the", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_found = False\n    for letter in word:\n        if letter in string.ascii_letters:\n            if letter == string.ascii_letters[-1]:\n                vowel_found = True\n                break\n        if vowel_found:\n            if letter == string.ascii_letters[0]:\n                return letter\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a','b','c','d','e','i','i','o','o','u','u','v','v','y','y','z']\n    for char in word:\n        for i in range(len(word)-2,0,-1):\n            for j in range(len(word)-1,0,-1):\n                if char in vowels[i] and char in vowels[j+1] and word[i+1]!='' and word[j+1]!='':\n                    return word[i:i+1] + vowels[i] + word[j:j+1]\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    vowel_start = \"\"\n    vowel_end = \"\"\n    vowel_to_consonant = {}\n    vowel_to_consonant[\"v\"] = \"y\"\n    vowel_to_consonant[\"y\"] = \"v\"\n    vowel_to_consonant[\"i\"] = \"i\"\n    vowel_to_consonant[\"n\"] = \"i\"\n    vowel_to_consonant[\"e\"] = \"i\"\n    vowel_to_consonant[\"a\"] = \"i\"\n    vowel_to_consonant[\"u\"] = \"i\"\n    vowel_to_consonant[\"o\"] = \"i\"\n    vowel_to_consonant[\"U\"] = \"i\"\n    vowel_to_consonant[\"u\"] = \"v\"\n    vowel_to_consonant[\"U\"] = \"y\"\n    vowel_to_consonant[\"E\"] = \"y\"\n    vowel_to_consonant[\"u\"] = \"I\"\n    vowel_to_consonant[\"U\"] = \"I\"\n    vowel_to_consonant[\"i\"] = \"y\"\n    vowel_to_consonant[\"e\"] = \"y\"\n    vowel_to_consonant[\"E\"] = \"i\"\n    vowel_to_consonant[\"n\"] = \"y\"\n    vowel_to_consonant[\"O\"] = \"i\"\n    vowel_to_consonant", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    charlist = [ord(char) for char in word]\n    \n    vowel = \"\"\n    \n    i = len(word) - 1\n    \n    while i > 0 and charlist[i] == ord(word[0]):\n        i -= 1\n    \n    if i > 0 and charlist[i] == ord(word[-1]):\n        i += 1\n    \n    while i < len(word) - 1 and charlist[i] == ord(word[i + 1]):\n        i += 1\n    \n    if i < len(word) - 1:\n        vowel = word[i + 1:].lower()\n    elif i == len(word) - 1:\n        vowel = word[i + 1:].lower()\n    \n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"uAeIOU\"\n    for char in word:\n        if char in vowels:\n            return char\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    left = []\n    right = []\n    prev = word[::-1].split()\n    last_consonant = prev[-1][:-1]\n    for i in range(len(prev) - 1):\n        if prev[i] in [\"a\", \"i\", \"e\", \"o\", \"u\"]:\n            left.append(prev[i])\n        if prev[i + 1] in [\"a\", \"i\", \"e\", \"o\", \"u\"]:\n            right.append(prev[i + 1])\n\n    for x in range(len(prev)):\n        if left[x]!= prev[x - 1][:-1]:\n            left.append(prev[x - 1][:-1])\n        if right[x]!= prev[x - 1][:-1]:\n            right.append(prev[x - 1][:-1])\n\n    # find the closest vowel to the left\n    for x in left:\n        if prev[x] in [\"a\", \"i\", \"e\", \"o\", \"u\"]:\n            return x\n        elif prev[x] == last_consonant:\n            return vowel\n\n    # find the closest vowel to the right\n    for x in right:\n        if prev[x] in [\"a\", \"i\", \"e\", \"o\", \"u\"]:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\n    if word.isupper():\n        return \" \"\n    elif word.isalnum():\n        for char in word:\n            if char in vowels:\n                return char\n        return \"\"\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    i = 0\n    j = 0\n    res = ''\n    while i < len(word):\n        if i == 0 or word[i] == word[i-1]:\n            break\n        else:\n            res += word[i]\n        i += 1\n    j = 0\n    while j < len(word):\n        if j == len(word) - 1:\n            break\n        else:\n            res += word[j]\n        j += 1\n    return res", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"\"]\n\n    # Get the first two consonants\n    first = word.split()[0]\n    second = word.split()[1]\n\n    # Make a new string\n    new_word = first + second\n\n    # Get the second two consonants\n    third = new_word.split()[0]\n    fourth = new_word.split()[1]\n\n    # Make a new string\n    new_word = third + fourth\n\n    # Remove vowels from both sides\n    first = first.replace(vowels, \"\")\n    second = second.replace(vowels, \"\")\n    third = third.replace(vowels, \"\")\n    fourth = fourth.replace(vowels, \"\")\n\n    # Return the first vowel if there is any\n    if first!= \"\":\n        return first\n\n    # Return the last vowel if there is any\n    if fourth!= \"\":\n        return fourth\n\n    # Return the empty string if there is no vowel in the word\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"s\"]\n    consonant_string = word[2:]\n    if len(vowels) < len(consonant_string):\n        return \"\"\n    for i in vowels:\n        if i in consonant_string:\n            break\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # prepare the vowels\n    vowels = \"eiou\"\n\n    # prepare the consonants\n    consonants = \"blknrd\"\n\n    # prepare the word\n    word = word.lower()\n\n    # starting position\n    start = 0\n\n    # starting position is before the first consonant\n    if word[0] in consonants:\n        start = len(word) - 1\n    # starting position is after the last consonant\n    if word[-1] in consonants:\n        start = len(word) - 1\n    # starting position is before the first vowel\n    elif word[0] in vowels:\n        start = len(word) - 1\n    # starting position is after the last vowel\n    elif word[-1] in vowels:\n        start = len(word) - 1\n\n    # find the closest vowel between the two consonants\n    while start > 0:\n        # check if there is any vowel in the word\n        if start >= len(word) - 2:\n            break\n        if word[start] in vowels:\n            return word[start]\n        # move left to the next consonant\n        start -= 1\n        # check if there is any vowel in the word\n        if start <= 0:\n            break\n        if word[start] in vowels:\n            return word[start]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    max_dist = 0\n    num = 0\n    prev_ch = \"\"\n    prev_vowel = \"\"\n    prev_cons = \"\"\n    for char in word:\n        # if the last letter is vowel\n        if prev_ch =='' and char in [\"i\", \"e\", \"o\", \"a\"]:\n            prev_ch = char\n        # if the previous letter is vowel\n        if prev_ch =='' and char in [\"i\", \"e\", \"o\", \"a\"]:\n            prev_vowel = char\n        # if the previous letter is consonants\n        if prev_ch!='' and char in [\"s\", \"d\", \"t\", \"b\", \"k\", \"g\", \"f\", \"p\", \"m\", \"n\", \"h\", \"j\", \"w\", \"l\", \"v\", \"q\", \"z\"]:\n            prev_cons = char\n        if char == prev_ch:\n            num += 1\n        else:\n            prev_ch = char\n            prev_vowel = \"\"\n            prev_cons = \"\"\n        if num == 1:\n            if prev_cons in [\"s\", \"d\", \"t\", \"b\", \"k\", \"g\", \"f\", \"p\", \"m\", \"n\", \"h\", \"j\", \"w\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    i = 0\n    while i < len(word)-1:\n        if word[i] in ['y', 'i']:\n            if word[i+1] in ['o', 'u']:\n                return word[i:i]\n        i += 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n\n    if word[0] == word[-1]:\n        return \"\"\n\n    if len(word) == 1:\n        return \"\"\n\n    for char in word:\n        if char in vowels:\n            return char\n\n    for char in word:\n        if char in consonants:\n            return char\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set('AEIOU')\n    chars = set('bcdfghjklmnpqrstvwxz')\n    return ''.join(c for c in word if c in vowels and c in chars[:-(len(vowels)-1)])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = u\"\\u00e0\\u00e2\\u00e4\\u00e6\"  # vowels\n    consonants = u\"\\u00c1\\u00c2\\u00c4\\u00c6\\u00c8\"  # consonants\n    \n    if len(word) == 1:\n        return word\n    \n    word = word.lower()\n    left_index = -1\n    right_index = len(word)-1\n\n    while left_index >= 0:\n        if word[left_index] in vowels:\n            left_index -= 1\n        else:\n            break\n\n    while right_index >= 0:\n        if word[right_index] in vowels:\n            right_index -= 1\n        else:\n            break\n\n    return word[left_index:right_index+1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = list(set(word))\n    vowels = []\n    for c in consonants:\n        if c == \"e\":\n            vowels.append(\"a\")\n        elif c == \"i\":\n            vowels.append(\"i\")\n        elif c == \"o\":\n            vowels.append(\"o\")\n        elif c == \"a\":\n            vowels.append(\"e\")\n        elif c == \"u\":\n            vowels.append(\"u\")\n        elif c == \"u\":\n            vowels.append(\"u\")\n        else:\n            vowels.append(c)\n    vowel = \"\"\n    for vowel in vowels:\n        if len(consonants) - len(vowels) - len(vowel) >= 1:\n            break\n    if len(consonants) - len(vowels) - len(vowel) == 0:\n        return \"\"\n    elif vowel == \"u\":\n        return vowel\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return get_closest_vowel_english(word.lower())", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # A dictionary to store all the vowels\n    vowels = {'a': 'a', 'i': 'i', 'e': 'e', 'o': 'o', 'u': 'u'}\n\n    # Add all the vowels to the dictionary and find the longest vowel\n    # that is between two consonants\n    longest_vowel = ''\n    for letter in word:\n        if letter in vowels:\n            longest_vowel = vowels[letter]\n            break\n    longest_vowel = longest_vowel.lower()\n\n    # Find the last consonant and the first vowel in the word\n    last_consonant = ''\n    first_vowel = ''\n    for letter in word:\n        if letter =='':\n            break\n        if letter in vowels:\n            last_consonant = letter\n            first_vowel = vowels[letter]\n            break\n\n    # Find the last vowel that is between two consonants\n    last_vowel = ''\n    for letter in word[last_consonant - 1:]:\n        if letter in vowels:\n            last_vowel = letter\n            break\n\n    # If we didn't find any vowel in the given word, return \"\"\n    if longest_vowel == '':\n        return ''\n\n    # Find", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    #return all the vowels\n    vowels = ['A', 'e', 'i', 'o', 'u']\n\n    #get the two consonants\n    consonants = word.split('-')\n\n    #return vowel that is closest to the end of the word\n    #if the vowel is in the end, we get the end of the word\n    end = consonants[1].split('-')[1].split(' ')[0].lower() + '-' + consonants[1].split('-')[0].lower() +''\n    middle = get_closest_vowel(end)\n\n    #return the vowel that is closest to the start of the word\n    start = consonants[0].split('-')[0].lower() + '-' + consonants[0].split('-')[1].lower() +''\n    middle = get_closest_vowel(start)\n\n    if middle!= \"\":\n        return middle\n    else:\n        return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    if word[0] in vowels and word[-1] in vowels:\n        return word[0] + word[-1]\n    if word[-1] in vowels and word[0] in vowels:\n        return word[-1] + word[0]\n    if word[-1] in vowels and word[0] not in vowels:\n        return word[-1]\n    if word[0] not in vowels and word[-1] in vowels:\n        return word[0] + word[-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"eiou\"\n    consonants = \"bcdghjklmnpqrstvwxz\"\n    last_consonant = word[-1]\n    if last_consonant not in vowels:\n        return \"\"\n    previous_consonant = word[:-1]\n    if previous_consonant not in consonants:\n        return \"\"\n    while True:\n        mid_consonant = (last_consonant + previous_consonant) / 2\n        if mid_consonant in vowels:\n            return mid_consonant\n        elif mid_consonant not in consonants:\n            return \"\"\n        if mid_consonant == last_consonant:\n            return \"\"\n        elif mid_consonant == previous_consonant:\n            return \"\"\n        elif mid_consonant == (last_consonant + previous_consonant) / 2:\n            return \"\"\n        previous_consonant = mid_consonant\n        last_consonant = mid_consonant + 1\n        if last_consonant not in vowels:\n            return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = u\"i u o e a ae\"\n    find_vowel = word.find(vowels, 2)\n    if find_vowel == -1:\n        return \"\"\n    return word[find_vowel + 1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = list(r\"[AEIOU]+\")\n    consonants = list(r\"[bcdfghjklmnpqrstvwxz]\")\n    vowels = set(vowels)\n    consonants = set(consonants)\n    i = 0\n    while i < len(word):\n        c = word[i]\n        if c in vowels:\n            vowels.remove(c)\n            i += 1\n        elif c in consonants:\n            vowels.remove(c)\n        elif len(vowels) == 0 and len(consonants) == 1:\n            vowels = set(consonants)\n            return vowels[0]\n        i += 1\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    if len(word) == 0:\n        return ''\n    elif word[-1] in 'er':\n        return word[-2]\n    elif word[-1] in 'er':\n        return word[-2]\n    elif word[-1] in 'er':\n        return word[-2]\n    elif word[-1] in 'er':\n        return word[-2]\n    else:\n        if word[0] in 'er':\n            return word[1:]\n        elif word[0] in 'er':\n            return word[1:]\n        elif word[0] in 'er':\n            return word[1:]\n        else:\n            return ''\n    </s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    left_vowels = set(word[0:-1].lower().split())\n    right_vowels = set(word[1:].lower().split())\n\n    closest_vowel = \"\"\n\n    for left_vowel in left_vowels:\n        for right_vowel in right_vowels:\n            if left_vowel == right_vowel:\n                continue\n            if left_vowel == \" \":\n                continue\n            if right_vowel == \" \":\n                continue\n\n            if left_vowel in right_vowels and right_vowel in left_vowels:\n                return left_vowel\n\n    return closest_vowel\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\"\n    # If the given word is empty return the empty string\n    if word == \"\":\n        return result\n    # If the word contains only vowel return the empty string\n    if word.find(\" \") == -1:\n        return result\n    # Find the end of the word\n    end = word.find(\" \")\n    # If the word is not empty and has at least one vowel return the empty string\n    if end > 0:\n        result = word[end-1:]\n    # Find the first consonant\n    first = word.find(\" \")\n    # Find the end of the first consonant\n    second = first+1\n    # Find the first consonant from right side\n    third = second\n    # Find the end of the first consonant\n    fourth = third\n    # Find the first consonant from right side\n    fifth = fourth\n    # Find the end of the first consonant\n    sixth = fifth\n    # Find the first consonant from right side\n    seventh = sixth\n    # Find the end of the first consonant\n    eighth = seventh\n    # Find the first consonant from right side\n    ninth = eighth\n    # Find the end of the first consonant\n    tenth = ninth\n    # Find the first consonant from right side\n    eleventh = tenth\n    # Find the end of the first consonant", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = [\"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    vowel = \"\"\n    for c in consonants:\n        if c in word:\n            break\n    if c in consonants:\n        if word[-1] == c and word[-2] in vowels:\n            vowel = vowel.rstrip('.').lstrip('.').lstrip('.').rstrip('.').rstrip('.').rstrip('.')\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a','b','c','d','e','i','o','u','y','u','u','i','o','u','o','i','e']\n    consonants = 'brk'\n    if len(word)%2!= 0:\n        return \"\"\n    for i in range(0,len(word)-2,2):\n        if word[i:i+2] in vowels:\n            return vowels[word[i:i+2]-1]\n        elif word[i:i+2] in consonants:\n            return \"\"\n        elif word[i:i+2] == \"\":\n            return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = set(word.lower().replace(\" \",\"\").split())\n    if len(consonants)==1:\n        return \"\"\n    if len(consonants)==2:\n        return consonants[1].lower()\n    if len(consonants)>2:\n        found = False\n        for c in consonants[:-1]:\n            if c in consonants[-2]:\n                found = True\n                break\n        if not found:\n            return \"\"\n    if len(consonants)==2:\n        return consonants[1].lower()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n        return \"\"\n\n    i = 0\n    while i < len(word):\n        if word[i] in (\"e\",\"i\",\"o\",\"a\",\"u\"):\n            if i!= 0 and word[i - 1] in (\"n\",\"r\",\"t\",\"l\",\"s\",\"d\",\"b\"):\n                return word[:i - 1]\n            elif i!= 0 and word[i - 1] in (\"h\",\"y\"):\n                return word[:i - 1]\n            elif i!= 0 and word[i - 1] in (\"f\",\"v\"):\n                return word[:i - 1]\n            elif i!= 0 and word[i - 1] in (\"j\",\"k\",\"g\",\"n\",\"m\",\"l\",\"w\",\"y\"):\n                return word[:i - 1]\n            elif i!= 0 and word[i - 1] in (\"s\",\"d\",\"t\"):\n                return word[:i - 1]\n            elif i!= 0 and word[i - 1] in (\"c\",\"p\",\"q\",\"r\",\"s\",\"z\",\"x\",\"w\"):\n                return word[:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    consonants = \"cnkgphvzcs\"\n    i = len(word)-1\n    while i >= 0 and word[i] not in consonants:\n        if word[i-1:i+1] not in vowels:\n            return \"\"\n        i -= 1\n    return word[i+1:]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def vowel_distance(a,b):\n        \"\"\"calculate distance of a and b based on vowel count\"\"\"\n        if a[0] == b[0]:\n            return 1\n        else:\n            if a[0] == 'v':\n                if a[1] == b[1]:\n                    return 0\n                else:\n                    return 1\n            else:\n                if a[1] == 'v':\n                    if a[2] == b[2]:\n                        return 0\n                    else:\n                        return 1\n        return 2\n    \n    vowels = ('a','e','i','o','u','y','y')\n    letters = ('b','c','d','g','h','j','k','l','m','n','p','r','s','t','u','v','w','z','z','z','z','z')\n    \n    # check if word contains letters\n    if any(word.lower() in letter.lower() for letter in letters):\n        # if so, we can find a vowel between two consonants\n        for c in word:\n            if c in vowels:\n                if c == word[0]:\n                    # return first vowel\n                    return word[1]\n                elif c == word[", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"aeiou\")\n    consonants = set(\"cchgstvzjqubkmpdfghjklmnpqrstvy\")\n    prev_consonant = \"\"\n    prev_vowel = \"\"\n    #from left to right\n    for i in range(len(word) - 1):\n        if word[i] not in consonants and word[i + 1] not in vowels and prev_consonant!= word[i]:\n            prev_consonant = word[i]\n            prev_vowel = word[i + 1]\n\n    if len(word) > 1:\n        #from right to left\n        prev_consonant = \"\"\n        prev_vowel = \"\"\n        for i in range(len(word) - 2, -1, -1):\n            if word[i] not in consonants and word[i - 1] not in vowels and prev_consonant!= word[i]:\n                prev_consonant = word[i]\n                prev_vowel = word[i - 1]\n\n    return prev_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    words = [\"I\", \"like\", \"car\", \"audio\"]\n    for word in words:\n        left = 0\n        right = len(word) - 1\n        while left <= right:\n            if vowels[left] in word[left:right]:\n                return word[left:right]\n            left += 1\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n    v = \"\"\n    for i in word:\n        for i in vowels:\n            if i in word[word.index(i)+1:word.index(i)+1]:\n                v = i\n                break\n    return v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    i = 1\n    for c in word:\n        if c == \" \":\n            break\n        i += 1\n        if c.isupper():\n            break\n    while i < len(word):\n        if word[i].isupper() and word[i - 1].isupper() and word[i + 1].isupper():\n            i += 1\n        elif word[i].islower() and word[i - 1].islower() and word[i + 1].islower():\n            i += 1\n        elif word[i].isupper() and word[i - 1].islower() and word[i + 1].islower():\n            i += 1\n        elif word[i].islower() and word[i - 1].isupper() and word[i + 1].islower():\n            i += 1\n        elif word[i].islower() and word[i - 1].islower() and word[i + 1].isupper():\n            i += 1\n        elif word[i].islower() and word[i - 1].islower() and word[i + 1].isupper():\n            i += 1\n        elif word[i].islower() and word[i - 1].islower() and word[i + 1].islower", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    left = ''\n    right = ''\n    vowel = ''\n    vowels = 'AVYUIO'\n    i = len(word) - 1\n    while i >= 0 and word[i] in vowels:\n        i -= 1\n    while i < len(word) - 1 and word[i] in vowels:\n        i += 1\n    if i >= 0 and i < len(word) - 1:\n        left = word[0:i]\n        right = word[i:]\n    if i < len(word) - 1:\n        vowel = word[i+1:]\n    if left and right:\n        return left + vowel\n    elif left:\n        return vowel\n    elif right:\n        return left\n    else:\n        return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"e\", u\"i\", u\"o\", u\"u\")\n    consonants = set(u\"k\", u\"l\", u\"s\", u\"h\", u\"p\", u\"b\", u\"n\", u\"d\", u\"f\", u\"r\", u\"m\", u\"v\", u\"y\", u\"w\", u\"z\")\n    if len(word) == 1:\n        return \"\"\n    else:\n        last_consonant = word[-2]\n        last_vowel = word[-1]\n        if last_consonant in consonants and last_vowel in vowels:\n            if last_consonant.lower() in consonants and last_vowel.lower() in vowels:\n                return \"\"\n            else:\n                return last_consonant + last_vowel\n        elif last_consonant in consonants:\n            return last_consonant + get_closest_vowel(word[-2:])\n        else:\n            return get_closest_vowel(word[:-1]) + last_consonant + get_closest_vowel(word[-2:])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['e', 'i', 'o', 'u']\n    consonants = ['s','r','t','k','g','f','l','z','w','v','x','y','b','n','m','p','q','d','j','z','z','g','h','f','f','z','z','z','z','k','k','j','j','g','g','k','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','l','", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['i','e','o','a','u','u','y',' ']\n    if len(word) < 2:\n        return \"\"\n    if word[0] == word[-1]:\n        return word\n    else :\n        left = get_closest_vowel(word[0:-1])\n        right = get_closest_vowel(word[1:])\n        if left == right:\n            return left\n        else:\n            left += vowels\n            right += vowels\n            while left[-1] == right[-1]:\n                left += vowels\n                right += vowels\n            while left[-1]!= right[-1]:\n                left += vowels\n                right += vowels\n            if left[-1] == right[-1]:\n                return left\n            else:\n                return right", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    start = len(word)\n    while start > 0:\n        if word[start - 1] == word[start] and word[start - 1] in ['y', 'o', 'u']:\n            return word[start - 1]\n        if word[start - 1] == word[start] and word[start - 1] not in ['y', 'o', 'u']:\n            start -= 1\n        else:\n            break\n\n    if word[start:] in ['y', 'o', 'u']:\n        return 'u'\n    elif word[start:] in ['a', 'e', 'i', 'o', 'u']:\n        return 'e'\n    else:\n        return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiouy'\n    return ''.join( [ c for c in word if c in vowels] )", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    v = \"\"\n    # Find the leftmost consonant\n    if word.find(\"x\") == 0:\n        leftmost_consonant = word[:word.find(\"x\")]\n    else:\n        leftmost_consonant = word[:word.find(\"y\")]\n\n    # Find the rightmost consonant\n    rightmost_consonant = word[word.find(\"y\"):]\n    if word.find(\"y\") == 0:\n        rightmost_consonant = word[word.find(\"x\"):word.find(\"y\")]\n\n    # Find the first vowel\n    if word.find(\"x\") == 0:\n        first_vowel = word[word.find(\"x\"):word.find(\"y\")]\n    else:\n        first_vowel = word[word.find(\"y\"):word.find(\"z\")]\n\n    # Find the second vowel\n    if word.find(\"y\") == 0:\n        second_vowel = word[word.find(\"y\"):word.find(\"z\")]\n    else:\n        second_vowel = word[word.find(\"z\"):]\n\n    # Compare the first vowel to the second vowel\n    if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    leftmost_consonant = word[0]\n    if leftmost_consonant == 'u':\n        return ''\n    rightmost_consonant = word[-1]\n    if rightmost_consonant == 'u':\n        return ''\n    vowel = ''\n    vowels = word.lower().find_all('a', leftmost_consonant)\n    if vowels!= -1:\n        for vowel in vowels:\n            if vowel > rightmost_consonant:\n                break\n            vowel = vowel.lower()\n        if vowel!= '':\n            return vowel\n        else:\n            return ''\n    vowels = word.lower().find_all('i', leftmost_consonant)\n    if vowels!= -1:\n        for vowel in vowels:\n            if vowel > rightmost_consonant:\n                break\n            vowel = vowel.lower()\n        if vowel!= '':\n            return vowel\n        else:\n            return ''\n    vowels = word.lower().find_all('o', leftmost_consonant)\n    if vowels!= -1:\n        for vowel in vowels:\n            if vowel > rightmost_consonant:\n                break\n            vowel = vowel.lower()\n        if vowel!= '':\n            return vowel\n        else:\n            return ''\n    vowels = word.lower().find", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {\"a\":1,\"e\":1,\"i\":1,\"o\":1,\"u\":1,\"y\":1}\n    \n    return words.index(vowels[word]) + 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    w = word.lower()\n    prev = w[:-1]\n    next = w[1:]\n\n    count = 0\n    for char in prev:\n        count += 1\n        if char in \"yaouu\":\n            break\n\n    for char in next:\n        count += 1\n        if char in \"yaouu\":\n            break\n\n    if count > 1:\n        return \"\"\n\n    for char in prev:\n        if char in \"yaouu\":\n            break\n\n    if char in \"yaouu\":\n        return prev\n\n    for char in next:\n        if char in \"yaouu\":\n            break\n\n    if char in \"yaouu\":\n        return next\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    left_letters = set(word.lower().split()[:-1])\n    right_letters = set(word.lower().split()[1:])\n    for left, right in zip(left_letters, right_letters):\n        if left!= right:\n            if (left is not None) and (left == \" \"):\n                return \"\"\n            elif (right is not None) and (right == \" \"):\n                return \"\"\n            elif left.isalpha() and right.isalpha() and left == right:\n                return left\n    return \"\"</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    word = str(word)\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels.sort()\n    vowels.reverse()\n\n    vowel_count = 0\n    for i in vowels:\n        if word.find(i)!= -1:\n            vowel_count += 1\n        elif i == \"\":\n            return \"\"\n    \n    if vowel_count == 2:\n        return word\n    \n    return get_closest_vowel(word.replace(vowels[0],\"\")) + get_closest_vowel(word.replace(vowels[1],\"\"))</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"i\", \"e\", \"o\", \"u\", \"y\")\n    left = word[0]\n    right = word[word.find(' ', 1):]\n    \n    if left in vowels and right in vowels:\n        return left\n    else:\n        return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    # Find the first consonant that stands between a vowel and the right side.\n    i = word.find(\"_\")\n    if i == -1:\n        return \"\"\n\n    # Find the first vowel after the first consonant.\n    j = word.find(\"_\", i + 1)\n    if j == -1:\n        return \"\"\n\n    # Find the first vowel before the second consonant.\n    k = word.find(\"_\", j + 1)\n    if k == -1:\n        return \"\"\n\n    # Return the nearest vowel that stands between the two consonants.\n    return word[i:j]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) < 2:\n        return ''\n    # We will start at the end of word and move left\n    vowels = ''\n    for i in range(len(word)-1,-1,-1):\n        if word[i].isupper() and word[i+1].isupper():\n            vowels += word[i] + word[i+1]\n    if len(vowels) == 0:\n        return ''\n    # We will start at the beginning of word and move right\n    for i in range(1, len(word)):\n        if word[i].isupper() and word[i-1].isupper():\n            vowels += word[i] + word[i-1]\n    if len(vowels) == 0:\n        return ''\n    return vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n\n    # first find the consonant\n    for c in word:\n        if c == \"j\":\n            vowel = \"c\"\n            break\n    if vowel == \"\":\n        vowel = \" \"\n\n    # next find the vowel\n    for v in word:\n        if v == \"a\" and vowel == \" \":\n            vowel = \"a\"\n        if v == \"e\" and vowel == \" \":\n            vowel = \"e\"\n        if v == \"i\" and vowel == \" \":\n            vowel = \"i\"\n        if v == \"o\" and vowel == \" \":\n            vowel = \"o\"\n        if v == \"u\" and vowel == \" \":\n            vowel = \"u\"\n\n    return vowel\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_length = 0\n    prev_vowel = \"\"\n    prev_consonant = \"\"\n    word = word.lower()\n    for c in word:\n        if c in vowels:\n            vowel_length += 1\n            prev_vowel = c\n            prev_consonant = \"\"\n        else:\n            prev_consonant = c\n    prev_vowel = prev_vowel.lower()\n    vowel_length += 1\n    prev_consonant = prev_consonant.lower()\n    if prev_consonant == \" \":\n        prev_vowel = \"\"\n    if prev_consonant == vowels[-1]:\n        prev_consonant = \"\"\n    prev_vowel = prev_vowel.lower()\n    if prev_consonant == vowels[-1]:\n        prev_consonant = \"\"\n    prev_vowel = prev_vowel.lower()\n    if prev_consonant == \" \":\n        prev_vowel = \"\"\n    if vowel_length == 2 and prev_consonant == vowels[1]:\n        prev_vowel = vowels[0]\n    if vowel_length == 3 and prev_consonant == vowels[1] and prev_consonant == vowels[2]:\n        prev_vowel = vowels[0]\n    if vowel_length == 4 and prev", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def vowel_counter():\n        vowel = \"\"\n        char_counter = \"\"\n        for c in word:\n            if c.isupper():\n                vowel += c\n                char_counter += \"i\"\n            else:\n                vowel += c\n                char_counter += \"a\"\n        if vowel == word[-1]:\n            vowel_counter = vowel\n        if char_counter == word[:-1]:\n            char_counter = \"i\" + char_counter\n        return vowel, char_counter\n    \n    vowel, char_counter = vowel_counter()\n    vowels = \"\"\n    for c in word:\n        if c.isupper():\n            vowels += c + char_counter\n        else:\n            vowels += c + char_counter + vowel\n    if vowels == word[-1]:\n        return word[:-1]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for letter in word:\n        if letter in ['e', 'i', 'o', 'u']:\n            return letter\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return get_closest_vowel(word.lower())</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    w = word\n    i = len(w)-1\n    j = i-1\n    best = \"\"\n    while j >= 0:\n        if w[i].isupper() and w[j+1].isupper():\n            if w[i] == w[j+1]:\n                best = w[i+1]\n                break\n            elif w[i].islower() and w[j+1].islower():\n                if w[i] == w[j+1]:\n                    best = w[i+1]\n                    break\n        elif w[i].isupper() and w[j+1].islower():\n            if w[i] == w[j+1]:\n                best = w[i+1]\n                break\n        elif w[i].islower() and w[j+1].isupper():\n            if w[i] == w[j+1]:\n                best = w[i+1]\n                break\n        else:\n            break\n        i -= 1\n        j -= 1\n    return best\n    \n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 1:\n        return word[0]\n    left = ''\n    right = ''\n    mid = ''\n    vowel = ''\n    vowel_in = ''\n    for i in range(len(word)):\n        if word[i].isupper() or word[i] == '_':\n            left += word[i]\n        elif word[i].islower():\n            right += word[i]\n        elif word[i].isupper() and word[i] == word[i - 1].isupper():\n            mid += word[i]\n        elif word[i].islower() and word[i] == word[i - 1].islower():\n            mid += word[i]\n        elif word[i].isupper() and word[i]!= '_':\n            vowel_in += word[i]\n        elif word[i].islower() and word[i]!= '_':\n            vowel_in += word[i]\n    if mid == '':\n        return ''\n    if left == '':\n        return vowel_in\n    if right == '':\n        return vowel_in\n    if mid!= '':\n        if vowel_in == '':\n            return ''\n        elif vowel_in == mid:\n            return vowel_in\n        elif vowel_in.isupper():\n            if mid.isupper():\n                return mid\n            elif mid.islower():", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    c = 0\n    for letter in word:\n        if letter in \"IIY\":\n            c += 1\n        if letter == \"i\":\n            if c == 1:\n                return \"i\"\n            if c == 2:\n                return \"e\"\n            c = 0\n        elif letter == \"e\":\n            if c == 2:\n                return \"e\"\n            if c == 1:\n                return \"i\"\n            if c == 0:\n                return \"a\"\n        elif letter == \"a\":\n            if c == 1:\n                return \"e\"\n            if c == 2:\n                return \"e\"\n            if c == 0:\n                return \"i\"\n        c += 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = str(word)\n    # Find the rightmost consonant\n    consonant = word[-1]\n    # Find the second to last consonant\n    second_to_last_consonant = word[-2]\n    # Find the vowel\n    vowel = word[-2:-1]\n    # Return the closest vowel if it exist\n    if vowel == \"\":\n        return \"\"\n    # Find the first vowel\n    first_vowel = word[:-2]\n    # Find the distance between vowel and consonants\n    distance = first_vowel.count( vowel)\n    # If there is no vowel, return empty string\n    if distance == 0:\n        return \"\"\n    # Else find the closest vowel\n    else:\n        return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.find(\"y\") < word.find(\"u\"):\n        return \"y\"\n    elif word.find(\"y\") > word.find(\"u\"):\n        return \"u\"\n    elif word.find(\"y\") == word.find(\"u\"):\n        return \"\"\n    elif word.find(\"u\") < word.find(\"y\"):\n        return \"u\"\n    elif word.find(\"u\") > word.find(\"y\"):\n        return \"y\"\n    elif word.find(\"u\") == word.find(\"y\"):\n        return \"\"\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a','e','i','o','u','y','\u00e1','\u00ed','\u00f3','\u00fa','\u00fc']\n\n    # Take the first consonant from the right side of the word\n    left = word[:-1]\n    right = word[-1]\n    # Take the first vowel that is not in the list of vowels\n    i = 0\n    for letter in vowels:\n        i += 1\n        if left[i]!= letter:\n            i = 0\n    # Take the second vowel that is not in the list of vowels\n    j = i + 1\n    for letter in vowels:\n        j += 1\n        if right[j]!= letter:\n            j = 0\n    # Return the closest vowel from left and right\n    return left[i] if i == j else ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = u\"\\u0041-\\u0064\\u0066-\\u0074\\u0076-\\u0081\\u0083\\u0086-\\u0091\\u0093\\u0096-\\u00af\\u00b4-\\u00b7\\u00b8-\\u00bb\\u00bf-\\u00c1\\u00c2-\\u00c5\\u00c7\\u00c9-\\u00cd\\u00cf\\u00d6-\\u00d7\\u00f1\\u00f3-\\u00f6\\u00f8-\\u00fd\\u00ff\\u0100-\\u024f\\u0254\\u0256\\u0258\\u025f\\u0370\\u0378\\u03a6\\u03a9\\u03c0\\u03c1\\u03c2\\u03c3\\u03c4\\u03c5\\u03c6\\u03c7\\u03c8\\u03c9\\u03ca\\u03cb\\u03cc\\u03cd\\u03ce\\u03cf\\u03d0\\u03d1\\u03d2\\u03d3\\u03d4\\u03d5\\u03d6\\u03d7\\u03d8\\u03d9\\u03da\\u03db\\u03dc\\u03dd\\u03de\\u03df\\u03e0\\u03e1\\u03e2\\u03e3\\u03e4\\u03e5\\u03e6\\u03e7\\u03e8\\u03e9\\u03ea\\u03eb\\u03ec\\u", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 1:\n        return word\n    left = get_closest_consonant(word[:-1])\n    right = get_closest_consonant(word[1:])\n    if len(left) == 0 or len(right) == 0:\n        return \"\"\n    if left.lower() == right.lower():\n        if left.lower() == 'o':\n            if right.lower() == 'y':\n                return 'u';\n            else:\n                return 'o';\n        else:\n            return right\n    else:\n        return left.lower()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = u\"aeiou\"\n    pos = 0\n    prev = \"\"\n    while pos < len(word):\n        next = word[pos+1:]\n        if not next:\n            break\n        if prev!= \" \" and next in vowels and next!= prev:\n            pos += 1\n        prev = next\n    return \"\" if pos == 0 else word[pos-1:pos+1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowel_pos = []\n    vowel_index = 0\n\n    # copy the current word\n    word_copy = word\n\n    # start with the first position\n    for i in word_copy.split(\"\"):\n        if i in vowels:\n            vowel_pos.append(i)\n        elif i.isalpha():\n            vowel_pos.append(i)\n            if vowel_index == 0:\n                break\n            elif len(word_copy) >= vowel_index:\n                break\n            vowel_index += 1\n        else:\n            return word_copy\n\n    # copy the first position\n    word_copy = word_copy[:vowel_index]\n\n    # find the first vowel from the left side\n    for i in word_copy.split(\"\"):\n        if i in vowels:\n            return word_copy\n        elif i.isalpha():\n            if vowel_pos:\n                return word_copy\n            elif vowel_index:\n                return word_copy\n\n    return word_copy.split(\"\")[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def get_closest_vowel(word, c):\n        \"\"\"Your function should return a vowel that is between two consonants on the right side of the word.\"\"\"\n        vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n        vowels.reverse()\n        for i in range(len(word) - 1):\n            if word[i:i + 2] not in vowels:\n                continue\n            if i + 1 < len(word) and word[i + 1] in vowels:\n                continue\n            if word[i - 1] in vowels:\n                continue\n            return word[i:i + 2]\n        return \"\"\n        \n    word = word.lower()\n    if len(word) > 2:\n        c = word[2]\n    else:\n        return word\n    return get_closest_vowel(word[:2], c) + get_closest_vowel(word[2:], c)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = set(u\"a\", u\"e\", u\"i\", u\"o\", u\"u\")\n\n    return \" \".join(word[i:i+2] for i in xrange(0, len(word), 2) if word[i:i+2] in vowels and not word[i:i+2] == \"i\" or word[i:i+2] == \"u\")", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_letters = \"aeiouy\"\n    consonant_letters = \"bcddfghjklmnpqrstvwxz\"\n    vowel_letters_found = set()\n    consonant_letters_found = set()\n    for i in range(len(word)):\n        c = word[i]\n        if c in vowel_letters:\n            vowel_letters_found.add(c)\n        if c in consonant_letters:\n            consonant_letters_found.add(c)\n    vowel = \"\"\n    if len(vowel_letters_found) > 0:\n        vowel = vowel_letters_found.pop()\n    if len(vowel_letters) > 0:\n        vowel = vowel_letters.pop()\n    if len(vowel_letters) > 0:\n        vowel = vowel_letters.pop()\n    if len(vowel) > 0:\n        vowel = vowel\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n\n    def get_closest_vowel(string):\n        vowel = \"\"\n        consonant = \"\"\n\n        for letter in string:\n            if letter in vowels:\n                vowel += letter\n            elif letter in consonants:\n                consonant += letter\n\n        if len(vowel) > len(consonant):\n            return vowel\n        elif len(vowel) < len(consonant):\n            return consonant\n        else:\n            return \"\"\n\n    return get_closest_vowel(word)\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouyAEIOU\"\n    last_consonant = \"\"\n    last_consonant = word[-1]\n    while last_consonant not in vowels:\n        last_consonant = word[-1]\n        if last_consonant in vowels:\n            break\n\n    if last_consonant not in vowels:\n        last_consonant = \"\"\n    else:\n        last_consonant = word[-1]\n\n    vowels = \"aeiouyAEIOU\"\n    first_consonant = \"\"\n    first_consonant = word[0]\n    while first_consonant not in vowels:\n        first_consonant = word[0]\n        if first_consonant in vowels:\n            break\n\n    if first_consonant not in vowels:\n        first_consonant = \"\"\n    else:\n        first_consonant = word[0]\n\n    vowels = \"aeiouyAEIOU\"\n    vowel = \"\"\n    vowel = word[1:-1]\n    while vowel not in vowels:\n        vowel = word[1:-1]\n        if vowel in vowels:\n            break\n\n    if vowel in vowels:\n        vowel = word[1:-1]\n\n    if vowel!= last_consonant and vowel!= first_consonant:\n        vowel = \"\"\n    else:\n        vowel =", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'uIyOeErrTt'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    matching_vowels = []\n    found = True\n    for index in range(0, len(word) - 1):\n        if vowels[index] in consonants[index + 1:]:\n            matching_vowels.append(vowels[index])\n        if vowels[index] in consonants[index]:\n            if found == True:\n                matching_vowels.append(vowels[index])\n            else:\n                found = False\n    if len(matching_ vowels) > 0:\n        return matching_vowels[0]\n    else:\n        return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [u\"a\", u\"e\", u\"i\", u\"o\", u\"u\"]\n    consonants = [\"k\", \"b\", \"p\", \"t\", \"d\", \"g\", \"f\", \"s\", \"z\", \"c\"]\n    vowel_num = len(vowels)\n    if word.isupper():\n        vowel_num = vowel_num - 1\n    if word.islower():\n        vowel_num = vowel_num + 1\n    vowel_num = vowel_num - 1\n    vowel_num = vowel_num + 1\n    if len(word) > 1:\n        for i in range(0, vowel_num):\n            if get_closest_vowel(word[i:]) == vowels[i]:\n                return word[i:]\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # position of the right most consonant\n    last_consonant_position = len(word)\n    # position of the left most vowel\n    leftmost_vowel_position = 0\n    # position of the last vowel\n    last_vowel_position = 0\n    # if the rightmost consonant is not a vowel then we stop the search\n    if word[last_consonant_position - 1]!= \" \":\n        # the last consonant is not a vowel, search until we find a vowel\n        while last_consonant_position > 0 and word[last_consonant_position - 1]!= \" \":\n            # increment last_consonant_position by 1 to skip the next consonant\n            last_consonant_position -= 1\n        # if we did not find a vowel within the given number of characters, return \"\"\n        if last_consonant_position == 0:\n            return \"\"\n        # we found a vowel, search until we reach the leftmost consonant\n        while leftmost_vowel_position < last_consonant_position:\n            # increment leftmost_vowel_position by 1 to skip the next vowel\n            leftmost_vowel_position += 1\n            # if we reached the last consonant, return \"\"\n            if leftmost_vowel_position == last_consonant_position:\n                return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeioouAEIOU\"\n    consonants = \"bbcdghjklmnprstvxzbcdghjklmnprstvxz\"\n\n    c = ''\n    for c in consonants:\n        if word.find(c) > -1:\n            c = ''\n            return c\n\n    for c in vowels:\n        if word.find(c) > -1:\n            c = ''\n            return c\n\n    c = ''\n    for c in consonants:\n        if word.find(c) == -1:\n            c = ''\n            return c\n\n    for c in vowels:\n        if word.find(c) == -1:\n            c = ''\n            return c\n\n    return \"\"\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouy\"\n    split_by_vowel = \"(\" + vowels + \")\"\n\n    left_side = word.split(split_by_vowel)\n    right_side = word.split(split_by_vowel, maxsplit=1)\n\n    if len(left_side)!= len(right_side):\n        return \"\"\n    else:\n        left_most_consonant = left_side[0]\n        right_most_consonant = right_side[-1]\n        left_most_consonant = left_most_consonant.lower()\n        right_most_consonant = right_most_consonant.lower()\n        left_most_consonant = left_most_consonant.split(\" \")\n        right_most_consonant = right_most_consonant.split(\" \")\n        if left_most_consonant[0].lower()!= right_most_consonant[-1].lower():\n            return \"\"\n        else:\n            for i in range(len(left_most_consonant)):\n                if left_most_consonant[i].lower()!= right_most_consonant[i].lower():\n                    return \"\"\n                else:\n                    #TODO: Make sure that the vowel found", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Gather all vowels\n    vowels = set(u\"aeiouy\")\n    # Scan through the word and find all the consecutive vowel \n    word = word.lower()\n    for i, char in enumerate(word):\n        if char in vowels:\n            v = set(word[i:i + 3]).intersection(vowels)\n            if len(v) > 0:\n                return word[i : i + len(v)].rstrip(',')\n\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    for vowel in vowels:\n        if len(word) > 1:\n            if (word[-1] == vowel and word[:-1].find(vowel) == 0) or (word[:-1] == vowel and word[-1].find(vowel) == len(word) - 1):\n                return vowel\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    start = word.find(\" \")\n    if start == -1:\n        return \"\"\n    end = word.find(\" \", start+1)\n    if end == -1:\n        return \"\"\n    vowels = [\"e\", \"i\", \"o\", \"a\"]\n    word = word[start:end]\n    i = 0\n    while i < len(word):\n        if word[i] not in vowels and word[i]!= \"\":\n            i += 1\n        else:\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aieiou'\n    consonants = 'bcdghjklmnprsuvwxz'\n    vowels = set(vowels)\n    \n    for i in xrange(len(word) - 2):\n        first_consonant = word[i + 1].lower()\n        second_consonant = word[i + 2].lower()\n        if first_consonant == second_consonant:\n            continue\n        else:\n            if first_consonant.find(vowels) == -1:\n                if second_consonant.find(vowels) == -1:\n                    return \"\"\n            else:\n                if first_consonant.find(vowels)!= -1:\n                    if second_consonant.find(vowels)!= -1:\n                        return \"\"\n                else:\n                    if second_consonant.find(vowels)!= -1:\n                        return \"\"\n        return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # letters in the given word\n    vowels = u\"u i e a o\"\n\n    # set of possible characters\n    chars = set(\"bcdfghjklmnopqrstvwxz\")\n\n    # function to find the distance between 2 consonants from the left side of the word\n    def get_left_distance(left, right):\n        \"\"\"Calculates the distance between left and right\"\"\"\n        length = len(left) + len(right)\n\n        # if left is empty\n        if left == \"\":\n            return length\n\n        # if right is empty\n        if right == \"\":\n            return 0\n\n        # calculate the distance between the two letters\n        left_part = left[:length-1]\n        right_part = right[:length-1]\n\n        # calculate the distance between the first two letters\n        left_distance = len(left_part) + len(right_part)\n\n        return left_distance\n\n    # keep the current position\n    current_pos = 0\n\n    # find the length of the word\n    word_len = len(word)\n\n    # set of possible position\n    possible_pos = set(range(word_len))\n\n    # go through all possible position\n    for pos in possible_pos:\n        # get the length of the current word\n        left_len = len(word[pos - 1])\n\n        #", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = '[aeiouy]y'\n    length = len(word)\n    if length == 2:\n        left_bound = 2\n        right_bound = length - 1\n        while left_bound <= right_bound:\n            mid = (left_bound + right_bound) // 2\n            if word[mid] in vowels:\n                if word[mid - 1] in vowels:\n                    return word[mid]\n                if word[mid + 1] in vowels:\n                    return word[mid]\n            left_bound = mid + 1\n            right_bound = mid - 1\n\n    elif length == 1:\n        left_bound = 2\n        while left_bound <= 2:\n            mid = (left_bound + right_bound) // 2\n            if word[mid] in vowels:\n                return word[mid]\n            left_bound = mid + 1\n\n    else:\n        raise ValueError(\"only one case\")\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # start the first check at the end of the word\n    # move to the left until we find a vowel\n    # then move back to the left again until we find a consonant\n    # the end condition is to see if we can reach the beginning of the word\n    # move back to the end of the word until we find a vowel\n    # if we find a consonant, then we have reached the beginning of the word\n    first_consonant = word[-2]\n    last_consonant = word[-1]\n    return get_closest_vowel(word[:-2]) or get_closest_vowel(word[-1:])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n\n    vowel = ''\n    consonant = ''\n    candidates = []\n    for char in word:\n        if char in vowels:\n            vowel += char\n            candidates.append(char)\n        if char == consonants[-1]:\n            consonant += char\n        else:\n            candidates.append(char)\n    return vowel, consonant, candidates", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \" a e i o u y \"\n    \n    # find the starting consonant\n    consonant = word[:3]\n    \n    # find the ending consonant\n    if word.endswith(\"y\"):\n        ending_consonant = \" \"\n    elif word.endswith(\"u\"):\n        ending_consonant = \"u\"\n    else:\n        ending_consonant = word[-2:]\n        \n    # if not starting consonant is vowel then\n    #   return empty string\n    # if not ending consonant is vowel then\n    #   return empty string\n    if consonant not in vowels:\n        return \"\"\n    if ending_consonant not in vowels:\n        return \"\"\n\n    # find the closest vowel between the consonant and the ending consonant\n    # vowels in the beginning and ending doesn't count\n    vowel = \"\"\n    for vowel in vowels:\n        if vowel == consonant + ending_consonant:\n            break\n        if vowel == consonant + word[-ending_consonant-1:]:\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_count = 0\n    consonants = []\n    for i in range(len(word)-2):\n        consonants.append(word[i+1])\n        consonants.append(word[i+2])\n\n    for i in range(len(word)-2):\n        if word[i] == word[i+1] and word[i] == word[i+2] and vowel_count == 0:\n            vowel_count = 1\n    if vowel_count == 1:\n        return word[i+1]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = set(\"aeiou\")\n    for i in range(len(word)):\n        if not vowels.issubset(word[i:]) and not vowels.issubset(word[:i]):\n            return \"\"\n\n    if len(word) > 0:\n        return word[0]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = \"aa eee ii oo oe uu yy\"\n    consonants = \"bb ddd ggg hhh jjj qqq rrs\"\n    \n    current_vowel = \"\"\n    current_consonant = \"\"\n    \n    for letter in word:\n        if letter in vowels:\n            current_vowel += letter\n        elif letter in consonants:\n            if current_vowel:\n                return current_vowel + current_consonant\n            else:\n                current_consonant += letter\n    \n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def vowel_checker(s, a, b):\n        # if s[a:b] == \"u\", a is a vowel, and b is a consonant, return True\n        if s[a:b] == \"u\":\n            return True\n        elif s[a:b] == \"a\":\n            return False\n        elif s[a:b] == \"b\":\n            return False\n        else:\n            return True\n\n    vowel = \"\"\n    prev_letter = \"\"\n    prev_vowel = \"\"\n    prev_consonant = \"\"\n    for i in range(len(word)):\n        if word[i].isalpha():\n            if prev_consonant == \"s\":\n                vowel = vowel + word[i].lower()\n            elif prev_consonant == \"c\":\n                vowel = vowel + word[i].lower()[2:]\n            else:\n                vowel = vowel + word[i].lower()\n                prev_vowel = prev_vowel + word[i].lower()\n                prev_consonant = word[i].lower()\n        else:\n            if prev_vowel == \"a\":\n                prev_letter = prev_vowel + word[i]\n            elif prev_vowel == \"i\":\n                prev_letter = prev_vowel + word[i]\n            elif prev_vowel == \"o\":\n                prev_letter", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"ai ei ei oi u au ao au a\")\n    consonants = set(\"bc bd be bf bg bgh bgm bk bl bm bn bll blm blp bq br bs\")\n\n    # making consonants not vowels\n    for consonant in consonants:\n        if vowel in consonants:\n            vowels.remove(vowel)\n\n    # making vowels not consonants\n    for vowel in vowels:\n        if consonant in vowels:\n            consonants.remove(vowel)\n\n    return consonants.pop()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n\n    for letter in word:\n        if letter in vowels:\n            return letter\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\"\n    for i in word:\n        if i[0] == 'v':\n            result = i\n    if result == '':\n        return \"\"\n    else:\n        if word[i - 1] == result[0] and word[i + 1] == result[-1]:\n            return result\n        else:\n            return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    words = word.split(\" \")\n    vowel = \"\"\n    for word in words:\n        if word[0]!= \" \":\n            if not vowel or vowel[-1]!= word[0]:\n                vowel = word[0]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n\n    # Remove the first and last characters\n    word = word[2:]\n    word = word[:2]\n\n    # Find all vowels\n    vowels = word.split(\"e\")\n    vowels = [w.lower() for w in vowels]\n\n    # Find all consonants\n    consonants = word.split(\"s\")\n    consonants = [w.lower() for w in consonants]\n\n    # Find the first vowel in the word\n    vowel_index = -1\n    for vowel in vowels:\n        if word.endswith(vowel):\n            vowel_index = len(word)\n        if vowel_index >= 0:\n            break\n    if vowel_index >= 0:\n        vowel = vowels[vowel_index].lower()\n    else:\n        return \"\"\n\n    # Find the last consonant in the word\n    consonants = [w.lower() for w in consonants if w!= vowel]\n    # Find the last vowel in the word\n    vowel_index = -1\n    for vowel in vowels:\n        if word.startswith(vowel):\n            vowel_index = 0\n        if vowel_index >= 0:\n            break\n    if vowel_index >= 0:\n        vowel = vowels[vowel_index].lower()\n    else:\n        return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    l = len(word)\n    if l == 1:\n        return word[0]\n    elif l == 0:\n        return ''\n    res = \"\"\n    count = 0\n    for i in range(0, l - 1):\n        if get_closest_vowel(word[i + 1]) == \"u\":\n            res = res + \"u\"\n            count = count + 1\n            if count > 2:\n                break\n    return res", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def get_position(cons, pos):\n        \"\"\"Get the position of a given vowel between two consonants\"\"\"\n        if cons[pos:pos+2] == \"aeiou\":\n            return pos-2\n        elif cons[pos:pos+3] == \"abcdefghijklmnopqrstuvwxyz\":\n            return pos-3\n        return -1\n    def get_position2(cons, pos):\n        \"\"\"Get the position of a given vowel between two consonants\"\"\"\n        if cons[pos:pos+2] == \"aeiou\":\n            return pos+1\n        elif cons[pos:pos+3] == \"abcdefghijklmnopqrstuvwxyz\":\n            return pos+1\n        return -1\n    def get_position3(cons, pos):\n        \"\"\"Get the position of a given vowel between two consonants\"\"\"\n        if cons[pos:pos+2] == \"aeiou\":\n            return pos\n        elif cons[pos:pos+3] == \"abcdefghijklmnopqrstuvwxyz\":\n            return pos+1\n        return -1\n    def get_position4(cons, pos):\n        \"\"\"Get the position of a given vowel between two consonants\"\"\"\n        if cons[pos:pos+2] == \"aeiou\":\n            return pos+1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    string = word.lower()\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"z\"]\n\n    for i in range(len(string) - 1):\n        for j in range(i, len(string) - 1):\n            if string[i:j] in consonants:\n                continue\n            elif string[i:j] in vowels:\n                for w in range(i, j):\n                    if string[i:j] == string[w]:\n                        break\n                else:\n                    return string[w]\n            else:\n                return \"\"\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) < 2:\n        return \"\"\n    # find the closest vowel from the right side\n    vowel_letters = \"aaeiouy\"\n    vowel_position = 0\n    vowel_letters.remove(word[-2])\n    while vowel_position < len(word) - 1 and word[ vowel_position + 1 ] in vowel_letters:\n        vowel_position += 1\n    # now we have the vowel position. go to the left side of the word to find \n    # the closest vowel that is between two consonants. and find the position \n    # where the found vowel is closest to the consonant\n    left_side = word[:vowel_position] + word[vowel_position+1:]\n    for position in range(vowel_position+1,len(left_side)-1):\n        position_right = vowel_position + position\n        for position_left in range(vowel_position+1,position_right-1):\n            if left_side[position_left] in \"CRS\":\n                if get_closest_vowel(left_side[position_left]) == \"u\":\n                    return left_side[position_left]\n    # no vowel found\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \",:;/?\"\n\n    def check_cases(word, c, r):\n        if word[c - 1] == word[r - 1] and word[c - 2] == word[r - 2] and word[c - 3] == word[r - 3]:\n            return word[c - 1:r]\n        return \"\"\n\n    # get the first letter of the word\n    first_letter = word[0]\n    # find the first consonant\n    first_consonant = word.find(\" \", 1) + 1\n    # find the last consonant\n    last_consonant = word.rfind(\" \", first_consonant + 1) - 1\n    # find the first vowel\n    first_vowel = word.find(\" \", first_consonant + 2) + 1\n    # find the last vowel\n    last_vowel = word.rfind(\" \", first_vowel + 1) - 1\n    # check if there is any vowel between the first and last consonant\n    if first_vowel <= last_vowel:\n        # check the first consonant and last vowel\n        vowel = check_cases(word, first_consonant, last_consonant)\n        if vowel!= \"\":\n            return vowel\n        # check", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y']\n    index = 0\n    vowel = \"\"\n    while index < len(word):\n        if word[index] in vowels:\n            vowel = word[index]\n            index += 1\n        else:\n            index += 1\n    return vowel\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def get_closest_vowel(word, starting_vowel=u\"y\"):\n        \"\"\"\n        Return the closest vowel\n        \"\"\"\n        if len(word) == 1:\n            return starting_vowel\n        else:\n            return get_closest_vowel(word[1:], starting_vowel)\n\n    start_pos, end_pos = word.index(starting_vowel), word.index(u\"y\")\n    return get_closest_vowel(word[start_pos:end_pos+1])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\"\n    if word.startswith(\"u\"):\n        result = \"u\"\n    elif word.startswith(\"e\"):\n        if word.endswith(\"u\"):\n            result = \"u\"\n        else:\n            result = \"e\"\n    elif word.startswith(\"i\"):\n        if word.endswith(\"e\"):\n            result = \"i\"\n        else:\n            result = \"e\"\n    elif word.startswith(\"o\"):\n        if word.endswith(\"i\"):\n            result = \"o\"\n        else:\n            result = \"i\"\n    elif word.startswith(\"u\"):\n        if word.endswith(\"e\"):\n            result = \"u\"\n        else:\n            result = \"e\"\n    elif word.startswith(\"y\"):\n        if word.endswith(\"i\"):\n            result = \"y\"\n        else:\n            result = \"i\"\n    elif word.startswith(\"u\"):\n        if word.endswith(\"y\"):\n            result = \"u\"\n        else:\n            result = \"y\"\n    elif word.startswith(\"i\"):\n        if word.endswith(\"y\"):\n            result = \"i\"\n        else:\n            result = \"y\"\n    elif word.startswith(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_search = set(u\"\u03b5,\u03b9,\u03bf,\u03c5\")\n    consonant_search = set(u\"\u03b5,\u03b7,\u03b7,\u03bf,\u03b9,\u03bf,\u03c5,\u03c5,\u03c5,\u03c5,\u03c2,\u03b8,\u03c7,\u03c8,\u03c6,\u03be,\u03c7,\u03c6,\u03c7,\u03c8,\u03c6,\u03be\")\n    vowel_search.discard(u\"Y\")\n    vowel_search.discard(u\"Y\")\n    word_vowels = set(u\" \".join(w for w in word if w in vowel_search))\n    vowel_search.discard(u\"Y\")\n    vowel_search.discard(u\"Y\")\n    # now search for vowel between two consonants\n    for i in xrange(len(word)):\n        if word[i:i+2] in consonant_search:\n            if word[i+2] in vowel_search:\n                return word[i:i+2]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    res = \"\"\n    for c in word:\n        if c.isalpha():\n            if res == \"\":\n                res = c\n            elif c!= res:\n                res = c\n                break\n    return res", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Find the next vowel in the string after the current position\n    for i in range(len(word) - 1):\n        if word[i + 1] in [\"i\", \"e\", \"o\", \"u\"]:\n            break\n    return word[i + 1:]\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"AEIOU\"\n    words = [\"y\", \"u\", \"u\", \"FULL\", \"quick\", \"ab\"]\n    for word in words:\n        if get_closest_vowel(word)!= \"\":\n            return get_closest_vowel(word)\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # Reset the count\n    result = \"\"\n\n    for c in word:\n        if c not in ['a','e','i','o','u','y','z','x','v']:\n            continue\n\n        if c == word[0]:\n            continue\n\n        if c == word[-1]:\n            continue\n\n        left = word[:-1]\n        right = word[1:]\n        prev = \"\"\n        index = 0\n\n        while left[index-1] not in ['a','e','i','o','u','y','z','x','v']:\n            prev = prev + left[index-1]\n            index = index+1\n\n        while right[index] not in ['a','e','i','o','u','y','z','x','v']:\n            prev = prev + right[index]\n            index = index+1\n\n        # if prev == \"\" then it means there is no vowel in the word\n        if prev!= \"\":\n            result = prev\n\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"\u00c1\u00c1\u00c0\u00c2\u00c0\u00c5\u00c0\u00c6\u00c0\u00c7\u00c0\u00c8\u00c0\u00c9\"\n    consonants = \"\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\"\n    consonants2 = \"\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd\u00ce\u00cf\u00d0\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00c0\u00c1\u00c0\u00c2\u00c0\u00c5\u00c0\u00c6\u00c0\u00c7\u00c0\u00c8\u00c0\u00c9\"\n    if not word: return ''\n    if word[0].isalpha() or word[-1].isalpha(): return ''\n    if len(word) < 2: return ''\n    for char in word[2:]:\n        if char.isalpha():\n            break\n    if char in vowels: return ''\n    for char in word[-2:]:\n        if char.isalpha():\n            break\n    if char in vowels2: return ''\n    for char in word[-2:]:\n        if char in consonants:\n            break\n    if char in consonants2: return ''\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # TODO Add a better implementation\n    # TODO Consider case sensitive\n    # TODO Consider consonant order\n    # TODO Consider the case where we want to find the first vowel between two \n    #        consonants\n    # TODO Consider the case where we want to find the last vowel between two \n    #        consonants\n    # TODO Consider the case where we want to find the vowel that is in the \n    #        middle\n\n    vowel = \"\"\n    vowel_1 = \"\"\n    vowel_2 = \"\"\n\n    for i in range(len(word) - 1):\n        if word[i+1] == word[i]:\n            vowel_2 = word[i+1]\n            vowel_1 = word[i]\n        else:\n            break\n    if vowel_1!= u.upper() or vowel_2!= u.upper():\n        return \"\"\n    else:\n        return vowel_2</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    res = \"\"\n    if len(word) < 2:\n        return res\n    if word[-2] == word[-1].lower():\n        if len(word) > 1 and word[-2]!= \"u\":\n            res = get_closest_vowel(word[:-2])\n        else:\n            res = get_closest_vowel(word[:-1])\n    else:\n        res = get_closest_vowel(word[:-1])\n    return res", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\"]\n    start = word.find(\" \")\n    end = word[start:].find(\" \")\n    return vowels[start+1:end]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word[0] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n        vowel_found = 0\n    else:\n        vowel_found = 1\n\n    if word[-1] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n        vowel_found = 0\n    else:\n        vowel_found = 1\n\n    if vowel_found:\n        if word[-2] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found = 0\n        else:\n            vowel_found = 1\n\n    if vowel_found:\n        if word[-3] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found = 0\n        else:\n            vowel_found = 1\n\n    if vowel_found:\n        if word[-4] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found = 0\n        else:\n            vowel_found = 1\n\n    if vowel_found:\n        if word[-5] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found = 0\n        else:\n            vowel_found = 1\n\n    if vowel_found:\n        if word[-6] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found = 0\n        else:\n            vowel_found = 1\n\n    if vowel_found:\n        if word[-7] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found = 0\n        else:\n            vowel_found = 1\n\n    if vowel_found:\n        if word[-8] in '\u00c1\u00c9\u00cd\u00d3\u00da':\n            vowel_found =", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word[0] in string.letters:\n        if word[-1] in string.letters:\n            if word[-1] == word[0]:\n                if word[-2] not in string.letters:\n                    if word[-3] not in string.letters:\n                        return word[-2:-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    letter = \"\"\n    if word[0] in ['e','e','a','i','o','o','u','u','y','y','y','y']:\n        letter = word[0]\n    elif word[0] in ['v','v','v','v','v','v','v','v','v','v','v','v','v']:\n        letter = word[0]\n    elif word[0] in ['b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b','b',", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = u\"aeiou\"\n    prev_c = \"\"\n    for i in range(len(word) - 1):\n        if word[i - 1] in vowels and word[i] in vowels:\n            prev_c = word[i - 1]\n            break\n    next_c = \"\"\n    for j in range(i, len(word)):\n        if word[j] in vowels and word[j + 1] in vowels:\n            next_c = word[j]\n            break\n    if not prev_c and not next_c:\n        return \"\"\n    if prev_c == \"y\" and next_c == \"g\":\n        return \"a\"\n    elif prev_c == \"y\" and next_c == \"r\":\n        return \"u\"\n    elif prev_c == \"y\" and next_c == \"u\":\n        return \"o\"\n    elif prev_c == \"y\" and next_c == \"l\":\n        return \"e\"\n    elif prev_c == \"y\" and next_c == \"r\":\n        return \"i\"\n    elif prev_c == \"y\" and next_c == \"k\":\n        return \"o\"\n    elif prev_c == \"y\" and next_c == \"t\":\n        return \"u\"\n    elif prev_c == \"y\" and next_c == \"d\":\n        return \"u\"\n    elif prev_c == \"y\" and next_c ==", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def is_lefthand_consonant(c):\n        \"\"\"Check if c is a consonant.\"\"\"\n\n        return not c.isalpha()\n\n    def is_righthand_consonant(c):\n        \"\"\"Check if c is a consonant.\"\"\"\n\n        return c.isalpha()\n\n    # If the word is empty, return empty string\n    if len(word) == 0:\n        return \"\"\n\n    # Get the first two consonants in the word\n    left = word[0:2]\n    right = word[-2:]\n\n    # Get the vowel\n    vowel = get_closest_vowel(left)\n\n    # For every possible position of the vowel in the word\n    for position in range(len(word)):\n\n        # If the vowel is adjacent to the left hand consonant, there is no need to continue\n        # with the loop\n        if is_lefthand_consonant(vowel):\n            break\n\n        # If the vowel is adjacent to the right hand consonant, there is no need to continue\n        # with the loop\n        if is_righthand_consonant(vowel):\n            break\n\n        # We will check if the vowel is adjacent to the left hand consonant\n        if is_lefthand_consonant(vowel)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.isupper():\n        word = word.lower()\n    if word == \"\":\n        return \"\"\n\n    # Discard vowels at the beginning and the end of the word\n    word = word[:-1] + word[-1:]\n\n    # Find the consonant between two vowels\n    pos1 = word.find(\"u\")\n    pos2 = word.find(\"u\", pos1+1)\n    if pos1 == -1 or pos2 == -1:\n        return \"\"\n\n    # Discard consonants in between vowels\n    word = word[pos1+1:pos2]\n    if word == \"\":\n        return \"\"\n\n    # Find the next vowel\n    pos3 = word.find(\"u\", pos2+1)\n    if pos3 == -1:\n        return \"\"\n\n    # Find the next consonant\n    pos4 = word.find(\"u\", pos3+1)\n    if pos4 == -1:\n        return \"\"\n\n    return word[pos1+1:pos2]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 2:\n        return word[:-1].rfind(\"aeiou\") + 1\n    elif len(word) == 1:\n        return word.rfind(\"aeiou\") + 1\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeioouy\"\n    first_letter = word[0]\n    last_letter = word[-1]\n    first_c = first_letter\n    last_c = last_letter\n    last_c = last_c.lower()\n    last_c = last_c.split(\"_\")[0].lower()\n    vowels = vowels.split(\"_\")\n    vowels = [e.lower() for e in vowels]\n    vowel_list = vowels[:-1] + vowels[1:]\n    list_r = []\n    for i in range(len(vowel_list)):\n        if vowel_list[i]!= \"\" and vowel_list[i]!= last_c:\n            list_r.append(vowel_list[i])\n    if len(list_r) > 0:\n        return list_r[0]\n    else:\n        return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for c in word:\n        if c.isupper() and c!= 'i' and c!= 'u':\n            break\n    else:\n        return \"\"\n    for c in word[-2:]:\n        if c.isupper() and c!= 'i' and c!= 'u':\n            break\n    else:\n        return \"\"\n    for c in word[-1:]:\n        if c.isupper() and c!= 'i' and c!= 'u':\n            break\n    else:\n        return \"\"\n    for c in word[:-1]:\n        if c.isupper() and c!= 'i' and c!= 'u':\n            break\n    else:\n        return \"\"\n    return word[-1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {\"e\", \"i\", \"o\", \"u\"}\n\n    for c in word[::-1]:\n        if c in vowels:\n            return c\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    if word.startswith('y'):\n        i = word.find('y') + 1\n    elif word.startswith('u'):\n        i = word.find('u') + 1\n    elif word.startswith('o'):\n        i = word.find('o') + 1\n    elif word.startswith('e'):\n        i = word.find('e') + 1\n    else:\n        i = 0\n    if word[i] not in ['y', 'u']:\n        i += 1\n    while i < len(word) and word[i] not in ['y', 'u']:\n        i += 1\n    if i == len(word):\n        return \"\"\n    else:\n        return word[i]\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    # if word[0] == word[-1], return word[0]\n    if word[0] in \"YAURT\":\n        return word[0]\n    # if word[-1] in \"YAURT\":\n    #     return word[-1]\n    if word[0] in \"YAURT\":\n        return word[0]\n    if word[-1] in \"YAURT\":\n        return word[-1]\n    if word[0] in \"YAURT\":\n        return word[0]\n    if word[-1] in \"YAURT\":\n        return word[-1]\n    if word[0] in \"YAURT\":\n        return word[0]\n    if word[-1] in \"YAURT\":\n        return word[-1]\n    # if word[0] in \"YAURT\":\n    #     return word[0]\n    # if word[-1] in \"YAURT\":\n    #     return word[-1]\n    if word[0] == word[-1]:\n        return word[0]\n    if word[0] in \"YAURT\":\n        return word[0]\n    if word[-1] in \"YAURT\":\n        return word[-1]\n    if word[0] in \"YAURT\":\n        return word[0]\n    if word[-1] in \"YAURT\":\n        return word[-1]\n    if word[0] in \"YAURT\":\n        return word[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    index = 0\n    vowel = \"\"\n    while index < len(word) - 1:\n        if word[index] in \"ABCDEFGHJKLMNPQRSTUVWXY\":\n            index += 1\n        if word[index] in \"!'()?\":\n            index += 1\n        elif word[index] in \"~`\":\n            index += 1\n        elif word[index] in \"._\":\n            index += 1\n        elif word[index] in \"+-\":\n            index += 1\n        elif word[index] in \"`\":\n            index += 1\n        elif word[index] in \"'\":\n            index += 1\n        elif word[index] in \"`\":\n            index += 1\n        elif word[index] in \"/\\\\\":\n            index += 1\n        elif word[index] in \".\":\n            index += 1\n        elif word[index] in \"?\":\n            index += 1\n        elif word[index] in \"*\":\n            index += 1\n        elif word[index] in \"+\":\n            index += 1\n        elif word[index] in \".\":\n            index += 1\n        elif word[index] in \"_\":\n            index += 1\n        elif word[index] in \":\";\n            index += 1\n        elif word[index] in \"@\":\n            index += 1\n        elif word[index] in \",\":\n            index += 1\n        elif word[index] in \".\":\n            index += 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\" \",\".\",\"?\",\"-\",\"!\",\",\",\".\",\"/\",\",\",\":\",\"\\\"\",\"'\",\"[\",\"]\"]\n    consonants = \"ABCDGHJKLMNPRTUVXZBCDFGHJKLMNPRTUVXZCD\"\n    for vowel in vowels:\n        for consonant in consonants:\n            if vowel in word:\n                if word[word.index(vowel):word.index(vowel)+2].islower():\n                    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    i = len(word)\n    j = i - 1\n    while j >= 0 and word[j]!='':\n        if word[j].isupper() or word[j].islower():\n            j -= 1\n        else:\n            j -= 2\n    if j < 0:\n        j = 0\n    if word[j].isupper() or word[j].islower():\n        i = j + 1\n    else:\n        i = i - 2\n    while i < 0 and word[i]!='':\n        if word[i].isupper() or word[i].islower():\n            i += 1\n        else:\n            i += 2\n    if i < 0:\n        i = 0\n    if word[i].isupper() or word[i].islower():\n        return \"\"\n    else:\n        return word[i + 1:]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    max_len = len(word) - 1\n    x = 0\n    y = 0\n    for i in range(max_len):\n        if word[i] in ['a','e','i','o','u']:\n            x = i\n            break\n        elif word[i] == 'u':\n            y = i\n            break\n        elif word[i] == 'y':\n            z = i\n            break\n        else:\n            return \"\"\n\n    if x == y == z == 0:\n        return \"\"\n    return word[x:y+z]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = u'\\u00AE\\u00AF\\u00B0\\u00B1\\u00B2\\u00B3\\u00B4\\u00B5\\u00B6\\u00B7\\u00B8\\u00B9\\u00BA\\u00BB\\u00BC\\u00BD\\u00BE\\u00BF\\u00C0\\u00C1\\u00C2\\u00C3\\u00C4\\u00C5\\u00C6\\u00C7\\u00C8\\u00C9\\u00CA\\u00CB\\u00CC\\u00CD\\u00CE\\u00CF\\u00D0\\u00D1\\u00D2\\u00D3\\u00D4\\u00D5\\u00D6\\u00D7\\u00D8\\u00D9\\u00DA\\u00DB\\u00DC\\u00DD\\u00DE\\u00DF\\u00E0\\u00E1\\u00E2\\u00E3\\u00E4\\u00E5\\u00E6\\u00E7\\u00E8\\u00E9\\u00EA\\u00EB\\u00EC\\u00ED\\u00EE\\u00EF\\u00F0\\u00F1\\u00F2\\u00F3\\u00F4\\u00F5\\u00F6\\u00F7\\u00F8\\u00F9\\u00FA\\u00FB\\u00FC\\u00FD\\u00FE\\u00FF'\n    left = word[:-1]\n    right = word[1:]\n    prev, left = prev, left[:-1]\n    next, right = next, right[1:]\n    prev_char = prev[0]\n    left_char = left[0]\n    right_char = right[0]\n    while left_char!= prev_char or right_char!= next_char:\n        if left_char!= prev_char:\n            if left", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = ['a','e','i','o','u']\n    consonants = ['b','c','d','f','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','y','z']\n\n    start = word.find(' ') + 1\n    end = word.find(' ', start)\n    if end == -1:\n        end = len(word)\n    while end > 0:\n        if not word[end] in vowels:\n            return \"\"\n        end = end - 1\n    if start == -1:\n        return \"\"\n    if not word[start] in consonants:\n        return \"\"\n    return word[start]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    words = word.split()\n    if len(words) == 2:\n        return words[0]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 1:\n        return None\n    return word[0].lower() if word[0].isalpha() else ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n\n    first_consonant = word[0]\n    if first_consonant in ['B', 'W', 'Y']:\n        return \"\"\n\n    vowels = ['A', 'E', 'I', 'O', 'U', 'Y', '']\n\n    for vowel in vowels:\n        mid_vowel = word[len(word) - 1 - int(len(vowel)/2)]\n        if first_consonant == mid_vowel[0]:\n            if first_consonant == mid_vowel[0]:\n                return \"\"\n        elif first_consonant == mid_vowel[-1]:\n            if first_consonant == mid_vowel[-1]:\n                return \"\"\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    word = word.upper()\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"c\",\"d\",\"g\",\"f\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"r\",\"s\",\"t\",\"v\",\"w\"]\n    consonants.remove(\"y\")\n    vowels.remove(\"y\")\n\n    #Find consonant\n    for c in consonants:\n        if word.find(c) > -1:\n            return c\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    i = 0\n    j = len(word) - 1\n    while i < j:\n        while i < j and word[i] == word[j]:\n            i += 1\n        if i == j:\n            return word[i-1]\n        while i < j and word[i] == word[j]:\n            j -= 1\n        if i == j:\n            return word[i+1]\n        i += 1\n        j -= 1\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    #ch = ''\n    #for letter in word:\n    #    if letter!='' and letter!= '\\n':\n    #        ch = ch + letter\n    #    else:\n    #        ch = ch +''\n    #return ch\n    #return word\n    def get_closest_vowel(word):\n        if len(word) > 2:\n            for i in range(0, len(word)-2):\n                for j in range(i, len(word)-1):\n                    if word[i+1] == word[j+1]:\n                        if word[i+1] == word[i+2]:\n                            if word[i+1] == word[j+2]:\n                                return word[i+2]\n                        else:\n                            return word[i+1]\n        else:\n            return ''\n    return word</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    if word.find(\"ab\") > word.find(\"ayh\") > word.find(\"ayh\") > word.find(\"ayh\"):\n        return \"\"\n    else:\n        vowels = \"aeioouy\"\n        if len(word) == 1:\n            return \"\"\n        elif word.find(\"ay\") > word.find(\"ay\") > word.find(\"ay\"):\n            return \"\"\n        else:\n            for letter in word:\n                if letter in vowels:\n                    return letter", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = [\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"o\",\"p\",\"r\",\"t\",\"v\",\"w\",\"z\"]\n    vowel = \"\"\n    left = word[:-1]\n    right = word[1:]\n    while left[-2] not in consonants and left[-1] not in consonants:\n        if left[-1] == \"\":\n            left = left[:-1]\n        vowel = left[:-1] + vowel + right\n        left = left[:-1] + right\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.startswith(\"y\") or word.endswith(\"y\"):\n        return \"\"\n    if word.startswith(\"u\"):\n        if word.startswith(\"full\"):\n            return \"U\"\n        if word.startswith(\"quick\"):\n            return \"\"\n    if word.endswith(\"u\"):\n        if word.endswith(\"full\"):\n            return \"U\"\n        if word.endswith(\"quick\"):\n            return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    closest_vowel = \"\"\n    consonants = word.split(\"\")\n    # if word is only one letter\n    if len(word) == 1:\n        closest_vowel = word[0]\n    # if word is two letters\n    elif len(word) == 2:\n        if consonants[0].isupper():\n            consonants[0] = consonants[0].lower()\n        consonants[1] = consonants[1].lower()\n        if consonants[0] == consonants[1]:\n            if consonants[1] == \"u\":\n                closest_vowel = \"u\"\n            elif consonants[1] == \"i\":\n                closest_vowel = \"i\"\n            elif consonants[1] == \"u\":\n                closest_vowel = \"i\"\n    # if word is three letters or more\n    else:\n        # if word is only two consonants\n        if len(word) == 3:\n            if consonants[1].isupper():\n                consonants[1] = consonants[1].lower()\n            elif consonants[2].isupper():\n                consonants[2] = consonants[2].lower()\n            if consonants[1] == consonants[2]:\n                if consonants[1] == consonants[2]:\n                    if consonants[2] == \"u\":\n                        closest_vowel = \"u\"\n                    elif consonants[2] ==", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels_except = vowels[1:]\n    #find first vowel in middle\n    for idx,c in enumerate(word):\n        if c in vowels:\n            vowel = vowel.rstrip(c)+idx+1\n    if vowel!= \"\" and len(vowel) == 2:\n        return vowel\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word_list = word.split()\n    while len(word_list) > 2:\n        i = 0\n        while i < len(word_list) - 2:\n            if word_list[i].isalpha() and word_list[i+1].isalpha():\n                if word_list[i].isupper() and word_list[i+1].isupper():\n                    if get_closest_vowel(word_list[i+2:i]) == \"\" and get_closest_vowel(word_list[i+2:i]) == get_closest_vowel(word_list[i+2:i]):\n                        return word_list[i+2:i]\n                else:\n                    if get_closest_vowel(word_list[i+2:i]) == \"\" and get_closest_vowel(word_list[i+2:i]) == get_closest_vowel(word_list[i+2:i]):\n                        return word_list[i+2:i]\n            i+=1\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # start = 0\n    # end = len(word) - 1\n    #\n    # while start < end:\n    #     if word[start] in ['a', 'e', 'i', 'o', 'u']:\n    #         if word[start] == word[end]:\n    #             return \"\"\n    #         elif word[start] == word[end - 1]:\n    #             return \"\"\n    #         else:\n    #             break\n    #     else:\n    #         break\n\n    # return \"\"\n\n    # [start, end] = [pos for pos in range(start, end + 1) if word[pos] in ['a', 'e', 'i', 'o', 'u']]\n    # return word[start:end].lower()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n    consonant = u\"bcdfghjklmnpqrstvwxz\"\n    consonant_intersection = list(set(vowels) - set(consonant))\n    \n    if len(word) > 0:\n        for i in xrange(0,len(word)):\n            prev_consonant = word[i-1]\n            if prev_consonant in consonant_intersection:\n                next_consonant = word[i+1]\n                if next_consonant in consonant_intersection:\n                    if prev_consonant!= u\"\":\n                        if next_consonant == u\"\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if prev_consonant == u\"\u00ed\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if prev_consonant == u\"\u00f3\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if prev_consonant == u\"\u00fa\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if prev_consonant == u\"\u00e9\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if prev_consonant == u\"\u00e1\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if prev_consonant == u\"\u00ed\":\n                            return u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n                        if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    longest = \"\"\n    for c in word:\n        if longest == \"\":\n            if c == \"a\":\n                longest = \"A\"\n            elif c == \"e\":\n                longest = \"E\"\n            elif c == \"i\":\n                longest = \"I\"\n            elif c == \"o\":\n                longest = \"O\"\n            elif c == \"u\":\n                longest = \"U\"\n            elif c == \"a\":\n                longest = \"A\"\n            elif c == \"u\":\n                longest = \"U\"\n        else:\n            if c == \"a\":\n                if longest == \"A\":\n                    longest = \"A\"\n            elif c == \"e\":\n                if longest == \"E\":\n                    longest = \"E\"\n            elif c == \"i\":\n                if longest == \"I\":\n                    longest = \"I\"\n            elif c == \"o\":\n                if longest == \"O\":\n                    longest = \"O\"\n            elif c == \"u\":\n                if longest == \"U\":\n                    longest = \"U\"\n            elif c == \"a\":\n                if longest == \"A\":\n                    longest = \"A\"\n            elif c == \"u\":\n                if longest == \"U\":\n                    longest = \"U\"\n    if longest == \"\":\n        return \"\"\n    return longest", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.isupper():\n        if word.find('Y')!= -1:\n            return 'U'\n        elif word.find('O')!= -1:\n            return 'U'\n        elif word.find('O')!= -1:\n            return 'U'\n        else:\n            return 'u'\n    elif word.islower():\n        if word.find('Y')!= -1:\n            return 'Y'\n        elif word.find('O')!= -1:\n            return 'Y'\n        elif word.find('O')!= -1:\n            return 'Y'\n        else:\n            return 'u'\n    else:\n        return ''\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    right = word[word.find('-') + 1:]\n    if right.find('-') == -1:\n        right = right.upper()\n    res = ''\n    for c in right:\n        if c.isalpha():\n            if c in vowels:\n                res = res + c\n    if res == '':\n        res = \" \"\n    return res</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    word = word.lower()\n    if len(word) < 1: return \"\"\n\n    if word[0].isalpha() and word[-1].isalpha():\n        return \"\"\n\n    left = word[:-1]\n    right = word[1:]\n    left_vowels = []\n    right_vowels = []\n    for c in left:\n        if c in [\"y\", \"u\"]: left_vowels.append(c)\n        if c in [\"a\", \"i\", \"e\", \"o\", \"u\"]: left_vowels.append(c)\n        if c in [\"a\", \"i\", \"e\", \"o\", \"u\"]: left_vowels.append(c)\n        if c in [\"y\", \"u\", \"o\"]: left_vowels.append(c)\n\n    for c in right:\n        if c in [\"a\", \"i\", \"e\", \"o\", \"u\"]: right_vowels.append(c)\n        if c in [\"a\", \"i\", \"e\", \"o\", \"u\"]: right_vowels.append(c)\n        if c in [\"y\", \"u\", \"o\"]: right_vowels.append(c)\n\n    if len(left_vowels) == 0 and len", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = word.split(\"\")\n    consonants.reverse()\n    vowels = \"\"\n    for c in consonants:\n        if c.isupper():\n            vowels = vowels + c.lower()\n    return vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"]\n    for consonant in word:\n        for vowel in vowels:\n            if vowel in word[len(vowel):] and consonant in word[:-len(vowel)]:\n                return vowel\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(u\"aeiuy\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxz\")\n    words = set(word.lower().split(\" \"))\n    vowels.add(u\" \")\n    vowels.add(u\"y\")\n    vowels.add(u\"e\")\n    vowels.add(u\"i\")\n    vowels.add(u\"u\")\n    vowels.add(u\"y\")\n    vowels.add(u\"o\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(u\"u\")\n    vowels.add(", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    best_index = -1\n    best_degree = 0\n    for i in range(len(word)):\n        if word[i].isalpha():\n            continue\n        if word[i] == word[i - 1]:\n            continue\n        if word[i] == word[i + 1]:\n            continue\n        if word[i].isdigit():\n            continue\n        if word[i] == '[':\n            continue\n        if word[i] == ']':\n            continue\n        if word[i] == ',':\n            continue\n        if word[i] == '-':\n            continue\n        if word[i] == ':':\n            continue\n        if word[i] == '.':\n            continue\n        if word[i] == '!':\n            continue\n        if word[i] == '?':\n            continue\n        if word[i] == '(':\n            continue\n        if word[i] == ')':\n            continue\n        if word[i] =='':\n            continue\n        if word[i] == ',':\n            continue\n        if word[i] == '-':\n            continue\n        if word[i] == ':':\n            continue\n        if word[i] == '.':\n            continue\n        if word[i] == '!':\n            continue\n        if word[i] == '?':\n            continue\n        if word[i] == '(':\n            continue\n        if word[i] == ')':\n            continue\n        if word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeioouAEIOU'\n    vowel_distances = [(i+1, j) for i, j in enumerate(word) if vowels.find(j) == i]\n    vowel_distances = sorted(vowel_distances, key=lambda k: k[1])[:-1]\n    try:\n        return vowel_distances[0][0]\n    except:\n        return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    vowel_pos = 0\n    vowel_dist = 0\n    for letter in word:\n        vowel_dist = 0\n        for letter2 in word:\n            if letter == letter2:\n                break\n            elif letter.isalpha() and letter2.isalpha():\n                vowel_dist += 1\n        if vowel_dist >= 1:\n            if vowel_dist == 1:\n                vowel_pos = 0\n            elif vowel_dist == 2:\n                vowel_pos = 2\n            elif vowel_dist == 3:\n                vowel_pos = 3\n            elif vowel_dist == 4:\n                vowel_pos = 4\n            elif vowel_dist == 5:\n                vowel_pos = 5\n            else:\n                vowel_pos = vowel_dist\n        else:\n            break\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_position = 0\n    last_consonant_position = 0\n    vowel_position_plus = 0\n    vowel_position_minus = 0\n    for position in range(len(word)):\n        if word[position] in ('i', 'o', 'u'):\n            vowel_position = position\n            break\n    if vowel_position == len(word):\n        return \"\"\n    last_consonant_position = vowel_position + 1\n    for position in range(vowel_position, len(word)):\n        if word[position] in ('i', 'o', 'u'):\n            vowel_position_plus = position\n            break\n    for position in range(vowel_position - 1, last_consonant_position):\n        if word[position] in ('i', 'o', 'u'):\n            vowel_position_minus = position\n            break\n    if vowel_position_plus == 0:\n        return \"\"\n    if vowel_position_minus == last_consonant_position:\n        return \"\"\n    if vowel_position_plus < vowel_position_minus:\n        return word[vowel_position_minus - 1]\n    return word[vowel_position_plus - 1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 1:\n        return word[0]\n    else:\n        right = word[-2:]\n        return get_closest_vowel(word[:-2]) if get_closest_vowel(word[:-2]) == \"\" else word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def vowel_distance(vowel1, vowel2):\n        \"\"\"Calculates the distance between two vowels\"\"\"\n\n        if vowel1 == vowel2:\n            return 0\n\n        if vowel1 == 'e' and vowel2 == 'a':\n            return 3\n        elif vowel1 == 'e' and vowel2 == 'i':\n            return 2\n        elif vowel1 == 'a' and vowel2 == 'e':\n            return 1\n        elif vowel1 == 'a' and vowel2 == 'o':\n            return 0\n\n        elif vowel1 == 'i' and vowel2 == 'e':\n            return 3\n        elif vowel1 == 'i' and vowel2 == 'i':\n            return 2\n        elif vowel1 == 'o' and vowel2 == 'u':\n            return 1\n        elif vowel1 == 'o' and vowel2 == 'y':\n            return 0\n        elif vowel1 == 'o' and vowel2 == 'i':\n            return 0\n        elif vowel1 == 'u' and vowel2 == 'u':\n            return 1\n        elif vowel1 == 'u' and vowel2 == 'y':\n            return 0\n\n        else:\n            return -1\n    vowel_list = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # if the two vowels are in the beginning and end, then we", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = u\"\u0430,\u044b,\u044d,\u044e,\u0438,\u043e,\u00f6,\u00fc,\u044a\"\n    consonants = u\"\u0431,\u0432,\u0433,\u0434,\u0435,\u0436,\u0437,\u0438,\u0439,\u043a,\u043b,\u043c,\u043d,\u043e,\u043f,\u0440,\u0441,\u0442,\u0443,\u0444,\u0445,\u0446,\u0447,\u0448,\u0449,\u044a,\u044b,\u044c,\u044d\"\n    vowels = u\"\".join(vowels)\n    consonants = u\"\".join(consonants)\n    prev_letter = \"\"\n    for i in range(len(word)):\n        if prev_letter and prev_letter!='' and prev_letter!= '\\n':\n            if word[i-1] not in consonants:\n                prev_letter = \"\"\n                if word[i-1] not in vowels:\n                    return prev_letter\n        prev_letter = word[i]\n        if word[i] in vowels and prev_letter not in vowels:\n            return word[i]\n    return prev_letter", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \"\"\"\n    >>> get_closest_vowel(\"\")\n    ''\n    >>> get_closest_vowel(\"y\")\n    'y'\n    >>> get_closest_vowel(\"y\")\n    'y'\n    >>> get_closest_vowel(\"yogurt\")\n    'u'\n    >>> get_closest_vowel(\"how\")\n    'y'\n    >>> get_closest_vowel(\"how\")\n    'y'\n    >>> get_closest_vowel(\"yogurt\")\n    'u'\n    \"\"\"\n    consonants = \" b d g j k l m n p q r s t w x y z\"\n    vowels = \" a e i o u y\"\n    first_vowel = True\n    found_vowel = \"\"\n    for ch in consonants:\n        if ch in word:\n            if first_vowel:\n                found_vowel = vowels.index(ch)\n                first_vowel = False\n            else:\n                found_vowel = None\n        else:\n            first_vowel = True\n    return found_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def vowel(s):\n        return s[:2].lower() + s[-2:].lower()\n        \n    def vowel_position(word):\n        \"\"\"Find the position of the vowel in the given word\"\"\"\n        i = 0\n        while i < len(word):\n            if word[i].lower() in vowel(word):\n                return i+1\n            i += 1\n    \n    def consonant_position(word):\n        \"\"\"Find the position of the consonant in the given word\"\"\"\n        i = 0\n        while i < len(word):\n            if word[i].lower() in [\"c\", \"d\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"t\", \"s\", \"w\", \"z\"]:\n                return i+1\n            i += 1\n\n    if len(word) > 1:\n        vowel_position(word)\n        #print vowel_position(word)\n        if vowel_position(word) > 0:\n            #print \"there is a vowel\"\n            for i in range(0, vowel_position(word)):\n                if word[i:i+2] in [\"c\", \"d\", \"g\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\",", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Prerequisite\n    from itertools import product\n\n    # Init\n    vowels = ['a','e','o','u']\n    consonants = ['b','c','d','e','f','g','h','j','k','l','m','n','p','q','r','s','t','u','v','y','z']\n    consonant_to_vowel = dict([(cons, vowel) for (cons, vow) in product(vowels, consonants)])\n\n    # Find the consonant in the word that is closest to the vowel that we want\n    # (by the distance)\n    closest_cons = consonant_to_vowel[word[-2:]]\n    if closest_cons is None:\n        return \"\"\n    # Get the next vowel that is closest to this consonant\n    # (by the distance)\n    closest_vowel = consonant_to_vowel[word[-1]]\n    if closest_vowel is None:\n        return \"\"\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    if word.isdigit():\n        return \"\"\n    if word[0].isupper() and word[-1].islower():\n        return \"\"\n    if word[0].islower() and word[-1].isupper():\n        return \"\"\n    closest = \"\"\n    for letter in word:\n        if letter.isupper():\n            closest = closest.lower() + letter\n        if letter.islower():\n            closest = closest + letter\n    return closest", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = 'aeioouAEIOU'\n    consonants = 'aeiouAEIOU'\n\n    # Check if first consonant is a vowel.\n    if word[0] in vowels:\n        vowels.remove(word[0])\n\n    # Check if second consonant is a vowel.\n    if word[-1] in vowels:\n        vowels.remove(word[-1])\n\n    # Check if both first and second consonant are vowels.\n    if word[0] in vowels and word[-1] in vowels:\n        return \"\"\n\n    # Check if first consonant is a consonant.\n    if word[0] in consonants:\n        consonants.remove(word[0])\n\n    # Check if second consonant is a consonant.\n    if word[-1] in consonants:\n        consonants.remove(word[-1])\n\n    # Check if both first and second consonant are consonants.\n    if word[0] in consonants and word[-1] in consonants:\n        return \"\"\n\n    # Check if the word is a single character.\n    if len(word) == 1:\n        return word\n\n    # Check if the word is a multi-character word.\n    if len(word) > 1:\n        return \"\"\n\n    # Check if the word is a word that is made up by the first consonant and\n    # the last vowel of the previous word.\n    if word[-1] ==", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def ch(c):\n        return chr(ord(c) - 33)\n\n    vowel = \"\"\n    for c in word:\n        if c == ch(\"y\") or c == ch(\"u\") or c == ch(\"o\") or c == ch(\"i\") or c == ch(\"e\"):\n            vowel = c\n    if vowel!= \"\":\n        return vowel\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # get consonants from the word\n    consonants = word.split()\n    # find the index of the first consonant\n    index = -1\n    # find the index of the last consonant\n    index = len(word) - 1\n    # while the index is not equal to the index of the first consonant\n    while index!= -1:\n        # if the consonant is a vowel\n        if consonants[index].isalpha():\n            # find the closest vowel\n            index = get_closest_vowel(word[index:])\n        index = index - 1\n    # return the vowel, if there is any.\n    return consonants[index].lower()\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    left_side = []\n    right_side = []\n    vowel = \"\"\n    while word:\n        if word[0].isalpha():\n            left_side.append(word[0])\n        if word[-1].isalpha():\n            right_side.append(word[-1])\n        if word[0] in u\"\u00c3\" and word[-1] in u\"\u00c3\":\n            vowel = word[0] + word[-1]\n        else:\n            vowel = get_closest_vowel(word[1:])\n        if vowel!= \"\":\n            break\n        word = word[1:]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = u\"aeiou\"\n    closed_by_consonant = False\n    char_index = -1\n    while char_index!= -1:\n        char_index = word.index(char) + 1\n        if char_index < 0:\n            char_index = len(word) + char_index\n            if char_index < 0:\n                return u\"\"\n        if char in vowels:\n            if not closed_by_consonant:\n                return char\n        if char in \"\u00e7\u0107\u017e\":\n            if closed_by_consonant:\n                closed_by_consonant = False\n                return char\n            else:\n                return u\"\"\n        if char_index == 0:\n            if char in vowels:\n                closed_by_consonant = True\n        if char_index == len(word) - 1:\n            if char in vowels:\n                closed_by_consonant = True\n    return u\"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # Find the last consonant of the word.\n    last_consonant = ''\n    for c in word:\n        if c.isupper() or c =='' or c == '':\n            last_consonant = c\n    # Find the first vowel in the word.\n    first_vowel = ''\n    for c in word:\n        if c.isupper() or c =='' or c == '':\n            first_vowel = c\n    # Find the closest vowel to the right of the last consonant.\n    # If the last consonant is a vowel, we need to find the closest vowel between the vowel\n    # and the last consonant.\n    if last_consonant == '' or last_consonant =='':\n        return ''\n    else:\n        vowel_distance = int(math.fabs(first_vowel-last_consonant))\n        for c in word:\n            if c.isupper() or c =='' or c == '':\n                continue\n            if c == last_consonant:\n                continue\n            distance = int(math.fabs(first_vowel-last_consonant))\n            if distance < vowel_distance:\n                vowel_distance = distance\n                closest_vowel = c\n                break\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    # Find consonants from right side of word\n    right_words = word.split(\"\")\n    # Find vowels from right side of word\n    right_words = right_words.split(\"\")\n    for right_word in right_words:\n        # Find vowels that stand between the given consonants\n        right_vowels = right_word.split(\"\")\n        # Find the closest vowel between the given consonants\n        for vowel in vowels:\n            if get_closest(right_vowels, vowel) == 0:\n                return vowel\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    vowels = ['e', 'i', 'o', 'u']\n    if word == \"\":\n        return \"\"\n    consonants = \"abcdfghjklmnpqrstvwxzYXUVWZYZ09\"\n    left_closing_consonants = consonants[:-1]\n    right_opening_consonants = consonants[1:]\n    consonant = \" \"\n    for vowel in vowels:\n        for consonant in left_closing_consonants + right_opening_consonants:\n            if vowel in word[word.rfind(consonant) + len(consonant):] and word[word.rfind(consonant) - len(consonant):]!= \"\":\n                break\n        else:\n            consonant = vowel\n    return consonant\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def vowel_length(w):\n        return len(w) - 1\n\n    def consonants(w):\n        return w.split(\"\")[-4:]\n\n    def cs_start(c):\n        return c - 1\n\n    def cs_stop(c):\n        return c + vowel_length(c)\n\n    def cons_intersect(cs, c):\n        return c in cs\n\n    def consonants_intersect(c):\n        return c in consonants(w)\n\n    cs_start = cs_start(consonants(w))\n    cs_stop = cs_stop(consonants(w))\n    cs = cs_start + 1\n    c_intersect = consonants_intersect(cs)\n    cs = c_intersect + 1\n    c = cs_stop - vowel_length(cs)\n    if not c_intersect:\n        return \"\"\n    else:\n        return w[cs_stop:c]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"a\", \"e\", \"i\", \"o\", \"u\"]\n    last_consonant = \"\"\n    index = 0\n    result = \"\"\n    while index < len(word):\n        current_consonant = word[index]\n        if current_consonant in vowels:\n            result = result + current_consonant\n            last_consonant = current_consonant\n            index += 1\n        else:\n            if last_consonant == \"\":\n                index += 1\n            result = result + last_consonant\n            last_consonant = \"\"\n            index += 1\n\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    found_vowel = False\n    for x in word:\n        if x == \" \":\n            break\n        if x[0] =='' and x[-1] =='':\n            break\n        if x[0] == 'a':\n            found_vowel = True\n        if x[-1] == 'a':\n            found_vowel = True\n    if found_vowel is False:\n        return \"\"\n    elif found_vowel is True:\n        return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    found = False\n    for i in range(len(word)):\n        if word[i].isalpha() and word[i-1].isalpha():\n            if word[i] == word[i-1]:\n                return word[i]\n            else:\n                if word[i-1].islower():\n                    found = True\n                else:\n                    return \"\"\n        else:\n            return \"\"\n    \n    if found == False:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.upper()\n    consonants = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels = [\"A\",\"E\",\"I\",\"O\",\"U\"]\n\n    vowels = set(vowels)\n    consonants = set(consonants)\n\n    # find all consonant pair\n    consonant_pairs = []\n    for index,letter in enumerate(word):\n        if letter in consonants:\n            consonant_pairs.append([word[index-1],word[index+1]])\n\n    consonant_pairs = sorted(consonant_pairs, key=lambda x: x[0]) # sort the consonant pair\n    # find the closest vowel\n    closest_vowel = \"\"\n\n    for index,pair in enumerate(consonant_pairs):\n        first_consonant = pair[0]\n        second_consonant = pair[1]\n        distance = 0\n        for vowel in vowels:\n            distance = distance + abs(first_consonant.islower() + second_consonant.islower() + vowel.islower())\n\n        if distance < 0:\n            return \"\"\n\n        if distance == 0:\n            closest_vowel = vowel\n\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = u\"\u00e1\u00e9\u00ed\u00f3\u00fa\"\n    consonants = u\"bcdfghjklmnpqrstvwxz\"\n    \n    left = \"\"\n    right = \"\"\n    \n    for c in word:\n        if c in consonants:\n            left += c\n            continue\n        elif c in vowels:\n            right += c\n            continue\n        else:\n            return left + right\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    vowels.sort()\n    for i in range(len(word)):\n        vowel = word[i:i + 2]\n        if vowel in vowels:\n            return word[i:i].lower()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Code starts here\n    vowels = set(u\"\u00e1\u00e9\u00ed\u00f3\u00fa\")\n    consonants = set(u\"bcdfghjklmnpqrstvwxy\")\n    consonants.remove(u\"l\")\n    consonants.remove(u\"n\")\n    consonants.remove(u\"r\")\n    consonants.remove(u\"w\")\n    consonants.remove(u\"y\")\n    # Code ends here\n    vowel_ratio = len(vowels) / len(word)\n    if vowel_ratio >.5:\n        return \" \"\n    else:\n        return vowel_ratio", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # This function will extract vowels from the word\n    vowels = set(\"aeiou\")\n    consonants = set(\"bcdghjklmnpqrstvwxzABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\n    words = set(word.split(\" \"))\n\n    # Checks if the word is of length 0\n    if len(words) == 0:\n        return \"\"\n\n    # Checks if the word is of length 1\n    if len(words) == 1:\n        if words[0] == \"AB\":\n            return \"\"\n        elif words[0] == \"QC\":\n            return \"\"\n        elif words[0] == \"ST\":\n            return \"\"\n        elif words[0] == \"TT\":\n            return \"\"\n        elif words[0] == \"LL\":\n            return \"\"\n        elif words[0] == \"IL\":\n            return \"\"\n        elif words[0] == \"ER\":\n            return \"\"\n        elif words[0] == \"IN\":\n            return \"\"\n        elif words[0] == \"OK\":\n            return \"\"\n        elif words[0] == \"OB\":\n            return \"\"\n        elif words[0] == \"EX\":\n            return \"\"\n        elif words[0] == \"AB\":\n            return \"\"\n        elif words[0] == \"EX\":\n            return \"\"\n        elif words[0] == \"OA\":\n            return", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'u\u00e0\u00e0\u00e8\u00e9\u00ea\u00ed\u00f2\u00f4\u00f6\u00f9\u00f9\u00e0\u00e8\u00e9\u00ea\u00ed\u00f2\u00f4\u00f6\u00f9\u00f9\u00e0\u00e8\u00e9\u00ea\u00ed\u00f2\u00f4\u00f6\u00f9\u00f9\u00e0\u00e8\u00e9\u00ea\u00ed\u00f2\u00f4\u00f6\u00f9\u00f9\u00e0\u00e8\u00e9\u00ea\u00ed\u00f2\u00f4\u00f6\u00f9\u00f9\u00e0\u00e8\u00e9\u00ea\u00ed\u00f2\u00f4\u00f6\u00f9\u00f9'\n    start = word[0]\n    end = word[-1]\n    return get_closest_vowel(start + vowels[start-1] + end, start, end)\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    cons = word.split(' ')\n    vowel = \"\"\n    last_cons = cons[-2]\n\n    for i in range(len(cons) - 1):\n        if cons[i] == last_cons:\n            vowel = cons[i]\n\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # Array of vowels\n    vowels = [u\"a\", u\"e\", u\"i\", u\"o\", u\"u\", u\"]\n\n    # Array of consonants\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"z\"]\n\n    # Get the number of consonants in the word\n    num_consonants = len(word) - len(word.split(\" \")[-1])\n\n    # Get the index of the last vowel\n    last_vowel_index = num_consonants - 1\n\n    # Create an array which contains the vowels in the word\n    vowels_array = []\n    for i in range(0, last_vowel_index):\n        vowels_array.append(word[i])\n\n    # Create a dictionary of vowels to consonants\n    vowels_to_consonants = {}\n    for vowel in vowels_array:\n        vowels_to_consonants[vowel] = consonants[i % num_consonants]\n\n    # Create a list of vowels which are not in", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    left = word[:]\n    right = word[word.rfind(\" \"):]\n    if left[-1] in vowels and right[-1] in vowels:\n        return left[:-1] + right[-1]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [u\"a\", u\"e\", u\"i\", u\"o\", u\"u\", u\"y\", u\"s\"]\n    left, right = word.split(' ')\n    first_consonant = left[:-1].lower()\n    last_consonant = right[-1].lower()\n    vowel = None\n    for vowel in vowels:\n        if first_consonant.find(vowel)!= -1 or last_consonant.find(vowel)!= -1:\n            vowel = vowel\n            break\n    if vowel is None:\n        return ''\n    else:\n        return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    result = \"\"\n    for i in range(len(word) - 1):\n        if word[i: i + 2].find(\"j\") > -1:\n            result += word[i: i + 2]\n        if word[i: i + 2].find(\"k\") > -1:\n            result += word[i: i + 2]\n        if word[i: i + 2].find(\"l\") > -1:\n            result += word[i: i + 2]\n        if word[i: i + 2].find(\"r\") > -1:\n            result += word[i: i + 2]\n        if word[i: i + 2].find(\"t\") > -1:\n            result += word[i: i + 2]\n        if word[i: i + 2].find(\"v\") > -1:\n            result += word[i: i + 2]\n        if word[i: i + 2].find(\"z\") > -1:\n            result += word[i: i + 2]\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # word = word.lower()\n    word = word.lower().split(\" \")\n    words = list()\n    if len(word) == 0:\n        return \"\"\n    words.append(word[0])\n    for i in range(1, len(word)):\n        if word[i].isalpha():\n            words.append(word[i])\n    if len(words) < 2:\n        return \"\"\n    words.pop(0)\n    words.pop(len(words) - 1)\n    words.reverse()\n    for i in range(0, len(words) - 1):\n        if words[i].isalpha() and words[i+1].isalpha():\n            return words[i+1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = ['a', 'e', 'i', 'o', 'u', 'y', '']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l','m', 'n', 'p', 'q', 'r','s', 't', 'v', 'w', 'x', 'z', '']\n    \n    for consonant in consonants:\n        for vowel in vowels:\n            if consonants.index(consonant) < vowels.index(vowel) and vowel!= '':\n                return vowel\n\n    return ''\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_found = False\n    if len(word) >= 2:\n        for i in range(len(word) - 1, -1, -1):\n            if word[i].isupper() and word[i + 1].isupper():\n                if word[i + 1].islower():\n                    if word[i + 1].lower() == word[i + 2]:\n                        if word[i + 2].islower():\n                            if word[i + 2] == word[i + 3]:\n                                if word[i + 3].islower():\n                                    if word[i + 3] == word[i + 4]:\n                                        if word[i + 4].islower():\n                                            if word[i + 4] == word[i + 5]:\n                                                if word[i + 5].islower():\n                                                    if word[i + 5] == word[i + 6]:\n                                                        if word[i + 6].islower():\n                                                            if word[i + 6] == word[i + 7]:\n                                                                if word[i + 7].islower():\n                                                                    if word[i + 7] == word[i + 8]:\n                                                                        if word[i + 8].islower():\n                                                                            if word[i + 8] == word[i + 9]:\n                                                                                if word[i + 9].islower():", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = (\"a\",\"e\",\"i\",\"o\",\"u\")\n    consonants = (\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"l\",\"m\",\"n\",\"p\",\"r\",\"s\",\"t\",\"v\",\"w\",\"y\")\n    left = ''\n    right = ''\n    i = 0\n    j = 0\n    while left == '' and j < len(word):\n        if not(isVowel(word[j])) and not(isVowel(word[j+1])):\n            left = word[j]\n            j += 1\n        elif word[j] == word[j+1]:\n            right = word[j+1]\n            j += 2\n        else:\n            break\n    if i > 0:\n        return ''\n    return right + left", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    res = \"\"\n    first_consonant = word[0]\n    last_consonant = word[-1]\n    prev_consonant = word[-2]\n    pos = 0\n    while True:\n        if prev_consonant == \"s\" or prev_consonant == \"z\" or prev_consonant == \"h\" or prev_consonant == \"w\" or prev_consonant == \"g\" or prev_consonant == \"j\" or prev_consonant == \"k\" or prev_consonant == \"m\" or prev_consonant == \"n\" or prev_consonant == \"y\" or prev_consonant == \" \":\n            if first_consonant == prev_consonant and last_consonant == prev_consonant and first_consonant!= prev_consonant and last_consonant!= prev_consonant and prev_consonant!= last_consonant:\n                if prev_consonant == \" \":\n                    res = \"\"\n                    break\n                else:\n                    res = prev_consonant\n                    break\n            elif prev_consonant == last_consonant and first_consonant == prev_consonant and last_consonant!= prev_consonant and first_consonant!= prev_consonant and prev_consonant!= last", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    vowel_cases = {\"a\": \"a\", \"e\": \"e\", \"i\": \"i\", \"o\": \"o\", \"u\": \"u\"}\n    for char in word:\n        if char in vowels:\n            # find the first vowel\n            vowel_pos = word.find(vowel_cases[char])\n            if vowel_pos == -1:\n                return \"\"\n            # get the last vowel\n            last_vowel_pos = word.rfind(vowel_cases[char])\n            if last_vowel_pos == -1:\n                return \"\"\n            return vowel_pos - vowel_pos % len(word) + last_vowel_pos\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if len(word) == 1:\n        return ''\n\n    # left side and right side consonants\n    leftside = word[:-1].lower()\n    rightside = word[1:].lower()\n    last_ws = ''\n    while leftside.find(' ')!= -1:\n        last_ws = leftside.split(' ')[-1]\n        leftside = leftside[:-1].split(' ')[0]\n    while rightside.find(' ')!= -1:\n        last_ws = rightside.split(' ')[-1]\n        rightside = rightside[:-1].split(' ')[0]\n\n    # split the word by consonants\n    consonants = leftside.split()\n    vowels = rightside.split()\n\n    # get the distance between consonants and vowels\n    distances = []\n    for consonants in consonants:\n        for vowels in vowels:\n            if vowels.find( consonants )!= -1:\n                distances.append(len( consonants ) - len( vowels ) - 1)\n\n    # find the closest vowel\n    for distance in distances:\n        if distance > 0:\n            vowel = ''\n            i = 0\n            while i < distance:\n                vowel = vowels[i:i+3]\n                if vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    res = []\n    for i in range(0, len(word)):\n        if word[i] in \"aeiouyy\":\n            res.append(word[i])\n    return res[0]"]]