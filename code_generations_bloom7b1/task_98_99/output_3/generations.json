[["def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Init\n    upper = 0\n    for i in range(0, len(s)):\n        # Check if current index is an even number\n        if i % 2 == 0:\n            # Check if current character is an uppercase one\n            if s[i].isupper():\n                upper += 1\n    return upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)/2):\n        if s[i].islower() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a','i','u','o','y','AE','YA','OE','UE']\n    vowels_count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            vowels_count += 2\n    return vowels_count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([(1 if i%2 == 0 and i in ('Ae', 'Ie', 'Oe', 'ue', 'oe') else 0) for i in range(len(s)//2)])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s == '' else sum(1 for _ in s if _.islower() and _.isupper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in string.ascii_uppercase:\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    num_syllables = len(s)\n    if num_syllables > 0:\n        for i in range(num_syllables):\n            if s[i].isupper():\n                num_upper += 1\n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper = map(ord, s)\n    upper_count = 0\n    for i in range(len(s) / 2):\n        if s[i] in upper:\n            upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i] in u'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i].isupper() and i % 2 == 0:\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s) - 1) if ord(s[i]) > ord(s[i + 1]))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper_s = s.upper()\n    return sum(1 for i in range(len(upper_s)) if upper_s[i].isupper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    if s =='':\n        return 0\n    out = []\n    for i in range(len(s)):\n        if s[i].isupper():\n            out.append(i)\n    if len(out) % 2:\n        return len(out) / 2\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    i = 0\n    while True:\n        i += 1\n        if s[i].isupper() and i % 2 == 0:\n            return i\n        else:\n            i += 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i, j = 0, s.size\n    count = 0\n    while i < j:\n        if s[i].isupper():\n            count += 1\n        if count % 2 == 0:\n            yield count\n        i += 1\n    yield 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    c = 0\n    for i in range(0, len(s) - 2):\n        c += len(re.findall('[aeiou]', s[i:i + 2]))\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    upper = 0\n    for i in range(len(s)):\n        if s[i] == u'\\N{VOT}':\n            num += 1\n            upper += 1\n    return num/len(s)*len(s)/2 - upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while i < len(s):\n        if s[i].isupper() and s[i + 1].isupper():\n            count += 1\n        i += 2\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s)):\n        if s[i][0].isupper() and i % 2 == 0:\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    letter_count = 0\n    for char in s:\n        if char.isupper():\n            letter_count += 1\n    return letter_count / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    left_count = 0\n    right_count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            left_count += 1\n        elif s[i].isupper() and s[i-1].isupper():\n            right_count += 1\n    return left_count + right_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    m = 0\n    for i in range(len(s) / 2):\n        if s[i].isupper():\n            m += 1\n    return m / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    res = 0\n    for i in range(len(s)/2):\n        if s[i:i+2][0] == s[i+2:i+4][0] == s[i+4:]:\n            if s[i:i+2][0] == s[i+2:i+2][0] == s[i+2:]:\n                res += 1\n    return res", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_vowels = len(s)\n    return num_vowels // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    l = len(s)\n    d = {}\n    for i in xrange(0,l):\n        if s[i].isupper():\n            d[s[i]] += 2\n    return d.keys()[::2].count(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    for i in range(2, l, 2):\n        if s[i].isupper() and s[i - 1].isupper():\n            return i\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while i < len(s):\n        if ord(s[i]) >= ord('A') and ord(s[i]) <= ord('Z'):\n            i += 1\n        else:\n            break\n    return i\ncount_upper = count_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    sum = 0\n    for i in xrange(0, len(s) - 1):\n        if s[i] == 'a' and s[i + 1] == 'a':\n            sum += 2\n        elif s[i] == 'a' and s[i + 1] == 'e':\n            sum += 1\n        elif s[i] == 'a' and s[i + 1] == 'i':\n            sum += 1\n        elif s[i] == 'a' and s[i + 1] == 'o':\n            sum += 1\n        elif s[i] == 'a' and s[i + 1] == 'u':\n            sum += 1\n    return sum", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    m = {}\n    for i in range(len(s)):\n        if s[i][0].isupper():\n            m[i] += 1\n    return m.values()", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s))/2 - len(set([ord(a) for a in s if a.isupper()]))/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    c = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            c += 1\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s)%2!= 0:\n        return 0\n    return sum(x == 'A' for x in s[0:len(s)/2])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set('AEIOUY')\n    count = 0\n    for c in s:\n        if c in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    if l == 0:\n        return 0\n    if s[0] in '-':\n        return 0\n    if s[l-1] in '-':\n        return 0\n    if l % 2 == 1:\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while True:\n        i += s[i]\n        if i % 2 == 0:\n            break\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(re.findall('([aeiou])([eE][aeiou])', s))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    l = len(s)\n    s = s.upper()\n    num_upper_verts = 0\n    for i in range(l):\n        if s[i] in ('a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U'):\n            num_upper_verts += 1\n    return num_upper_verts // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = [None, None]\n    # If there are no uppercase letters, we don't care about this\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] in string.ascii_uppercase:\n            counts[0] += 1\n    for i in range(len(s) - 1, -1, -1):\n        if s[i] in string.digits:\n            counts[1] += 1\n    return counts[0] * 2 + counts[1]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    if s.isupper():\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def upper(s):\n        return ''.join(filter(lambda x: x.isupper(), s))\n    return sum([count_upper(upper(s)) for s in s.split()])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # # Count the number of uppercase vowels in even indices\n    s = s.lower().replace(' ', '').replace('(', '').replace(')', '')\n    vowels = set('abcdefghijklmnopqrstuvwxyz')\n    vowels2 = set('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n    even_indices = np.arange(0, len(s) / 2 + 1) % 2\n    vowels_plus_even_indices = set(vowels.union(vowels2))\n    even_indices_plus_even_indices = set(even_indices.union(vowels_plus_even_indices))\n    vowels_plus_even_indices = '{} + {}'.format(vowels, even_indices_plus_even_indices)\n    indices = np.arange(0, len(s) / 2 + 1, 2)\n    vowels_plus_even_indices = ', '.join(vowels_plus_even_indices.split(','))\n    indices = ', '.join(indices.split(','))\n    return int", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i in range(len(s) // 2):\n        if s[i] == 'u':\n            num_upper += 1\n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    r = 0\n    i = 0\n    while i < len(s):\n        if s[i].isupper():\n            r += 1\n        i += 1\n    return r", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for letter in s:\n        if letter.isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s)//2) if s[i*2].islower() and s[i*2 + 1].isupper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Returns the number of uppercase letters in even indices in s\n    num_uppers = 0\n    for i in range(len(s)):\n        if s[i][0] == s[i][1]:\n            num_uppers += 1\n    return num_uppers\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)/2):\n        if s[i:i+2][0].upper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    upper = 0\n    even = 0\n    for i in range(l/2):\n        if s[i].isupper():\n            upper += 1\n        if i%2 == 0:\n            even += 1\n    return upper, even", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(s[i:i+2] == s[i:i+2].upper() if i % 2 == 0 else 0 for i in range(0, len(s), 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    c = 0\n    i = 0\n    while i < len(s):\n        if ord(s[i]) >= ord('a') and ord(s[i]) <= ord('z'):\n            c += 1\n        i += 1\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counter = 0\n    for i in range(len(s) // 2):\n        if s[i].isupper():\n            counter += 1\n    return counter", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 2\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) / 2):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_cased_indices = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            num_cased_indices += 1\n    return num_cased_indices / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # construct a set with all the uppercase vowels\n    uppercase_vowels = set(u'aeiouAEIOU')\n    # count the number of upper-case vowels in even indices\n    return sum(count_upper_vowels(s[i:i+2]) for i in range(0, len(s), 2)) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        return 0\n    n = 0\n    for i in range(1, len(s) - 1):\n        if s[i].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            n += count_upper(s[(i//2):i])\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = ''.join(s)\n    nums = s.count('d')\n    num2 = s.count('e')\n    num3 = s.count('f')\n    num4 = s.count('g')\n    num5 = s.count('h')\n    num6 = s.count('i')\n    num7 = s.count('j')\n    num8 = s.count('k')\n    num9 = s.count('l')\n    num10 = s.count('m')\n    num11 = s.count('n')\n    num12 = s.count('o')\n    num13 = s.count('p')\n    num14 = s.count('q')\n    num15 = s.count('r')\n    num16 = s.count('s')\n    num17 = s.count('t')\n    num18 = s.count('u')\n    num19 = s.count('v')\n    num20 = s.count('w')\n    num21 = s.count('x')\n    num22 = s.count('y')\n    num23 = s.count('z')\n    num24 = s.count('a')\n    num25 = s.count('", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set('abcdefghijklmnopqrstuvwxyz')\n    vowel_count = 0\n    for index, letter in enumerate(s):\n        if letter in vowels:\n            vowel_count += 1\n    return vowel_count // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    s = str(s)\n    sum = 0\n    for i in range(len(s) / 2):\n        if s[i * 2].isupper():\n            sum += 1\n    \n    return sum * 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    res = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            res += 1\n    return res", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(0, len(s)):\n        if s[i][0] in string.ascii_uppercase:\n            return i % 2\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if ord(s[i]) > ord('z'):\n            n += 1\n    return n * 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)/2, -1, -1):\n        if s[i].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) - 2):\n        if s[i].isupper() and s[i + 1].isupper():\n            count += 1\n    return count / 2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            result += 1\n    return result / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)//2):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    print(s)\n    mask = s.upper()[::2]\n    result = sum(len(i) for i in mask)\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    high = len(s) - 1\n    low = len(s) / 2\n    count = 0\n    for i in range(low):\n        if s[i].isupper():\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s) // 2) if s[i].isupper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Assume the string is always an even length, and that\n    # the first index is 0, so we can pre-process it.\n    prev = False\n    prev_idx = 0\n    for idx, char in enumerate(s):\n        if char =='' and prev:\n            prev = False\n        elif char =='':\n            prev = True\n        elif char in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':\n            prev_idx = prev_idx + idx\n            prev = False\n        else:\n            prev = True\n        prev = False\n    return prev_idx", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for x in range(1, len(s) + 1) if ord(s[x]) > ord(s[x - 1]))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    m = re.match(\"[aeiouAEIOU]\", s)\n    return int(m.group(0))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    N = len(s)\n    count = 0\n    for i in range(0,N):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if ord(s[i]) >= 97 and ord(s[i]) <= 122 and ord(s[i]) % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n        else:\n            result += 0\n    return result / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    N = len(s)\n    \n    vowels = []\n    for i in xrange(N/2):\n        if s[i:i+2].isupper():\n            vowels.append('v')\n    # The first and last two vowels are always 'i', so we just need to subtract 1\n    # from the number of occurrences\n    vowels = [''.join(v) for v in vowels]\n    vowels.append(''.join(v) for v in vowels[:N/4])\n    return sum(1 for x in vowels if x in ('i', 'e', 'o'))/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.upper()\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(0, len(s)):\n        if ord(s[i]) >= ord('a') and ord(s[i]) <= ord('z'):\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        c = ord(s[i])\n        if c >= ord('a') and c <= ord('z'):\n            count += 1\n        elif c >= ord('A') and c <= ord('Z'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(len(s)):\n        if s[i] in 'ABCDEFG':\n            num += 1\n    return num/2\ncount_upper('abc') # 1\ncount_upper('abcd') # 0\ncount_upper('abcdef') # 0\ncount_upper('abcedfg') # 0\ncount_upper('abdefg') # 0\ncount_upper('abcdefg') # 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(s[i:i+2][0] == u'a' for i in range(0, len(s), 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    N = len(s)\n    A = set([ord(c) for c in s])\n    A.add(ord('a'))\n    A.add(ord('b'))\n    A.add(ord('c'))\n    A.add(ord('d'))\n    A.add(ord('e'))\n    A.add(ord('f'))\n    A.add(ord('g'))\n    A.add(ord('h'))\n    A.add(ord('i'))\n    A.add(ord('j'))\n    A.add(ord('k'))\n    A.add(ord('l'))\n    A.add(ord('m'))\n    A.add(ord('n'))\n    A.add(ord('o'))\n    A.add(ord('p'))\n    A.add(ord('q'))\n    A.add(ord('r'))\n    A.add(ord('s'))\n    A.add(ord('t'))\n    A.add(ord('u'))\n    A.add(ord('v'))\n    A.add(ord('w'))\n    A.add(ord('x'))\n    A.add(ord('y'))\n    A.add(ord('z'))\n    A", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            num_upper += 1\n    return num_upper // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = []\n    for c in s:\n        if ord(c) >= 97 and ord(c) <= 122:\n            vowels.append(c)\n    if len(vowels) % 2:\n        return 0\n    else:\n        return 1\n\ncount_upper = count_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Count the number of vowels in the string\n    num_vowels = 0\n    for i in range(len(s) - 1):\n        if s[i] in string.letters.upper():\n            num_vowels += 1\n    # Return the result as a list of integers\n    return [num_vowels]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Convert the input string to lowercase.\n    s = s.lower()\n    # First count the number of lowercase vowels.\n    num_lowercase_vowels = 0\n    for i in range(len(s)):\n        if s[i].isalpha() and s[i]!= 'i':\n            num_lowercase_vowels += 1\n    # Count the number of upper case vowels in the string.\n    num_uppercase_vowels = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            num_uppercase_vowels += 1\n    # Return the number of uppercase vowels.\n    return num_uppercase_vowels // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_vowels = 0\n    for i in range(len(s)):\n        if s[i] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n            num_vowels += 1\n        elif i % 2 == 0:\n            num_vowels += 1\n    return num_vowels\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(0, len(s), 2):\n        if s[i:i + 2] in 'AEIOUY':\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = ''.join(s.upper())\n    return s.count('a') - s.count('b') - s.count('c') - s.count('d') - s.count('e') - s.count('f') - s.count('g')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        if s[i].islower():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while i < len(s):\n        if s[i].isupper():\n            count = count_upper(s[:i]) + count_upper(s[i + 1:])\n            if count == 1:\n                return 1\n            else:\n                return 0\n        i += 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    i = 0\n    for n in s:\n        if ord(n) >= ord('a') and ord(n) <= ord('z'):\n            result += 1\n        i += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    k = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            k += 2\n    return k", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # TODO: make this faster!\n    s = re.sub(r'\\W', '', s)\n    \n    # transform s into a list of tuples.\n    l = [(s[i:i + 2], i) for i in range(0, len(s), 2)]\n    # count up the number of upper case vowels in the odd indices.\n    n = 0\n    for i in range(len(l) - 1):\n        if l[i][0].isupper() and l[i + 1][0].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowel_count = 0\n    upper_symbols = []\n    for c in s:\n        if c.isupper():\n            upper_symbols.append(c)\n    for upper_symbol in upper_symbols:\n        vowel_count += 1\n    return vowel_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    # turn lowercase into uppercase\n    for i in range(len(s)):\n        if s[i].isupper():\n            s[i] = s[i].upper()\n        else:\n            s[i] = s[i].lower()\n    # make count an even number\n    count = 0\n    for i in range(len(s)):\n        if s[i] == s:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set('AEIOU')\n    start = 0\n    end = len(s) - 1\n    middle = 0\n    count = 0\n    while start <= end:\n        middle = start + (end - start) / 2\n        if middle == start or middle == end:\n            if s[middle] in vowels:\n                count += 1\n        else:\n            if s[middle] in vowels:\n                count += 2\n            else:\n                break\n        start = middle + 1\n        end = middle - 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s) / 2):\n        n += s[i * 2 + 1].isupper()\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(x == 'A' or x == 'E' or x == 'I' or x == 'O' or x == 'U' for x in s[::2]) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    for j in range(len(s)-1):\n        if s[j].isupper():\n            i += 1\n    return i / 2.0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    import re\n    return sum(1 for i in range(len(s) // 2) if re.match('[a-z]', s[i]))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    last = -1\n    result = 0\n    for i in range(0, len(s) - 2):\n        if s[i].isupper():\n            result += 1\n            if i == last:\n                result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([s[i * 2:i * 2 + 2] for i in xrange(0, len(s) * 2, 2)]) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for index in range(len(s)):\n        if s[index].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s) - 1):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def _count(s, i):\n        return i%2==0 and s[i].isupper() or 0\n    return map(_count, s.split(''))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set('AVYCE')\n    i = 0\n    while i < len(s):\n        if s[i] in vowels:\n            count = i // 2 + 1\n            if count % 2 == 0:\n                count = count - 1\n            i += 1\n            return count\n        i += 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            result += i\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    vowels = ''.join(['a','e','i','o','u','A','E','I','O','U'])\n    \n    if len(vowels) == 1:\n        return 0\n    elif len(vowels) == 2:\n        return 0\n    else:\n        for i in range(0, len(s), 2):\n            for j in range(i, len(s)):\n                if s[i] == vowels[j]:\n                    return 1\n        \n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 1\n    count = 0\n    while True:\n        i += 1\n        if s[i] in 'ABCDEFG':\n            count += 1\n        elif s[i] in 'abcdefg':\n            count += 2\n        elif s[i] in 'dBBE':\n            count += 1\n        elif s[i] in 'aBCdEf':\n            count += 1\n        else:\n            break\n    return count\n\ncount_upper('abc')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s)):\n        if ord(s[i]) >= ord('A') and ord(s[i]) <= ord('Z'):\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = {}\n    counts['a'] = 0\n    counts['a'] += count_upper(s[i:i+2],counts['a'])\n    counts['e'] = 0\n    counts['e'] += count_upper(s[i-2:],counts['e'])\n    counts['i'] = 0\n    counts['i'] += count_upper(s[1:],counts['i'])\n    counts['o'] = 0\n    counts['o'] += count_upper(s[2:],counts['o'])\n    counts['u'] = 0\n    counts['u'] += count_upper(s[-3:-1],counts['u'])\n    counts['y'] = 0\n    counts['y'] += count_upper(s[-2:-1],counts['y'])\n    return sum(counts.values())/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set(\"aeiouy\")\n    result = 0\n    for i in range(len(s)):\n        if s[i] in vowels:\n            result += 1\n        else:\n            result += 0\n    return result/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while True:\n        if s[i] == s[i + 2]:\n            i += 1\n        else:\n            break\n    while s[i] == s[i - 2]:\n        i -= 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # compute all vowels in s\n    vowels = {\n        'a','e','i','o','u'\n    }\n    # start at 0\n    index = 0\n    # find the next vowel\n    while index < len(s):\n        if s[index] in vowels:\n            index += 1\n        else:\n            break\n    # return the number of upper vowels\n    return index / 2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_vowels = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            num_vowels += 1\n    return num_vowels\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Vowels\n    vowels = ['a', 'e', 'i', 'o', 'u', 'y', 'A', 'E', 'I', 'O', 'U', 'Y']\n    # Count the number of vowels in even indices\n    # This means that we need to count all the vowels in even indices and\n    # then divide the number of even indices by two\n    num_vowels = len(vowels)\n    num_indices = len(s)\n    num_upper = num_indices // 2\n    num_below = num_indices - num_upper\n    num_total = num_upper + num_below\n    return num_total", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for _ in s if ord(_) >= ord('a') and ord(_) <= ord('z'))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(0,len(s)/2):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i] in ('A', 'E', 'I', 'O', 'U'):\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper_vowels = 0\n    for char in s:\n        if ord(char) > ord('a'):\n            num_upper_vowels += 1\n    return num_upper_vowels", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            num_upper += 1\n    return num_upper // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = list('ABCEFGJ')\n    result = 0\n    for v in vowels:\n        result += count_upper(v)\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    sum = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            sum += 1\n    return sum / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    if not s:\n        return 0\n    \n    n = 0\n    for i in range(len(s)):\n        if s[i] == s[i][0]:\n            n += 1\n    return n/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    return len([i for i in s.upper() if i in ('AEIOUY')]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i + 1].isupper():\n            n += 2\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'a': 1, 'e': 1, 'i': 1, 'o': 1, 'U': 1, 'y': 1, 'u': 1, 'u': 1}\n    vowels_indices = [(i + 1) % len(s) for i in range(0, len(s), 2)]\n    vowels_sum = sum(vowels_indices) / 2\n    return vowels_sum", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    vowels = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    for i in range(len(s)//2):\n        if s[i] in vowels:\n            count += 1\n    return count/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i] in 'abcdefg':\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    words = s.split()\n    count = 0\n    for word in words:\n        if word[0].isupper():\n            count += 1\n    return count/2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        c = ord(s[i])\n        if c >= 97 and c <= 122 or c == 12:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    res = 0\n    for i in xrange(len(s) - 1):\n        if s[i].isupper():\n            res += 1\n    return res", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = []\n    for i in range(len(s)):\n        if s[i].isupper():\n            counts.append(count_upper(s[:i] + s[i:]))\n    return sum(counts) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouy'\n    total = 0\n    for i in range(len(s)):\n        if s[i] in vowels:\n            count = count_upper(s[i] + s[i + 1]) + 1\n            total += count\n    return total / 2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        s = s.upper()\n        res = 0\n        for i in range(0, len(s), 2):\n            if s[i].isupper() and s[i+1].isupper():\n                res += 1\n        return res\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # calculate how many uppercase vowels there are\n    res = 0\n    for i in range(len(s)):\n        if s[i] == 'A' or s[i] == 'E' or s[i] == 'I' or s[i] == 'O' or s[i] == 'U':\n            res += 1\n    return res", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Make a list of all uppercase vowels\n    vowels = [a for a in s if a.isupper()]\n    \n    # Count the number of vowels in even indices\n    return sum(vowels[2:2*i] for i in range(0, len(vowels), 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = (0,)\n    for i in range(0, len(s)):\n        if s[i][0].isupper():\n            counts.append(counts[i - 1] + 1)\n    return counts[0]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i in range(len(s) / 2):\n        if s[i].isupper():\n            num_upper += 1\n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Note that this is not a perfect count - it counts A as one upper\n    # while B counts as 2\n    return sum(1 if ord(s[i-1]) in ord('Ae') and ord(s[i-2]) in ord('Ae') else 0 for i in range(len(s)))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    m = ord('a')\n    n = ord('z')\n    # find the first vowel\n    i = 0\n    while i < len(s):\n        c = ord(s[i])\n        if c > m and c <= n:\n            i += 1\n        else:\n            return i\n    # the last letter is not an upper case letter\n    return len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)/2):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for _ in s if ord(_) & 1 == 1)\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i] == 'U':\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i] in ('a', 'A'):\n            n += 1\n    return n / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    if len(s)%2!= 1:\n        return 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(0, len(s)):\n        if s[i] in vowels:\n            result += count_upper(s[i + 1:i] + s[i])\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    return sum(1 for _ in s if ord(_) >= ord('a') and ord(_) <= ord('z'))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)/2):\n        if s[i:i+2][0] == s[i:i+2][0].upper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    upper = 0\n    if len(s) % 2 == 0:\n        for i in range(0, len(s), 2):\n            if s[i].isupper():\n                upper += 1\n    return upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    sum = 0\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            sum += 1\n        if sum % 2 == 1:\n            break\n    return sum", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for char in s:\n        if char.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(i for i in s if i.isupper())) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return s.count(u\"\\u2432\") / len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    c = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            c += 1\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if char == 'D' else 0 for char in s) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set('abcdefghijklmnopqrstuvwxyz')\n    vowels = set('ABCDEFGHIJKLMNOPQRSTUVWXYZ') - vowels\n    count = 0\n    for i in range(0, len(s)):\n        if s[i] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def count_pos(s, i):\n        if i%2 == 0:\n            return 1\n        else:\n            return 0\n    return sum(count_pos(s,i) for i in range(len(s)))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n        i += 1\n    if count % 2 == 0:\n        return count\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    u = s.count('a')\n    v = s.count('b')\n    u += v\n    u += s.count('c')\n    u += s.count('d')\n    u += s.count('e')\n    u += s.count('f')\n    u += s.count('g')\n    return u", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiou'\n    for i in range(len(s)):\n        if s[i] in vowels:\n            if i % 2 == 0:\n                return i\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (s[i:i+2]=='ABC')*(s[i:i+2]=='DEF')*(s[i:i+2]=='G') + \\\n           (s[i:i+2]=='BB')*(s[i:i+2]=='CD') + (s[i:i+2]=='DE')*(s[i:i+2]=='EF')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def upper_letter(letter):\n        if letter == 'a':\n            return 'A'\n        elif letter == 'b':\n            return 'B'\n        elif letter == 'c':\n            return 'C'\n        elif letter == 'd':\n            return 'D'\n        elif letter == 'e':\n            return 'E'\n        elif letter == 'f':\n            return 'F'\n        elif letter == 'g':\n            return 'G'\n        elif letter == 'h':\n            return 'H'\n        elif letter == 'i':\n            return 'I'\n        elif letter == 'j':\n            return 'J'\n        elif letter == 'k':\n            return 'K'\n        elif letter == 'l':\n            return 'L'\n        elif letter =='m':\n            return 'M'\n        elif letter == 'n':\n            return 'N'\n        elif letter == 'o':\n            return 'O'\n        elif letter == 'p':\n            return 'P'\n        elif letter == 'q':\n            return 'Q'\n        elif letter == 'r':\n            return 'R'\n        elif letter =='s':\n            return 'S'\n        elif letter == 't':\n            return 'T'\n        elif letter == 'u':\n            return 'U'\n        elif letter == 'v':\n            return 'V'\n        elif letter == 'w':\n            return 'W'\n        elif letter == 'x':\n            return 'X'\n        elif letter == 'y", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    return (l / 2) * count_upper(s[l / 2:l + 1])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # i = 0, j = len(s), k = 0\n    count = 0\n    for i in range(0, len(s)):\n        if s[i] in 'aeiou':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set('abcdefghijklmnopqrstuvwxyz')\n    vowels2 = set('ABCDEFGHIJKLMNOPQRSTUVWXYZ')\n    vowels3 = set('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n    vowels4 = set('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ')\n\n    if len(s)%2 == 0:\n        return count_vowels(s,vowels,1)\n    else:\n        return count_vowels(s,vowels,2) - count_vowels(s,vowels2,1) - count_vowels(s,vowels3,1) - count_vowels(s,vowels4,1)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        c = s[i]\n        if c.isupper():\n            count += 1\n    return count/2\n\ncount_upper = staticmethod(count_upper)\n\"\"\"\nreturn a function that can be used to count the number of uppercase vowels in a given string\n\"\"\"", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.upper()\n    n = 0\n    for i in range(0, len(s) - 1):\n        if s[i].isupper() and s[i + 1].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    a = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            a += 1\n    return a / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n    return result\ncount_upper.__doc__ = \"\"\"\nCount the number of uppercase vowels in even indices\n\"\"\"", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            n += 1\n        i += 1\n    return n / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_vowels = 0\n    for i in range(len(s) / 2):\n        if s[i] in 'ABCDEFG':\n            num_vowels += 1\n    return num_vowels", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    return sum(vowel.isupper() for vowel in s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = s.lower()\n    count = 0\n    prev = None\n    for char in s:\n        if char in string.ascii_uppercase:\n            if prev is None:\n                count += 1\n            else:\n                count += 1 if char == prev else 0\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    v = 0\n    for i in range(len(s)):\n        if s[i].islower():\n            v += 1\n        elif s[i].isupper():\n            v += 1\n    return v", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    start = 0\n    counts = {}\n    \n    while start < len(s):\n        if s[start].isupper():\n            counts[start] += 1\n            start += 1\n        else:\n            break\n    \n    return counts", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for index in range(len(s)):\n        if s[index].islower():\n            num += 1\n        elif s[index].isupper():\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for index in range(len(s)//2):\n        if s[index].islower():\n            continue\n        else:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # O(n^2)\n    # In a worst case scenario, this needs to be done with a dynamic programming\n    # approach.\n    #\n    # This is not a very elegant solution, but it's simple enough for our purposes.\n    # We first calculate the number of upper case vowels at each index,\n    #   v(i) = len([i for i in range(len(s) - 1 if s[i+1].isupper() else 0)])\n    #   v(i) = sum([j for j in range(len(s) - 1 if s[i+1].isupper() else 0)] for i in range(len(s) - 1))\n    # We then sum these values over the entire string,\n    #   v(i) = sum([j for j in range(len(s) - 1 if s[i+1].isupper() else 0)])\n    # Then, we need to count the number of upper case letters in each position,\n    #   x(i) = len([i for i in range(len(s) - 1) if s[i+1].isupper()])\n    #   x(i) = sum([j for j in range(len(s) - 1 if", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s)) if s[i].islower() and s[i].isupper())\n\ncount = lambda s: count_upper(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Define the start and end indexes of the characters that should be\n    # counted.\n    start_index = 0\n    end_index = len(s) - 1\n    # Find the indices of the characters that should be counted.\n    upper_index = set()\n    while start_index < end_index:\n        if s[start_index].upper() > s[start_index + 1]:\n            upper_index.add(start_index)\n            start_index += 1\n        else:\n            start_index += 1\n    # Return the number of upper case vowels in the given string.\n    return len(upper_index)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            result += 1\n        else:\n            break\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set(\"aeiouy\")\n    s = s.upper()\n    result = 0\n    for i in range(0, len(s)):\n        if s[i] in vowels:\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [u'A', u'B', u'C', u'D', u'E', u'F', u'G', u'H', u'I', u'J', u'K', u'L', u'M', u'N', u'O', u'P', u'Q', u'R', u'S', u'T', u'U', u'V', u'W', u'X', u'Y', u'Z']\n    count = 0\n    for i in range(len(s) / 2):\n        for c in s:\n            if c.isupper():\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    first = s[0]\n    if first.isupper():\n        count = 0\n    else:\n        count = 1\n    for i in range(1, len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)/2):\n        if ord(s[i]) % 2 == 1:\n            result += 1\n    return result"]]