[["def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if n < p:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == 0:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if n == 0:\n        return 1\n    if p % n == 0:\n        return 1\n    if p % n == 1:\n        return 0\n    if p % n == 2:\n        return 1\n    if p % n == 3:\n        return 0\n    if p % n == 4:\n        return 1\n    if p % n == 5:\n        return 0\n    if p % n == 6:\n        return 1\n    if p % n == 7:\n        return 0\n    if p % n == 8:\n        return 1\n    if p % n == 9:\n        return 0\n    if p % n == 10:\n        return 1\n    if p % n == 11:\n        return 0\n    if p % n == 12:\n        return 1\n    if p % n == 13:\n        return 0\n    if p % n == 14:\n        return 1\n    if p % n == 15:\n        return 0\n    if p % n == 16:\n        return 1\n    if p % n == 17:\n        return 0\n    if p % n == 18:\n        return 1\n    if p % n == 19:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if n < p:\n        return 0\n    if p < n:\n        return 1\n    return 2 ** (n - p) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if n < p:\n        return 0\n    if n % p == 0:\n        return 1\n    return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p % n == 0:\n        return n\n    return modp(n, p // n)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be >= 2\")\n    if p == 2:\n        return n\n    if p == 3:\n        return n % 2\n    if p == 5:\n        return n % 5\n    if p == 7:\n        return n % 7\n    if p == 11:\n        return n % 11\n    if p == 13:\n        return n % 13\n    if p == 15:\n        return n % 15\n    if p == 31:\n        return n % 31\n    if p == 63:\n        return n % 63\n    if p == 127:\n        return n % 127\n    if p == 255:\n        return n % 255\n    if p == 521:\n        return n % 521\n    if p == 1023:\n        return n % 1023\n    if p == 2047:\n        return n % 2047\n    if p == 3071:\n        return n % 3071\n    if p == 4095:\n        return n % 4095\n    if p == 6145:\n        return n % 6145\n    if p == 8095:\n        return n % 8095\n    if p == 12289:\n        return n % 12289\n    if p == 24287:\n        return n % 24287\n    if p == 48287:\n        return n % 48287\n    if p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be >= 2\")\n    if n < 0:\n        raise ValueError(\"n must be >= 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 1\n    if n == 5:\n        return 1\n    if n == 6:\n        return 1\n    if n == 7:\n        return 1\n    if n == 8:\n        return 1\n    if n == 9:\n        return 1\n    if n == 10:\n        return 1\n    if n == 11:\n        return 1\n    if n == 12:\n        return 1\n    if n == 13:\n        return 1\n    if n == 14:\n        return 1\n    if n == 15:\n        return 1\n    if n == 16:\n        return 1\n    if n == 17:\n        return 1\n    if n == 18:\n        return 1\n    if n == 19:\n        return 1\n    if n == 20:\n        return 1\n    if n == 21:\n        return 1\n    if n == 22:\n        return 1\n    if n == 23:\n        return 1\n    if n == 24:\n        return 1\n    if n == 25:\n        return 1\n    if n == 26:\n        return 1\n    if n == 27:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p < 0:\n        raise ValueError(\"p must be positive\")\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    return 2 * n % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        raise ValueError(\"modp(): zero argument\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p ==", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return 24\n    if p == 25:\n        return 25\n    if p == 26:\n        return 26\n    if p ==", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        n = -n\n    if p == 0:\n        return 1\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        n += p\n    if n == 0:\n        return 1\n    if n == p:\n        return 0\n    if p % n == 0:\n        return n\n    return n % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        raise ValueError(\"modp(): p == 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return p\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return p % n\n    if p % n == 0:\n        return", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(%d, %d): n must be >= 0\" % (n, p))\n    if p < 0:\n        raise ValueError(\"modp(%d, %d): p must be >= 0\" % (n, p))\n    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1 if n % 2 == 0 else 0\n    if p == 3:\n        return 1 if n % 3 == 0 else 0\n    if p == 4:\n        return 1 if n % 4 == 0 else 0\n    if p == 5:\n        return 1 if n % 5 == 0 else 0\n    if p == 6:\n        return 1 if n % 6 == 0 else 0\n    if p == 7:\n        return 1 if n % 7 == 0 else 0\n    if p == 8:\n        return 1 if n % 8 == 0 else 0\n    if p == 9:\n        return 1 if n % 9 == 0 else 0\n    if p == 10:\n        return 1 if n % 10 == 0 else 0\n    if p == 11:\n        return 1 if n % 11 == 0 else 0\n    if p == 12:\n        return 1 if n % 12 == 0 else 0\n    if p == 13:\n        return 1 if n % 13 == 0 else 0\n    if p == 14:\n        return 1 if n % 14 == 0 else 0\n    if p == 15:\n        return 1 if n % 15 == 0 else 0\n    if p == 16:\n        return 1 if n % 16 == 0 else 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if n < 0:\n        n = -n\n    if p % n == 0:\n        return 0\n    return 2 * n % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        return 1\n    if n == 1:\n        return 1\n    if p == 1:\n        return 1\n    if n < p:\n        return modp(n, p - 1)\n    if n > p:\n        return modp(n - p, p)\n    return modp(n, p)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n % p == 0:\n        return n // p\n    else:\n        return modp(n // p, p)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(%d, %d): negative argument\" % (n, p))\n    if p < 0:\n        raise ValueError(\"modp(%d, %d): negative modulus\" % (n, p))\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if n == p:\n        return 1\n    if p % n == 0:\n        return 1\n    if p % n == -1:\n        return -1\n    if p % n == -2:\n        return -2\n    if p % n == -3:\n        return -3\n    if p % n == -4:\n        return -4\n    if p % n == -5:\n        return -5\n    if p % n == -6:\n        return -6\n    if p % n == -7:\n        return -7\n    if p % n == -8:\n        return -8\n    if p % n == -9:\n        return -9\n    if p % n == -10:\n        return -10\n    if p % n == -11:\n        return -11\n    if p % n == -12:\n        return -12\n    if p % n == -13:\n        return -13\n    if p % n == -14:\n        return -14\n    if p % n == -15:\n        return -15\n    if p %", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 4\n    if p == 4:\n        return 8\n    if p == 5:\n        return 16\n    if p == 6:\n        return 32\n    if p == 7:\n        return 64\n    if p == 8:\n        return 128\n    if p == 9:\n        return 256\n    if p == 10:\n        return 512\n    if p == 11:\n        return 1024\n    if p == 12:\n        return 2048\n    if p == 13:\n        return 4096\n    if p == 14:\n        return 8192\n    if p == 15:\n        return 16384\n    if p == 16:\n        return 32768\n    if p == 17:\n        return 65536\n    if p == 18:\n        return 131072\n    if p == 19:\n        return 262144\n    if p == 20:\n        return 524288\n    if p == 21:\n        return 1048576\n    if p == 22:\n        return 2097152\n    if p == 23:\n        return 4194304\n    if p == 24:\n        return 8388608\n    if p == 25:\n        return 16777216\n    if p == 26:\n        return 33554432\n    if p == 27:\n        return 67108864\n    if p == 28:\n        return 1342", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(%d, %d): n must be >= 0\" % (n, p))\n    if p == 0:\n        raise ValueError(\"modp(%d, %d): p must be > 0\" % (n, p))\n    if n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        raise ValueError(\"modp(): zero argument\")\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if n < p:\n        return 0\n    if n % p == 0:\n        return 1\n    if n % p == -1:\n        return 0\n    if n % p == -2:\n        return 0\n    if n % p == -3:\n        return 0\n    if n % p == -4:\n        return 0\n    if n % p == -5:\n        return 0\n    if n % p == -6:\n        return 0\n    if n % p == -7:\n        return 0\n    if n % p == -8:\n        return 0\n    if n % p == -9:\n        return 0\n    if n % p == -10:\n        return 0\n    if n % p == -11:\n        return 0\n    if n % p == -12:\n        return 0\n    if n % p == -13:\n        return 0\n    if n % p == -14:\n        return 0\n    if n % p == -15:\n        return 0\n    if n % p == -16:\n        return 0\n    if n % p == -17:\n        return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p % n == 0:\n        return n\n    if n % p == 0:\n        return p - n\n    return p - (p - n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be >= 2\")\n    if n < 0:\n        raise ValueError(\"n must be >= 0\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative modulus\")\n    if p == 0:\n        raise ValueError(\"modp(): modulus must be positive\")\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"negative argument\")\n    if p < 0:\n        raise ValueError(\"negative argument\")\n    if p == 0:\n        return 1\n    if p == 1:\n        return 1\n    if n == 0:\n        return 1\n    if p % n == 0:\n        return 1\n    if p % n == 1:\n        return 0\n    if p % n == 2:\n        return 1\n    if p % n == 3:\n        return 0\n    if p % n == 4:\n        return 1\n    if p % n == 5:\n        return 0\n    if p % n == 6:\n        return 1\n    if p % n == 7:\n        return 0\n    if p % n == 8:\n        return 1\n    if p % n == 9:\n        return 0\n    if p % n == 10:\n        return 1\n    if p % n == 11:\n        return 0\n    if p % n == 12:\n        return 1\n    if p % n == 13:\n        return 0\n    if p % n == 14:\n        return 1\n    if p % n == 15:\n        return 0\n    if p % n == 16:\n        return 1\n    if p % n == 17:\n        return 0\n    if p % n == 18:\n        return 1\n    if p % n == 19:\n        return 0\n    if p % n ==", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return 24\n    if p == 25:\n        return 25\n    if p == 26:\n        return 26\n    if p == 27:\n        return 27\n    if p == 28:\n        return 28\n    if p == 29:\n        return 29\n    if p == 30:\n        return 30\n    if p == 31:\n        return 31", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if p == 0:\n        return 0\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return 24\n    if p == 25:\n        return 25\n    if p == 26:\n        return 26\n    if p == 27:\n        return 27\n    if", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < p:\n        return 1\n    if p < n:\n        return 0\n    return mod(n, p) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p < 0:\n        raise ValueError(\"p must be positive\")\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 2\n    if p % n == 0:\n        return 3\n    if p % n == 0:\n        return 4\n    if p % n == 0:\n        return 5\n    if p % n == 0:\n        return 6\n    if p % n == 0:\n        return 7\n    if p % n == 0:\n        return 8\n    if p % n == 0:\n        return 9\n    if p % n == 0:\n        return 10\n    if p % n == 0:\n        return 11\n    if p % n == 0:\n        return 12\n    if p % n == 0:\n        return 13\n    if p % n == 0:\n        return 14\n    if p % n == 0:\n        return 15\n    if p % n == 0:\n        return 16\n    if p % n == 0:\n        return 17\n    if p % n == 0:\n        return 18\n    if p % n == 0:\n        return 19\n    if p % n == 0:\n        return 20\n    if", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        n = n + p\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p % n == 0:\n        return n\n    return modp(n, p // n)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (n * (p - 1)) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p % n == 0:\n        return n\n    return modp(n, p // n)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        n = - n\n    if p < 0:\n        p = - p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return n\n    if n < 0:\n        return modp(n + p - 1, p)\n    if n > p:\n        return modp(n - p + 1, p)\n    if n % p == 0:\n        return n\n    return modp(n % p, p - 1)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be > 1\")\n    if n < 0:\n        raise ValueError(\"n must be > 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return 24\n    if p == 25:\n        return 25\n    if p == 26:\n        return 26\n    if p == 27:\n        return 27", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1 if n % 2 == 0 else 0\n    if p == 3:\n        return 1 if n % 3 == 0 else 0\n    if p == 4:\n        return 1 if n % 4 == 0 else 0\n    if p == 5:\n        return 1 if n % 5 == 0 else 0\n    if p == 6:\n        return 1 if n % 6 == 0 else 0\n    if p == 7:\n        return 1 if n % 7 == 0 else 0\n    if p == 8:\n        return 1 if n % 8 == 0 else 0\n    if p == 9:\n        return 1 if n % 9 == 0 else 0\n    if p == 10:\n        return 1 if n % 10 == 0 else 0\n    if p == 11:\n        return 1 if n % 11 == 0 else 0\n    if p == 12:\n        return 1 if n % 12 == 0 else 0\n    if p == 13:\n        return 1 if n % 13 == 0 else 0\n    if p == 14:\n        return 1 if n % 14 == 0 else 0\n    if p == 15:\n        return 1 if n % 15 == 0 else 0\n    if p == 16:\n        return 1 if n % 16 == 0 else 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    return 2 * n % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return 24\n    if p == 25:\n        return 25\n    if p == 26:\n        return 26\n    if p == 27:\n        return 27\n    if p == 28:\n        return 28\n    if p == 29:\n        return 29\n    if p == 30:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0\n    if p % n == 0:\n        return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be greater than 2\")\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 1\n    if n == 5:\n        return 1\n    if n == 6:\n        return 1\n    if n == 7:\n        return 1\n    if n == 8:\n        return 1\n    if n == 9:\n        return 1\n    if n == 10:\n        return 1\n    if n == 11:\n        return 1\n    if n == 12:\n        return 1\n    if n == 13:\n        return 1\n    if n == 14:\n        return 1\n    if n == 15:\n        return 1\n    if n == 16:\n        return 1\n    if n == 17:\n        return 1\n    if n == 18:\n        return 1\n    if n == 19:\n        return 1\n    if n == 20:\n        return 1\n    if n == 21:\n        return 1\n    if n == 22:\n        return 1\n    if n == 23:\n        return 1\n    if n == 24:\n        return 1\n    if n == 25:\n        return 1\n    if n == 26:\n        return 1\n    if n == 27:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be > 2\")\n    if n < 0:\n        raise ValueError(\"n must be > 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if n % p == 0:\n        return n // p\n    return n % p + modp(n // p, p)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if n < p:\n        return 0\n    if n % p == 0:\n        return 1\n    return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 0\n    if p == 0:\n        return 1\n    if n < p:\n        return 0\n    if p < n:\n        return 1\n    return 2 * n % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(%d, %d): n must be >= 0\" % (n, p))\n    if p < 0:\n        raise ValueError(\"modp(%d, %d): p must be >= 0\" % (n, p))\n    if p == 0:\n        return 1\n    if n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n == 1:\n        return 0\n    if p % n == 0:\n        return 1\n    return 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1 if n % 2 == 0 else 0\n    if p == 3:\n        return 1 if n % 3 == 0 else 0\n    if p == 4:\n        return 1 if n % 4 == 0 else 0\n    if p == 5:\n        return 1 if n % 5 == 0 else 0\n    if p == 6:\n        return 1 if n % 6 == 0 else 0\n    if p == 7:\n        return 1 if n % 7 == 0 else 0\n    if p == 8:\n        return 1 if n % 8 == 0 else 0\n    if p == 9:\n        return 1 if n % 9 == 0 else 0\n    if p == 10:\n        return 1 if n % 10 == 0 else 0\n    if p == 11:\n        return 1 if n % 11 == 0 else 0\n    if p == 12:\n        return 1 if n % 12 == 0 else 0\n    if p == 13:\n        return 1 if n % 13 == 0 else 0\n    if p == 14:\n        return 1 if n % 14 == 0 else 0\n    if p == 15:\n        return 1 if n % 15 == 0 else 0\n    if p == 16:\n        return 1 if n % 16 == 0 else 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n == 1:\n        return p\n    if p % n == 0:\n        return p - n * modp(n - 1, p)\n    return p - n * modp(n - 1, p) + modp(n - 1, p % n)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p < n:\n        return modp(n, p - 1)\n    else:\n        return modp(n, p - 1) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        raise ValueError(\"modp(): p == 0\")\n    if n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if p == 2:\n        return 2\n    if p == 3:\n        return 3\n    if p == 4:\n        return 4\n    if p == 5:\n        return 5\n    if p == 6:\n        return 6\n    if p == 7:\n        return 7\n    if p == 8:\n        return 8\n    if p == 9:\n        return 9\n    if p == 10:\n        return 10\n    if p == 11:\n        return 11\n    if p == 12:\n        return 12\n    if p == 13:\n        return 13\n    if p == 14:\n        return 14\n    if p == 15:\n        return 15\n    if p == 16:\n        return 16\n    if p == 17:\n        return 17\n    if p == 18:\n        return 18\n    if p == 19:\n        return 19\n    if p == 20:\n        return 20\n    if p == 21:\n        return 21\n    if p == 22:\n        return 22\n    if p == 23:\n        return 23\n    if p == 24:\n        return 24\n    if p ==", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 0:\n        raise ValueError(\"p must be positive\")\n    if p == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < p:\n        return modp(n, p - 1)\n    else:\n        return modp(n - p, p)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        raise ValueError(\"modp(): zero argument\")\n    if n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n < p:\n        return modp(n, p - 1)\n    return modp(n, p - 1) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be > 2\")\n    if n < 0:\n        raise ValueError(\"n must be > 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        return 1\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p ==", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(%d, %d): n must be >= 0\" % (n, p))\n    if p < 0:\n        raise ValueError(\"modp(%d, %d): p must be >= 0\" % (n, p))\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if n < p:\n        return modp(n, p - 1)\n    return modp(n, p - 1) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 2:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 3:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 4:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 5:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 6:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 7:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 8:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:\n        return 1\n    if p == 9:\n        return 1\n    if n < 0:\n        n = -n\n    if n == 0:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p < 2:\n        raise ValueError(\"p must be > 2\")\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 5:\n        return n % 5\n    if p == 7:\n        return n % 7\n    if p == 11:\n        return n % 11\n    if p == 13:\n        return n % 13\n    if p == 15:\n        return n % 15\n    if p == 17:\n        return n % 17\n    if p == 19 or p == 21:\n        return n % 19\n    if p == 23 or p == 29:\n        return n % 23\n    if p == 31 or p == 37:\n        return n % 31\n    if p == 41 or p == 43:\n        return n % 41\n    if p == 47 or p == 53:\n        return n % 47\n    if p == 59 or p == 61:\n        return n % 59\n    if p == 67 or p == 73:\n        return n % 67\n    if p == 79 or p == 83:\n        return n % 79\n    if p == 97 or p == 101:\n        return n % 97\n    if p == 103 or p == 107:\n        return n % 103\n    if p == 113 or p == 127:\n        return n", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n % p == 0:\n        return n\n    return modp(n // p, p)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if p < 0:\n        raise ValueError(\"p must be positive\")\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n % p == 0:\n        return n / p\n    if n %", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1 if n % 2 == 0 else 0\n    if p == 3:\n        return 1 if n % 3 == 0 else 0\n    if p == 4:\n        return 1 if n % 4 == 0 else 0\n    if p == 5:\n        return 1 if n % 5 == 0 else 0\n    if p == 6:\n        return 1 if n % 6 == 0 else 0\n    if p == 7:\n        return 1 if n % 7 == 0 else 0\n    if p == 8:\n        return 1 if n % 8 == 0 else 0\n    if p == 9:\n        return 1 if n % 9 == 0 else 0\n    if p == 10:\n        return 1 if n % 10 == 0 else 0\n    if p == 11:\n        return 1 if n % 11 == 0 else 0\n    if p == 12:\n        return 1 if n % 12 == 0 else 0\n    if p == 13:\n        return 1 if n % 13 == 0 else 0\n    if p == 14:\n        return 1 if n % 14 == 0 else 0\n    if p == 15:\n        return 1 if n % 15 == 0 else 0\n    if p == 16:\n        return 1 if n % 16 == 0 else 0", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        raise ValueError(\"modp(): argument is 0\")\n    if n == 0:\n        return 1\n    if p == 1:\n        return 1\n    if n == 1:\n        return 1\n    if p % n == 0:\n        return 1\n    if p % n == 1:\n        return 1\n    if p % n == 2:\n        return 2\n    if p % n == 3:\n        return 3\n    if p % n == 4:\n        return 4\n    if p % n == 5:\n        return 5\n    if p % n == 6:\n        return 6\n    if p % n == 7:\n        return 7\n    if p % n == 8:\n        return 8\n    if p % n == 9:\n        return 9\n    if p % n == 10:\n        return 10\n    if p % n == 11:\n        return 11\n    if p % n == 12:\n        return 12\n    if p % n == 13:\n        return 13\n    if p % n == 14:\n        return 14\n    if p % n == 15:\n        return 15\n    if p % n == 16:\n        return 16\n    if p % n == 17:\n        return 17", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        return 1\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n < p:\n        return (n + p) % p\n    return (n - p) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n % p == 0:\n        return n // p\n    return modp(n // p, p)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p < 0:\n        raise ValueError(\"modp(): negative argument\")\n    if p == 0:\n        return 1\n    if n == 0:\n        return 0\n    if p == 1:\n        return 1\n    if n == 1:\n        return 0\n    if p % n == 0:\n        return 1\n    if p % n == 1:\n        return 0\n    return modp(n - 1, p % n)", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if p == 0:\n        return 0\n    if n < 0:\n        n = -n\n    if p < 0:\n        p = -p\n    if n == p:\n        return 1\n    if n % p == 0:\n        return 1\n    if n % p == -1:\n        return 0\n    if n % p == -2:\n        return 0\n    if n % p == -3:\n        return 0\n    if n % p == -4:\n        return 0\n    if n % p == -5:\n        return 0\n    if n % p == -6:\n        return 0\n    if n % p == -7:\n        return 0\n    if n % p == -8:\n        return 0\n    if n % p == -9:\n        return 0\n    if n % p == -10:\n        return 0\n    if n % p == -11:\n        return 0\n    if n % p == -12:\n        return 0\n    if n % p == -13:\n        return 0\n    if n % p == -14:\n        return 0\n    if n % p == -15:\n        return 0\n    if n % p == -16:\n        return 0\n    if n % p == -17:\n        return 0\n    if n % p == -18:\n        return 0\n    if n % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 * n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return n\n    if p == 2:\n        return n % 2\n    if p == 3:\n        return n % 3\n    if p == 4:\n        return n % 4\n    if p == 5:\n        return n % 5\n    if p == 6:\n        return n % 6\n    if p == 7:\n        return n % 7\n    if p == 8:\n        return n % 8\n    if p == 9:\n        return n % 9\n    if p == 10:\n        return n % 10\n    if p == 11:\n        return n % 11\n    if p == 12:\n        return n % 12\n    if p == 13:\n        return n % 13\n    if p == 14:\n        return n % 14\n    if p == 15:\n        return n % 15\n    if p == 16:\n        return n % 16\n    if p == 17:\n        return n % 17\n    if p == 18:\n        return n % 18\n    if p == 19:\n        return n % 19\n    if p == 20:\n        return n % 20\n    if p == 21:\n        return n % 21\n    if p == 22:\n        return n % 22\n    if p == 23:\n        return n % 23\n    if p == 24:\n        return n % 24\n    if p == 25:\n        return n % 25\n    if p == 26:", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 1\n    if p == 3:\n        return 1\n    if p == 4:\n        return 1\n    if p == 5:\n        return 1\n    if p == 6:\n        return 1\n    if p == 7:\n        return 1\n    if p == 8:\n        return 1\n    if p == 9:\n        return 1\n    if p == 10:\n        return 1\n    if p == 11:\n        return 1\n    if p == 12:\n        return 1\n    if p == 13:\n        return 1\n    if p == 14:\n        return 1\n    if p == 15:\n        return 1\n    if p == 16:\n        return 1\n    if p == 17:\n        return 1\n    if p == 18:\n        return 1\n    if p == 19:\n        return 1\n    if p == 20:\n        return 1\n    if p == 21:\n        return 1\n    if p == 22:\n        return 1\n    if p == 23:\n        return 1\n    if p == 24:\n        return 1\n    if p == 25:\n        return 1\n    if p == 26:\n        return 1\n    if p == 27:\n        return 1\n    if p == 28:\n        return 1\n    if p == 29:\n        return 1\n    if p == 30:\n        return 1\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    return (2 ** n) % p", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 1\n    if p == 2:\n        return 0\n    if p == 3:\n        return 1\n    if p == 4:\n        return 0\n    if p == 5:\n        return 1\n    if p == 6:\n        return 0\n    if p == 7:\n        return 1\n    if p == 8:\n        return 0\n    if p == 9:\n        return 1\n    if p == 10:\n        return 0\n    if p == 11:\n        return 1\n    if p == 12:\n        return 0\n    if p == 13:\n        return 1\n    if p == 14:\n        return 0\n    if p == 15:\n        return 1\n    if p == 16:\n        return 0\n    if p == 17:\n        return 1\n    if p == 18:\n        return 0\n    if p == 19:\n        return 1\n    if p == 20:\n        return 0\n    if p == 21:\n        return 1\n    if p == 22:\n        return 0\n    if p == 23:\n        return 1\n    if p == 24:\n        return 0\n    if p == 25:\n        return 1\n    if p == 26:\n        return 0\n    if p == 27:\n        return 1\n    if p == 28:\n        return 0\n    if p == 29:\n        return 1\n    if p == 30:\n        return 0\n    if p == 31:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 1\n    if n == 5:\n        return 1\n    if n == 6:\n        return 1\n    if n == 7:\n        return 1\n    if n == 8:\n        return 1\n    if n == 9:\n        return 1\n    if n == 10:\n        return 1\n    if n == 11:\n        return 1\n    if n == 12:\n        return 1\n    if n == 13:\n        return 1\n    if n == 14:\n        return 1\n    if n == 15:\n        return 1\n    if n == 16:\n        return 1\n    if n == 17:\n        return 1\n    if n == 18:\n        return 1\n    if n == 19:\n        return 1\n    if n == 20:\n        return 1\n    if n == 21:\n        return 1\n    if n == 22:\n        return 1\n    if n == 23:\n        return 1\n    if n == 24:\n        return 1\n    if n == 25:\n        return 1\n    if n == 26:\n        return 1\n    if n == 27:\n        return 1\n    if n == 28:\n        return 1\n    if n == 29:\n        return 1\n    if n == 30:\n        return 1", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 2\n    if p == 4:\n        return 3\n    if p == 5:\n        return 4\n    if p == 6:\n        return 5\n    if p == 7:\n        return 6\n    if p == 8:\n        return 7\n    if p == 9:\n        return 8\n    if p == 10:\n        return 9\n    if p == 11:\n        return 10\n    if p == 12:\n        return 11\n    if p == 13:\n        return 12\n    if p == 14:\n        return 13\n    if p == 15:\n        return 14\n    if p == 16:\n        return 15\n    if p == 17:\n        return 16\n    if p == 18:\n        return 17\n    if p == 19:\n        return 18\n    if p == 20:\n        return 19\n    if p == 21:\n        return 20\n    if p == 22:\n        return 21\n    if p == 23:\n        return 22\n    if p == 24:\n        return 23\n    if p == 25:\n        return 24\n    if p == 26:\n        return 25\n    if p == 27:\n        return 26\n    if p == 28:\n        return 27\n    if p == 29:\n        return 28\n    if p == 30:\n        return 29\n    if p == 31:\n        return 30", "def modp(n: int, p: int):\n    \"\"\"Return 2^n modulo p (be aware of numerics).\n    >>> modp(3, 5)\n    3\n    >>> modp(1101, 101)\n    2\n    >>> modp(0, 101)\n    1\n    >>> modp(3, 11)\n    8\n    >>> modp(100, 101)\n    1\n    \"\"\"\n    if p == 0:\n        return 1\n    if p == 1:\n        return 0\n    if p == 2:\n        return 1\n    if p == 3:\n        return 0\n    if p == 4:\n        return 1\n    if p == 5:\n        return 0\n    if p == 6:\n        return 1\n    if p == 7:\n        return 0\n    if p == 8:\n        return 1\n    if p == 9:\n        return 0\n    if p == 10:\n        return 1\n    if p == 11:\n        return 0\n    if p == 12:\n        return 1\n    if p == 13:\n        return 0\n    if p == 14:\n        return 1\n    if p == 15:\n        return 0\n    if p == 16:\n        return 1\n    if p == 17:\n        return 0\n    if p == 18:\n        return 1\n    if p == 19:\n        return 0\n    if p == 20:\n        return 1\n    if p == 21:\n        return 0\n    if p == 22:\n        return 1\n    if p == 23:\n        return 0\n    if p == 24:\n        return 1\n    if p == 25:\n        return 0\n    if p == 26:\n        return 1\n    if p == 27:\n        return 0\n    if p == 28:\n        return 1\n    if p == 29:\n        return 0\n    if p == 30:\n        return 1"]]