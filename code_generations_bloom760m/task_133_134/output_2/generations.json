[["def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling) first\n    for i in lst:\n        i = float(i) * float(Ceiling)\n        lst[i] = i\n\n    # Return the sum\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n\n    return sum(lst) * math.sqrt(len(lst) ** 2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Create a list of numbers.\n    n = []\n    for i in lst:\n        n.append(i)\n\n    # Get the sum of all numbers.\n    sum = 0\n    for i in n:\n        sum += i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([lst[i] for i in range(len(lst))]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is not None:\n        return lst[0] * lst[0] + lst[1] * lst[1] + lst[2] * lst[2]\n    else:\n        return 0.0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: (x * x) ** 2, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in xrange(len(lst)):\n        result += lst[i] * lst[i]\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for num in lst:\n        result += num * num\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst, round, float(Ceiling) * float(len(lst)) / float(len(lst)))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result / len(lst) #round each element to the upper int(Ceiling) first", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    else:\n        return sum(map(float, lst))/float(len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    s = 0\n    for n in lst:\n        s += n * n\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([x**2 for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(float, lst)) / float(len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the top element\n    top = lst[-1]\n    # Get the right one\n    right = lst[top+1]\n    # Get the bottom one\n    bottom = lst[top+2]\n    # Get the left one\n    left = lst[top+3]\n    # Get the sum of the square of all numbers\n    return sum(right**2 + bottom**2 + left**2)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get a list of numbers and do the same thing as sum_squares\n    # except that we round each element to the upper int(Ceiling) first.\n    # If you want to use the same function to calculate the sum of squares\n    # of a list of numbers, you should use the numpy.sum_squares() function.\n    # If you want to use the same function to calculate the sum of squares\n    # of a list of numbers, you should use the numpy.sum_squares() function.\n    # You can use numpy.sum_squares() with a list of numbers, too.\n    # However, the sum_squares() function will not work with list of lists.\n    # You should use numpy.sum_squares() with a list of lists.\n    #\n    # The following function is a good example of how to use the sum_squares() function\n    # to calculate the sum of squares of a list of numbers.\n    #\n    # def sum_squares(lst):\n    #     \"\"\"You are given a list of numbers.\n    #     You need to return the sum of squared numbers in the given list,\n    #     round each element in the list to the upper int(Ceiling) first.\n    #", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([lst[i] for i in xrange(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        raise ValueError('lst is None')\n    # Get the sum of squares\n    sum_squares = sum(lst)\n    # Round to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        if lst[i] < lst[i-1]:\n            sum_squares += lst[i]\n        else:\n            sum_squares += lst[i-1]\n    # Return the sum\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # check if lst is a list of integers\n    if isinstance(lst, list):\n        lst = [lst]\n\n    # if lst is a list of floats\n    if isinstance(lst, float):\n        lst = [lst]\n\n    # if lst is a list of lists\n    if isinstance(lst, list):\n        lst = [lst]\n\n    # if lst is a list of tuples\n    if isinstance(lst, tuple):\n        lst = [lst]\n\n    # if lst is a list of integers\n    if isinstance(lst, int):\n        lst = [lst]\n\n    # if lst is a list of floats\n    if isinstance(lst, float):\n        lst = [lst]\n\n    # if lst is a list of lists\n    if isinstance(lst, list):\n        lst = [lst]\n\n    # if lst is a list of tuples\n    if isinstance(lst, tuple):\n        lst = [lst]\n\n    # if lst is a list of integers\n    if isinstance(lst, int):\n        lst = [lst]\n\n    # if lst is a list of floats\n    if isinstance(lst, float):\n        lst = [lst]\n\n    # if lst is a list of lists\n    if isinstance(lst,", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0.0\n    for i in range(len(lst)):\n        sum += lst[i]\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sq for sq in lst if sq < Ceiling])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i * i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # First round each element to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        lst[i] = round(lst[i], int(Ceiling)) # Round each element to upper int(Ceiling)\n    return lst[::-1]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    else:\n        return sum(lst) * lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    assert len(lst) == len(lst), lst\n    return sum(lst * lst * lst * lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    if len(lst) == 2:\n        return sum([lst[1] - lst[0] for lst in lst])\n    if len(lst) == 3:\n        return sum([lst[2] - lst[0] for lst in lst])\n    if len(lst) == 4:\n        return sum([lst[3] - lst[0] for lst in lst])\n    if len(lst) == 5:\n        return sum([lst[4] - lst[0] for lst in lst])\n    if len(lst) == 6:\n        return sum([lst[5] - lst[0] for lst in lst])\n    if len(lst) == 7:\n        return sum([lst[6] - lst[0] for lst in lst])\n    if len(lst) == 8:\n        return sum([lst[7] - lst[0] for lst in lst])\n    if len(lst) == 9:\n        return sum([lst[8] - lst[0] for lst in lst])\n    if len(lst) == 10:\n        return sum([lst[9] - lst[0] for lst in lst])\n    if len(lst) == 11:\n        return sum([lst[10] - lst[0] for lst in lst])\n    if len", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for x in lst:\n        result += x * x\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # check list\n    for i in lst:\n        if i <= 0:\n            return 0\n        else:\n            return (i * (i+1) ** 2) + (i * (i+1) ** 2) ** 2\n\n    # round each element\n    for i in lst:\n        for j in i:\n            if j <= 0:\n                return 0\n            else:\n                return (i * (i+1) ** 2) + (j * (i+1) ** 2) ** 2\n\n    # return sum of squared numbers\n    return sum(sum_squares(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get the sum of squared numbers\n    for i in lst:\n        s = sum([float(i) for i in i])\n    # round each element to the upper int(Ceiling)\n    for i in lst:\n        s = s * (i - 1) / float(len(lst))\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # First round each element in the list to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        lst[i] = lst[i] / (int(Ceiling)) + 1\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in range(len(lst)):\n        sum += lst[i]**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([abs(x) for x in lst])\n\n    if lst is None:\n        return 0\n\n    return abs(lst[0]) * abs(lst[1]) * abs(lst[2]) * abs(lst[3])\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    x = []\n    for i in lst:\n        if i == 0:\n            continue\n        else:\n            x.append(sum(i**2))\n    return x", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += abs(i) * abs(i)\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    try:\n        return sum(lst) / len(lst)\n    except ValueError:\n        raise ValueError(\"lst must be a list of numbers\")", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] == 0:\n        return 0\n\n    if lst[0] < 0:\n        lst[0] = int(lst[0]) - 1\n    else:\n        lst[0] = int(lst[0]) + 1\n\n    return lst[0] * lst[0] + lst[1] * lst[1] + lst[2] * lst[2] + lst[3] * lst[3] + lst[4] * lst[4] + lst[5] * lst[5] + lst[6] * lst[6] + lst[7] * lst[7] + lst[8] * lst[8] + lst[9] * lst[9] + lst[10] * lst[10] + lst[11] * lst[11] + lst[12] * lst[12] + lst[13] * lst[13] + lst[14] * lst[14] + lst[15] * lst[15] + lst[16] * lst[16] + lst[17] * lst[17] + lst[18] * lst[18] + lst[19] * lst[19] + lst[20] * lst[20] + lst[21] * lst[21] + lst[22] * lst[22] + lst[23] * lst[23] + lst[24] * lst[24] + lst[25] * lst[25] + lst[26] * lst[26] + lst[27] * lst[27] + lst[28] * lst[28] + lst[29] * lst[29] + lst[30] * lst[30] + lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    if len(lst) == 1:\n        return lst[0]\n    else:\n        if lst[0] > lst[1]:\n            return lst[1] - lst[0]\n        else:\n            return lst[0]\n    return lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    try:\n        return sum(lst) / len(lst)\n    except ValueError:\n        return lst[0] * lst[0] + lst[1] * lst[1] + lst[2] * lst[2] + lst[3] * lst[3] + lst[4] * lst[4] + lst[5] * lst[5] + lst[6] * lst[6] + lst[7] * lst[7] + lst[8] * lst[8] + lst[9] * lst[9] + lst[10] * lst[10] + lst[11] * lst[11] + lst[12] * lst[12] + lst[13] * lst[13] + lst[14] * lst[14] + lst[15] * lst[15] + lst[16] * lst[16] + lst[17] * lst[17] + lst[18] * lst[18] + lst[19] * lst[19] + lst[20] * lst[20] + lst[21] * lst[21] + lst[22] * lst[22] + lst[23] * lst[23] + lst[24] * lst[24] + lst[25] * lst[25] + lst[26] * lst[26] + lst[27] * lst[27] + lst[28] * lst[28] + lst[29] * lst[29] + lst[30] * lst[30] + lst[31] * lst[31] + lst[32] * lst[32] + lst[33] * lst[33] +", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) - sum(lst * lst) * lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the sum of squares for each element of the list.\n    for i in range(len(lst)):\n        sum_squares(lst[i])\n\n    return sum_squares(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0.0\n    for i in lst:\n        sum += i**2\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Check if lst is a list of integers.\n    if len(lst)!= len(lst[0]):\n        raise ValueError(\"lst is not a list of integers\")\n\n    # If lst[0] is a list of integers, then convert it to list of ints.\n    if lst[0] is not None:\n        lst = [lst[0]]\n\n    # Now we are given a list of ints.\n    # We need to sum each element in the list to the upper int(Ceiling) first.\n    for i in range(len(lst)):\n        for j in range(len(lst[i])):\n            lst[i][j] += lst[j][i]\n\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Calculate the sum of squares\n    return sum(lst) * lst.sum(axis=1) / lst.sum(axis=0)\n\n    # Get the upper int(Ceiling) of the list\n    return lst.max(axis=1) - lst.min(axis=1)\n\n    # Return the sum of squares\n    return lst.sum(axis=0) * lst.sum(axis=1) / lst.sum(axis=0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return None\n    else:\n        return sum(lst) / len(lst)\n\n    return sum(lst) * (1 - lst[1])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 1:\n        return lst[0]\n\n    # get the upper int(Ceiling)\n    upper = int(Ceiling)\n    for i in range(len(lst)):\n        lst[i] = lst[i] + upper\n\n    return lst[upper:]\n\n    # round each element to the upper int(Ceiling)\n    for i in range(len(lst)):\n        lst[i] = lst[i] * i / upper\n\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst)\n\n    return int(round(sum(lst) / len(lst), 2)) - 1", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst.size() == 0:\n        return 0\n    elif lst.size() == 1:\n        return lst[0]\n    else:\n        for i in range(1, lst.size() - 1):\n            if lst[i]!= lst[i - 1] or lst[i - 1]!= lst[i]:\n                lst[i] += lst[i - 1] * lst[i]\n                lst[i - 1] += lst[i] * lst[i]\n        return lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # check if lst is a list\n    if not isinstance(lst, list):\n        raise ValueError(lst)\n    # check if lst is a list of ints\n    if not isinstance(lst, int):\n        raise ValueError(lst)\n    # check if lst is a list of floats\n    if not isinstance(lst, float):\n        raise ValueError(lst)\n    # if lst is a list of strings\n    if not isinstance(lst, list):\n        lst = [lst]\n    # if lst is a list of ints\n    if not isinstance(lst, int):\n        lst = [lst]\n    # if lst is a list of floats\n    if not isinstance(lst, float):\n        lst = [lst]\n    # if lst is a list of strings\n    if not isinstance(lst, list):\n        lst = [lst]\n    # if lst is a list of ints\n    if not isinstance(lst, int):\n        lst = [lst]\n    # if lst is a list of floats\n    if not isinstance(lst, float):\n        lst = [lst]\n    # if lst is a list of strings\n    if not isinstance(lst, list):\n        lst = [lst]\n    # return the sum of squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: x**2, lst)) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i * i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += x\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for x in lst:\n        result += (x * x) * (x * x) * x\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst.map(lambda x: x ** 2))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += (i * i)\n    return result / (len(lst) * len(lst) + 1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == None:\n        return 0\n    if lst.size() == 0:\n        return 0\n    return sum(lst)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n\n    #return lst.sum(1)/len(lst)\n    #return lst.sum(1)/len(lst)\n    #return lst.sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Calculate the sum of square elements in the list\n    sum_squares = 0\n    for i in lst:\n        sum_squares += (i**2 + i**2 + i**2)**(i + 1)\n    return sum_squares", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] is None or lst[0] == 0:\n        return 0\n\n    return int(round(sum(lst) * lst[0])) - int(round(sum(lst) * lst[1])) - int(round(sum(lst) * lst[2]))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum([int(round(x)) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        if len(lst) == 1:\n            return lst[0]\n        else:\n            return sum(lst) / len(lst)\n\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    assert len(lst) == len(lst[0])\n    assert lst[0] is not None\n    assert lst[0].isinstance(int)\n\n    # Get the upper int(Ceiling) first\n    for i in range(len(lst)):\n        if lst[i] > lst[i-1] + 1 and lst[i].isdigit():\n            lst[i] = lst[i] - 1\n\n    # Round each element in the list to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        if lst[i] > lst[i-1] + 1 and lst[i].isdigit():\n            lst[i] = lst[i] - 1\n\n    # Sum the squares\n    return sum(lst[1:]) / len(lst)\n\n    # Python 3\n    if sys.version_info < (3,):\n        raise ValueError(\"sum_squares() is only available in Python 3.\")", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        result = 0\n        for x in lst:\n            result += x * x\n        return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(i**2 for i in lst) for i in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(abs(n) for n in lst)\n\n    def round(lst):\n        \"\"\"Round each element to the upper int(Ceiling) first.\n        \"\"\"\n        return round(lst, int(Ceiling)) - lst[0]\n\n    def sum(lst):\n        \"\"\"Return the sum of the elements in the list.\n        \"\"\"\n        return sum(abs(n) for n in lst)\n\n    def sum_squares(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n        return sum(abs(n) for n in lst)\n\n    def sum_squares(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(lambda x: abs(x - lst[0]) ** 2, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst.size() == 0:\n        return 0\n    else:\n        return sum(lst.tolist()) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst.count(0) == 0:\n        return 0\n    else:\n        return lst.sum(1) * lst.sum(1) / lst.sum(1) - lst.sum(1) / lst.sum(1) * lst.sum(1) / lst.sum(1) * lst.sum(1) / lst.sum(1) * lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst.sum(1) / lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst * lst) / len(lst) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if not lst:\n        return 0\n    if lst[0] == 0:\n        return 0\n    if lst[1] == 0:\n        return 0\n    if lst[2] == 0:\n        return 0\n    if lst[3] == 0:\n        return 0\n    if lst[4] == 0:\n        return 0\n    if lst[5] == 0:\n        return 0\n    if lst[6] == 0:\n        return 0\n    if lst[7] == 0:\n        return 0\n    if lst[8] == 0:\n        return 0\n    if lst[9] == 0:\n        return 0\n    if lst[10] == 0:\n        return 0\n    if lst[11] == 0:\n        return 0\n    if lst[12] == 0:\n        return 0\n    if lst[13] == 0:\n        return 0\n    if lst[14] == 0:\n        return 0\n    if lst[15] == 0:\n        return 0\n    if lst[16] == 0:\n        return 0\n    if lst[17] == 0:\n        return 0\n    if lst[18] == 0:\n        return 0\n    if lst[19] == 0:\n        return 0\n    if lst[20] == 0:\n        return 0\n    if lst[21] == 0:\n        return 0\n    if lst[22] == 0:\n        return 0\n    if lst[23] == 0:\n        return 0\n    if lst[24] == 0:\n        return 0\n    if lst[25] == 0:\n        return 0\n    if lst[26]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element in lst to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        lst[i] = round(lst[i], 2)\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = [lst]\n    return sum(lst) * (lst[-1] - lst[0]) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst) / len(lst) # round to the upper int(Ceiling) first", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum([float(x) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    # Create a new list of ints\n    list = []\n    for i in lst:\n        list.append(i)\n    # Sum the squares\n    for x in list:\n        sum_squares(list)\n        list = list[:-1]\n    # Return the sum of squares\n    return sum_squares(list)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is not None:\n        return sum(lst)\n    else:\n        return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst.square()) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for item in lst:\n        sum += item * item\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = []\n    for item in lst:\n        result.append(item * item)\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Get the sum of squared numbers\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    try:\n        sum = 0\n    except ValueError:\n        return 0\n    for i in lst:\n        sum += (i*(i-i)**2)\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * sum(lst) / len(lst)\n\n    # TODO: add a method to return the sum of square numbers\n    #       which is not necessarily the sum of squares of all the elements of the list\n    #       for example\n    #       for lst in [1,2,3,4,5,6,7,8,9,10,11,12,13,14]:\n    #           return sum(lst) * sum(lst) / len(lst)\n\n    # TODO: add a method to return the sum of square numbers\n    #       which is not necessarily the sum of squares of all the elements of the list\n    #       for example\n    #       for lst in [1,2,3,4,5,6,7,8,9,10,11,12,13,14]:\n    #           return sum(lst) * sum(lst) / len(lst)\n\n    # TODO: add a method to return the sum of square numbers\n    #       which is not necessarily the sum of squares of all the elements of the list\n    #       for example\n    #       for lst in [1,2,3,4,5,6,7,8,9,10,11,12,13", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += (i * i)\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst)*sum(lst)/len(lst)\n\n    # Calculate the sum of squares of the whole list\n    return sum(lst)*sum(lst)/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling) first\n    for i in lst:\n        lst[i] = round(lst[i], int(Ceiling))\n\n    # The sum of the squares is the sum of the squares of the elements\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst.size() == 0:\n        return 0\n    else:\n        return sum(lst[0] * lst[0] + lst[1] * lst[1] + lst[2] * lst[2]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    i = 0\n    while i < len(lst):\n        sum = 0\n        for x in lst:\n            sum += x * x\n        i += 1\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * lst.sum(1) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += float(i) * float(i) * float(i)\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst) / float(len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n\n    # Loop over the elements\n    for i in xrange(len(lst)):\n        if i == 0:\n            return 0\n\n        # Round each element to the upper int(Ceiling)\n        if lst[i] > lst[i-1]:\n            lst[i] = lst[i] / lst[i-1]\n        else:\n            lst[i] = lst[i] * lst[i-1]\n\n    # Return the sum\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    if n!= 2:\n        raise ValueError(\"lst must be a list of 2 numbers\")\n    else:\n        return sum(lst[n - 1] * lst[n] * lst[n - 1]) / n", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    if lst[0] <= 0:\n        lst = list(lst)\n    if lst[-1] > lst[0]:\n        lst = list(lst)[:-1]\n    if lst[-1] <= lst[0]:\n        lst = list(lst)[:-1] + lst[1:]\n    if lst[-1] == lst[0]:\n        lst = list(lst)[:-1] + lst[1:] + lst[-1]\n    if lst[-1]!= lst[0]:\n        lst = list(lst)[:-1] + lst[1:] + lst[-1] + lst[-1:]\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([float(i) for i in lst]) * float(Ceiling(len(lst)) - 1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result.round(1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return\n    elif lst.size() == 0:\n        return\n    else:\n        sum = 0\n        for i in range(len(lst)):\n            sum += lst[i]**2\n        return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element in the list to the upper int(Ceiling) first.\n    return max(sum([int(n) for n in lst]) for n in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    if lst[0] > lst[1]:\n        return lst[0] - lst[1]\n    else:\n        return lst[0] + lst[1]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst) * (lst[0] - lst[1]) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst) / len(lst) # round to the upper int(Ceiling) first\n\n    return lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    else:\n        return sum(lst) * (lst.size() / len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        result = 0\n        for i in range(len(lst)):\n            result += lst[i] * lst[i]\n        return result / len(lst) * ceil(result)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element to the upper int(Ceiling) first\n    for i in lst:\n        if i <= 0:\n            raise ValueError(\"Incorrect list size.\")\n        else:\n            i = round(i, 2)\n\n    # return the sum of squared numbers in the given list\n    return sum(i**2 for i in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling)\n    for i in xrange(len(lst)):\n        lst[i] = lst[i] / (int(Ceiling) + 1) * int(Ceiling)\n\n    # Return the sum of squares\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for num in lst:\n        if num > 0:\n            result += num * num\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(abs(i) for i,j in zip(lst, zip(lst, zip(lst, lst))))\n\n    # And also, to make it a bit more readable, sum(i**2 for i in lst) is\n    # the same as sum(i**2 for i in lst), so that it makes more sense\n    # to call it, and the output will be the same.\n    return sum(abs(i) for i,j in zip(lst, zip(lst, zip(lst, lst))))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * (lst[1] - lst[0]) / lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # The following code works with lists of integers, but\n    # with lists of floats, it will fail.\n    if isinstance(lst, float):\n        lst = float(lst)\n    else:\n        lst = [lst]\n    s = 0\n    for i in lst:\n        s += i * i\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get the upper int(Ceiling) value of the list\n    upper = int(Ceiling(lst[0]))\n    # get the upper int(Ceiling) value of the list\n    lower = int(Ceiling(lst[1]))\n    # get the upper int(Ceiling) value of the list\n    mid = int(Ceiling(lst[2]))\n    # get the upper int(Ceiling) value of the list\n    top = int(Ceiling(lst[3]))\n    # get the upper int(Ceiling) value of the list\n    bottom = int(Ceiling(lst[4]))\n    # get the upper int(Ceiling) value of the list\n    right = int(Ceiling(lst[5]))\n    # get the upper int(Ceiling) value of the list\n    left = int(Ceiling(lst[6]))\n    # get the upper int(Ceiling) value of the list\n    topright = top + (right - left) // 2\n    bottomleft = bottom + (left - right) // 2\n    topmiddle = top + (right - mid) // 2\n    bottommiddle = bottom + (mid - left) // 2\n    topbottom = top + (left - bottom) // 2\n    bottombottom = bottom + (mid -", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i * i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling) first.\n    if lst[0] <= 0:\n        lst[0] = lst[0] - 1\n    else:\n        lst[0] = lst[0] + 1\n\n    # Sum the squares of the elements in the list.\n    for i in range(len(lst)):\n        if lst[i] <= 0:\n            lst[i] = lst[i] - 1\n        else:\n            lst[i] = lst[i] + 1\n\n    return lst[0] + lst[1] + lst[2] + lst[3] + lst[4] + lst[5] + lst[6] + lst[7] + lst[8] + lst[9] + lst[10] + lst[11] + lst[12] + lst[13] + lst[14] + lst[15] + lst[16] + lst[17] + lst[18] + lst[19] + lst[20] + lst[21] + lst[22] + lst[23] + lst[24] + lst[25] + lst[26] + lst[27] + lst[28] + lst[29] + lst[30] + lst[31] + lst[32] + lst[33] + lst[34] + lst[35] + lst[36] + lst[37] + lst[38] + lst[39] + lst[40] + lst[41] + lst[42] + lst[43] + lst[44] + lst[45] + lst[46]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    if len(lst) == 1:\n        return lst[0]\n    else:\n        # First element is the sum of all elements\n        return sum(lst[1:], 1)\n\n    return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(x) for x in lst] * len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([(lst[i]**2) for i in range(len(lst))])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] <= 0:\n        raise ValueError(\"lst must be non-negative\")\n    if lst[-1] <= 0:\n        raise ValueError(\"lst must be non-negative\")\n\n    for i in range(len(lst)):\n        result = lst[i] - lst[i-1]\n        if result < 0:\n            raise ValueError(\"lst must be non-negative\")\n        result = result / result\n\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([float(x) for x in lst]) / float(len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # First we need to get the square root of each number.\n    # The square root is taken in the order of magnitude of the\n    # numbers, so that the first number in the list is always\n    # the largest number.\n    n = len(lst)\n    for i in range(n):\n        if lst[i] > lst[i-1]:\n            lst[i] = lst[i-1]\n            lst[i-1] = lst[i]\n\n    # Now we calculate the sum of squared numbers.\n    return sum(lst**2 for lst in lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    if lst[0] < 0:\n        lst.append(0)\n    if lst[1] < 0:\n        lst.append(0)\n    if lst[2] < 0:\n        lst.append(0)\n    if lst[3] < 0:\n        lst.append(0)\n    if lst[4] < 0:\n        lst.append(0)\n    if lst[5] < 0:\n        lst.append(0)\n    if lst[6] < 0:\n        lst.append(0)\n    if lst[7] < 0:\n        lst.append(0)\n    if lst[8] < 0:\n        lst.append(0)\n    if lst[9] < 0:\n        lst.append(0)\n    if lst[10] < 0:\n        lst.append(0)\n    if lst[11] < 0:\n        lst.append(0)\n    if lst[12] < 0:\n        lst.append(0)\n    if lst[13] < 0:\n        lst.append(0)\n    if lst[14] < 0:\n        lst.append(0)\n    if lst[15] < 0:\n        lst.append(0)\n    if lst[16] < 0:\n        lst.append(0)\n    if lst[17] < 0:\n        lst.append(0)\n    if lst[18] < 0:\n        lst.append(0)\n    if lst[19] < 0:\n        lst.append(0)\n    if lst[", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst) * (Ceiling(lst[0]) - lst[1])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst * lst * lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n\n    # round each element to the upper int(Ceiling) first\n    for i in lst:\n        lst[i] = (lst[i] + i) / 2\n\n    # return the sum\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    # round each element to the upper int(Ceiling)\n    for i in range(len(lst)):\n        lst[i] = round(lst[i], int(Ceiling))\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst) / (len(lst) - 1) * (len(lst) - 1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst)!= 3:\n        raise ValueError(\"lst must be 3 or greater\")\n\n    # Calculate sum\n    sum = 0\n    for i in xrange(len(lst)):\n        sum += lst[i] * lst[i]\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    lst = list(lst)\n    if lst[0] == 0:\n        lst[0] = int(Ceiling(lst[0]))\n    if lst[1] == 0:\n        lst[1] = int(Ceiling(lst[1]))\n    if lst[2] == 0:\n        lst[2] = int(Ceiling(lst[2]))\n    if lst[3] == 0:\n        lst[3] = int(Ceiling(lst[3]))\n    if lst[4] == 0:\n        lst[4] = int(Ceiling(lst[4]))\n    if lst[5] == 0:\n        lst[5] = int(Ceiling(lst[5]))\n    if lst[6] == 0:\n        lst[6] = int(Ceiling(lst[6]))\n    if lst[7] == 0:\n        lst[7] = int(Ceiling(lst[7]))\n    if lst[8] == 0:\n        lst[8] = int(Ceiling(lst[8]))\n    if lst[9] == 0:\n        lst[9] = int(Ceiling(lst[9]))\n    if lst[10] == 0:\n        lst[10] = int(Ceiling(lst[10]))\n    if lst[11] == 0:\n        lst[11] = int(Ceiling(lst[11]))\n    if lst[12] == 0:\n        lst[12] = int(Ceiling(lst[12]))\n    if lst[13] == 0:\n        lst[13] = int(Ceiling(lst[13]))\n    if lst[14] == 0:\n        lst[14] = int(", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] <= 0:\n        return lst[0]\n    if lst[1] <= 0:\n        return lst[1]\n    if lst[2] <= 0:\n        return lst[2]\n    if lst[3] <= 0:\n        return lst[3]\n    if lst[4] <= 0:\n        return lst[4]\n    if lst[5] <= 0:\n        return lst[5]\n    if lst[6] <= 0:\n        return lst[6]\n    if lst[7] <= 0:\n        return lst[7]\n    if lst[8] <= 0:\n        return lst[8]\n    if lst[9] <= 0:\n        return lst[9]\n    if lst[10] <= 0:\n        return lst[10]\n    if lst[11] <= 0:\n        return lst[11]\n    if lst[12] <= 0:\n        return lst[12]\n    if lst[13] <= 0:\n        return lst[13]\n    if lst[14] <= 0:\n        return lst[14]\n    if lst[15] <= 0:\n        return lst[15]\n    if lst[16] <= 0:\n        return lst[16]\n    if lst[17] <= 0:\n        return lst[17]\n    if lst[18] <= 0:\n        return lst[18]\n    if lst[19] <= 0:\n        return lst[19]\n    if lst[20] <= 0:\n        return lst[20]\n    if lst[21] <= 0:\n        return lst[21]\n    if lst[22] <= 0:\n        return lst[22]\n    if lst[23] <= 0:\n        return lst[23]\n    if", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # If we are given a list of integers, round to the upper int(Ceiling).\n    if len(lst) > 1:\n        return lst[0].copy()\n    else:\n        return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    i,j = 0,0\n    while i < len(lst) and j < len(lst[i]):\n        s = lst[j][i]\n        if i == j:\n            s = s * s\n        else:\n            s = s / s\n        i = i + 1\n        j = j + 1\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if not isinstance(lst, list):\n        lst = [lst]\n\n    return sum(sum(sum(x**2 for x in lst)))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #print(lst)\n    #for i in lst:\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print(i)\n    #    print", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return\n    # Round all elements to the upper int(Ceiling) first.\n    for i in lst:\n        i = round(i, int(Ceiling) + 1)\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get the first element\n    if len(lst) == 0:\n        lst[0] = lst[0]\n    # get the second element\n    if len(lst) == 1:\n        lst[1] = lst[1]\n    # get the third element\n    if len(lst) == 2:\n        lst[2] = lst[2]\n    # get the fourth element\n    if len(lst) == 3:\n        lst[3] = lst[3]\n    # get the fifth element\n    if len(lst) == 4:\n        lst[4] = lst[4]\n    # get the sixth element\n    if len(lst) == 5:\n        lst[5] = lst[5]\n    # get the seventh element\n    if len(lst) == 6:\n        lst[6] = lst[6]\n    # get the eighth element\n    if len(lst) == 7:\n        lst[7] = lst[7]\n    # get the ninth element\n    if len(lst) == 8:\n        lst[8] = lst[8]\n    # get the tenth element\n    if len(lst) == 9:\n        lst[9] = lst[9]\n    # get the eleventh element\n    if len(lst) == 10:\n        lst[10] = lst[10]\n    # get the twelfth element\n    if len(lst) == 11:\n        lst[11] = lst[11]\n    # get the thirteenth element\n    if len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round to the upper int(Ceiling)\n    if lst[-1] == lst[-1]:\n        lst[-1] = lst[-1][-1]\n    else:\n        lst[-1] = lst[-1][-1] + lst[-1]\n    # Get the sum of squared numbers\n    return lst[-1][-1] * lst[-1][-1] + lst[-1] * lst[-1]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if not lst:\n        return 0\n\n    if len(lst) < 2:\n        return 0\n\n    # If lst is a list of integers, round each element to the upper int(Ceiling)\n    if isinstance(lst, list):\n        for i in range(len(lst)):\n            lst[i] = int(round(lst[i], int(Ceiling)))\n    else:\n        lst = [int(round(lst[i], int(Ceiling))), int(round(lst[i-1], int(Ceiling))), int(round(lst[i-2], int(Ceiling))), int(round(lst[i-3], int(Ceiling))), int(round(lst[i-4], int(Ceiling))), int(round(lst[i-5], int(Ceiling))), int(round(lst[i-6], int(Ceiling))), int(round(lst[i-7], int(Ceiling))), int(round(lst[i-8], int(Ceiling))), int(round(lst[i-9], int(Ceiling))), int(round(lst[i-10], int(Ceiling))), int(round(lst[i-11], int(Ceiling))),", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([abs(x) for x in lst]) * (1.0 / (Ceiling(len(lst) - 1)))\n\n    # TODO: fix this to work for lists of length 2, 3, or 4\n\n    def sum_squares_round(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\n        \"\"\"\n        return sum([abs(x) for x in lst]) * (1.0 / (Ceiling(len(lst) - 1)))\n\n    def sum_squares_round_round(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] < 0 or lst[-1] > 999999 or lst[0] == lst[-1]:\n        raise ValueError(\"lst must be in [0,9] or [0,9]\")\n    if lst[0] > lst[-1]:\n        lst = lst[-1:]\n    return lst.sum(0) / lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n\n    return sum(lst) / float(len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    if lst.count(None) == 0:\n        return 0\n    else:\n        return sum(lst) / lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None)\n\n    return sum(lst) / lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(None) * lst.count(", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * lst[0] / lst[0] ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    try:\n        return sum(map(float, lst))\n    except ValueError:\n        raise ValueError(\"lst must be a list of numbers.\")", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    else:\n        return sum([sum(i) for i in lst]) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    s = 0\n    for n in lst:\n        s += (n * n)\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        raise ValueError(\"lst must be non-empty list.\")\n\n    lst = list(lst)\n    if lst.size() == 0:\n        raise ValueError(\"lst must have at least one element.\")\n\n    return sum(lst) * (lst.size() - 1) / (lst.size() - 1)\n\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(abs(i) for i,j in enumerate(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    result = 0\n    for i in range(len(lst)):\n        result += lst[i]**2\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += i*i\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    x = []\n    for i in lst:\n        x.append(i * i)\n    return sum(x)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling) first.\n    i = 0\n    while i < len(lst):\n        s = lst[i]\n        lst[i] = lst[i+1]\n        lst[i+1] = s\n        i += 2\n\n    return lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round to the upper int(Ceiling) first\n    # This function is the same as the function\n    # sum(lst) + lst * lst\n    n = len(lst)\n    if n == 1:\n        return lst[0]\n    else:\n        return sum(lst) + lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst * lst *", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    #The sum should be rounded to the upper int(Ceiling) first\n    for i in range(len(lst)):\n        #The sum should be rounded to the upper int(Ceiling) first\n        result = sum(lst[i] * lst[i] for i in range(len(lst)))\n        #The sum should be rounded to the upper int(Ceiling) first\n        lst[i] = lst[i].astype(int) * lst[i].astype(int) * lst[i].astype(int) * lst[i].astype(int)\n        #The sum should be rounded to the upper int(Ceiling) first\n        lst[i] = lst[i].astype(int) * lst[i].astype(int) * lst[i].astype(int) * lst[i].astype(int)\n        #The sum should be rounded to the upper int(Ceiling) first\n        lst[i] = lst[i].astype(int) * lst[i].astype(int) * lst[i].astype(int) * lst[i].astype(int)\n        #The sum should be rounded to the upper int(Ceiling) first\n        lst[i] = lst[i].astype(int) * lst[i].ast", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n\n    if lst[0] == lst[1]:\n        return lst[0]\n\n    return sum(lst, 1) * (lst[1] - lst[0]) + sum(lst, 2) * (lst[2] - lst[0]) + sum(lst, 3) * (lst[3] - lst[0])\n\n    return sum(lst, 1) * (lst[0] - lst[1]) + sum(lst, 2) * (lst[1] - lst[2]) + sum(lst, 3) * (lst[2] - lst[2])\n\n    return sum(lst, 1) * (lst[0] - lst[3]) + sum(lst, 2) * (lst[3] - lst[3]) + sum(lst, 3) * (lst[3] - lst[3])\n\n    return sum(lst, 1) * (lst[0] - lst[1]) + sum(lst, 2) * (lst[1] - lst[2]) + sum(lst, 3) * (lst[2] - lst[2])\n\n    return sum(lst, 1) * (lst[0] - lst[3]) + sum(lst, 2) * (lst[3] - lst[3]) + sum(lst, 3) * (lst[3] - lst[3])\n\n    return sum(lst, 1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is not None:\n        return sum(lst)\n    else:\n        return 0", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    out = []\n    for item in lst:\n        out.append(item * item * item)\n    return sum(out)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(float, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * (lst[0] + lst[1] + lst[2] + lst[3])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling) first\n    for i in lst:\n        i = i + (i - int(round(i))) * (i+1)\n    # Return the sum\n    return sum(i for i in lst if i > 0)\n\n    # Return the sum of the elements in the list\n    return sum(i for i in lst if i > 0)\n\n    # Return the sum of the elements in the list\n    return sum(i for i in lst if i > 0)\n\n    # Return the sum of the elements in the list\n    return sum(i for i in lst if i > 0)\n\n    # Return the sum of the elements in the list\n    return sum(i for i in lst if i > 0)\n\n    # Return the sum of the elements in the list\n    return sum(i for i in lst if i > 0)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += (i**2)\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum([sum([sq for sq in lst]) for sq in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    s = 0\n    for i in lst:\n        s += i * i\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sum(lst):\n        \"\"\"You are given a list of numbers.\n        You need to return the sum of squared numbers in the given list,\n        round each element in the list to the upper int(Ceiling) first.\n        Examples:\n        For lst = [1,2,3] the output should be 14\n        For lst = [1,4,9] the output should be 98\n        For lst = [1,3,5,7] the output should be 84\n        For lst = [1.4,4.2,0] the output should be 29\n        For lst = [-2.4,1,1] the output should be 6\"\"\"\n        return sum(lst) / (sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst) + sum(lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([sum(n**2 for n in lst) for n in lst], 1)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in range(len(lst)):\n        result += lst[i] * lst[i]\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        for i in range(len(lst)):\n            result = 0\n            for j in range(len(lst[i])):\n                result += lst[j][i]\n            return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst)/len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * (lst[-1] - lst[0]) + lst[0]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    x = [float(i) for i in lst]\n    y = [float(i) for i in lst]\n    if len(x) < len(y):\n        raise ValueError('Number of elements in list is not equal to number of numbers in list')\n    return sum(x*x) + sum(y*y)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # round each element in the list to the upper int(Ceiling) first\n    for i in lst:\n        lst[i] = lst[i] * (1.0 + (1.0 - lst[i]) ** (2.0 / (2.0 ** (i + 1))))\n\n    # sum the squares\n    return sum(lst) / len(lst) * (1.0 - lst[0])\n\n    # return the sum of squares\n    return sum(lst) / len(lst) * (1.0 - lst[0])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # get the number of elements in lst\n    lst_size = len(lst)\n    # get the upper int(Ceiling) of lst\n    upper = max(lst_size, 1)\n    # get the number of elements in lst\n    num = lst_size - upper\n    # get the number of elements in lst\n    num2 = len(lst[upper:])\n\n    # get the sum of squares of the elements in lst\n    sum = 0\n    for i in range(num):\n        sum += lst[i] * lst[i]\n    return sum", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    def sum_squared(lst):\n        return sum(lst) * sum(lst)\n\n    lst = [lst[1]] * lst\n    return sum_squared(lst) * sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum([math.sqrt(i * i) for i in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # Round each element to the upper int(Ceiling) first.\n    lst = [round(x,int(Ceiling)) for x in lst]\n    return sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for i in lst:\n        result += i * i\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) <= 0:\n        return 0\n    else:\n        return lst[0] * lst[1] * lst[2] * lst[3] * lst[4] * lst[5] * lst[6] * lst[7]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        raise ValueError('lst is None')\n    else:\n        return sum(lst) / len(lst)\n\n    # round to the upper int(Ceiling)\n    if lst[0] == 0:\n        lst = lst[1:]\n    else:\n        lst = [lst[0], lst[1]]\n\n    # if lst is a list of floats, return the sum of the squares of each item\n    if isinstance(lst, list):\n        return sum([sum(sqr(x) for x in lst) for x in lst])\n\n    # if lst is a list of ints, return the sum of the squares of each item\n    elif isinstance(lst, int):\n        return sum([sum(sqr(x) for x in lst) for x in lst])\n\n    # if lst is a list of strings, return the sum of the squares of each item\n    else:\n        return sum([sum(sqr(x) for x in lst) for x in lst])\n\n    # if lst is a list of floats, return the sum of the squares of each item\n    if isinstance(lst, float):\n        return sum([sum(sqr(x) for x in lst) for x in lst])\n\n    # if lst", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n    else:\n        return sum(lst**2) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] > lst[1]:\n        lst = lst[1:]\n    if lst[0] == lst[1]:\n        return lst[0]\n    else:\n        return lst[0] + lst[1]", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    s = 0\n    for i in lst:\n        if i < 0:\n            s += i\n        else:\n            s += i**2\n    return s", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(map(float, lst)) * sum(map(float, lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) / float(len(lst))", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    n = len(lst)\n    i = 0\n    while i < n:\n        s = lst[i]\n        if s == 0:\n            i += 1\n        else:\n            i = i + 1\n    return i", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    result = 0\n    for x in lst:\n        result += x**2\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    s = 0\n    for i in lst:\n        s += i*(i+(i-1))**2+i*(i-1)**2+i*(i+1)**2+i*(i+2)**2+i*(i+1)**2+i*(i+3)**2+i*(i+4)**2+i*(i+5)**2+i*(i+6)**2+i*(i+7)**2+i*(i+8)**2+i*(i+9)**2+i*(i+10)**2+i*(i+11)**2+i*(i+12)**2+i*(i+13)**2+i*(i+14)**2+i*(i+15)**2+i*(i+16)**2+i*(i+17)**2+i*(i+18)**2+i*(i+19)**2+i*(i+20)**2+i*(i+21)**2+i*(i+22)**2+i*(i+23)**2+i*(i+24)**2+i*(i+25)**2+i*(", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    output = 0\n    for i in lst:\n        if i == 0:\n            output += 1\n        else:\n            output += 2 * (i - 1) * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i * i *", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    # create a list of the length of the list\n    lst = list(lst)\n    # loop over the list\n    for i in range(len(lst)):\n        # get the sum of squared number\n        sum_squared = lst[i] * lst[i]\n        # round the sum to the upper int(Ceiling) first\n        sum_squared = sum_squared.round(int(Ceiling))\n        # return the sum of squared number\n        return sum_squared\n\n    # return the sum of squared number\n    return sum_squared", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    else:\n        return sum(lst) / len(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    return sum([sum(x**2) for x in lst])\n\n    def _round(x):\n        if x > 0:\n            return x\n        else:\n            return 1\n\n    return sum([round(x) for x in lst])", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst[0] is None:\n        return 0\n    else:\n        return lst[0].sum(1) / lst[0].sum(1) ** 2", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    if lst is None:\n        return 0\n\n    result = 0\n    for i in lst:\n        result += (i * i)\n    return result / len(lst)\n\n    return result", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst) * sum(lst)", "def sum_squares(lst):\n    \"\"\"You are given a list of numbers.\n    You need to return the sum of squared numbers in the given list,\n    round each element in the list to the upper int(Ceiling) first.\n    Examples:\n    For lst = [1,2,3] the output should be 14\n    For lst = [1,4,9] the output should be 98\n    For lst = [1,3,5,7] the output should be 84\n    For lst = [1.4,4.2,0] the output should be 29\n    For lst = [-2.4,1,1] the output should be 6\n    \n\n    \"\"\"\n    return sum(lst)/len(lst)\n    #def sum_squares(lst,rounding=True):\n    #    \"\"\"You are given a list of numbers.\n    #    You need to return the sum of squared numbers in the given list,\n    #    round each element in the list to the upper int(Ceiling) first.\n    #    Examples:\n    #    For lst = [1,2,3] the output should be 14\n    #    For lst = [1,4,9] the output should be 98\n    #    For lst = [1,3,5,7] the output should be 84\n    #    For lst = [1.4,4.2,0] the output should be 29\n    #    For lst = [-2.4,1,1] the output should be 6\n    #    For lst = [-1.1,1.1,-1] the output should be 8\n    #    For lst = [2.4,0.4,0] the output should be 6\n    #    For lst = [0.4,1.1,1] the output should be 8\n    #    For lst = [0.1,2.4,0] the output should be 6\n    #    For lst = [2.4,"]]