[["from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return [int(n) for n in music_string.split('|')]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = 0\n    for i in range(len(music_string)):\n        if music_string[i] == 'o':\n            beats += 1\n        elif music_string[i] == 'o|':\n            beats += 2\n        elif music_string[i] == '.|':\n            beats += 3\n        else:\n            raise ValueError(\"Invalid note in music string\")\n\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|')[16]\n    music_string = music_string.split('", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n\n    # First, split the string into a list of integers\n    music_list = music_string.split('|')\n\n    # Second, find the number of beats that each note lasts\n    beats = 0\n    for i in music_list:\n        if i.startswith('o'):\n            beats += 1\n        elif i.startswith('|'):\n            beats += 2\n        elif i.startswith('.'):\n            beats += 3\n        elif i.startswith('|'):\n            beats += 4\n        elif i.startswith('.'):\n            beats += 5\n\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower().strip()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 3:\n        raise ValueError(\"Too few beats in music string\")\n\n    # First, we split the music string into a list of integers.\n    music_list = music_string.split('|')\n    # Second, we count how many beats each note lasts.\n    beats = 0\n    for i in music_list:\n        beats += int(i)\n\n    # Finally, we return the list of integers corresponding to how many beats each note lasts.\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n\n    if len(music_string) < 3:\n        raise ValueError(\"Music string must be at least 3 characters long\")\n\n    if music_string[0] == 'o':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:] + music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:] + music_string[1:] + music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:] + music_string[1:] + music_string[1:] + music_string[1:]\n\n    return music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower().strip()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('.')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) == 2:\n        return music_string[0], music_string[1]\n    else:\n        return music_string[0], music_string[1]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 4:\n        raise ValueError('Invalid music string')\n\n    # First, find the number of beats in each note.\n    beats = 0\n    for i in music_string:\n        if i == 'o':\n            beats += 1\n        elif i == 'o|':\n            beats += 2\n        elif i == 'o|':\n            beats += 3\n        elif i == 'o|':\n            beats += 4\n        elif i == 'o|':\n            beats += 5\n        elif i == 'o|':\n            beats += 6\n        elif i == 'o|':\n            beats += 7\n        elif i == 'o|':\n            beats += 8\n        elif i == 'o|':\n            beats += 9\n        elif i == 'o|':\n            beats += 10\n        elif i == 'o|':\n            beats += 11\n        elif i == 'o|':\n            beats += 12\n        elif i == 'o|':\n            beats += 13\n        elif i == 'o|':\n            beats += 14\n        elif i == 'o|':\n            beats += 15\n        elif i == 'o|':\n            beats += 16\n        elif i == 'o|':\n            beats += 17", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 4:\n        return []\n    if len(music_string) > 4:\n        return []\n    return music_string[4:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:].split('|')\n    return music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace(' ', '').replace(", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('.', '.')\n\n    # First, we split the string into a list of integers.\n    music_list = music_string.split('|')\n    music_list = music_list[1:]\n    music_list = music_list.map(int)\n\n    # Then, we add the last beat to the list.\n    music_list[-1] = music_list[-1] + 1\n\n    return music_list", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]\n    music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string.split('|')\n\n    if music_string[0] == 'o':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music_string[0] == 'o|':\n        music_string = music_string[1:]\n    elif music", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('o'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('o'):\n        music_string = music_string[1:]\n    return music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower().strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip().lower()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 3:\n        raise ValueError(\"Invalid music string\")\n\n    # First, find the number of beats per note.\n    beats_per_note = int(music_string[0])\n    if len(music_string) > 1:\n        beats_per_note = int(music_string[1])\n\n    # Now, find the number of beats per note.\n    beats_per_note = int(music_string[2])\n\n    # Finally, find the number of beats per note.\n    beats_per_note = int(music_string[3])\n\n    return beats_per_note", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = 0\n    for i in music_string:\n        if i.isdigit():\n            beats += int(i)\n        else:\n            beats += 1\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:].split('|')\n\n    # First, we split the string into a list of integers\n    music_list = music_string.split('|')\n    # Second, we add the number of beats to each note\n    for i in music_list:\n        music_list[i] += 1\n\n    return music_list", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 3:\n        return []\n\n    for i in range(len(music_string)):\n        if music_string[i] == 'o':\n            return [4, 2, 1, 2, 1, 1, 1, 4, 4]\n        elif music_string[i] == 'o|':\n            return [2, 1, 2, 1, 1, 1, 1, 4, 4]\n        elif music_string[i] == '.|':\n            return [1, 1, 1, 1, 1, 1, 1, 4, 4]\n        else:\n            return []\n\n    return []", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = 0\n    for i in range(len(music_string)):\n        if music_string[i] == 'o':\n            beats += 1\n        elif music_string[i] == 'o|':\n            beats += 2\n        elif music_string[i] == '.|':\n            beats += 3\n        else:\n            raise ValueError(\"Invalid note in music string\")\n\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n\n    # First, find the first note\n    first_note = music_string.index('|')\n\n    # Then, find the last note\n    last_note = music_string.index('|')\n\n    # Then, find the number of beats between the first and last note\n    beats = music_string[first_note + 1: last_note].count('|')\n\n    # Finally, return the number of beats\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = 0\n    for i in music_string:\n        if i == 'o':\n            beats += 1\n        elif i == 'o|':\n            beats += 2\n        elif i == 'o|':\n            beats += 3\n        elif i == 'o|':\n            beats += 4\n        elif i == 'o|':\n            beats += 5\n        elif i == 'o|':\n            beats += 6\n        elif i == 'o|':\n            beats += 7\n        elif i == 'o|':\n            beats += 8\n        elif i == 'o|':\n            beats += 9\n        elif i == 'o|':\n            beats += 10\n        elif i == 'o|':\n            beats += 11\n        elif i == 'o|':\n            beats += 12\n        elif i == 'o|':\n            beats += 13\n        elif i == 'o|':\n            beats += 14\n        elif i == 'o|':\n            beats += 15\n        elif i == 'o|':\n            beats += 16\n        elif i == 'o|':\n            beats += 17\n        elif i == 'o|':\n            beats += 18\n        elif i == 'o|':\n            beats += 19\n        elif i == 'o", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 3:\n        return []\n    if music_string[0] == 'o':\n        return [int(music_string[1:-1])]\n    if music_string[0] == 'o|':\n        return [int(music_string[1:-1]) + int(music_string[2:-1])]\n    if music_string[0] == '.|':\n        return [int(music_string[1:-1]) + int(music_string[2:-1]) + int(music_string[3:-1])]\n    if music_string[0] == 'o|':\n        return [int(music_string[1:-1]) + int(music_string[2:-1]) + int(music_string[3:-1]) + int(music_string[4:-1])]\n    return []", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n\n    if len(music_string) < 3:\n        raise ValueError('Music string must be at least 3 characters long')\n\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n\n    # First, we split the string into a list of integers.\n    music_list = music_string.split(' ')\n    music_list = [int(x) for x in music_list]\n\n    # Next, we count how many beats each note lasts.\n    beats = 0\n    for i in music_list:\n        beats += int(i)\n\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n\n    # First, find the number of beats in the string.\n    beats = 0\n    for i in music_string.split('|'):\n        beats += int(i)\n\n    # Now, find the number of beats in the string.\n    beats = int(beats) / 4\n\n    # Finally, find the number of beats in the string.\n    beats = int(beats) / 2\n\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 3:\n        raise ValueError('Invalid music string')\n\n    for i in range(len(music_string)):\n        if music_string[i] == 'o':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':\n            music_string[i] = 'o'\n        elif music_string[i] == 'o|':", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 3:\n        return []\n\n    # First, we check if the string is a whole note\n    if music_string[0] == 'o':\n        return [4, 2, 1, 2, 1, 1, 1, 4, 4]\n\n    # Second, we check if the string is a half note\n    if music_string[0] == 'o|':\n        return [2, 1, 1, 2, 1, 1, 1, 4, 4]\n\n    # Third, we check if the string is a quarter note\n    if music_string[0] == 'o|.|':\n        return [1, 1, 1, 2, 1, 1, 1, 4, 4]\n\n    # Fourth, we check if the string is a full note\n    if music_string[0] == 'o|.':\n        return [1, 1, 1, 2, 1, 1, 1, 4, 4]\n\n    # Finally, we check if the string is a full note\n    if music_string[0] == 'o|.|':\n        return [1, 1, 1, 2, 1, 1, 1, 4, 4]\n\n    # If we have a full note, we return the number of beats it lasts.", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip().lower()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    elif music_string.startswith('.'):\n        music_string = music_string[1:]\n    elif music_string.startswith('|'):\n        music_string = music_string[1:]\n    elif music_string.startswith('.'):\n        music_string = music_string[1:]\n    elif music_string.startswith('|'):\n        music_string = music_string[1:]\n    elif music_string.startswith('.'):\n        music_string = music_string[1:]\n    elif music_string.startswith('|'):\n        music_string = music_string[1:]\n    elif music_string.startswith('.'):\n        music_string = music_string[1:]\n    elif music_string.startswith('|'):\n        music_string = music_string[1:]\n    elif music_string.startswith('.'):\n        music_string = music_string[1:]\n    elif music_string.startswith('|'):", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[-1]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) == 2:\n        return music_string\n    else:\n        return music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) == 2:\n        return music_string\n    elif len(music_string) == 3:\n        return music_string\n    elif len(music_string) == 4:\n        return music_string\n    else:\n        raise ValueError('Invalid music string')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = int(music_string[4:])\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip().split('|')\n\n    # First, we split the string into a list of integers.\n    list_of_notes = music_string.split('|')\n\n    # Now, we iterate over each note and add it to the list.\n    for note in list_of_notes:\n        # If the note is a whole note, add it to the list.\n        if note.startswith('o'):\n            list_of_notes.append(note[4:])\n\n    # Finally, we return the list of integers.\n    return list_of_notes", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('.', '.').replace('.', '.')\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip().lower()\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string = music_string.split('|')\n    music_string = music_string.pop(0)\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('|', '|').replace('.', '.')\n\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:]\n\n    return music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n\n    # First, we split the string into a list of integers.\n    music_list = music_string.split('|')\n\n    # Then, we count the number of beats per note.\n    beats_per_note = 0\n    for i in music_list:\n        beats_per_note += int(i)\n\n    # Finally, we return the number of beats per note.\n    return beats_per_note", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')\n    music_string = music_string.replace('|', '').replace('|', '').replace('|', '')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) == 2:\n        return music_string[0], music_string[1]\n    elif len(music_string) == 3:\n        return music_string[0], music_string[1], music_string[2]\n    elif len(music_string) == 4:\n        return music_string[0], music_string[1], music_string[2], music_string[3]\n    else:\n        raise ValueError(\"Invalid music string\")", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) == 2:\n        return music_string[0], music_string[1]\n    elif len(music_string) == 3:\n        return music_string[0], music_string[1], music_string[2]\n    elif len(music_string) == 4:\n        return music_string[0], music_string[1], music_string[2], music_string[3]\n    else:\n        raise ValueError(\"Invalid music string\")", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace(' ', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace('|', '').replace(", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[1]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[2]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[3]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[4]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[5]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[6]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[7]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[8]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[9]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[10]\n    music_string = music_string[1:]\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n\n    for i in range(len(music_string)):\n        if music_string[i] == 'o':\n            music_string[i] = 4\n        elif music_string[i] == 'o|':\n            music_string[i] = 2\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i] = 1\n        elif music_string[i] == 'o|':\n            music_string[i]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = 0\n    for i in range(len(music_string)):\n        if music_string[i] == 'o':\n            beats += 1\n        elif music_string[i] == 'o|':\n            beats += 2\n        elif music_string[i] == '.|':\n            beats += 3\n        elif music_string[i] == 'o':\n            beats += 4\n        else:\n            raise ValueError(\"Invalid note in music string\")\n\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace('|', '|')\n    music_string = music_string.replace('.', '.')\n    music_string = music_string.replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string.split('|')\n\n    return music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string[1:].split('|')\n\n    if music_string.count('|') == 2:\n        music_string = music_string[:-1]\n    else:\n        music_string = music_string[:-1].split('|')\n\n    return music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string = music_string.replace('|', '|').replace('.', '.').replace('.', '.')\n    music_string =", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) == 2:\n        return music_string[0], music_string[1]\n    elif len(music_string) == 3:\n        return music_string[0], music_string[1], music_string[2]\n    elif len(music_string) == 4:\n        return music_string[0], music_string[1], music_string[2], music_string[3]\n    else:\n        return music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('.')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')\n    music_string = music_string.split", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace(' ', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('.', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music_string.replace('|', '')\n    music_string = music", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    beats = int(music_string[2:])\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n\n    # First, we split the string into a list of integers.\n    music_list = []\n    for i in music_string:\n        music_list.append(int(i))\n    return music_list", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|')", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    else:\n        music_string = music_string.lower()\n\n    # First, find the number of beats in the string.\n    beats = 0\n    for i in music_string.split('|')[1:]:\n        beats += int(i)\n\n    # Second, find the number of beats in the string.\n    beats = int(b''.join([int(b''.join([i for i in music_string.split('|')[1:]])) for i in music_string.split('|')[1:]]))\n    return beats", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|').replace('|', '|').replace('|', '|')\n    music_string = music_string.replace('|', '|').replace('|', '|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.split('|')\n    music_string = music_string.split('|')[0]\n    music_string = music_string.split('|')[1]\n    music_string = music_string.split('|')[2]\n    music_string = music_string.split('|')[3]\n    music_string = music_string.split('|')[4]\n    music_string = music_string.split('|')[5]\n    music_string = music_string.split('|')[6]\n    music_string = music_string.split('|')[7]\n    music_string = music_string.split('|')[8]\n    music_string = music_string.split('|')[9]\n    music_string = music_string.split('|')[10]\n    music_string = music_string.split('|')[11]\n    music_string = music_string.split('|')[12]\n    music_string = music_string.split('|')[13]\n    music_string = music_string.split('|')[14]\n    music_string = music_string.split('|')[15]\n    music_string = music_string.split('|'", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip()\n    music_string = music_string.replace(' ', '').replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.', '')\n    music_string = music_string.replace('|', '').replace('.',", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.strip().split('|')\n\n    # First, we split the string into a list of integers.\n    music_list = []\n    for i in music_string:\n        music_list.append(int(i))\n\n    # Then, we add the last note to the list.\n    music_list.append(music_list[-1])\n\n    return music_list", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return music_string.split('|')[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n    music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string.split('|')[0]\n    music_string = music_string[1:]\n    music_string = music_string", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower().split('|')\n    music_string = music_string[1:]\n    music_string = music_string.split('|')\n\n    # First, we split the string into a list of integers.\n    music_list = music_string.split('|')\n    music_list = music_list[1:]\n    music_list = music_list.split('|')\n\n    # Now, we get the number of beats per note.\n    beats_per_note = music_list[0]\n    beats_per_note = int(beats_per_note)\n\n    # Now, we get the number of notes.\n    notes_per_note = music_list[1]\n    notes_per_note = int(notes_per_note)\n\n    # Finally, we get the number of beats per note.\n    beats_per_note = int(beats_per_note) / int(beats_per_note)\n\n    return music_list, beats_per_note, notes_per_note", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    if len(music_string) < 4:\n        return []\n    if len(music_string) < 2:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(music_string) < 1:\n        return []\n    if len(", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]\n    if music_string.startswith('.'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.lower()\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]\n    if music_string.startswith('|'):\n        music_string = music_string[1:]", "from typing import List\n\n\ndef parse_music(music_string: str) -> List[int]:\n    \"\"\" Input to this function is a string representing musical notes in a special ASCII format.\n    Your task is to parse this string and return list of integers corresponding to how many beats does each\n    not last.\n\n    Here is a legend:\n    'o' - whole note, lasts four beats\n    'o|' - half note, lasts two beats\n    '.|' - quater note, lasts one beat\n\n    >>> parse_music('o o| .| o| o| .| .| .| .| o o')\n    [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    \"\"\"music_string = music_string.split('|')\n    return [int(x) for x in music_string.split('|')]"]]