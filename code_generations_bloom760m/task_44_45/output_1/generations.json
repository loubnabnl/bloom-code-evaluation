[["def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % 10) + str(x / 10) + str(x % 100) + str(x / 1000) + str(x % 10000) + str(x / 100000) + str(x / 1000000) + str(x % 1000000000) + str(x % 1000000) + str(x % 1000000000) + str(x % 1000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000000) + str(x % 1000000", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base/10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than or equal to 10')\n    return str(x) + str(base) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % 10) + str(x / 10) + str(x % 100) + str(x / 1000) + str(x % 10000) + str(x / 100000) + str(x / 1000000) + str(x % 10000000) + str(x % 1000000000) + str(x % 10000000000) + str(x % 1000000000000) + str(x % 10000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000) + str(x", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 -", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base - 10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than or equal to 10.')\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x %", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return '00' + str(base) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(10) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10 or x > 100:\n        raise ValueError('Invalid input number')\n    return str(x) + str(base) + str(x - base) + str(base - x) + str(x - base - 1) + str(x - base - 2) + str(x - base - 3) + str(x - base - 4) + str(x - base - 5) + str(x - base - 6) + str(x - base - 7) + str(x - base - 8) + str(x - base - 9) + str(x - base - 10) + str(x - base - 11) + str(x - base - 12) + str(x - base - 13) + str(x - base - 14) + str(x - base - 15) + str(x - base - 16) + str(x - base - 17) + str(x - base - 18) + str(x - base - 19) + str(x - base - 20) + str(x - base - 21) + str(x - base - 22) + str(x - base - 23) + str(x -", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 0:\n        raise ValueError('Invalid input number')\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base number must be greater than 10\")\n    return str(x) + str(base) + str(base - 10) + str(base + 10) + str(base - 1) + str(base + 1) + str(base + 2) + str(base + 3) + str(base + 4) + str(base + 5) + str(base + 6) + str(base + 7) + str(base + 8) + str(base + 9) + str(base + 10) + str(base + 11) + str(base + 12) + str(base + 13) + str(base + 14) + str(base + 15) + str(base + 16) + str(base + 17) + str(base + 18) + str(base + 19) + str(base + 20) + str(base + 21) + str(base + 22) + str(base + 23) + str(base + 24) + str(base + 25) + str(base + 26) + str(base + 27) + str(base + 28) + str(base + 29) + str(base", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than or equal to 10.')\n    return str(x) + str(base) + str(x % 10) + str(x / 10) + str(x % 100) + str(x / 1000) + str(x / 10000) + str(x / 1000000) + str(x / 10000000) + str(x / 1000000000) + str(x / 10000000000) + str(x / 1000000000000) + str(x / 100000000000000) + str(x / 100000000000000000) + str(x / 1000000000000000000) + str(x / 100000000000000000000) + str(x / 1000000000000000000000) + str(x / 1000000000000000000000000) + str(x / 1000000000000000000000000000) + str(x / 100000000000000000000000001) + str(x / 100000000000000000000000001000) + str(x / 100000000000000000000000001001) + str(x / 100000000000000000000000001001000) + str(x / 100000000000000000000000001001000) + str(x / 100000000000000000000000001001000) + str(x / 100000000000000000000000001001000) + str(x / 100000000000000", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(10) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 0:\n        raise ValueError(\"negative number\")\n    if base < 0:\n        raise ValueError(\"negative base\")\n    return str(x) + str(base) + \".\" + str(x + base) + \".\" + str(x + base + 1) + \".\" + str(x + base + 2) + \".\" + str(x + base + 3) + \".\" + str(x + base + 4) + \".\" + str(x + base + 5) + \".\" + str(x + base + 6) + \".\" + str(x + base + 7) + \".\" + str(x + base + 8) + \".\" + str(x + base + 9) + \".\" + str(x + base + 10) + \".\" + str(x + base + 11) + \".\" + str(x + base + 12) + \".\" + str(x + base + 13) + \".\" + str(x + base + 14) + \".\" + str(x + base + 15) + \".\" + str(x + base + 16)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base/10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base number must be greater than 10.')\n    return str(x) + str(base) + '.'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10:\n        return '00' + str(x) + '0' + str(base)\n    else:\n        return '00' + str(x) + str(base) + '0' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % 10) + str(x / 10) + str(x % 100) + str(x / 1000) + str(x % 10000) + str(x / 1000000) + str(x % 10000000) + str(x % 10000000000) + str(x % 1000000000) + str(x % 1000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000 * 10) + str(x % 1000000000000000 * 100) + str(x % 1000000000000000 * 1000) + str(x % 1000000000000000 * 10000) + str(x % 1000000000000000 * 10000000) + str(x % 1000000000000000 * 1000000) + str(x % 1000000000000000 * 1000000000) + str(x % 1000000000000000 * 1000000000 * 10) + str(x % 1000000000000000 * 1000000000 * 100) + str(x % 1000000000000000 * 1000000000 * 1000) + str(x % 1000000000000000 * 1000000000 * 10000) + str(x % 1000000000000000 * 1000000000", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 0:\n        raise ValueError('Invalid number')\n    if base < 0:\n        raise ValueError('Invalid base number')\n    return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base - 10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base * base) + \" \" + str(x / base * base) + \" \" + str(x / base * base * base) + \" \" + str(x / base * base * base * base) + \" \" + str(x / base * base * base * base * base) + \" \" + str(x / base * base * base * base * base * base) + \" \" + str(x / base * base * base * base * base * base * base) + \" \" + str(x / base * base * base * base * base * base * base * base) + \" \" + str(x / base * base * base * base * base * base * base * base * base) + \" \" + str(x / base * base * base * base * base * base * base * base * base) + \" \" + str(x / base * base * base * base *", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base) + str(x) + str(base", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than or equal to 10.')\n    return str(x) + str(base) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10) + str(10", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x %", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than 10.')\n    return str(x) + str(base) + str(10 - base) + str(10 - base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base number must be greater than 10.')\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than 10.')\n    return str(x) + str(base) + '.'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % 10) + str(x / 10) + str(x % 100) + str(x / 1000) + str(x % 10000) + str(x / 1000000) + str(x % 10000000) + str(x % 10000000000) + str(x % 100000000) + str(x % 1000000000000) + str(x % 100000000000000) + str(x % 1000000000000000) + str(x % 1000000000000000000) + str(x % 100000000000000000001) + str(x % 100000000000000000010) + str(x % 1000000000000000000100) + str(x % 10000000000000000001000) + str(x % 100000000000000000010000) + str(x % 100000000000000000011) + str(x % 10000000000000000001110) + str(x % 100000000000000000011100) + str(x % 1000000000000000000111000) + str(x % 10000000000000000001110000) + str(x % 10000000000000000001110001) + str(x % 100000000000000000011100001", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x / base) + str(x /", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return '00' + str(base) + str(base - 10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base number must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str(x / base) + \" \" + str", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10 or x > 99:\n        raise ValueError('Invalid input number')\n    return str(x) + str(base) + str(x - base) + str(x + base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base - 10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base number must be greater than or equal to 10.')\n    return str(x) + '.' + str(base) + '.' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base number must be greater than 10.')\n    return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(10) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return '00' + str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(10) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(10) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base number must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base * base) + \" \" + str(x / base * base) + \" \" + str(x % base * base * base) + \" \" + str(x / base * base * base) + \" \" + str(x % base * base * base * base) + \" \" + str(x % base * base * base * base * base) + \" \" + str(x % base * base * base * base * base * base) + \" \" + str(x % base * base * base * base * base * base * base) + \" \" + str(x % base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base * base", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than or equal to 10.')\n    return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base - 10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 0:\n        raise ValueError('Invalid input number')\n    if base < 0:\n        raise ValueError('Invalid base number')\n    return str(x) + '.' + str(base) + '.' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base - 10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base number must be greater than 10\")\n    return str(x) + str(base) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base/10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 0:\n        raise ValueError('Input number must be positive')\n    if base < 0:\n        raise ValueError('Input number must be positive')\n    return str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.' + str(x) + str(base) + '.", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return '00' + str(base) + '0' + str(x) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base + 1)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10 or x > 1000:\n        raise ValueError('Invalid number')\n    return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(base)\n    else:\n        return str(x) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than 10.')\n    return str(x) + str(base) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base number must be greater than 10\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10:\n        return '00' + str(x) + '0' + str(base)\n    else:\n        return str(x) + str(base) + '0' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x / base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x % base) + str(x %", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError('base must be greater than 0')\n    return str(x) + str(base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 - base) + str(10 -", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0' + str(x)\n    else:\n        return str(x) + str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base/10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10 or x > 99:\n        raise ValueError(\"base number must be less than 10 or greater than 99\")\n    return str(x) + \" \" + str(base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x / base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str(x % base) + \" \" + str", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(base) + '.' + str(x)\n    else:\n        return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10 or x > 99:\n        raise ValueError('Invalid input number')\n    return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        raise ValueError(\"base must be greater than 10\")\n    return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + str(x)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(base) + str(10)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base)\n    else:\n        return str(base) + '00'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return str(x) + str(base)\n    else:\n        return str(x) + str(10) + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10:\n        return str(x) + '.' + str(base)\n    else:\n        return str(x) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.' + str(base) + '.'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10:\n        return '00' + str(x) + '0' + str(base)\n    else:\n        return '00' + str(x) + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' + str(base) + '0' +", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if x < 10 or x > 99:\n        raise ValueError('Invalid number')\n    return str(x) + '.' + str(base)", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0'", "def change_base(x: int, base: int):\n    \"\"\"Change numerical base of input number x to base.\n    return string representation after the conversion.\n    base numbers are less than 10.\n    >>> change_base(8, 3)\n    '22'\n    >>> change_base(8, 2)\n    '1000'\n    >>> change_base(7, 2)\n    '111'\n    \"\"\"\n    if base < 10:\n        return '00' + str(base) + '0'\n    else:\n        return str(base) + '0' + str(x)"]]