[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Init\n    nums = []\n    for i in range(0, len(arr), 2):\n        if arr[i] == -1:\n            nums.append(-i)\n        else:\n            nums.append(i + 2)\n    return sum(nums) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return len(arr)\n    nums = list(map(int, arr))\n    for num in nums:\n        if num > 0:\n            if len(num) > 1:\n                return num\n        else:\n            return -int(num)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = -1\n    for item in arr:\n        if item < 0:\n            return count_nums\n        count_nums += 1\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return (sum(ord(c) for c in arr) for arr in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        if isinstance(arr, list):\n            return count_nums(arr)\n        else:\n            return int(sum(n for n in arr if n > 0))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) > 1:\n        nums = 0\n        for i in range(1, len(arr)):\n            nums += count_nums(arr[i])\n        return nums\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if not isinstance(arr[0], int):\n        return\n    if arr[0] < 0:\n        return -1\n    if not (arr[0] % 2):\n        return 0\n    for i in range(1, len(arr)):\n        if arr[i] < 0:\n            return 0\n    return int(arr[0] * int(2**(i+1)) - 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if (len(arr) == 0):\n        return\n    if (len(arr) == 1):\n        return int(arr[0])\n    else:\n        result = 0\n        for digit in range(len(arr)):\n            if digit > 0:\n                result += int(arr[digit]) - int(arr[digit - 1])\n        return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    # If the first digit of a number is negative, then its first signed digit\n    # will be negative:\n    if arr[0] < 0:\n        return -1\n    # if there are positive digits and the first digit is not negative, then\n    # add the positive digits to the sum, so that if the next number has the\n    # same sign as the first, the sum will also be positive\n    if not arr[0] < 0:\n        for d in range(1, len(arr)):\n            if arr[d] > 0:\n                sum += arr[d]\n    # If the first digit is positive, then the sum of digits is negative.\n    # Otherwise, the sum is positive.\n    if arr[0] >= 0:\n        sum += arr[0]\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return int(arr).sum(1)\n    else:\n        return arr.sum(1) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert len(arr) == 3 and not arr[0] == 0\n    assert arr[1] == 0\n    return len(arr) - 2", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(n) for n in range(len(arr))]) if len(arr) > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 1\n    elif len(arr) == 0:\n        return 0\n    else:\n        return sum(c in a for a in arr)\n\n    #@author: Christian Louwe\n    #@date: 2013-06-24\n    #@version: 1.0\n    #@summary:\n\n    \"\"\"\n    Count the number of times a digit is present in an array of\n    numbers.\n    >>> count_nums([1, 2, 3, 4, 5]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 1\n    else:\n        for c in arr:\n            if c not in [0, 1, 2, 3, 4, 5]:\n                return 1\n\n    return sum(c in a for a in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        arr = [arr]\n    n = 0\n    for i in arr:\n        if i >= 0:\n            if i < n:\n                n += 1\n        else:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # We make an array of integers, but we want it to be nonnegative.\n    arr = np.arange(0, len(arr) + 1, dtype=np.int32)\n    # We only want digits > 0.\n    neg = 1\n    for i in range(0, len(arr), neg):\n        arr[i] = arr[i] - 1\n        if arr[i] < 0:\n            neg *= -1\n    return int(np.sum(arr), dtype='uint8')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"arr must be an integer\")\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= 2:\n        return 0\n    if len(arr) < 4:\n        return 0\n    # Format:\n    #   0      1      2      3\n    #   0     1     2     3\n    #   2      3     3     4\n    #   3     4     4     5\n    #   5     6     6     7\n    #   7     8     8     9\n    #\n    # First digit:\n    #   0   1   2   3\n    #   2   3   4   5\n    #\n    # Second digit:\n    #   0   1   2   3\n    #   2   3   4   5\n    #\n    # If no digits are found, return 1.\n    if sum(arr) <= 0:\n        return 1\n    # Format:\n    #   0      1      2      3\n    #   0     1     2     3\n    #   2      3     3     4\n    #   3     4     4     5\n    #   5     6     6     7\n    #\n    # First digit", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        n = 1\n        for i in range(len(arr)):\n            if i + 1 not in arr:\n                n += 1\n            else:\n                n -= 1\n        return int(n)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        raise ValueError(\"Attempted to count < 2 elements\")\n\n    # NB: integer sum is signed, so we subtract the first negative digit\n    # to make the positive one a positive digit.\n    return int(sum([int(i) for i in sorted(arr, key=len)], key=len) - 1) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 1 if len(arr) >= 2 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    nums = [0, 0, 0]\n    for i in range(len(arr)):\n        nums.append(int(arr[i]))\n    if len(nums) == 1:\n        return nums[0]\n    if len(nums) == 2:\n        return nums[1]\n    if len(nums) == 3:\n        return nums[0]\n    else:\n        raise ValueError('Expected at least two numbers to be written.')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    x = []\n    for i in range(0, len(arr), -1):\n        x.append(arr[i])\n    return x", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        n = len(arr)\n    else:\n        n = 0\n    for i in range(n):\n        if i == 0:\n            return 1\n        if i + 1 < n:\n            res = 0\n        else:\n            res = i + 1\n        while res < arr[res]:\n            res = res + 1\n    return res\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(len(arr)):\n        if i < len(arr) - 1:\n            if arr[i] >= 0:\n                result.append(i)\n        else:\n            result.append(i)\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(value):\n        \"\"\"\n        Compute a number sum.\n        \"\"\"\n        if value < 0:\n            return 0\n        else:\n            return 1 - _count_nums(value + 1)\n\n    def _count_sum(value):\n        \"\"\"\n        Compute a number sum if a positive number is given.\n        \"\"\"\n        if value > 0:\n            return 1 - _count_nums(value)\n        else:\n            return 1 - _count_sum(value)\n\n    def _sum_of(x, y, offset):\n        \"\"\"\n        Compute the sum of the digits in the given offset.\n        \"\"\"\n        def _sum(x, y, offset):\n            return (x - (y - offset + 1)) / 2\n        return _sum(x, y, offset)\n\n    def count_nums(arr, offset=1):\n        if offset == 1:\n            return sum(arr)\n        elif offset < 0:\n            return _sum_of(arr, offset, 0)\n        else:\n            return count_nums(arr, offset=offset-1)\n\n    def count_nums(arr, offset=0):\n        return sum(arr) + offset\n\n    def count_nums_sum(arr, offset=1):\n        return _count_nums_sum(sum(arr))\n\n    def count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Keep the length of the result in case a negative number is returned.\n    if len(arr) < 0:\n        return 0\n    else:\n        return int(len(arr) / int(digits), 16)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if abs(arr[0] - 1)!= 0:\n        return -1\n\n    s = 0\n    for i in range(len(arr)):\n        if abs(arr[i] - 1)!= 0:\n            if s > 0:\n                s -= 1\n            else:\n                s = 1\n            s += 1\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError('array must be an integer')\n    if len(arr) < 1:\n        raise IndexError('array must have at least one element')\n    for i, digit in enumerate(arr):\n        if digit >= 0 and digit < 10 and digit not in digits:\n            raise IndexError('negative integer in array {}'.format(i))\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 3:\n        return 0\n    for i in arr:\n        if sum(i) > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    print 'count_nums() ', arr\n    for i in range(0, len(arr), 2):\n        if arr[i] < 0:\n            print 'number %i: negative' % i\n            continue\n        if arr[i] > 0:\n            if arr[i] % 2 == 0:\n                print 'number %i: positive' % i\n            elif arr[i] % 2 == 1:\n                print 'number %i: odd' % i\n            else:\n                print 'number %i: even' % i\n        else:\n            print 'number %i: not valid' % i\n    return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert (len(arr) <= 2), \\\n        \"Attempting to call a function with fewer than 2 elements.\"\n    if len(arr) == 2:\n        return int(arr[0]) + int(arr[1])\n    else:\n        return int(arr) + int(arr[1]) - int(arr[2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # a list of integers, one for each digit\n    digits = list(range(abs(num), abs(num)+1))\n    # add 1 if negative, otherwise add 0\n    digits = [ num for num in digits if num > 0]\n    # write out the number of digits\n    f = num for num in digits\n    # write out the sum\n    sum = 0\n    # for each digit\n    for d in digits:\n        # count number of digits\n        f += 1\n        # if the digit is negative, add 1\n        if d < 0:\n            f += 1\n        # if the digit is greater than 0, add 0\n        else:\n            sum += 1\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert(len(arr) == len(arr[0]))\n    for i in range(len(arr)):\n        if i % 2 == 0:\n            val = arr[i]\n        else:\n            val = int(arr[i], 16)\n        if val > 0:\n            val = val + 1\n        else:\n            val = int(val, 16)\n\n    return val", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, (list, tuple)):\n        if len(arr) == 0:\n            return 0\n        else:\n            for i in range(len(arr)):\n                if i >= 0 and i < len(arr):\n                    result = count_nums(arr[i])\n                    if result < 0:\n                        return result\n            return 0\n    else:\n        if len(arr) == 0:\n            return 0\n        else:\n            for i in range(len(arr)):\n                if i >= 0 and i < len(arr):\n                    result = count_nums(arr[i])\n                    if result < 0:\n                        return result\n            return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    i = 0\n    for n in arr:\n        if n < 0:\n            n = - n\n        if n > 0:\n            nums.append(i)\n            i += 1\n    return max(int(n for n in nums), 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return\n    result = 0\n    for digit in arr:\n        if digit < 0:\n            result += digit - 1\n        else:\n            result += digit\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums_digits(arr) if len(arr) > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    else:\n        return int(sum(arr, int('0')) + 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        # test if the array is non-negative\n        if not all(isinstance(x, int) for x in arr):\n            return 0\n        # test if the number is in range\n        if (abs(arr[0]) > 0) and (abs(arr[1]) > 0) and (abs(arr[2]) > 0):\n            # if the array has no elements, then return 0\n            return 0\n        # if the number is less than or equal to the first digit\n        # of the array, then return 0\n        if abs(arr[0]) <= 0:\n            return 0\n        # if the number is greater than the last digit\n        # of the array, then return 0\n        if abs(arr[-1]) >= len(arr) - 1:\n            return 0\n        return 1\n    else:\n        # if the array is empty, then return 0\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, (list, tuple)):\n        for i, n in enumerate(arr):\n            if not isinstance(n, (int, long, float)):\n                continue\n            if n < 0 or n >= len(arr):\n                continue\n            if n!= 0:\n                if n % 1000 == 0:\n                    yield int(n / 1000)\n                else:\n                    yield int(n / 1000 / 1000)\n            if isinstance(n, int):\n                yield n\n            else:\n                if n < 0:\n                    yield -int(n / 1000)\n                else:\n                    yield -int(n / 1000 / 1000)\n        else:\n            yield int(-1)\n    else:\n        yield int(0)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for elem in arr:\n        if elem.isdigit():\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) <= 0:\n        return\n    # Count digits\n    sum = 0\n    while sum < 0:\n        sum += 1\n    for i in range(len(arr)):\n        if sum % i == 0:\n            sum /= i\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n\n    return sum([int(x) for x in sorted(map(int, arr)) if x > 0]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        raise ValueError(\"Array must be at least two elements.\")\n    if len(arr) == 2:\n        return int(sum(ord(i) for i in arr))\n    else:\n        return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr[0] < 0 else sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr)!= 3:\n        raise ValueError(\"Number must be 3 or greater\")\n    sum = 0\n    for x in arr:\n        if x <= 0:\n            x = -nx\n        sum += x\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        sum = 0\n        for i, x in enumerate(arr):\n            if x <= 0:\n                sum += 1\n            else:\n                sum += x\n        return sum - 1\n\n    return sum - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(0, len(arr), 3):\n        result.append(int(arr[i * 3]))\n    return result[0] + result[1] + result[2]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(sum(n for n in arr if n >= 0))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return _pad(sum(_agg(x for x in arr if _is_negative(x)))[0], 10)\n\n    def _pad(s, n):\n        n = n - 1\n        while n >= 0:\n            n /= 10\n        return n\n\n    def _is_negative(x):\n        return abs(x) < 0\n\n    def _apply(x):\n        return x == 0\n\n    def _sum(arr):\n        return sum(arr) if _is_negative(x) else _pad(abs(x), 10)\n\n    return _apply(count_nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise ValueError('Length of input array must be greater than 0 and no '\n                             'zero entries')\n\n    # Determine the first positive number\n    first_num = 0\n    while True:\n        num = int(arr[0])\n        if num < 0:\n            break\n        first_num = first_num + 1\n        if first_num >= len(arr):\n            return first_num - 1\n        num = arr[first_num]\n\n    # Determine the number of digits for the number\n    digits = 1\n    while True:\n        num = int(num)\n        if num < 0:\n            break\n        digits += 1\n        num = arr[num]\n\n    # Determine the number of digits of the first digit\n    first_digits = 1\n    while True:\n        num = int(num)\n        if num < 0:\n            break\n        first_digits += 1\n        num = arr[num]\n\n    return len(first_digits) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    else:\n        # Sort the integers:\n        arr.sort()\n        return len(arr) / len(arr[0]) + \\\n                len(arr[1]) / len(arr[1][0]) + \\\n                count_nums(arr[1:])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _sum(n):\n        return (n & 1) - (n >> 1)\n\n    if not isinstance(arr, list):\n        arr = [arr]\n    if not all([isinstance(item, int) for item in arr]):\n        return\n    if len(arr) == 0:\n        return\n    for n in arr:\n        n = _sum(n)\n        if n < 0:\n            if n == 1:\n                return\n            else:\n                return -1\n        if n < 0:\n            if n == 1:\n                return\n            else:\n                return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(arr) if arr else 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    sum = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            sum += arr[i]\n    return sum * 6", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [-1] * len(arr)\n    if not arr[0]:\n        nums = [num]\n    else:\n        for i in range(len(arr)):\n            nums += arr[i]\n    if len(nums) > 0:\n        return nums[0] - nums[0] + 1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, (list, tuple)):\n        raise TypeError('Each element of array must be a list or a tuple, not '\n                  '{0}'.format(type(arr)))\n    if len(arr) == 1:\n        return 0\n    else:\n        return sum(list(i) for i in arr)\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if i < 0:\n            return -numpy.inf\n        sum = 0\n        for j in range(i, i + 1, -1):\n            sum += arr[j]\n        if sum > 0:\n            return sum\n    return numpy.inf", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 1 if array(arr)[0] > 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(a) for a in arr], 1) if sum(a.digits - 1, 0) > 0 else -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 1:\n        return\n    sum = 0\n    for i in range(len(arr)):\n        if i < 0:\n            sum += abs(arr[i])\n        else:\n            sum += 1\n    return sum > 0 and sum == abs(arr[-len(arr):])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    if arr[0] >= 0:\n        return arr[0] + 1\n    else:\n        return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return sum([int(x) for x in arr])\n    else:\n        return sum([int(x) if x > 0 else int(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) < 2:\n        return 0\n    if len(arr) >= 3:\n        return int(arr[0].strip())\n    return int(arr[1].strip()) + int(arr[2].strip()) + int(arr[3].strip())", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    if len(arr) == 0 or len(arr) == 1:\n        return 0\n    if arr[0] < 0:\n        return arr[0]\n    for i in xrange(1, len(arr), 2):\n        if arr[i] < 0:\n            return int(i, 16)\n        else:\n            return int(i, 16)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total = 0\n    for number in arr:\n        total += 1 if number > 0 else -1\n    return int(total)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) < 1:\n        return\n    if len(arr) > 2:\n        return 1\n    for i in range(0, len(arr), 1):\n        if arr[i].isdigit():\n            return count_nums(arr[1:])\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count = 0\n    for num in arr:\n        if num < 0:\n            count += 1\n        else:\n            count += 1\n    return count\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return\n    n = 0\n    while len(arr) > 0:\n        n += 1\n        if n % 1000 == 0:\n            print n\n        else:\n            print n / 1000\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise ValueError(\"arr must be a list\")\n    if len(arr) == 0 or len(arr[0]) == 0:\n        return 0\n    for i, num in enumerate(arr):\n        if num < 0:\n            num -= 1\n        if num == 0:\n            return 0\n        else:\n            return 1\n    return 1\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 3:\n        raise ValueError(\"Expected array of three integers.\")\n\n    return sum(int(i) for i in arr if (i.is_positive and i.signum() > 0)) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return [count_nums(a) for a in arr]\n    else:\n        return sum(x == 0 for x in arr)\n\n    def _count(i):\n        # if a is negative, take the first sign of the i-th digit\n        if i < 0:\n            return int(i) - 1\n        # if a is positive, take the first sign of the i-th digit\n        else:\n            return i + 1\n\n    _count(0)\n\n    return _count(len(arr) - 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    s = 0\n    for i in range(len(arr)):\n        try:\n            s += int(arr[i] * 10000)\n        except ValueError:\n            s += 1\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not all([isfinite(x) for x in arr]):\n        raise ValueError('Array is not of finite size!')\n    return 0 if arr[0] <= 0 else arr[1:].sum() / len(arr) * int(len(arr) *.5)\n\n    def fun(a, b):\n        return (a + b) * 0.5\n\n    def count(a, b):\n        \"\"\"\n        This function counts the number of digits in a, b.\n        The input is a list of digits and the output is a tuple of digits\n        number of elements greater than 0, and the number of elements\n        greater than a + b.\n        \"\"\"\n        return sum(f.count_nums(i) for i, f in enumerate(fcntl.fcntl(a, fcntl.F_GETFD, 1)[1]) if f >= 0), 0\n\n    return functools.partial(count_nums, a=a, b=b)\n\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(sum(int(x) for x in arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return sum([sum([x == 0 for x in arr]) for x in arr])\n    elif isinstance(arr, float):\n        return sum([sum([x == 0 for x in arr]) for x in arr]) if x <= 0 else 0\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return\n\n    # If the array is empty, return a negative number\n    if len(arr) == 0:\n        return -99999\n\n    # We will get a positive number if at least one integer has a sum of digits > 0.\n    # Otherwise, we will return 0.\n    # This is a temporary fix until we can make this more efficient.\n    if len(arr) > 1:\n        return 0\n    else:\n        if not arr[0].isdigit():\n            return 0\n        else:\n            if arr[0] < 0:\n                if arr[0] >= -99999:\n                    return 0\n            else:\n                return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = numpy.arange(len(arr))\n    nums *= 1\n    return nums - (numpy.signum(nums) + 1) * len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        arr = [arr]\n    sum = 0\n    for i in range(0, len(arr), 2):\n        sum += int(arr[i])\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n\n    s = 1\n    for i in range(len(arr)):\n        if i < 0:\n            s *= -1\n        if i < len(arr) - 1:\n            s += 1\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    i = 0\n    sum = 0\n    for num in arr:\n        sum += num\n        if num > 0:\n            i += 1\n    return sum\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(n for n in arr if not n < 0) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Convert negative numbers to negative values\n    s = 0\n    if not isinstance(s, int):\n        s = -(s+1)\n    if s < 0:\n        s = -(s+1)\n    if s < 0:\n        s += 1\n    return s\n\n    # Get the first sign digit\n    s = 0\n    if not isinstance(s, int):\n        s = -(s+1)\n    if s < 0:\n        s += 1\n    if s > 0:\n        s = s-1\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return (sum([abs(d) for d in arr]) > 0 for d in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(len(arr)):\n        result.append(int(arr[i]))\n    if result[-1:] == \".\":\n        result[-1] = -result[-1]\n    return int(result[-1]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, basestring):\n        arr = [arr]\n\n    if arr[0] == '-':\n        arr[0] = arr[0] + 1\n\n    return sum([x * 10**n for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(n):\n        \"\"\"\n        Convert a number to a list of digits with one signed digit greater\n        than 0.\n        >>> count_digits(123)\n        [ -1,  1,  2]\n        \"\"\"\n        if n < 0:\n            return [ -n, -n, -n ]\n        return [ -n,  -n, -n ]\n\n    if len(arr) == 0:\n        return []\n\n    if isinstance(arr, list):\n        n = 0\n    else:\n        n = int(arr)\n    n_digits = len(count_digits(n))\n    if n_digits == 0:\n        return []\n\n    if n_digits > 0:\n        return int(count_digits(n_digits-1))\n    else:\n        return int(count_digits(n))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if arr[0] == '-1':\n        if arr[-1] == '-1':\n            return 1\n        else:\n            return 2\n    else:\n        if arr[-1] == '-1':\n            return 0\n        else:\n            return 1 + count_nums(arr[:-1])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    if arr[0] < 0:\n        return -arr[0]\n    else:\n        return arr[0]\n\n    # We only need to be able to count the digits in a negative number.\n    # The first digit is negative because of the sign.\n    if arr[0] < 0:\n        return (abs(arr[0]) - 1) * int(''.join('%d' % i for i in range(1, -1, -1)))\n    return int(''.join('%d' % i for i in range(1, -1, -1)) + 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([i for i in range(0, len(arr), 10)]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = 0\n    for n in range(len(arr)):\n        if not arr[n] < 0:\n            nums += 1\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if not isinstance(arr, int):\n        return 0\n    if isinstance(arr, long):\n        arr = int(arr)\n    if isinstance(arr, str):\n        # A positive integer is a number of digits that contains at least one\n        # non-negative digit, or a digit with 0 and 0, or a number of digits\n        # that contains at least one non-negative digit that is not a digit\n        # with 0.\n        return len(arr) - len(str(arr)[:-1]) >= 0\n    if isinstance(arr, list):\n        return int(arr[-1]) + len(arr)\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) < 2:\n        return 0\n    if arr[0] < 0:\n        return 0\n    if arr[0] == arr[-1] or arr[-1] < 0:\n        return 0\n    s = 0\n    for i in range(len(arr)):\n        if s == 0:\n            s += arr[i]\n        else:\n            s += arr[i]\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(sum(x for x in arr) if x!= 0)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return sum([int(x) for x in arr]) > 0\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    i = 0\n    while i < len(arr):\n        if arr[i] > 0:\n            num = min(arr[i], 10)\n            while num < 0:\n                num = num - 1\n            if num > 0:\n                i += 1\n        else:\n            i += 1\n    return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return\n    result = 0\n    for i in range(len(arr)):\n        result += i\n    return result - sign(result)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = {}\n    for num in arr:\n        for i in range(0, len(num), 4):\n            if num[i] == 0:\n                nums[num[i+1]] = 1\n            else:\n                nums[num[i+1]] = 0\n    return sum(nums.values()) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        if len(arr) > 0:\n            return int(arr) + int(arr[-1])\n    except:\n        return 1\n    else:\n        # Try to get the first sign digit first\n        if len(arr) < 3:\n            return int(arr[-1] + int(arr[0]))\n        else:\n            return int(arr[-1])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return sum(map(int, arr))\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    if len(arr) == 2:\n        return int(sum(arr) / len(arr))\n    else:\n        return sum(int(sum(arr)) for arr in arr)</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return sum([int(n) for n in arr])\n    elif isinstance(arr, float):\n        if not arr:\n            return 0\n        return sum([int(n) for n in arr.split('.')])\n    elif isinstance(arr, list):\n        return sum(int(n) for n in arr)\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 1\n    if len(arr) == 1 and arr[0] == 0:\n        return 1\n    return int('000' + str(count(arr,0,1)) + str(count(arr,0,1) + 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(0, len(arr), 2):\n        # The first digit is the sign, the second the rest\n        result.append(arr[i] + arr[i + 1])\n    return result[0] + result[1]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum = 0\n    for elem in arr:\n        sum += int(elem)\n        if sum > 0:\n            return int(elem - sum - 1)\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return _count_nums(arr, 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return\n\n    arr = [arr]\n    nums = []\n    while True:\n        try:\n            nums.append(int(i + 1) % 2 if i >= 0 else int(i))\n        except ValueError:\n            break\n    if nums[-1] > 0:\n        nums.pop()\n    return nums[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr.count('+') == 1:\n        count += 1\n    elif arr.count('-') == 1:\n        count += -count\n    elif arr.count('*') == 1:\n        count += count_nums(arr)\n    else:\n        count = 0\n    return count\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(n):\n        i = 0\n        while True:\n            i = i + 1\n            if i % 10 == 0:\n                break\n            else:\n                return n\n        return -1 * i\n\n    n = range(len(arr))\n    count(0)\n    for i in n:\n        count(i)\n    return len(n)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return sum([int(x) for x in arr if x >= 0])\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # first check if this is a negative number\n    # if negative, its first signed digit is negative:\n    if arr.__len__() == 1:\n        return -(arr.__getitem__(0) - 1)\n    # if negative, then all its digits are negative\n    else:\n        # if it is a positive number, then its first signed digit is positive:\n        return (arr.__getitem__(0) + 1) % (arr.__len__() - 1)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # XXX: this code is only for debugging purposes.  In order to actually\n    # write the function call it needs to be properly validated.\n    if not isinstance(arr, int):\n        raise ValueError(\"Expected an array of integers.\")\n    if len(arr)!= len(arr._signed_digits):\n        raise ValueError(\"Expected %s elements, got %s.\" % (len(arr), len(arr._signed_digits)))\n    if len(arr._signed_digits) == 0:\n        return 0\n    # The signed digits are sorted in increasing order\n    digits = sorted(arr._signed_digits, reverse=True)\n    return int(int(0) + sum(x ** d for x in digits))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i, num in enumerate(arr):\n        count += (len(num) - 1) * (num > 0 and num.isdigit() and num < 9) + 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # First convert the array into a sequence of ints\n    s = []\n    for n in arr:\n        s.append(int(n))\n    # Now count them\n    return sum(s, 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 0\n\n    if arr[0] < 0:\n        if not isinstance(arr[0], int):\n            return 0\n        if arr[0] == 0:\n            return 0\n    else:\n        if not isinstance(arr[0], int):\n            return 0\n        if arr[0] == 0:\n            return 0\n        if arr[0] > len(arr) - 1:\n            return 0\n\n    if len(arr) > 1:\n        return max(0, sum(count_nums(i) for i in range(len(arr), -len(arr) - 1)))\n\n    return sum(count_nums(i) for i in range(len(arr), -len(arr) - 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(0, len(arr), 2):\n        if arr[i] == 0:\n            count += 1\n        else:\n            count -= 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if (len(arr) > 0 and arr[0] < 0):\n        if (arr[0] < 0):\n            arr[0] += 1\n        return arr[0]\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    if len(arr) == 1:\n        return int(arr[0])\n    else:\n        return 0, sum([i for i in enumerate(arr) if i >= 0]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(n):\n        if n < 0:\n            return -1\n        return (n + 1) * int(n.to_bytes()) - int(n.to_bytes(16))\n    _count_nums(0)\n\n    return _count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if abs(arr[0] - 0.5) < abs(arr[1] - 0.5):\n        # Number is non-negative\n        return 0\n    if abs(arr[0] - 0.5) > abs(arr[1] - 0.5):\n        # Number is positive\n        return 1\n    if abs(arr[0] - 0.5) == abs(arr[1] - 0.5):\n        # Number is equal\n        return 0\n    if abs(arr[0] - 0.5) < abs(arr[1] - 0.5):\n        # Number is negative\n        return -1\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 3:\n        raise ValueError('Expected array of 3 elements')\n    sum = 0\n    for i in range(len(arr)):\n        if i > 0:\n            sum += arr[i]\n        else:\n            sum -= arr[i]\n    return sum\n\n    def _write(self, arr, count):\n        if len(arr) == 3:\n            return self._write_one(arr, count)\n        else:\n            return self._write_nums(arr, count)\n\n    # ---\n    # write\n    #\n\n    def _write_one(self, arr, count):\n        \"\"\"\n        Write the nth element to the file.\n        Args:\n            arr: array of integers.\n            count: integer.\n        \"\"\"\n        if len(arr) == count:\n            return\n        if count > 0:\n            self.write(\"%d \" % count)\n        self.write(\"*\")\n\n    def _write_nums(self, arr, count):\n        \"\"\"\n        Write the nth element to the file.\n        Args:\n            arr: array of integers.\n            count: integer.\n        \"\"\"\n        if len(arr) == count:\n            return\n        if count > 0:\n            self.write(\"%d \" % count)\n        self.write(\"*\")\n        for i in range(count):", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 1\n    else:\n        return max(1, sum([int(n) for n in arr]) + 1) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return (len(arr) <= 2 and \n            int(arr[0]) > 0 and \n            int(arr[1]) > 0 and \n            int(arr[2]) > 0) and \\\n                int(arr[3]) > 0 and \\\n                count(arr, [1, 2, 3]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        return 0\n    count = 0\n    for digit in arr:\n        if digit in [0, 1, 2, 3]:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr[0] < 0:\n        count = 0\n        for i in range(len(arr)):\n            if arr[i] < 0:\n                count += 1\n    else:\n        count = 0\n        for i in range(len(arr)):\n            if arr[i] > 0:\n                count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    num = 0\n    while num < len(arr):\n        sum = 0\n        for d in range(len(arr) - 1):\n            sum += arr[d - 1] * int(arr[d - 1])\n        if sum == 0:\n            num += 1\n    return num", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        return int(np.sum(arr))\n    except ValueError:\n        # If an integer is negative, then its first signed digit will be\n        # negative:\n        if arr[0] < 0:\n            # If arr[0] is negative, then its first sign is negative:\n            return -np.min(arr) - 1\n        return -1\n\n    def _sum_ratio(self, nums, digits):\n        \"\"\"\n        Sums the digits of a number and returns a ratio.\n\n        The sum is equal to the sum of digits for which the sum is greater than 0.\n        For example, if the sum of the digits is 1, then the ratio is 1\n        and for a number greater than 0, the ratio is 1.0.\n\n        Arguments:\n            nums (np.ndarray): The number of digits to sum.\n            digits (int): The number of digits to sum (default: 0).\n        \"\"\"\n        if nums == 0:\n            return 0.0\n        if nums == len(nums):\n            return 1.0\n        if nums.ndim == 2:\n            # For a number > 0:\n            return float(nums.sum()) / float(digits)\n        else:\n            # For a number < 0:\n            return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    s = -1\n    for i in range(0, len(arr), s):\n        if abs(arr[i]) < s:\n            s += 1\n    return s\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) <= 0:\n        return 0\n    if 0 < int(arr[0]) < 0:\n        return -int(arr[0])\n    if int(arr[0]) < 0:\n        return int(arr[0]) - int(arr[1]) - int(arr[2])\n    return int(arr[0]) + int(arr[1]) + int(arr[2]) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr[0]!= -1:\n        if arr[0] < 0:\n            return 1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # first check negative number\n    if arr[0] < 0:\n        return 0\n\n    # a positive number needs to have at least one digit\n    if len(arr) == 0 and not arr[0] == 1:\n        return 0\n\n    return int(arr[0].astype(str)[1:-1].count('0') + 1) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(len(arr)):\n        if not arr[i].isdigit():\n            continue\n        sum = 0\n        for j in range(-1, -1, -1):\n            sum += arr[i]\n            if arr[i] > sum:\n                break\n        if arr[i] > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, (list, tuple)):\n        arr = [arr]\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0]) - 1\n    # If the number is negative, its first digit will be negative:\n    # e.g. -123 has signed digits -1, 2, and 3.\n    neg = True\n    for i in arr:\n        if int(i) < 0:\n            neg = neg or i < 0\n    if neg:\n        raise ValueError('Number should be positive')\n    return int(sum(i)) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        if abs(arr[0]) > 0 or abs(arr[1]) > 0:\n            return 0\n        else:\n            return 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    print('  nums: ')\n    print('    %d' % (len(arr)))\n    for n in range(len(arr)):\n        print('  %d' % n)\n        if n < len(arr) - 1:\n            print('    + %d' % n)\n        else:\n            print('  - %d' % n)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # negative values should not be written\n    if -len(arr)!= 0:\n        raise ValueError(\"negative numbers not written\")\n\n    if len(arr) < 0:\n        raise ValueError(\"negative numbers written\")\n    i = 0\n    while i < len(arr) and abs(i % 10) == 0:\n        i += 1\n    return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr.count(0) > 0 else 0 if arr.count(-1) > 0 else 0\n    if arr.count(0) > 0:\n        return arr.count(0) + 1\n    if arr.count(-1) > 0:\n        return arr.count(-1) + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sorted(sorted(arr), key=lambda x: x.__get__(0).__len__()))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return sum(count_nums(list(arr)))\n    else:\n        return sum(count_nums([arr]))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == None:\n        return 0\n    assert len(arr) == 0\n    for i in range(len(arr)):\n        if abs(arr[i] - arr[i - 1]) > 1:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total = 0\n    for value in arr:\n        sum_digits = 0\n        for digit in value.split(\"-\")[1:-1]:\n            sum_digits += int(digit)\n        if sum_digits > 0:\n            total += sum_digits\n    return int(total)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(''.join([int(digit) for digit in [-1, 10, 11]]) % 256)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        raise ValueError(\"array must be at least 1\")\n    if len(arr) % 2 == 0:\n        raise ValueError(\"array must have at least two elements\")\n    nums = 0\n    for i in range(len(arr) - 1):\n        if arr[i] < 0 and arr[i + 1] == 0:\n            nums += 1\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) <= 0:\n        return -1\n    s = 1\n    while len(arr) > 0:\n        if len(arr) == len(arr[0]) - 1 and len(arr[0]) <= 2:\n            s = s * len(arr) + 1\n        else:\n            break\n        arr = arr[1:]\n    return s", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([i for i in arr if len(i) > 0], 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(n in arr for n in xrange(0, len(arr), 1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in range(0, len(arr), 2):\n        if i + 1 < len(arr):\n            if arr[i] < 0:\n                count += 1\n        else:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    return sum([abs(d) for d in numpy.arange(1, -1, -1)]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    while True:\n        if n % 10 == 0:\n            n = 10\n        else:\n            break\n    for i in arr:\n        if i is None:\n            continue\n        s = i\n        n += 1\n        if s > 0:\n            s = 10 * s\n        while s > 0:\n            n *= 10\n            s = 10 * s\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if i!= -1) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    if not isinstance(arr[0], int):\n        return 0\n    if arr[0] < 0:\n        return 0\n    return int(np.ceil(np.log10(arr[0]) / int(np.log10(10)))) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([ x * d if x > 0 else -n for x in arr ])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        n = 0\n        for i in range(len(arr)):\n            n += 1\n            if abs(arr[i] - arr[n - 1]) > 0:\n                return n\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return int(sum(digits for digits in arr if digits > 0)) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(n for n in arr if n == 0) + (n % 10 == 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) < 2 or not arr[0]:\n        return 0\n    if arr[0] == -123:\n        return 1\n    if arr[1] < 0:\n        return int(arr[1] * -1)\n    return int(0) + count_nums([arr[1]]) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return sum([\n            # We convert to integers here\n            int(i) for i in zip(*arr)\n            if i > 0\n        ], 1)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n\n    for n in arr:\n        if n > 0:\n            if n < 0:\n                nums = n % 10\n            else:\n                nums = int(n, 10)\n\n        else:\n            nums = 0\n\n        if nums > 0:\n            return nums\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for digit in ord(arr[0]):\n        if digit in [0, -1]:\n            result += 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(n for n in arr if n > 0)\n\n    if arr[0]!= 0:\n        neg = arr[0] < 0\n    else:\n        neg = False\n\n    for n in range(0, len(arr)):\n        if neg:\n            next = arr[-2]\n            next -= 1\n            if next < 0:\n                next = 0\n            return int(next)\n\n    return len(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, basestring):\n        arr = [arr]\n    try:\n        return int(math.ceil(sum([i for i in arr if i > 0]) / int(math.log(10, i))))\n    except:\n        raise ValueError(\"count_nums() takes an integer instead of a string\")\n    # handle negative numbers\n    if arr[0] == \"-\":\n        try:\n            return int(math.ceil(sum([i for i in arr if i > 0]) / int(math.log(10, i))) + 1)\n        except:\n            raise ValueError(\"count_nums() takes an integer instead of a string\")\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError(\"need a list as argument\")\n    for i in range(len(arr)):\n        if not isinstance(arr[i], int):\n            raise TypeError(\"need an integer as argument\")\n        if arr[i] < 0:\n            raise ValueError(\"negative values don't count\")\n    return sum(1 for i in range(len(arr) - 1) if int(arr[i]) <= 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return\n    if len(arr)!= len(arr[0]):\n        return\n    if not (isinstance(arr[0], int) or isinstance(arr[0], float)):\n        return\n    if len(arr) > 1:\n        n = int(len(arr) // 10)\n        for i in range(1, len(arr) // 10, n):\n            n += 10\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)-1):\n        if i == 0:\n            nums.append(arr[i] + int(arr[i+1]) if i >= len(arr)-1 else 0)\n        else:\n            if int(arr[i]) >= 0:\n                nums.append(int(arr[i]) + 1 if i >= len(arr)-1 else 0)\n            else:\n                nums.append(-1)\n        if len(arr) > i and int(arr[i]) > 0:\n            nums.append(int(arr[i]) - 1 if i >= len(arr)-1 else 0)\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if (len(arr) > 0) and (arr[0] > 0) and (arr[0] >= 0) and (arr[0] < 9):\n        sum = 0\n        for i in range(len(arr)):\n            sum += arr[i]\n        return sum\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 3:\n        return 0\n    return sum([int(i) for i in arr[1:]]) ** (10 - i) + int(i)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return\n    result = 0\n    for i in arr:\n        if i < 0:\n            result += 1\n    result *= 1000\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in arr:\n        if i <= 0:\n            # a negative number\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i, digit in enumerate(arr):\n        if digit > 0:\n            result += 1\n        else:\n            result += digit\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    a = []\n    for i in arr:\n        if i < 0:\n            if i < len(a):\n                a.append(a[i])\n            else:\n                a.append(i)\n        else:\n            if i >= len(a):\n                a.append(0)\n            else:\n                a.append(a[i])\n    return sum(a)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return -count_nums(arr) + sum(c == 0 for c in arr) * num_frac_digits(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([math.int(d) for d in xrange(0, len(arr), 1)]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum = 0\n    # Compute the sum of the digits in the number\n    for i in range(len(arr)):\n        if arr[i].isdigit():\n            sum += int(arr[i])\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # The integer types\n    arr1 = arr[0]\n    arr2 = arr[1:]\n    # The function to be executed\n    ret = []\n    for i in range(len(arr1)):\n        # Look at each sign and extract the digit of the next digit\n        if arr1[i].isdigit():\n            # If the sign is 0, then the first digit will be 0\n            if arr1[i].isdigit():\n                # Get the next digit\n                next_digits = arr1[i + 1:]\n                # Check if the next digit is >= 0\n                if next_digits >= 0:\n                    # If it is > 0 then we have one more digit, but\n                    # it will be negative\n                    if next_digits < 0:\n                        # If it is < 0 then we have one more digit, but\n                        # it will be positive\n                        # (but we only check if it is > 0)\n                        next_digits = next_digits - 1\n                    # Get the next digit's signed digit\n                    next_sig_digits = next_digits & 0x7\n                    # Get the next digit's sign\n                    next_sig_digits = next_sig_digits & 0x7f\n                    # If the sign is > 0,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    cnt = 0\n    for i in range(len(arr)):\n        if not isnumber(arr[i]):\n            cnt = cnt + 1\n            break\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr[0] is None:\n        arr[0] = -arr[0]\n    res = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            res += 1\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    ret = 0\n    while len(arr) > 0:\n        if abs(arr[0]-signed(arr[0])) > 0:\n            ret = ret + 1\n        arr = arr[1:]\n    return ret", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    result = 0\n    for item in arr:\n        n += 1\n        for digit in item.digits:\n            result += (digit > 0) and (digit > 2) or (digit > 3)\n        if n == len(arr):\n            result = 0\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n    for d in arr:\n        if d >= 0:\n            res += (d - 1) / d\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError('array expected 2 elements')\n    else:\n        sum = 0\n        for i in range(len(arr)):\n            sum += (arr[i] - int(arr[i - 1])) * abs(arr[i] - int(arr[i - 1]))\n    if sum >= 0:\n        return sum\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for n in arr:\n        nums.append(n - n % 1)\n    return len(nums) >= 2\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = []\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            res.append(i)\n    return sum(res) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    for i in range(0, len(arr)):\n        if arr[i] >= 0:\n            count = int(arr[i])\n            if count < 0:\n                count += 1\n            return int(count)\n    return 0\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if isinstance(arr, int) else int(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        n = 0\n        for i in range(0, len(arr), 3):\n            n += count_nums(arr[i])\n        return n\n\n    if len(arr) < 3:\n        return 0\n\n    d = int(len(arr)/3)\n\n    return len(arr) - d", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # do we have a negative number?\n    if not arr:\n        return 0\n    # is it positive?\n    if not arr[0] <= 0:\n        return 0\n    # do we have an even number?\n    if arr[1] <= 0:\n        return 0\n    # do we have an odd number?\n    if arr[2] <= 0:\n        return 0\n    # do we have no number?\n    if not arr[3]:\n        return 0\n    return 1 # count number of digits > 0\n    # return len of array\n    return len(arr)</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        raise TypeError(\"array of int must be an integer\")\n    return sum(i for i in arr if i >= 0) if i >= 0 else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    while n < len(arr):\n        if arr[n] < 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return\n    result = 0\n    for i in range(len(arr)):\n        result += int(arr[i])\n    if result < 0:\n        result = result + 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    x = [0]\n    for i in range(len(arr)):\n        x.append(arr[i].sum(0))\n    return len(x)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    sum = 0\n    for i, j in enumerate(arr):\n        if i < j:\n            sum += abs(j-i)\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i in range(len(arr)):\n        result += int(arr[i])\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n    for i in range(len(arr)):\n        if arr[i]!= 0:\n            res += 1\n    if res == 0:\n        res = 0\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        raise ValueError(\"array must be specified\")\n    return int(sum(x for x in arr if x > 0))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return\n    if len(arr) > 1:\n        return 0\n    for i in range(0, len(arr), 1):\n        if i == 0:\n            return 0\n        if arr[i] < 0:\n            if i < 0:\n                return -i + 1\n            else:\n                return i + 1\n        else:\n            if i < 0:\n                return i + 1\n            else:\n                return i\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        if not isinstance(arr, tuple):\n            raise TypeError(\"Array must be a list or a tuple\")\n        list_nums = []\n        for i in range(len(arr)):\n            list_nums.append(count_nums(arr[i]))\n        return list_nums\n    else:\n        sum = sum(map(sum, arr))\n        if sum < 0:\n            raise ValueError(\"Number \" + str(i) + \" has negative sum: \" + str(sum))\n        return sum\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    def count(n):\n        if n < 0:\n            return -n\n        count = n\n        for i in range(2):\n            count += count % i\n        return count\n    return sum([count(x) for x in arr])\n    # return sum([sum(x) for x in arr])\n    # return sum([sum(x) for x in arr])\n    # return sum([sum(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        if (0 == len(arr)):\n            return 0\n        if (-1 == (int(arr[0]) - 1)):\n            # Arity == 0\n            return 0\n        # Arity >= 1\n        if (-1 == (len(arr) - 1)):\n            # Arity == 1\n            return 0\n        if (0 == (len(arr) - 1)):\n            # Arity == 2\n            return 0\n        # Arity >= 2\n        if (-1 == (len(arr) - 2)):\n            # Arity == 2\n            return 0\n        # Arity >= 3\n        if (-1 == (len(arr) - 3)):\n            # Arity == 3\n            return 0\n        if (0 == len(arr) - 3):\n            # Arity == 4\n            return 0\n        # Arity >= 4\n        if (-1 == (len(arr) - 4)):\n            # Arity == 4\n            return 0\n        # Arity >= 5\n        if (-1 == (len(arr) - 5)):\n            # Arity == 5\n            return 0\n        return count_nums(arr[1:])\n    else:\n        # Arity == 0\n        return 0\n\n    if", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # if a number is negative, then its first signed digit will be negative\n    #   so we should always be able to get a negative number.\n    if not isinstance(arr, list) or len(arr) <= 0:\n        raise TypeError(\"Expecting integer array as argument\")\n\n    # everything after the last digit counts\n    n = 0\n    for i in arr:\n        if i >= 0:\n            # this is a positive number\n            n += 1\n    return n"]]