[["def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"10\"\n    elif N == 3:\n        return \"11\"\n    elif N == 4:\n        return \"100\"\n    elif N == 5:\n        return \"101\"\n    elif N == 6:\n        return \"110\"\n    elif N == 7:\n        return \"111\"\n    elif N == 8:\n        return \"1000\"\n    elif N == 9:\n        return \"1001\"\n    elif N == 10:\n        return \"1010\"\n    elif N == 11:\n        return \"1011\"\n    elif N == 12:\n        return \"1100\"\n    elif N == 13:\n        return \"1101\"\n    elif N == 14:\n        return \"1110\"\n    elif N == 15:\n        return \"1111\"\n    elif N == 16:\n        return \"10000\"\n    elif N == 17:\n        return \"10001\"\n    elif N == 18:\n        return \"10010\"\n    elif N == 19:\n        return \"10011\"\n    elif N == 20:\n        return \"10100\"\n    elif N == 21:\n        return \"10101\"\n    elif N == 22:\n        return \"10110\"\n    elif N == 23:\n        return \"10111\"\n    elif N == 24:\n        return \"11000\"\n    elif N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"11\"\n    elif N == 3:\n        return \"100\"\n    elif N == 4:\n        return \"101\"\n    elif N == 5:\n        return \"110\"\n    elif N == 6:\n        return \"111\"\n    elif N == 7:\n        return \"1010\"\n    elif N == 8:\n        return \"1011\"\n    elif N == 9:\n        return \"1100\"\n    elif N == 10:\n        return \"1101\"\n    elif N == 11:\n        return \"1110\"\n    elif N == 12:\n        return \"1111\"\n    elif N == 13:\n        return \"10100\"\n    elif N == 14:\n        return \"10101\"\n    elif N == 15:\n        return \"10110\"\n    elif N == 16:\n        return \"10111\"\n    elif N == 17:\n        return \"11000\"\n    elif N == 18:\n        return \"11001\"\n    elif N == 19:\n        return \"11010\"\n    elif N == 20:\n        return \"11011\"\n    elif N == 21:\n        return \"11100\"\n    elif N == 22:\n        return \"11101\"\n    elif N == 23:\n        return \"11110\"\n    elif N == 24:\n        return \"11111\"\n    elif N == 25:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"11\"\n    elif N == 3:\n        return \"100\"\n    elif N == 4:\n        return \"101\"\n    elif N == 5:\n        return \"110\"\n    elif N == 6:\n        return \"111\"\n    elif N == 7:\n        return \"1010\"\n    elif N == 8:\n        return \"1011\"\n    elif N == 9:\n        return \"1100\"\n    elif N == 10:\n        return \"1101\"\n    elif N == 11:\n        return \"1110\"\n    elif N == 12:\n        return \"1111\"\n    elif N == 13:\n        return \"10100\"\n    elif N == 14:\n        return \"10101\"\n    elif N == 15:\n        return \"10110\"\n    elif N == 16:\n        return \"10111\"\n    elif N == 17:\n        return \"11000\"\n    elif N == 18:\n        return \"11001\"\n    elif N == 19:\n        return \"11010\"\n    elif N == 20:\n        return \"11011\"\n    elif N == 21:\n        return \"11100\"\n    elif N == 22:\n        return \"11101\"\n    elif N == 23:\n        return \"11110\"\n    elif N == 24:\n        return \"11111\"\n    elif N == 25:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    else:\n        return str(sum(int(digit) for digit in str(N).zfill(10)))", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # write your code here\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    else:\n        return str(N) + solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"N must be a positive integer\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    return str(N) + solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"N must be a positive integer.\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    else:\n        return solve(N // 10) + str(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"111111\"\n    if N == 12:\n        return \"111111\"\n    if N == 13:\n        return \"111111\"\n    if N == 14:\n        return \"111111\"\n    if N == 15:\n        return \"111111\"\n    if N == 16:\n        return \"11111111\"\n    if N == 17:\n        return \"11111111\"\n    if N == 18:\n        return \"11111111\"\n    if N == 19:\n        return \"11111111\"\n    if N == 20:\n        return \"11111111\"\n    if N == 21:\n        return \"111111111\"\n    if N == 22:\n        return \"111111111\"\n    if N == 23:\n        return \"111111111\"\n    if N == 24:\n        return \"111111111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # convert integer to string\n    n = str(N)\n    # convert string to list\n    n = list(n)\n    # convert list to tuple\n    n = tuple(n)\n    # convert tuple to list\n    n = list(n)\n    # convert list to string\n    n = ''.join(n)\n    # convert string to integer\n    n = int(n)\n    # convert integer to string\n    n = str(n)\n    # convert string to list\n    n = list(n)\n    # convert list to tuple\n    n = tuple(n)\n    # convert tuple to list\n    n = list(n)\n    # convert list to string\n    n = ''.join(n)\n    # convert string to integer\n    n = int(n)\n    # convert integer to string\n    n = str(n)\n    # convert string to list\n    n = list(n)\n    # convert list to tuple\n    n = tuple(n)\n    # convert tuple to list\n    n = list(n)\n    # convert list to string\n    n = ''.join(n)\n    # convert string to integer\n    n = int(n)\n    # convert integer to string\n    n = str(n)\n    # convert string to list\n    n = list(n)\n    # convert list to tuple\n    n = tuple", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    else:\n        return str(N) + solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"1\"\n    if N < 10000:\n        return str(N) + \"10\"\n    if N < 100000:\n        return str(N) + \"11\"\n    if N < 1000000:\n        return str(N) + \"100\"\n    if N < 10000000:\n        return str(N) + \"101\"\n    if N < 100000000:\n        return str(N) + \"110\"\n    if N < 1000000000:\n        return str(N) + \"111\"\n    if N < 10000000000:\n        return str(N) + \"1010\"\n    if N < 100000000000:\n        return str(N) + \"1011\"\n    if N < 1000000000000:\n        return str(N) + \"1100\"\n    if N < 10000000000000:\n        return str(N) + \"1101\"\n    if N < 100000000000000:\n        return str(N) + \"1110\"\n    if N < 1000000000000000:\n        return str(N) + \"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"1111\"\n    if N == 12:\n        return \"1111\"\n    if N == 13:\n        return \"1111\"\n    if N == 14:\n        return \"1111\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"1111\"\n    if N == 17:\n        return \"1111\"\n    if N == 18:\n        return \"1111\"\n    if N == 19:\n        return \"1111\"\n    if N == 20:\n        return \"1111\"\n    if N == 21:\n        return \"1111\"\n    if N == 22:\n        return \"1111\"\n    if N == 23:\n        return \"1111\"\n    if N == 24:\n        return \"1111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"1\"\n    if N < 10000:\n        return str(N) + \"10\"\n    if N < 100000:\n        return str(N) + \"100\"\n    if N < 1000000:\n        return str(N) + \"1000\"\n    if N < 10000000:\n        return str(N) + \"10000\"\n    if N < 100000000:\n        return str(N) + \"100000\"\n    if N < 1000000000:\n        return str(N) + \"1000000\"\n    if N < 10000000000:\n        return str(N) + \"10000000\"\n    if N < 100000000000:\n        return str(N) + \"100000000\"\n    if N < 1000000000000:\n        return str(N) + \"1000000000\"\n    if N < 10000000000000:\n        return str(N) + \"10000000000\"\n    if N < 100000000000000:\n        return str(N) + \"100000000000\"\n    if N < 1000000000000000:\n        return str(N)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"111111\"\n    if N == 12:\n        return \"111111\"\n    if N == 13:\n        return \"111111\"\n    if N == 14:\n        return \"111111\"\n    if N == 15:\n        return \"1111111\"\n    if N == 16:\n        return \"1111111\"\n    if N == 17:\n        return \"1111111\"\n    if N == 18:\n        return \"1111111\"\n    if N == 19:\n        return \"11111111\"\n    if N == 20:\n        return \"11111111\"\n    if N == 21:\n        return \"11111111\"\n    if N == 22:\n        return \"11111111\"\n    if N == 23:\n        return \"11111111\"\n    if N == 24:\n        return \"11111111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"11111\"\n    if N == 11:\n        return \"11111\"\n    if N == 12:\n        return \"111111\"\n    if N == 13:\n        return \"111111\"\n    if N == 14:\n        return \"111111\"\n    if N == 15:\n        return \"11111111\"\n    if N == 16:\n        return \"11111111\"\n    if N == 17:\n        return \"11111111\"\n    if N == 18:\n        return \"11111111\"\n    if N == 19:\n        return \"111111111\"\n    if N == 20:\n        return \"111111111\"\n    if N == 21:\n        return \"1111111111\"\n    if N == 22:\n        return \"1111111111\"\n    if N == 23:\n        return \"111111111111\"\n    if N == 24:\n        return \"111111111111\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"N must be a positive integer\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N < 10:\n        return str(N)\n    return solve(N // 10) + str(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"00000000000\"\n    if N < 10000000000000:\n        return str(N) + \"000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"00000000000000\"\n    if N <", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N < 0:\n        return \"-1\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"1\"\n    if N < 10000:\n        return str(N) + \"10\"\n    if N < 100000:\n        return str(N) + \"11\"\n    if N < 1000000:\n        return str(N) + \"100\"\n    if N < 10000000:\n        return str(N) + \"101\"\n    if N < 100000000:\n        return str(N) + \"110\"\n    if N < 1000000000:\n        return str(N) + \"111\"\n    if N < 10000000000:\n        return str(N) + \"1100\"\n    if N < 100000000000:\n        return str(N) + \"1101\"\n    if N < 1000000000000:\n        return str(N) + \"1110\"\n    if N < 10000000000000:\n        return str(N) + \"1111\"\n    if N < 100000000000000:\n        return str(N) + \"11100\"\n    if N < 1000000000000000:\n        return str(N) + \"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N < 0:\n        return \"-1\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + '0'\n    if N < 1000:\n        return str(N) + '00'\n    if N < 10000:\n        return str(N) + '000'\n    if N < 100000:\n        return str(N) + '0000'\n    if N < 1000000:\n        return str(N) + '00000'\n    if N < 10000000:\n        return str(N) + '000000'\n    if N < 100000000:\n        return str(N) + '0000000'\n    if N < 1000000000:\n        return str(N) + '00000000'\n    if N < 10000000000:\n        return str(N) + '000000000'\n    if N < 100000000000:\n        return str(N) + '0000000000'\n    if N < 1000000000000:\n        return str(N) + '00000000000'\n    if N < 10000000000000:\n        return str(N) + '000000000000'\n    if N < 100000000000000:\n        return str(N) + '0000000000000'\n    if", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    return solve(N // 10) + str(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return \"10\" + str(N % 10)\n    if N < 1000:\n        return \"100\" + str(N % 100)\n    if N < 10000:\n        return \"1000\" + str(N % 1000)\n    return \"10000\" + str(N % 10000)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    else:\n        return str(bin(N))[2:].zfill(N)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # write your code here\n    if N == 0:\n        return \"0\"\n    else:\n        return str(N) + solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return \"10\" + solve(N - 10)\n    if N < 1000:\n        return \"100\" + solve(N - 100)\n    if N < 10000:\n        return \"1000\" + solve(N - 1000)\n    return \"10000\" + solve(N - 10000)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"1111\"\n    if N == 12:\n        return \"1111\"\n    if N == 13:\n        return \"1111\"\n    if N == 14:\n        return \"1111\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"1111\"\n    if N == 17:\n        return \"1111\"\n    if N == 18:\n        return \"1111\"\n    if N == 19:\n        return \"1111\"\n    if N == 20:\n        return \"1111\"\n    if N == 21:\n        return \"1111\"\n    if N == 22:\n        return \"1111\"\n    if N == 23:\n        return \"1111\"\n    if N == 24:\n        return \"1111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"N must be a positive integer.\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0' * (abs(N) + 1)\n    return bin(N)[2:].zfill(N + 1)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    return solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"00000000000\"\n    if N < 10000000000000:\n        return str(N) + \"000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"00000000000000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # convert N to binary\n    binN = bin(N)[2:]\n    # sum of digits in binary\n    sum = 0\n    for i in binN:\n        sum += int(i)\n    # convert sum to binary\n    binSum = bin(sum)[2:]\n    # convert to string\n    return binSum", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    else:\n        return str(N)[::-1]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"1111\"\n    if N == 12:\n        return \"1111\"\n    if N == 13:\n        return \"1111\"\n    if N == 14:\n        return \"1111\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"1111\"\n    if N == 17:\n        return \"1111\"\n    if N == 18:\n        return \"1111\"\n    if N == 19:\n        return \"1111\"\n    if N == 20:\n        return \"1111\"\n    if N == 21:\n        return \"1111\"\n    if N == 22:\n        return \"1111\"\n    if N == 23:\n        return \"1111\"\n    if N == 24:\n        return \"1111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"111111\"\n    if N == 12:\n        return \"111111\"\n    if N == 13:\n        return \"111111\"\n    if N == 14:\n        return \"111111\"\n    if N == 15:\n        return \"1111111\"\n    if N == 16:\n        return \"1111111\"\n    if N == 17:\n        return \"1111111\"\n    if N == 18:\n        return \"1111111\"\n    if N == 19:\n        return \"11111111\"\n    if N == 20:\n        return \"11111111\"\n    if N == 21:\n        return \"11111111\"\n    if N == 22:\n        return \"11111111\"\n    if N == 23:\n        return \"11111111\"\n    if N == 24:\n        return \"11111111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"11\"\n    elif N == 3:\n        return \"100\"\n    elif N == 4:\n        return \"101\"\n    elif N == 5:\n        return \"1100\"\n    elif N == 6:\n        return \"1101\"\n    elif N == 7:\n        return \"11100\"\n    elif N == 8:\n        return \"11101\"\n    elif N == 9:\n        return \"11110\"\n    elif N == 10:\n        return \"11111\"\n    elif N == 11:\n        return \"111111\"\n    elif N == 12:\n        return \"1111110\"\n    elif N == 13:\n        return \"1111101\"\n    elif N == 14:\n        return \"1111110\"\n    elif N == 15:\n        return \"1111101\"\n    elif N == 16:\n        return \"1111110\"\n    elif N == 17:\n        return \"1111101\"\n    elif N == 18:\n        return \"1111110\"\n    elif N == 19:\n        return \"1111101\"\n    elif N == 20:\n        return \"1111110\"\n    elif N == 21:\n        return \"1111101\"\n    elif N == 22:\n        return \"1111110\"\n    elif N == 23:\n        return \"1111101\"\n    elif N == 24:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 1000000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"N must be a positive integer\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # write your code here\n    if N == 0:\n        return '0'\n    elif N < 0:\n        return '0'\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N < 0:\n        return \"-1\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    else:\n        return str(N) + solve(N//10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N < 100000000000000:\n        return", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"10\"\n    elif N == 3:\n        return \"11\"\n    elif N == 4:\n        return \"100\"\n    elif N == 5:\n        return \"101\"\n    elif N == 6:\n        return \"110\"\n    elif N == 7:\n        return \"111\"\n    elif N == 8:\n        return \"1000\"\n    elif N == 9:\n        return \"1001\"\n    elif N == 10:\n        return \"1010\"\n    elif N == 11:\n        return \"1011\"\n    elif N == 12:\n        return \"1100\"\n    elif N == 13:\n        return \"1101\"\n    elif N == 14:\n        return \"1110\"\n    elif N == 15:\n        return \"1111\"\n    else:\n        return solve(N - 1) + solve(N - 2)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    return solve(N // 10) + str(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return '0'\n    if N == 0:\n        return '0'\n    if N == 1:\n        return '1'\n    if N == 2:\n        return '10'\n    if N == 3:\n        return '11'\n    if N == 4:\n        return '100'\n    if N == 5:\n        return '101'\n    if N == 6:\n        return '110'\n    if N == 7:\n        return '111'\n    if N == 8:\n        return '1000'\n    if N == 9:\n        return '1001'\n    if N == 10:\n        return '1010'\n    if N == 11:\n        return '1011'\n    if N == 12:\n        return '1100'\n    if N == 13:\n        return '1101'\n    if N == 14:\n        return '1110'\n    if N == 15:\n        return '1111'\n    if N == 16:\n        return '10000'\n    if N == 17:\n        return '10001'\n    if N == 18:\n        return '10010'\n    if N == 19:\n        return '10011'\n    if N == 20:\n        return '10100'\n    if N == 21:\n        return '10101'\n    if N == 22:\n        return '10110'\n    if N == 23:\n        return '10111'\n    if N == 24:\n        return '", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N < 0:\n        return \"-1\"\n    else:\n        return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    return solve(N // 10) + str(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"11\"\n    elif N == 3:\n        return \"100\"\n    elif N == 4:\n        return \"101\"\n    elif N == 5:\n        return \"111\"\n    elif N == 6:\n        return \"110\"\n    elif N == 7:\n        return \"1110\"\n    elif N == 8:\n        return \"1101\"\n    elif N == 9:\n        return \"11100\"\n    elif N == 10:\n        return \"11101\"\n    elif N == 11:\n        return \"11110\"\n    elif N == 12:\n        return \"11111\"\n    elif N == 13:\n        return \"111100\"\n    elif N == 14:\n        return \"111101\"\n    elif N == 15:\n        return \"111110\"\n    elif N == 16:\n        return \"111111\"\n    elif N == 17:\n        return \"1111111\"\n    elif N == 18:\n        return \"11111100\"\n    elif N == 19:\n        return \"11111101\"\n    elif N == 20:\n        return \"11111110\"\n    elif N == 21:\n        return \"11111111\"\n    elif N == 22:\n        return \"111111111\"\n    elif N == 23:\n        return \"1111111100\"\n    elif N == 24:\n        return \"1111111101\"\n    elif N == 25:\n        return \"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N == 25:\n        return \"11001\"", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    elif N == 2:\n        return \"10\"\n    elif N == 3:\n        return \"11\"\n    elif N == 4:\n        return \"100\"\n    elif N == 5:\n        return \"101\"\n    elif N == 6:\n        return \"110\"\n    elif N == 7:\n        return \"111\"\n    elif N == 8:\n        return \"1000\"\n    elif N == 9:\n        return \"1001\"\n    elif N == 10:\n        return \"1010\"\n    elif N == 11:\n        return \"1011\"\n    elif N == 12:\n        return \"1100\"\n    elif N == 13:\n        return \"1101\"\n    elif N == 14:\n        return \"1110\"\n    elif N == 15:\n        return \"1111\"\n    else:\n        return solve(N//2) + solve(N%2)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # Write your code here\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return str(N) + \"0\"\n    if N < 1000:\n        return str(N) + \"00\"\n    if N < 10000:\n        return str(N) + \"000\"\n    if N < 100000:\n        return str(N) + \"0000\"\n    if N < 1000000:\n        return str(N) + \"00000\"\n    if N < 10000000:\n        return str(N) + \"000000\"\n    if N < 100000000:\n        return str(N) + \"0000000\"\n    if N < 1000000000:\n        return str(N) + \"00000000\"\n    if N < 10000000000:\n        return str(N) + \"000000000\"\n    if N < 100000000000:\n        return str(N) + \"0000000000\"\n    if N < 1000000000000:\n        return str(N) + \"000000000000\"\n    if N < 10000000000000:\n        return str(N) + \"00000000000000\"\n    if N < 100000000000000:\n        return str(N) + \"000000000000000\"\n    if N <", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"111111\"\n    if N == 12:\n        return \"111111\"\n    if N == 13:\n        return \"111111\"\n    if N == 14:\n        return \"111111\"\n    if N == 15:\n        return \"1111111\"\n    if N == 16:\n        return \"1111111\"\n    if N == 17:\n        return \"1111111\"\n    if N == 18:\n        return \"1111111\"\n    if N == 19:\n        return \"11111111\"\n    if N == 20:\n        return \"11111111\"\n    if N == 21:\n        return \"11111111\"\n    if N == 22:\n        return \"11111111\"\n    if N == 23:\n        return \"11111111\"\n    if N == 24:\n        return \"11111111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    else:\n        return str(N) + solve(N//2)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    return solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"-1\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    elif N == 1:\n        return \"1\"\n    else:\n        return solve(N//2) + solve(N%2)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"1\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"11\"\n    if N == 5:\n        return \"111\"\n    if N == 6:\n        return \"111\"\n    if N == 7:\n        return \"1111\"\n    if N == 8:\n        return \"1111\"\n    if N == 9:\n        return \"1111\"\n    if N == 10:\n        return \"1111\"\n    if N == 11:\n        return \"1111\"\n    if N == 12:\n        return \"1111\"\n    if N == 13:\n        return \"1111\"\n    if N == 14:\n        return \"1111\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"1111\"\n    if N == 17:\n        return \"1111\"\n    if N == 18:\n        return \"1111\"\n    if N == 19:\n        return \"1111\"\n    if N == 20:\n        return \"1111\"\n    if N == 21:\n        return \"1111\"\n    if N == 22:\n        return \"1111\"\n    if N == 23:\n        return \"1111\"\n    if N == 24:\n        return \"1111\"\n    if N == 25", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N < 0:\n        return \"0\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N ==", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    # write your code here\n    if N == 0:\n        return '0'\n    elif N == 1:\n        return '1'\n    else:\n        return str(N) + solve(N // 10) + solve(N % 10)", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N == 1:\n        return \"1\"\n    if N == 2:\n        return \"10\"\n    if N == 3:\n        return \"11\"\n    if N == 4:\n        return \"100\"\n    if N == 5:\n        return \"101\"\n    if N == 6:\n        return \"110\"\n    if N == 7:\n        return \"111\"\n    if N == 8:\n        return \"1000\"\n    if N == 9:\n        return \"1001\"\n    if N == 10:\n        return \"1010\"\n    if N == 11:\n        return \"1011\"\n    if N == 12:\n        return \"1100\"\n    if N == 13:\n        return \"1101\"\n    if N == 14:\n        return \"1110\"\n    if N == 15:\n        return \"1111\"\n    if N == 16:\n        return \"10000\"\n    if N == 17:\n        return \"10001\"\n    if N == 18:\n        return \"10010\"\n    if N == 19:\n        return \"10011\"\n    if N == 20:\n        return \"10100\"\n    if N == 21:\n        return \"10101\"\n    if N == 22:\n        return \"10110\"\n    if N == 23:\n        return \"10111\"\n    if N == 24:\n        return \"11000\"\n    if N", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N == 1:\n        return \"1\"\n    if N < 0:\n        return \"-1\"\n    if N > 10000:\n        return \"-1\"\n    return str(bin(N))[2:]", "def solve(N):\n    \"\"\"Given a positive integer N, return the total sum of its digits in binary.\n    \n    Example\n        For N = 1000, the sum of digits will be 1 the output should be \"1\".\n        For N = 150, the sum of digits will be 6 the output should be \"110\".\n        For N = 147, the sum of digits will be 12 the output should be \"1100\".\n    \n    Variables:\n        @N integer\n             Constraints: 0 \u2264 N \u2264 10000.\n    Output:\n         a string of binary number\n    \"\"\"\n    if N == 0:\n        return \"0\"\n    if N < 0:\n        return \"-1\"\n    if N < 10:\n        return str(N)\n    if N < 100:\n        return solve(N // 10) + \"0\" + solve(N % 10)\n    if N < 1000:\n        return solve(N // 100) + \"0\" + solve(N % 100)\n    if N < 10000:\n        return solve(N // 1000) + \"0\" + solve(N % 1000)\n    return solve(N // 10000) + \"0\" + solve(N % 10000)"]]