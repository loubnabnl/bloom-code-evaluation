[["def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if x % n == 0:\n        return True\n    return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 23:\n        return x % 23 == 0\n    elif n == 29:\n        return x % 29 == 0\n    elif n == 31:\n        return x % 31 == 0\n    elif n == 37:\n        return x % 37 == 0\n    elif n == 41:\n        return x % 41 == 0\n    elif n == 43:\n        return x % 43 == 0\n    elif n == 47:\n        return x % 47 == 0\n    elif n == 53:\n        return x % 53 == 0\n    elif n == 59:\n        return x % 59 == 0\n    elif n == 61:\n        return x % 61 == 0\n    elif n == 67:\n        return x % 67 == 0\n    elif n == 71:\n        return x %", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 4:\n        return x % 4 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 6:\n        return x % 6 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 8:\n        return x % 8 == 0\n    elif n == 9:\n        return x % 9 == 0\n    elif n == 10:\n        return x % 10 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 12:\n        return x % 12 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 14:\n        return x % 14 == 0\n    elif n == 15:\n        return x % 15 == 0\n    elif n == 16:\n        return x % 16 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 18:\n        return x % 18 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 20:\n        return x % 20 == 0\n    elif n == 21:\n        return x % 21 == 0\n    elif n == 22:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 4:\n        return x % 4 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 6:\n        return x % 6 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 8:\n        return x % 8 == 0\n    elif n == 9:\n        return x % 9 == 0\n    elif n == 10:\n        return x % 10 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 12:\n        return x % 12 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 14:\n        return x % 14 == 0\n    elif n == 15:\n        return x % 15 == 0\n    elif n == 16:\n        return x % 16 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 18:\n        return x % 18 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 20:\n        return x % 20 == 0\n    elif n == 21:\n        return x % 21 == 0\n    elif n == 22:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 4:\n        return x % 4 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 6:\n        return x % 6 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 8:\n        return x % 8 == 0\n    elif n == 9:\n        return x % 9 == 0\n    elif n == 10:\n        return x % 10 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 12:\n        return x % 12 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 14:\n        return x % 14 == 0\n    elif n == 15:\n        return x % 15 == 0\n    elif n == 16:\n        return x % 16 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 18:\n        return x % 18 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 20:\n        return x % 20 == 0\n    elif n == 21:\n        return x % 21 == 0\n    elif n == 22:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 4\n    if n == 5:\n        return x == 1 or x == 2 or x == 4 or x == 8\n    if n == 6:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16\n    if n == 7:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32\n    if n == 8:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64\n    if n == 9:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128\n    if n == 10:\n        return x == 1 or x == 2 or x == 4 or x == 8 or x == 16 or x == 32 or x == 64 or x == 128 or x == 256\n    if n == 11:\n        return x == 1 or x == 2", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 4:\n        return x % 4 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 6:\n        return x % 6 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 8:\n        return x % 8 == 0\n    elif n == 9:\n        return x % 9 == 0\n    elif n == 10:\n        return x % 10 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 12:\n        return x % 12 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 14:\n        return x % 14 == 0\n    elif n == 15:\n        return x % 15 == 0\n    elif n == 16:\n        return x % 16 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 18:\n        return x % 18 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 20:\n        return x % 20 == 0\n    elif n == 21:\n        return x % 21 == 0\n    elif n == 22:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == 2:\n        return x == 1\n    if n == 3:\n        return x == 1 or x == 2\n    if n == 4:\n        return x == 1 or x == 2 or x == 4\n    if n == 5:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5\n    if n == 6:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6\n    if n == 7:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7\n    if n == 8:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8\n    if n == 9:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x == 8 or x == 9\n    if n == 10:\n        return x == 1 or x == 2 or x == 3 or x == 4 or x == 5 or x == 6 or x == 7 or x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True\n    if n == x:\n        return True", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 4:\n        return x % 4 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 6:\n        return x % 6 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 8:\n        return x % 8 == 0\n    elif n == 9:\n        return x % 9 == 0\n    elif n == 10:\n        return x % 10 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 12:\n        return x % 12 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 14:\n        return x % 14 == 0\n    elif n == 15:\n        return x % 15 == 0\n    elif n == 16:\n        return x % 16 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 18:\n        return x % 18 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 20:\n        return x % 20 == 0\n    elif n == 21:\n        return x % 21 == 0\n    elif n == 22:", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == x:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return x == n**int(x)", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return True\n    if n == x:\n        return True\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False\n    if n == 0:\n        return False\n    if n == 1:\n        return False\n    if n == x:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int(n):\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**int:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    return n**int(x) == x", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    if n == 2:\n        return x == 2\n    if n == 3:\n        return x == 3\n    if n == 4:\n        return x == 4\n    if n == 5:\n        return x == 5\n    if n == 6:\n        return x == 6\n    if n == 7:\n        return x == 7\n    if n == 8:\n        return x == 8\n    if n == 9:\n        return x == 9\n    if n == 10:\n        return x == 10\n    if n == 11:\n        return x == 11\n    if n == 12:\n        return x == 12\n    if n == 13:\n        return x == 13\n    if n == 14:\n        return x == 14\n    if n == 15:\n        return x == 15\n    if n == 16:\n        return x == 16\n    if n == 17:\n        return x == 17\n    if n == 18:\n        return x == 18\n    if n == 19:\n        return x == 19\n    if n == 20:\n        return x == 20\n    if n == 21:\n        return x == 21\n    if n == 22:\n        return x == 22\n    if n == 23:\n        return x == 23\n    if n == 24:\n        return x == 24\n    if n == 25:\n        return x == 25\n    if n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if x == n**n:\n        return True\n    else:\n        return False", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x == 2\n    elif n == 3:\n        return x == 3\n    elif n == 4:\n        return x == 4\n    elif n == 5:\n        return x == 5\n    elif n == 6:\n        return x == 6\n    elif n == 7:\n        return x == 7\n    elif n == 8:\n        return x == 8\n    elif n == 9:\n        return x == 9\n    elif n == 10:\n        return x == 10\n    elif n == 11:\n        return x == 11\n    elif n == 12:\n        return x == 12\n    elif n == 13:\n        return x == 13\n    elif n == 14:\n        return x == 14\n    elif n == 15:\n        return x == 15\n    elif n == 16:\n        return x == 16\n    elif n == 17:\n        return x == 17\n    elif n == 18:\n        return x == 18\n    elif n == 19:\n        return x == 19\n    elif n == 20:\n        return x == 20\n    elif n == 21:\n        return x == 21\n    elif n == 22:\n        return x == 22\n    elif n == 23:\n        return x == 23\n    elif n == 24:\n        return x == 24\n    elif n == 25:\n        return x == 25\n    elif n ==", "def is_simple_power(x, n):\n    \"\"\"Your task is to write a function that returns true if a number x is a simple\n    power of n and false in other cases.\n    x is a simple power of n if n**int=x\n    For example:\n    is_simple_power(1, 4) => true\n    is_simple_power(2, 2) => true\n    is_simple_power(8, 2) => true\n    is_simple_power(3, 2) => false\n    is_simple_power(3, 1) => false\n    is_simple_power(5, 3) => false\n    \"\"\"\n    if n == 1:\n        return x == 1\n    elif n == 2:\n        return x % 2 == 0\n    elif n == 3:\n        return x % 3 == 0\n    elif n == 4:\n        return x % 4 == 0\n    elif n == 5:\n        return x % 5 == 0\n    elif n == 6:\n        return x % 6 == 0\n    elif n == 7:\n        return x % 7 == 0\n    elif n == 8:\n        return x % 8 == 0\n    elif n == 9:\n        return x % 9 == 0\n    elif n == 10:\n        return x % 10 == 0\n    elif n == 11:\n        return x % 11 == 0\n    elif n == 12:\n        return x % 12 == 0\n    elif n == 13:\n        return x % 13 == 0\n    elif n == 14:\n        return x % 14 == 0\n    elif n == 15:\n        return x % 15 == 0\n    elif n == 16:\n        return x % 16 == 0\n    elif n == 17:\n        return x % 17 == 0\n    elif n == 18:\n        return x % 18 == 0\n    elif n == 19:\n        return x % 19 == 0\n    elif n == 20:\n        return x % 20 == 0\n    elif n == 21:\n        return x % 21 == 0\n    elif n == 22:"]]