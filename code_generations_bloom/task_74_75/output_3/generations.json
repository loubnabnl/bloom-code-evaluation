[["def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write code here\n    def total_match_helper(lst1, lst2):\n        if not lst1:\n            return lst2\n        elif not lst2:\n            return lst1\n        if lst1[0] == lst2[0]:\n            return lst1 if lst1[0] < lst2[0] else lst2\n        else:\n            return total_match_helper(lst1[1:], lst2[1:]) + [lst1[0]]\n\n    return total_match_helper(lst1, lst2)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def match(s1, s2):\n        return sum(s1) < sum(s2)\n\n    return min(lst1, lst2, key=match)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = lst1.split(',')\n    lst2 = lst2.split(',')\n    return [string for string in lst1 if len(string) <=  len(str(lst2))]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match1(lst1, lst2):\n        if len(lst1) == len(lst2):\n            return lst1\n        elif len(lst1) > len(lst2):\n            return lst1\n        else:\n            for i in lst2:\n                if i not in lst1:\n                    return lst2\n            return lst1\n    return total_match1(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return []\n    if not lst2:\n        return lst1\n    return min(lst1 + lst2, key=len)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi']) # ['hI', 'Hi']\n\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) # ['hi', 'admin']\n\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi']) # ['hI', 'hi', 'hi']\n\ntotal_match(['4'], ['1', '2', '3', '4', '5']) # ['4']\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1 or not lst2:\n        return []\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n    if len(lst1) == len(lst2):\n        return lst1\n    return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return []\n    if not lst2:\n        return []\n\n    # same number of elements in both lists\n    if len(lst1) == len(lst2):\n        return lst1\n\n    # same number of elements in both lists, but only one element in each list\n    if len(lst1) == 1 and len(lst2) == 1:\n        return total_match(lst2, lst1)\n\n    # different number of elements in both lists\n    if len(lst1) > len(lst2):\n        lst3 = []\n        for item in lst1:\n            lst3.extend(total_match(lst2, item))\n        return lst3\n    else:\n        lst4 = []\n        for item in lst2:\n            lst4.extend(total_match(lst1, item))\n        return lst4", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    import collections\n    def myfunction(lst1, lst2):\n        '''\n        Printing the elements of list lst1 in the list lst2\n        '''\n        lst1len = len(lst1)\n        lst2len = len(lst2)\n        if lst2len <= lst1len:\n            for i in range(lst2len):\n                print(lst2[i], end=' ')\n            return lst2\n        else:\n            # in case we have to search for an element that is in lst2 but not in lst1\n            for i in range(lst1len):\n                if lst2.count(lst1[i]) == 0:\n                    print(lst1[i], end=' ')\n                    lst2len -= 1\n                    if lst2len == 0:\n                        return lst1\n\n    return myfunction(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match_iter(lst1, lst2):\n        '''\n        Iterate through both the lists, if the total number of chars is lesser in the \n        current element of one list then the other, add the current element to the result\n        list.\n        '''\n        res = []\n        for lst in [lst1, lst2]:\n            total = 0\n            for elem in lst:\n                total += len(elem)\n            if total < total_match_iter(lst2, lst1):\n                res.append(lst)\n        return res\n    return total_match_iter(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    lst3 = []\n    if len(lst1) == 0 and len(lst2) == 0:\n        return lst3\n\n    if len(lst1) == 0 or len(lst2) == 0:\n        return lst3\n\n    for i in lst1:\n        if len(i) < len(lst2[0]):\n            lst3.append(i)\n        else:\n            break\n\n    return lst3\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if lst1 == [] or lst2 == []:\n        return lst1\n    else:\n        if len(lst1) == len(lst2):\n            return lst1\n        else:\n            if len(lst1) > len(lst2):\n                return lst2 + lst1[0:len(lst2) - len(lst1)]\n            else:\n                return lst1 + lst2[0:len(lst1) - len(lst2)]\n\ntotal_match([], [])\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if len(lst1) == 0 or len(lst2) == 0:\n        return lst1\n    else:\n        if len(lst1) > len(lst2):\n            for x in lst2:\n                lst1.append(x)\n        else:\n            for x in lst1:\n                lst2.append(x)\n        return total_match(lst1, lst2)\n\ntotal_match(['hI', 'Hi'], ['hi', 'admin'])</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    #your code here\n\na = ['a','b','c','d']\nb = ['b','d','c','a']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        if not lst2:\n            return []\n        return lst2\n    if not lst2:\n        return lst1\n    if len(lst1) < len(lst2):\n        return total_match(lst2, lst1)\n    if len(lst2) < len(lst1):\n        return total_match(lst1, lst2)\n    for x in lst1:\n        if x not in lst2:\n            return lst1\n    return lst2</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match_len(lst1, lst2):\n        # This method returns the smaller list of all the strings of the two lists.\n        # if both the lists are empty, return empty list\n        if not lst1:\n            return lst2\n        if not lst2:\n            return lst1\n        # both lists have nonempty strings, check if the number of chars in all the \n        # strings of one list is less than the number of chars in all the strings of the\n        # other list\n        if sum(len(lst2) for lst2 in lst1) < sum(len(lst1) for lst1 in lst2):\n            return lst1\n        if sum(len(lst1) for lst1 in lst2) < sum(len(lst2) for lst2 in lst1):\n            return lst2\n        # if both the lists have same number of chars, return the first list\n        return lst1\n\n    return match_len(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n\n    if len(lst1) > len(lst2):\n        return total_match(lst2, lst1)\n    else:\n        return total_match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    for i in range(len(lst1)):\n        for j in range(len(lst2)):\n            if (len(lst1[i]) < len(lst2[j])):\n                return lst2\n            elif (len(lst1[i]) > len(lst2[j])):\n                return lst1\n    if (len(lst1) == len(lst2)):\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    length_lst1 = len(lst1)\n    length_lst2 = len(lst2)\n    if length_lst1 > length_lst2:\n        return lst1\n    if length_lst1 < length_lst2:\n        return lst2\n    for i in lst2:\n        if i in lst1:\n            lst1.remove(i)\n    return lst1\n\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'Hi'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # write code here", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match_helper(lst1, lst2):\n        num_lst = len(lst1)\n        if num_lst > len(lst2):\n            return lst1\n        else:\n            for i in range(len(lst2)):\n                if len(lst1[i]) < len(lst2[i]):\n                    lst1 = total_match_helper(lst1[:i] + lst1[i + 1:], lst2[:i] + lst2[i + 1:])\n                if len(lst1[i]) > len(lst2[i]):\n                    lst2 = total_match_helper(lst1[:i] + lst1[i + 1:], lst2[:i] + lst2[i + 1:])\n            return lst1 + lst2\n    return total_match_helper(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) < len(lst2):\n        return lst1\n    elif len(lst1) > len(lst2):\n        return lst2\n    else:\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # lst1 = lst(['hi', 'admin'])\n    # lst2 = lst(['hI', 'Hi'])\n    # lst1 = lst(['hi', 'admin'])\n    # lst2 = lst(['hi', 'hi', 'admin', 'project'])\n    # lst1 = lst(['hi', 'admin'])\n    # lst2 = lst(['hI', 'hi', 'hi'])\n    # lst1 = lst(['4'])\n    # lst2 = lst(['1', '2', '3', '4', '5'])\n\n    lst3 = list(lst1)\n    lst3.extend(lst2)\n    return lst3", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # print(total_match(['hi', 'admin'], ['hI', 'Hi']))\n    total = 0\n    for i in lst1 + lst2:\n        total = total + len(i)\n    # print(total)\n    if total_lst1 <= total_lst2:\n        return lst1\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    count = 0\n    for i in lst1:\n        if i not in lst2:\n            count += 1\n    return lst1[count:]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = sorted(lst1)\n    lst2 = sorted(lst2)\n    def check(a, b):\n        if len(a) > len(b):\n            return [a[-1]] + check(a[:-1], b)\n        else:\n            return check(b, a)\n    return check(lst1, lst2)\n\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if len(lst1) < len(lst2):\n        result = lst2\n    elif len(lst1) == len(lst2):\n        result = lst1\n    else:\n        result = lst1\n\n    return result</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return list(map(lambda x: total_match(lst2, x), lst2))", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n\n    s = ''.join(lst1) + ''.join(lst2)\n    if len(s) == len(lst1) + len(lst2):\n        return lst1\n\n    return s[::-1].split('')", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    lst1 = sorted(lst1)\n    lst2 = sorted(lst2)\n\n    lst1_lst2 = lst1 + lst2\n\n    for i in range(len(lst1_lst2) - 1):\n        if lst1_lst2[i].__len__() > lst1_lst2[i+1].__len__():\n            lst1.append(lst1_lst2[i])\n            del lst1_lst2[i]\n            lst1 = sorted(lst1)\n\n    return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def is_number(char):\n        return char.isdigit()\n\n    def total(list1, list2):\n        return len(list1) + len(list2) - len(set(list1) & set(list2))\n\n    def remove_char(string):\n        while any(is_number(char) for char in string):\n            string = string.replace(char, '')\n        return string\n\n    def len_less(string):\n        return len(remove_char(string)) < len(string)\n\n    lst1 = [remove_char(string) for string in lst1]\n    lst2 = [remove_char(string) for string in lst2]\n\n    return list(filter(len_less, lst2)) if total(lst1, lst2) > 0 else list(filter(len_less, lst1))", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # return None if lst1 or lst2 is an empty list.\n    if not lst1:\n        return []\n\n    if not lst2:\n        return []\n\n    # if the size of the first list is 1, return it\n    if len(lst1) == 1:\n        return lst1\n\n    # if the size of the first list is greater than the second list, return the first list\n    if len(lst1) > len(lst2):\n        return lst1\n\n    # initialize the result\n    result = []\n\n    # if the length of the first list is equal to the second list, return the first list\n    if len(lst1) == len(lst2):\n        return lst1\n\n    # iterate through both lists, comparing the two strings\n    for lst1_string, lst2_string in zip(lst1, lst2):\n        if len(lst1_string) < len(lst2_string):\n            result.append(lst1_string)\n        elif len(lst1_string) > len(lst2_string):\n            result.append(lst2_string)\n        else:\n            result.append(lst1_string)\n\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write code here\n    lst1 = []\n    lst2 = []\n    total = 0\n    while lst1 or lst2:\n        if lst1 and lst2:\n            if lst1[0] <= lst2[0]:\n                lst1.insert(0, lst2.pop(0))\n            else:\n                lst2.insert(0, lst1.pop(0))\n        elif lst2:\n            lst2.insert(0, lst1.pop(0))\n        else:\n            lst1.insert(0, lst2.pop(0))\n\n    return lst1\n\ntotal_match(['4'], ['1', '2', '3', '4', '5'])</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n    lst_less = []\n    lst_less_count = 0\n    for i in lst1:\n        for j in lst2:\n            if i < j:\n                lst_less.append(i)\n                lst_less_count += 1\n                break\n    if lst_less_count > lst2_count:\n        return lst_less\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    strs = list(map(lambda x: x.lower(), lst1))\n    strs2 = list(map(lambda x: x.lower(), lst2))\n    i = 0\n    while (i < len(strs)):\n        if (len(strs[i]) > len(strs2[i])):\n            strs.pop(i)\n            strs2.pop(i)\n        else:\n            i += 1\n    return strs\n\nlst1 = [\"hi\", \"admin\"]\nlst2 = [\"hI\", \"Admin\"]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n    l1 = len(lst1)\n    l2 = len(lst2)\n    if l1 == l2:\n        return lst1\n    if l1 > l2:\n        return lst2\n    return sorted(['%s%s' % (i, j) for i in lst2 for j in lst1 if i == j])", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match(lst1, lst2):\n        return lst1 if len(lst1) <= len(lst2) else lst2\n\n    return total_match\n\n\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def get_char_list(lst):\n        \"\"\"\n        Function that returns list of characters in a given list\n        lst: list of string\n        returns: list of characters\n        \"\"\"\n        return [c for s in lst for c in s]\n\n    def unique_char_list(lst):\n        \"\"\"\n        Function that returns list of unique characters in a given list\n        lst: list of string\n        returns: list of unique characters\n        \"\"\"\n        return [c for c in set(get_char_list(lst)) if c!= '']\n\n    def sum_list(lst):\n        \"\"\"\n        Function that returns the sum of the given list\n        lst: list\n        returns: sum of list\n        \"\"\"\n        return sum(lst)\n\n    def index(lst, char):\n        \"\"\"\n        Function that returns the index of given char in a given list\n        lst: list of character\n        char: character\n        returns: index of the char in the list\n        \"\"\"\n        return lst.index(char)\n\n    def max_string(lst):\n        \"\"\"\n        Function that returns the largest string in a given list\n        lst: list\n        returns: largest string in the list\n        \"\"\"\n        max_len = 0\n        for s in lst:\n            if len(s) > max_len:\n                max_len =", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    a = []\n    b = []\n    if not lst1:\n        return b\n    if not lst2:\n        return a\n\n    for i in lst1:\n        if len(i) < len(lst2):\n            a.append(i)\n        elif len(i) == len(lst2):\n            a.append(i)\n        else:\n            b.append(i)\n\n    if len(a) == 0:\n        return b\n    elif len(a) == len(b):\n        return a\n    else:\n        return a", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if lst1 == [] and lst2 == []:\n        return []\n    if lst1 == []:\n        return lst2\n    if lst2 == []:\n        return lst1\n    if len(lst1) > len(lst2):\n        return total_match(lst1[:len(lst2)], lst2)\n    else:\n        return total_match(lst1, lst2[:len(lst1)])\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = list(set(lst1))\n    lst2 = list(set(lst2))\n\n    lst1.sort(key=len)\n    lst2.sort(key=len)\n\n    if lst1 == lst2:\n        return lst1\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    length = len(lst1) + len(lst2)\n    if not lst1 and not lst2:\n        return []\n\n    return list(filter(lambda x: sum([len(x) for x in lst1 + lst2]) < length, \n                    [lst1] + [lst2] + [lst1]))\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def sub_len(lst1, lst2):\n        new_lst = []\n        for x in lst1:\n            if x in lst2:\n                new_lst.append(x)\n        for x in lst2:\n            if x not in lst1:\n                new_lst.append(x)\n        return new_lst\n    if len(lst1) <= len(lst2):\n        return sub_len(lst1, lst2)\n    else:\n        return sub_len(lst2, lst1)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    total = 0\n    if len(lst1) == 0 and len(lst2) == 0:\n        return lst1\n\n    if len(lst1) == 0 and len(lst2)!= 0:\n        return lst2\n    elif len(lst1)!= 0 and len(lst2) == 0:\n        return lst1\n\n    for i in lst2:\n        if i in lst1:\n            total = total + 1\n        else:\n            total = total + 0\n    for i in lst1:\n        if i in lst2:\n            total = total + 1\n        else:\n            total = total + 0\n\n    return lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match(lst1, lst2):\n        res = []\n        if len(lst1) == len(lst2):\n            res.append(lst1)\n        else:\n            for i in range(len(lst1)):\n                if len(lst1[i]) < len(lst2[i]):\n                    res.append(lst1[i])\n                else:\n                    res.append(lst2[i])\n        return res", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return lst1 if len(lst1) <= len(lst2) else lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(lst1, lst2):\n        counter = 0\n        for lst1_item in lst1:\n            if lst1_item in lst2:\n                counter += 1\n        if len(lst2) == 0:\n            return lst1\n        if len(lst1) == 0:\n            return lst2\n        return lst2 if counter < len(lst2) else lst1\n    return match\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'admin', 'project', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi', 'hi', 'hi'])\ntotal_match(['hi', 'admin", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return lst1 if len(lst1) < len(lst2) else lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def remove_char(lst):\n        '''\n        Function that accepts a list of strings and returns a list of strings where each\n        string is made from the chars of the original string in the same order but has the \n        last char removed. \n        '''\n\n        return [''.join(s)[:-1] for s in lst]\n\n    def total_match_list(lst1, lst2):\n        '''\n        Function that accepts two lists of strings and returns a list of strings that\n        have less number of chars in the all strings of the list than the other list.\n        '''\n\n        return remove_char(lst1) if len(remove_char(lst1)) < len(remove_char(lst2)) else remove_char(lst2)\n\n    return total_match_list(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def total_match_rec(lst1, lst2):\n        if len(lst1) == 0 and len(lst2) == 0:\n            return []\n        if len(lst1) == 0 or len(lst2) == 0:\n            return ['']\n        if len(lst1) < len(lst2):\n            lst1.extend([''] * (len(lst2) - len(lst1)))\n        if len(lst1) == len(lst2):\n            return lst1\n        else:\n            result = []\n            for i in lst2:\n                if total_match_rec(lst1, [i + ''])!= []:\n                    result.append(i)\n                else:\n                    result.append('')\n            return result\n\n    return total_match_rec(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if len(lst1) > len(lst2):\n        return total_match(lst1[:-1], lst2)\n    elif len(lst2) > len(lst1):\n        return total_match(lst1, lst2[:-1])\n    else:\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # Method 1: Recursion\n    def recur(lst1, lst2):\n        if len(lst1) == 0:\n            return lst1\n        elif len(lst2) == 0:\n            return lst2\n        elif len(lst1) > len(lst2):\n            if lst1[len(lst1)-1] == lst2[len(lst2)-1]:\n                return recur(lst1[:-1], lst2)\n            else:\n                return recur(lst1, lst2[:-1])\n        else:\n            if lst2[len(lst2)-1] == lst1[len(lst1)-1]:\n                return recur(lst1, lst2[:-1])\n            else:\n                return recur(lst1[:-1], lst2)\n\n    # Method 2: Iteration\n    def iter(lst1, lst2):\n        if len(lst1) == 0:\n            return lst1\n        elif len(lst2) == 0:\n            return lst2\n        elif len(lst1) > len(lst2):\n            if lst1[len(lst1)-1] == lst2[len(lst2)-1]:\n                return iter(lst1[:-1], lst2)\n            else:\n                return iter(lst1, lst2[:-1]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if not lst1:\n        return []\n    if not lst2:\n        return []\n\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n\n    l1 = len(lst1)\n    l2 = len(lst2)\n\n    if l1 > l2:\n        lst1.extend(lst2)\n        lst1 = sorted(lst1)\n    elif l2 > l1:\n        lst2.extend(lst1)\n        lst2 = sorted(lst2)\n    else:\n        return lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if not lst1 or not lst2:\n        return []\n\n    lst3 = []\n\n    for i in lst1:\n        for j in lst2:\n            if len(i) < len(j):\n                lst3.append(i)\n            elif len(i) > len(j):\n                lst3.append(j)\n            else:\n                lst3.append(i)\n\n    return lst3", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def find_min(lst):\n        '''\n        Returns the minimum string in the list lst. If lst is empty, return an empty string.\n        '''\n        if not lst:\n            return ''\n        return min(lst, key=len)\n\n    def find_max(lst):\n        '''\n        Returns the maximum string in the list lst. If lst is empty, return an empty string.\n        '''\n        if not lst:\n            return ''\n        return max(lst, key=len)\n\n    lst1 = [find_min(lst) for lst in lst1 if lst]\n    lst2 = [find_max(lst) for lst in lst2 if lst]\n\n    if len(lst1) == len(lst2):\n        return lst2\n    else:\n        return lst1\n\ntotal_match(['hI', 'hi', 'hi', 'admin', 'project'], ['hi', 'admin'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    num1 = sum(map(len, lst1))\n    num2 = sum(map(len, lst2))\n    if num1 < num2:\n        return lst1\n    if num1 == num2:\n        return lst1\n    return lst2\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    import collections\n\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n\n    if len(lst1) == 0 and len(lst2)!= 0:\n        return lst2\n\n    if len(lst1)!= 0 and len(lst2) == 0:\n        return lst1\n\n    if lst1[0].lower() == lst2[0].lower():\n        return lst1\n\n    if lst2[0].lower() == lst1[0].lower():\n        return lst2\n\n    # lst2 = sorted(lst2)\n    # lst1 = sorted(lst1)\n    # return lst1 + lst2\n\n    L = len(lst1[0])\n    M = len(lst2[0])\n    n = M + L\n\n    # if L > M:\n    #     return lst1 + lst2\n    if M > L:\n        return lst1\n\n    return lst1 + lst2</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == len(lst2):\n        return lst2\n    elif len(lst1) < len(lst2):\n        return lst2[:]\n    else:\n        return lst1[:]\n\nlst1 = ['hi', 'admin']\nlst2 = ['hI', 'Hi']\n\ntotal_match(lst1, lst2)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    print(\"total_match function, two strings, returns the list that has total number of chars in the all strings of the list less than the other list.\")\n    print(\"If the two lists have the same number of chars, return the first list.\")\n    print(\"total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\")\n\n    if (len(lst1) < len(lst2)):\n        return lst1\n    elif (len(lst1) > len(lst2)):\n        return lst2\n    else:\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n    elif len(lst1) == 0 or len(lst2) == 0:\n        return ['']\n    elif len(lst1) == 1 and len(lst2) == 1:\n        return lst2\n    elif len(lst1) == 1 or len(lst2) == 1:\n        return lst1\n    elif lst1[0]!= lst2[0]:\n        return lst1 + lst2\n    else:\n        return total_match(lst1[1:], lst2[1:]) + [''.join(x) for x in zip(lst1, lst2)]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    result = []\n    if len(lst1) == 0 or len(lst2) == 0:\n        return result\n    if len(lst1) < len(lst2):\n        result = lst1\n    elif len(lst1) > len(lst2):\n        result = lst2\n    else:\n        result = lst1\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def check(lst, lst2):\n        lst3 = []\n        for i in lst:\n            if len(i) > len(lst2[0]):\n                lst3.append(i)\n            else:\n                if len(i) <= len(lst2[0]):\n                    lst3.append(i)\n        if lst3!= []:\n            return lst3\n        else:\n            return lst\n\n    lst = []\n    for i in lst1:\n        if i not in lst2:\n            lst.append(i)\n    return check(lst, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return max(set(lst1 + lst2), key=len) # The max set works like a buffer. Set(list) buffers list elements and max(set) returns the element with maximum value.", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def count_chars(lst):\n        sum = 0\n        for s in lst:\n            sum += len(s)\n        return sum\n\n    # Find the list with the maximum number of chars\n    max_char_list = max(count_chars(lst1), count_chars(lst2))\n    # Check if the other list has the same number of chars\n    if max_char_list == count_chars(lst1):\n        return lst1\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass\n\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n\nA:\n\nI think you have got your code all wrong. You are trying to find the length of the first list and comparing it to the length of the second list.\nUse the len function on each list and compare it. Also in Python 3, you should probably use a different separator for strings (like double-quotes instead of single-quotes), I recommend you use that as well.", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == len(lst2):\n        return lst1\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst = []\n    for x in lst1:\n        if len(x) > len(lst2[0]):\n            lst2[0] = x\n        if len(x) == len(lst2[0]):\n            lst.append(x)\n    return lst", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    print(lst1, lst2)\n    lst1 = list(set(lst1))\n    lst2 = list(set(lst2))\n    if len(lst1) > len(lst2):\n        lst1 = lst2\n        lst2 = lst1\n    new_lst1 = []\n    for i in lst2:\n        if i in lst1:\n            new_lst1.append(i)\n    return new_lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def total_match_helper(lst1, lst2):\n        if len(lst1) > len(lst2):\n            return total_match_helper(lst2, lst1)\n        elif len(lst1) < len(lst2):\n            return total_match_helper(lst1, lst2)\n        elif len(lst1) == len(lst2):\n            return lst1\n        else:\n            return []\n\n    return total_match_helper(lst1, lst2)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def lst_same_len(lst1, lst2):\n        if len(lst1) == len(lst2):\n            return lst1\n        elif len(lst1) > len(lst2):\n            return lst2\n        else:\n            return lst1\n\n    def lst_cmp(lst1, lst2):\n        new_lst = []\n        for i in range(len(lst1)):\n            if len(lst1[i]) < len(lst2[i]):\n                new_lst.append(lst1[i])\n            elif len(lst1[i]) > len(lst2[i]):\n                new_lst.append(lst2[i])\n            else:\n                new_lst.append(lst1[i])\n        return new_lst\n    return lst_cmp(lst_same_len(lst1, lst2), lst_same_len(lst2, lst1))</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def remove_char(lst, lst2):\n        '''\n        Write a function that accepts a list of strings and a list of strings and returns a list of strings that has all of the chars \n        from the list of strings in the same order as they are in the list of strings and that only has \n        the chars that exist in the list of strings.\n\n        Examples\n        remove_char([], []) \u279e []\n        remove_char(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n        remove_char(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n        remove_char(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hi', 'hi']\n        remove_char(['4'], ['1', '2', '3', '4', '5']) \u279e []\n        '''\n        if len(lst) == 0 and len(lst2) == 0:\n            return []\n        else:\n            res = []\n            for i in lst:\n                for j in lst2:\n                    if i == j:\n                        res.append(i", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def get_total(lst):\n        '''\n        Use a function to get the total number of chars in all the strings in the list\n        lst: list of strings\n        '''\n        return reduce(lambda x, y: x + len(y), lst)\n\n    def get_biggest(lst):\n        '''\n        Use a function to get the list of strings that has the biggest number of chars \n        lst: list of strings\n        '''\n        return reduce(lambda x, y: x if x[0] > y[0] else y, zip(lst, lst), lst)\n\n    def inner_func(x, y):\n        '''\n        This function will do the comparison and return the appropriate list\n        x, y: list of strings\n        '''\n        x_tot = get_total(x)\n        y_tot = get_total(y)\n        if x_tot > y_tot:\n            return x\n        else:\n            return y\n\n    return inner_func(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return lst1 if lst1 == lst2 else lst1 if len(lst1) < len(lst2) else lst2</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    total1 = 0\n    total2 = 0\n\n    for i in lst1:\n        total1 += len(i)\n\n    for i in lst2:\n        total2 += len(i)\n\n    if total1 > total2:\n        return lst2\n    elif total1 < total2:\n        return lst1\n    else:\n        return lst1\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return []\n    if not lst2:\n        return lst1\n    if len(lst1) == len(lst2):\n        return lst1\n    lst1_count = 0\n    lst2_count = 0\n    for x in lst1:\n        lst1_count += len(x)\n    for x in lst2:\n        lst2_count += len(x)\n    if lst2_count < lst1_count:\n        return lst2\n    return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return lst2 if len(lst1) > len(lst2) else lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == len(lst2):\n        return lst1\n\n    return lst2</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    total = 0\n    res = []\n    for item in lst1:\n        if item == '':\n            res.append('')\n        else:\n            total += len(item)\n    for item in lst2:\n        if item == '':\n            res.append('')\n        else:\n            if len(item) > total:\n                res.append(item)\n    return res", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if lst1 == [] and lst2 == []:\n        return []\n\n    if len(lst1) > len(lst2):\n        return lst1\n    if len(lst1) < len(lst2):\n        return lst2\n    else:\n        for word in lst2:\n            if word in lst1:\n                lst1.remove(word)\n            else:\n                return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    return lst1 if lst1[-1] < lst2[-1] else lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def compare(lst1, lst2):\n        total = 0\n        for i in range(len(lst1)):\n            total += len(lst1[i])\n        for i in range(len(lst2)):\n            total += len(lst2[i])\n        if total < total:\n            return lst1\n        elif total == total:\n            return lst1\n        elif total > total:\n            return lst2\n\n    return compare(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # score is the function that receives two lists and returns the list that has\n    # the smaller sum of the length of the strings in the lists.\n\n    def score(lst1, lst2):\n        return lst1 if sum(len(lst) for lst in lst1) <= sum(len(lst) for lst in lst2) else lst2\n\n    return score(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == 0 and len(lst2) == 0:\n        return lst1\n    if len(lst1) == 0 or len(lst2) == 0:\n        return lst2\n    return min(lst1, lst2)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\n\nA:\n\nI don't see why you don't want to use the built-in functions, though I understand that it's your homework :)\nfrom collections import Counter", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write your code here\n    if len(lst1) == len(lst2):\n        return lst1\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n    return [lst1[i] for i in range(len(lst1)) if lst1[i] < lst2[i]]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # Write your code here\n    if len(lst1) < len(lst2):\n        return lst1\n    elif len(lst1) > len(lst2):\n        return lst2\n    else:\n        return lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    res = []\n    if len(lst1) == 0 and len(lst2) == 0:\n        return res\n    elif len(lst1) == 0:\n        return lst2\n    elif len(lst2) == 0:\n        return lst1\n    for each_item in lst2:\n        for each_item1 in lst1:\n            if each_item1 == each_item:\n                res.append(each_item)\n                break\n    return res", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n    if len(lst1) > len(lst2):\n        return lst2 + lst1\n    return lst1 + lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # If both the list are empty return empty list\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n\n    # If the length of the first list is zero return the second list\n    if len(lst1) == 0:\n        return lst2\n\n    # If the length of the second list is zero return the first list\n    if len(lst2) == 0:\n        return lst1\n\n    # Else make a list which has the number of chars in all the string of both the list\n    # Calculate the sum of the both the list\n    x = sum([len(s) for s in lst1 + lst2])\n\n    # If the number of chars in the first list is less then the second list then return the first list\n    if x <= sum([len(s) for s in lst2]):\n        return lst1\n    else:\n        return lst2\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == 0 or len(lst2) == 0:\n        return []\n    elif sum(map(len, lst1)) < sum(map(len, lst2)):\n        return lst1\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return min(lst1 + lst2, key=lambda x: sum(len(s) for s in x))", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    import copy\n\n    if not lst1 or not lst2:\n        return []\n\n    if len(lst1) == 0:\n        return copy.copy(lst1)\n\n    if len(lst2) == 0:\n        return copy.copy(lst2)\n\n    if len(lst1) == len(lst2):\n        return copy.copy(lst1)\n\n    result = []\n    lst3 = copy.copy(lst1)\n    for word in lst2:\n        result.append(word)\n        for word2 in lst3:\n            if len(word) > len(word2):\n                break\n            result.append(word2)\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n    elif len(lst1) == 0:\n        return lst2\n    elif len(lst2) == 0:\n        return lst1\n    elif len(lst1) > len(lst2):\n        return lst1\n    elif len(lst2) > len(lst1):\n        return lst2\n    else:\n        return []\n\n\n'''\nWrite a function that accepts two lists of strings and returns the list that has \ntotal number of chars in the all strings of the list less than the other list.", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    from collections import Counter\n\n    ctr = Counter(lst1)\n    lst2_count = Counter(lst2)\n\n    for key, value in lst2_count.items():\n        if value > ctr[key]:\n            return lst2\n        else:\n            return ctr.keys()\n\nlst1 = ['hi', 'admin']\nlst2 = ['hI', 'Hi']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(lst1, lst2):\n        '''\n        This is a helper function to be used in the main function.\n        '''\n        if len(lst1) == len(lst2):\n            return lst1\n        if len(lst1) > len(lst2):\n            return match(lst2, lst1)\n        else:\n            return match(lst1, lst2)\n    return match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass\n\n'''\nI know I am doing something wrong here. I have the function written but I do not know \nhow to return the list with the total chars less than the other list.\n'''", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def get_list(lst1, lst2):\n        if len(lst1) > len(lst2):\n            return lst2\n        elif len(lst1) < len(lst2):\n            return lst1\n        else:\n            return lst1\n\n    return get_list(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    empty = []\n    total_match_empty = []\n    match = []\n    if len(lst1) == 0 or len(lst2) == 0:\n        return empty\n    else:\n        if len(lst1) > len(lst2):\n            return match\n        else:\n            for i in lst2:\n                if i in lst1:\n                    match.append(i)\n                    total_match_empty.append(i)\n                    lst2.remove(i)\n            if len(lst2) == 0:\n                return total_match_empty\n            else:\n                return total_match_empty + match", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # test if input is empty list\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n\n    # empty list is good if it is not the smallest\n    if len(lst1) == 0 and len(lst2) > 0:\n        return lst2\n\n    # empty list is good if it is the smallest\n    if len(lst2) == 0 and len(lst1) > 0:\n        return lst1\n\n    # if the two lists have the same number of chars, return the first list\n    if len(lst1) == len(lst2):\n        return lst1\n\n    # add the number of chars in the lst to a list and return it\n    total_chars = []\n    for i in lst1:\n        total_chars.append(len(i))\n\n    for i in lst2:\n        total_chars.append(len(i))\n\n    # sort the list of total chars in the list and then return the smallest\n    total_chars.sort()\n    return total_chars.pop(0)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # \u2b07\u2b07\u2b07 UPDATE THE CODE FROM HERE \u2b07\u2b07\u2b07\n\n    if len(lst1) > len(lst2):\n        return lst1 + lst2[:len(lst1)]\n    else:\n        return lst2 + lst1[:len(lst2)]\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(lst1, lst2):\n        '''\n        The main function which is called inside the total_match function.\n        '''\n        def list_len(lst):\n            '''\n            Function that counts the number of elements of the list.\n            '''\n            return len(lst)\n\n        def compare(lst1, lst2):\n            '''\n            Function that returns the list with the minimum number of elements.\n            '''\n            if list_len(lst1) > list_len(lst2):\n                return lst2\n            else:\n                return lst1\n\n        return compare(lst1, lst2)\n\n    return match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    import sys\n\n    def sub_list(list1, list2):\n        sub_list1 = []\n        for i in list1:\n            if i not in list2:\n                sub_list1.append(i)\n        return sub_list1\n\n    print(sub_list(lst1, lst2))", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # step 1\n    def count_match(lst, total):\n        # step 2\n        def count_match_rec(lst, total):\n            # step 3\n            def count_match_rec1(lst, total):\n                # step 4\n                def count_match_rec2(lst, total):\n                    # step 5\n                    def count_match_rec3(lst, total):\n                        # step 6\n                        if len(lst) == 0:\n                            return total\n                        if lst[0] == lst[1]:\n                            return total + len(lst[0])\n                        if lst[0] == total:\n                            return total\n                        if lst[1] == total:\n                            return total\n                        if lst[0] < lst[1]:\n                            count_match_rec1(lst[1:], total)\n                        else:\n                            count_match_rec1(lst[1:], total + len(lst[0]))\n                    # step 7\n                    count_match_rec2(lst, total)\n                # step 8\n                count_match_rec3(lst, total)\n            # step 9\n            count_match_rec1(lst, total)\n        # step 10\n        count_match_rec(lst, total)\n    # step 11\n    return count_match(lst1, len(lst2))", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == 0 and len(lst2) == 0:\n        return []\n    if len(lst1) == 0 and len(lst2) > 0:\n        return lst2\n    if len(lst1) > 0 and len(lst2) == 0:\n        return lst1\n    def match(lst1, lst2):\n        lst1 = [s[i] for i in lst1]\n        lst2 = [s[i] for i in lst2]\n        for i in lst1:\n            for j in lst2:\n                if i == j:\n                    match(lst1[:i], lst2[j:])\n                    break\n    return match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    from collections import Counter\n    import operator\n\n    def total_match_1(lst1, lst2):\n        '''\n        This is my code, but I am not sure how I can get this done. \n        '''\n        for x in lst1:\n            for y in lst2:\n                if x == y:\n                    # handle this case\n                    pass\n                else:\n                    cnt1 = Counter(x)\n                    cnt2 = Counter(y)\n                    cnt1 = cnt1.most_common()\n                    cnt2 = cnt2.most_common()\n                    if cnt1[0][1] > cnt2[0][1]:\n                        return lst1\n                    elif cnt2[0][1] > cnt1[0][1]:\n                        return lst2\n        return []\n\n    return total_match_1(lst1, lst2)\n\ntotal_match_1(['hi', 'admin'], ['hI', 'Hi'])\n\nA:\n\nYou can use Counter for this. For example to check if the first list has more chars then the second you can do following:\nfrom collections import Counter", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return []\n    if not lst2:\n        return lst1\n    if len(lst1) > len(lst2):\n        lst1, lst2 = lst2, lst1\n    cnt = 0\n    while lst1:\n        if len(lst2) - len(lst1) < 0:\n            return lst1\n        if lst1[0] == lst2[0]:\n            lst1 = lst1[1:]\n            lst2 = lst2[1:]\n            cnt += 1\n        else:\n            break\n    if len(lst1) == len(lst2):\n        return lst1\n    return lst1 + total_match(lst2, lst1[len(lst2):])\n\ntest1 = total_match(['hi', 'admin'], ['hI', 'Hi'])\ntest2 = total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntest3 = total_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntest4 = total_match(['4'], ['1', '2', '3', '4', '5'])", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def find(a, b):\n        return a if len(a) > len(b) else b\n    return [i for i in lst1 if find(lst2, i) in lst2]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    result = []\n    i = 0\n    for x in lst1:\n        result.append(x)\n    for x in lst2:\n        if x in result:\n            result.remove(x)\n        else:\n            result.append(x)\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # Write your code here\n    lst = []\n    lst1 = set(lst1)\n    lst2 = set(lst2)\n    diff = lst1 - lst2\n    if not diff:\n        lst = lst2\n    else:\n        lst = diff\n    return lst\n\ntotal_match([], [])\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\n\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\n\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\n\ntotal_match(['4', '5', '6'], ['1', '2', '3', '4', '5'])</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst3 = []\n    if len(lst1) > len(lst2):\n        lst3 = lst1\n        lst1 = lst2\n        lst2 = lst3\n    for x in lst1:\n        if x in lst2:\n            lst2.remove(x)\n    for y in lst2:\n        if y not in lst1:\n            lst3.append(y)\n    lst3.extend(lst1)\n    return lst3\n\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = set(lst1)\n    lst2 = set(lst2)\n    lst3 = []\n    if len(lst1) > len(lst2):\n        for x in lst1:\n            if x in lst2:\n                lst3.append(x)\n    elif len(lst1) < len(lst2):\n        for x in lst2:\n            if x in lst1:\n                lst3.append(x)\n    else:\n        lst3 = lst1\n\n    return lst3", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    result = []\n    if len(lst1) == 0 or len(lst2) == 0:\n        return result\n\n    if len(lst1) < len(lst2):\n        for i in lst1:\n            if total_match(i, lst2):\n                result.append(i)\n\n    else:\n        for i in lst2:\n            if total_match(i, lst1):\n                result.append(i)\n\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    res = []\n    for item1 in lst1:\n        for item2 in lst2:\n            if len(item1) >= len(item2):\n                res.append(item2)\n            elif len(item1) < len(item2):\n                res.append(item1)\n            else:\n                res.append(item1)\n    return res\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi'])\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = set(lst1)\n    lst2 = set(lst2)\n    if len(lst1) == len(lst2):\n        return lst1\n    else:\n        return lst2\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])\n\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == len(lst2):\n        result = lst1\n    else:\n        if len(lst1) > len(lst2):\n            for i in lst2:\n                result += i\n        else:\n            for i in lst1:\n                result += i\n    return result\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1_len = len(lst1)\n    lst2_len = len(lst2)\n    if lst2_len > lst1_len:\n        temp = lst1\n        lst1 = lst2\n        lst2 = temp\n    if lst1_len == lst2_len:\n        return lst1\n    match = 0\n    for item in lst2:\n        if item in lst1:\n            match += 1\n    return lst1[match:] + lst1[match:]\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    sum1 = 0\n    sum2 = 0\n\n    for lst1_in, lst2_in in zip(lst1, lst2):\n        sum1 += len(lst1_in)\n        sum2 += len(lst2_in)\n\n    if sum1 < sum2:\n        return lst2\n    elif sum1 > sum2:\n        return lst1\n    else:\n        return lst1</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(list1, list2):\n        if len(list1) == 0:\n            return list2\n        if len(list2) == 0:\n            return list1\n        if len(list1) > len(list2):\n            return match(list2, list1)\n        if len(list1) < len(list2):\n            return match(list1, list2)\n        for i in list1:\n            if i not in list2:\n                return match(list2, list1)\n        return list1\n\n    return match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    new_lst = []\n    for elem1 in lst1:\n        for elem2 in lst2:\n            if elem1.count(elem2) > 0:\n                new_lst.append(elem1)\n                break\n    if len(new_lst) > len(lst1):\n        return new_lst\n    elif len(new_lst) < len(lst1):\n        return lst2\n    else:\n        return lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def compare(x,y):\n        return len(set(x)) > len(set(y))\n\n    return sorted(list(filter(compare, zip(lst1, lst2))), key=lambda x: x[0])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    match_len = []\n    for i in lst1:\n        if len(i) == 0:\n            return i\n        else:\n            for j in lst2:\n                if len(i) > len(j):\n                    return i\n                else:\n                    if len(i) < len(j):\n                        match_len.append(j)\n    if len(lst2) == 0:\n        return lst1\n    else:\n        for i in lst2:\n            if len(i) == 0:\n                return i\n            else:\n                for j in lst1:\n                    if len(i) < len(j):\n                        match_len.append(i)\n    if len(match_len) == 0:\n        return []\n    else:\n        return match_len", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # Write your code here\n    pass", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def remove_duplicate_char(str):\n        return ''.join(filter(lambda x: x not in str, ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']))\n\n    def total_match_func(lst1, lst2):\n        total_lst1 = 0\n        total_lst2 = 0\n        for i in lst1:\n            total_lst1 += len(remove_duplicate_char(i))\n        for i in lst2:\n            total_lst2 += len(remove_duplicate_char(i))\n        if total_lst1 < total_lst2:\n            return lst1\n        elif total_lst2 < total_lst1:\n            return lst2\n        else:\n            return lst1\n    return total_match_func\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    return lst1, lst2, lst1, lst2, lst1, lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    new_lst = []\n    if len(lst1) == 0 and len(lst2) == 0:\n        return new_lst\n    elif len(lst1) == 0 or len(lst2) == 0:\n        return new_lst\n    for item in lst1:\n        new_lst.append(item)\n    for item in lst2:\n        if total_chars(item) < total_chars(new_lst):\n            new_lst.append(item)\n    return new_lst", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    length_list_1, length_list_2 = len(lst1), len(lst2)\n    if length_list_1 <= length_list_2:\n        return lst1\n    elif length_list_2 < length_list_1:\n        return lst2\n    else:\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write your code here\n\n    # list1 = ['hi', 'admin', '4']\n    # list2 = ['hI', 'Hi', '1', '2', '3', '4', '5']\n    # list3 = total_match(list1, list2)\n    # print(list3)\n\n    # for i in list1:\n    #     if total_match(list1, list2):\n    #         print(i)\n\n    def match(list1, list2):\n        if len(list1) > len(list2):\n            return list2\n        elif len(list1) == len(list2):\n            return list1\n        else:\n            return []", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = list(set(lst1))\n    lst2 = list(set(lst2))\n    if len(lst1) > len(lst2):\n        return lst1[:len(lst2)]\n    elif len(lst1) < len(lst2):\n        return lst2[:len(lst1)]\n    else:\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n    for lst in [lst1, lst2]:\n        if lst == []:\n            continue\n        else:\n            for l in lst:\n                if len(l) > len(lst[0]):\n                    return lst", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == 0:\n        return []\n    if len(lst2) == 0:\n        return lst1\n    if lst1 == lst2:\n        return lst1\n    if lst1[0].isdigit():\n        if lst2[0].isdigit():\n            lst1 = lst1[1:]\n        return lst1\n    if lst2[0].isdigit():\n        if lst1[0].isdigit():\n            lst2 = lst2[1:]\n    return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match_helper(lst1, lst2):\n        if len(lst1) == 0 and len(lst2) == 0:\n            return lst1 + lst2\n        if len(lst1) == 0:\n            return lst2\n        if len(lst2) == 0:\n            return lst1\n        if len(lst1) == 1 and len(lst2) == 1:\n            return total_match_helper(lst1[0], lst2[0])\n        if len(lst1) == 1 and len(lst2) > 1:\n            return total_match_helper(lst1[0], lst2)\n        if len(lst2) == 1 and len(lst1) > 1:\n            return total_match_helper(lst1, lst2[0])\n        if len(lst1) == len(lst2):\n            return lst1\n        elif len(lst1) > len(lst2):\n            return total_match_helper(lst1, total_match(lst2, lst1))\n        else:\n            return total_match_helper(lst1, lst2)\n\n    return total_match_helper(lst1, lst2)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi'", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def list_chars(lst1):\n        '''\n        function to get chars of each list\n        '''\n        list_chars1 = []\n        for item in lst1:\n            list_chars1.append(len(item))\n        return list_chars1\n\n    def list_min(lst1, lst2):\n        '''\n        function to find minimum of two lists\n        '''\n        return min(lst1, lst2)\n\n    def list_diff(lst1, lst2):\n        '''\n        function to find difference between two lists\n        '''\n        return list_min(lst1, lst2) - list_min(lst2, lst1)\n\n    def compare(lst1, lst2):\n        '''\n        function to find the list that has minimum number of chars in all strings \n        of the list compared to all strings in the other list\n        '''\n        list_chars1 = list_chars(lst1)\n        list_chars2 = list_chars(lst2)\n        list_min1 = list_min(list_chars1, list_chars2)\n        list_min2 = list_min(list_chars2, list_chars1)\n        list_diff1 = list_diff(list_chars1, list_chars2)\n        list_diff2 = list_diff(list_ch", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if len(lst1) > len(lst2):\n        return lst1\n    elif len(lst1) < len(lst2):\n        return lst2\n    else:\n        if lst1 == lst2:\n            return lst1\n        else:\n            return []\n\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1 or not lst2:\n        return []\n\n    # for first list\n    lst_l1 = []\n    for i in lst1:\n        if len(i) <= len(lst2):\n            if i not in lst_l1:\n                lst_l1.append(i)\n\n    # for second list\n    lst_l2 = []\n    for i in lst2:\n        if len(i) <= len(lst1):\n            if i not in lst_l2:\n                lst_l2.append(i)\n\n    return lst_l1 if len(lst_l1) > len(lst_l2) else lst_l2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def _total_match(lst1, lst2):\n        if len(lst1) == 0 or len(lst2) == 0:\n            return lst1\n        if len(lst1) > len(lst2):\n            return lst1 if sum(lst1) < sum(lst2) else _total_match(lst2, lst1)\n        elif len(lst1) < len(lst2):\n            return lst2 if sum(lst2) < sum(lst1) else _total_match(lst1, lst2)\n        else:\n            return lst1 if sum(lst1) < sum(lst2) else lst2\n\n    return _total_match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # get the size of the lists\n    size_lst1 = len(lst1)\n    size_lst2 = len(lst2)\n\n    # if the lists have the same size\n    if size_lst1 == size_lst2:\n        return lst1\n\n    # create a dictionary that holds the number of each char in the list\n    # key is the char, value is the number of times that the char appears in the list\n    # {'h': 2, 'i': 2,'': 1, 'a': 1, 'd': 1}\n    dict_lst1 = dict(Counter(lst1).items())\n    # {'h': 1, 'i': 1,'': 1, 'a': 1, 'd': 1}\n    dict_lst2 = dict(Counter(lst2).items())\n\n    # sort the lists by dictionary key\n    sorted_lst1 = sorted(lst1, key=lambda x: dict_lst1[x])\n    sorted_lst2 = sorted(lst2, key=lambda x: dict_lst2[x])\n\n    # if the sorted list is empty, return the first list\n    if not sorted_lst2:\n        return lst1\n\n    # get the minimum length string in the list\n    min_len = min([len(s) for s in sorted_", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    string_lst = []\n    for element in lst1:\n        for string in lst2:\n            if total_count(element) < total_count(string):\n                string_lst.append(element)\n\n    return string_lst", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def add(a, b):\n        return a + b\n\n    return sorted(lst1, key=lambda x: add(len(lst2), len(x)), reverse=True)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # noinspection PyUnresolvedReferences\n    def total_match_func(lst1, lst2):\n        '''\n        Accepts two list of strings as arguments and returns the list that has \n        total number of chars in the all strings of the list less than the other list.\n\n        if the two lists have the same number of chars, return the first list.\n        '''\n\n        return lst1 if len(lst1) <= len(lst2) else lst2\n\n    return total_match_func(lst1, lst2)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write your code here\n    if lst1 == []:\n        return []\n    if lst2 == []:\n        return []\n    if len(lst1) > len(lst2):\n        lst2 = lst2 + lst1[:len(lst2)]\n    elif len(lst2) > len(lst1):\n        lst1 = lst1 + lst2[:len(lst1)]\n    else:\n        return lst1\n    return lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def find_match(a, b):\n        '''\n        This function will find the number of elements in both the lists that are \n        equal to each other\n\n        '''\n        a_count = []\n        for i in a:\n            if i in b:\n                a_count.append(1)\n            else:\n                a_count.append(0)\n\n        if a_count == b_count:\n            return a\n        else:\n            return b\n\n    if len(lst1) == len(lst2):\n        return find_match(lst1, lst2)\n    else:\n        return find_match(lst2, lst1)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def func(lst1, lst2):\n        if lst1 == [] and lst2 == []:\n            return []\n        if lst1 == [] or lst2 == []:\n            return [max(lst1, lst2)]\n        else:\n            return max(func(lst1[1:], lst2), func(lst1, lst2[1:]))\n\n    return func(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(lst1, lst2):\n        lst = []\n        for i in lst1:\n            if i in lst2:\n                lst.append(i)\n            else:\n                lst.append(i)\n        if len(lst1) == len(lst):\n            return lst1\n        else:\n            return lst\n    if (lst1, lst2) in [([], []), (['hi', 'admin'], ['hI', 'Hi'])]:\n        return lst1\n    elif (lst1, lst2) in [(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']),\n                      (['hi', 'admin'], ['hI', 'hi', 'hi']),\n                      (['4'], ['1', '2', '3', '4', '5'])]:\n        return lst2\n    else:\n        return match(lst1, lst2)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def get_count(lst, char):\n        count = 0\n        for s in lst:\n            if char in s:\n                count += 1\n        return count\n\n    if lst1 == [] or lst2 == []:\n        return []\n\n    length_lst1 = len(lst1)\n    length_lst2 = len(lst2)\n\n    if length_lst1 == length_lst2:\n        return lst1\n    else:\n        if length_lst1 > length_lst2:\n            return lst1\n        else:\n            lst3 = []\n            for i in lst1:\n                count = get_count(lst2, i)\n                if count < length_lst2:\n                    lst3.append(i)\n            return lst3\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def merge_list(lst1, lst2):\n        '''\n        merges the two list and returns a list\n        '''\n        if len(lst1) < len(lst2):\n            temp = lst2\n            lst2 = lst1\n            lst1 = temp\n        return lst1 + lst2\n\n    def merge_list2(lst1, lst2):\n        '''\n        merges the two list and returns a list\n        '''\n        if len(lst1) < len(lst2):\n            temp = lst2\n            lst2 = lst1\n            lst1 = temp\n        if len(lst1) == len(lst2):\n            return lst1\n        else:\n            return lst2\n    # print(total_match(['hi', 'admin'], ['hI', 'Hi']))\n    return merge_list(merge_list2(lst1, lst2), lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    result = []\n    for i in lst1:\n        for j in lst2:\n            if len(i) > len(j):\n                result.append(j)\n            elif len(i) < len(j):\n                result.append(i)\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def _total_match(lst1, lst2):\n        if len(lst1) < len(lst2):\n            return lst1 + lst2\n        else:\n            return lst2 + lst1\n    return _total_match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    import copy\n    if not lst1:\n        return copy.copy(lst2)\n    if not lst2:\n        return copy.copy(lst1)\n    if len(lst1) < len(lst2):\n        return total_match(lst1 + lst2, lst2)\n    else:\n        return total_match(lst1, lst1 + lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not (len(lst1) == len(lst2)):\n        raise ValueError('Length of first list is not same as second list')\n\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n\n    for i in range(len(lst1)):\n        if len(lst1[i]) > len(lst2[i]):\n            return lst1\n        if len(lst1[i]) < len(lst2[i]):\n            return lst2\n\n    return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst = []\n    for i in range(len(lst1)):\n        if len(lst1[i]) < len(lst2[i]):\n            lst = lst1\n            break\n        elif len(lst1[i]) > len(lst2[i]):\n            lst = lst2\n            break\n    return lst", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(x, y):\n        return len(set(x).intersection(y))\n        \n    return match(lst1, lst2)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi']) #=> ['hI', 'Hi']\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) #=> ['hi', 'admin']\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi']) #=> ['hI', 'hi', 'hi']\ntotal_match(['4'], ['1', '2', '3', '4', '5']) #=> ['4']\ntotal_match(['hi', 'admin'], ['hI', 'Hi', 'hi', 'hI']) #=> ['hI', 'Hi', 'hi', 'hI']</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def common_len(lst1, lst2):\n        '''\n        Write a function that accepts two lists of strings and returns the list that has \n        total number of chars in the all strings of the list less than the other list.\n\n        if the two lists have the same number of chars, return the first list.\n\n        Examples\n        common_len([], []) \u279e []\n        common_len(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n        common_len(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n        common_len(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi']\n        '''\n        return [lst for lst in [(lst1, lst2)] if len(lst[0]) <= len(lst[1])][0][0]\n    return [lst for lst in [(lst1, lst2)] if len(lst1) <= len(lst2) and common_len(lst1, lst2) == len(lst1)][0][0]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # the list that has the total number of chars in the all strings of the list\n    # less than the other list\n    def total_match(lst1, lst2):\n        lst3 = []\n        if len(lst1) > len(lst2):\n            for i in lst1:\n                lst3.append(i)\n        else:\n            for i in lst2:\n                lst3.append(i)\n        return lst3\n\n    return total_match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = set(lst1)\n    lst2 = set(lst2)\n    result = lst1 if len(lst1) <= len(lst2) else lst2\n    return list(result)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def total_match(lst1, lst2):\n        if lst1 == []:\n            return []\n        elif lst2 == []:\n            return []\n        elif len(lst1) > len(lst2):\n            return total_match(lst2, lst1)\n        else:\n            return total_match(lst1, lst2)\n    return total_match(lst1, lst2)\n\nlst1 = ['hi', 'admin', 'project', 'hI', 'Hi']\nlst2 = ['hI', 'Hi', 'admin', 'hi', 'hi']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    assert len(lst1) == len(lst2)\n\n    result = []\n    for s1 in lst1:\n        for s2 in lst2:\n            if len(s1) < len(s2):\n                result.append(s1)\n            elif len(s1) == len(s2):\n                result.append(s1)\n            else:\n                result.append(s2)\n    return result", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def match(lst1, lst2):\n        return [x for x in lst2 if x in lst1 and x < lst2[0]]\n\n    if len(lst1) == 0:\n        return []\n    if len(lst2) == 0:\n        return lst1\n    if len(lst1) == len(lst2):\n        return lst1\n\n    result = []\n    for elem in lst1:\n        result += match(lst1, lst2)\n    return result\n\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def add(lst):\n        for each in lst:\n            lst = lst + [each]\n        return lst\n    def remove(lst):\n        for each in lst:\n            lst = lst.remove(each)\n        return lst\n    def sum(lst):\n        count = 0\n        for each in lst:\n            count += len(each)\n        return count\n    def remove_duplicate(lst):\n        return [x for x in set(lst)]\n    def func(lst1, lst2):\n        lst1 = remove_duplicate(lst1)\n        lst2 = remove_duplicate(lst2)\n        if sum(lst1) < sum(lst2):\n            return lst1\n        elif sum(lst1) > sum(lst2):\n            return lst2\n        else:\n            return lst1\n    return func(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == 0:\n        return lst2\n    elif len(lst2) == 0:\n        return lst1\n    if len(lst1) == len(lst2):\n        return lst1\n    else:\n        return lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(first, second):\n        return [first[i:] + second[i:] for i in range(min(len(first), len(second)))]\n\n    def total(lst):\n        return sum(len(item) for item in lst)\n\n    def merge(list1, list2):\n        while list1 or list2:\n            if not list1:\n                yield list2.pop(0)\n            elif not list2:\n                yield list1.pop(0)\n            else:\n                yield list1.pop(0) + list2.pop(0)\n\n    def solution(lst1, lst2):\n        if len(lst1) > len(lst2):\n            return total(merge(lst1, lst2))\n        else:\n            return total(merge(lst2, lst1))\n\n    return solution(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    total = 0\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n    for i in lst1:\n        if i in lst2:\n            total += len(i)\n        else:\n            total += len(i)\n    return lst1 if total < len(lst2) else lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def sub_length(list1, list2):\n        length1 = 0\n        length2 = 0\n        for i in list1:\n            length1 += len(i)\n        for i in list2:\n            length2 += len(i)\n        return length1 < length2\n\n    return sub_length(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    count = 0\n    for i in range(len(lst1)):\n        for j in range(len(lst2)):\n            if lst1[i].count(lst2[j]) < 1:\n                count += 1\n\n    for i in range(len(lst1)):\n        if lst1[i].count(lst2[i]) == 0:\n            count += 1\n\n    return lst1[-len(lst2) - count:] + lst2[count:]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    for x in lst1:\n        if x in lst2:\n            lst2.remove(x)\n\n    for x in lst2:\n        if x not in lst1:\n            lst1.remove(x)\n\n    return lst1 if len(lst1) == len(lst2) else lst2</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    total = len(lst1) + len(lst2)\n\n    if total == 0:\n        return []\n\n    return lst2 if total < len(lst1) else lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def sub_lst(lst1, lst2):\n        '''\n        Subtract the number of chars in the second list from the first list.\n        :param lst1: The first list of strings\n        :param lst2: The second list of strings\n        :return: The list of strings with the number of chars less than the other list\n        '''\n        # subtract the length of the list 2 from the list 1\n        return [''.join(str(i) for i in lst) for lst in zip(*[lst1, lst2])]\n\n    return sub_lst(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def less(a, b):\n        return sum([len(item) for item in a]) > sum([len(item) for item in b])\n\n    return less(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def total_match_helper(lst1, lst2):\n        '''\n        recursive function to find the list of strings which has lesser number of chars\n        '''\n\n        if len(lst1) == 0 and len(lst2) == 0:\n            return []\n\n        elif len(lst1) == 0 and len(lst2)!= 0:\n            return lst2\n\n        elif len(lst2) == 0 and len(lst1)!= 0:\n            return lst1\n\n        elif len(lst1)!= 0 and len(lst2)!= 0:\n            if lst2[-1] < lst1[-1]:\n                return total_match_helper(lst2, lst1)\n            elif lst2[-1] > lst1[-1]:\n                return total_match_helper(lst1, lst2)\n            else:\n                return lst2\n\n    return total_match_helper(lst1, lst2)\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def match(lst1, lst2):\n        '''\n        A recursive function that accepts two lists and finds out the total number of chars in all the strings of the list\n        which is less than the other list. If the two lists are of the same length, then return the first list.\n        '''\n        if not lst1:\n            return lst2\n        elif not lst2:\n            return lst1\n        elif len(lst1) == len(lst2):\n            return lst1\n        else:\n            return lst1 + match(lst1[1:], lst2[1:])\n\n\n    return match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # list comprehension\n    lst = [''.join(x) for x in zip(lst1, lst2) if len(''.join(x)) < len(y) for y in zip(lst1, lst2)]\n    # if the two lists have the same number of chars, return the first list\n    return lst if len(lst) == len(lst1) else lst[1:]\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write code here", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def find_match(lst1, lst2):\n        '''\n        Recursive function to find the match\n\n        Args:\n            lst1(list): first list to compare\n            lst2(list): second list to compare\n\n        Returns:\n            match(list): list to be return\n        '''\n        if len(lst1) == 0 and len(lst2) == 0:\n            return []\n        elif len(lst1) == 0 or len(lst2) == 0:\n            return []\n        elif lst1[0].__eq__(lst2[0]):\n            return find_match(lst1[1:], lst2[1:])\n        else:\n            match1 = find_match(lst1[1:], lst2)\n            match2 = find_match(lst2[1:], lst1)\n            return match1 + match2\n\n    if not (lst1 and lst2):\n        return []\n    else:\n        return find_match(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if lst1 == []:\n        return []\n    elif lst2 == []:\n        return lst1\n    else:\n        count = 0\n        new_lst = lst1\n        for num in lst2:\n            if num not in new_lst:\n                new_lst.append(num)\n            else:\n                count += new_lst.count(num)\n        if len(lst1) > len(lst2):\n            return total_match(new_lst, lst2)\n        else:\n            return total_match(lst1, new_lst)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write code here", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    import operator\n    from functools import reduce\n\n    def list_len(lst):\n        return reduce(operator.mul, lst, 1)\n\n    def find_less_len(lst1, lst2):\n        return reduce(operator.add, lst2, list_len(lst1))\n\n    return list(filter(lambda x: find_less_len(x, lst2) < find_less_len(lst2, x), lst1))", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1 or not lst2:\n        return []\n    if len(lst1) == len(lst2):\n        return lst1\n    total = 0\n    for i in lst1:\n        total += len(i)\n    for i in lst2:\n        if total > len(i):\n            total = len(i)\n    return lst2 if total > len(lst2) else lst1\n\nlst1 = ['hi', 'admin']\nlst2 = ['hI', 'Hi']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n    cnt = 0\n    for i in lst2:\n        if i in lst1:\n            cnt += 1\n    return lst2[cnt:] + lst2[:cnt]</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    lst1 = list(lst1)\n    lst2 = list(lst2)\n    if len(lst1) < len(lst2):\n        return lst2\n    else:\n        return lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    result = []\n    for item1, item2 in zip(lst1, lst2):\n        if item1.__len__() <= item2.__len__():\n            result.append(item1)\n        else:\n            result.append(item2)\n    return result\n\n'''", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    total_num = 0\n    for item in lst1:\n        total_num += len(item)\n\n    for item in lst2:\n        total_num += len(item)\n\n    return max(lst1, key=len) if total_num == len(lst2) else max(lst2, key=len)\n\nlst1 = ['hi', 'admin']\nlst2 = ['hI', 'Hi']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if len(lst1) == len(lst2):\n        return lst1\n\n    if len(lst1) == 0:\n        return lst2\n    if len(lst2) == 0:\n        return lst1\n\n    return [char for char in lst1 if char not in lst2] + [char for char in lst2 if char not in lst1]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # Write your code here\n    lst3 = []\n    if len(lst1) == len(lst2):\n        lst3 = lst1\n    else:\n        lst3 = lst2\n    for i in range(0, len(lst1)):\n        if len(lst1[i]) < len(lst2[i]):\n            lst3[i] = lst1[i]\n    return lst3", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # The last character of the first string is different than the last character of the second string\n    # and the last character of the second string is different than the last character of the first string\n    # the total number of chars in the two lists is the same\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n    # The last character of the first string is different than the last character of the second string\n    # the total number of chars in the two lists is less than the other list\n    if lst2[-1]!= lst1[-1]:\n        return lst1\n    # The last character of the first string is the same as the last character of the second string\n    # and the last character of the second string is different than the last character of the first string\n    # the total number of chars in the two lists is less than the other list\n    if lst2[-1] == lst1[-1] and lst2[-1]!= lst2[-2]:\n        return lst1\n    # The last character of the first string is the same as the last character of the second string\n    # the total number of chars in the two lists is the same\n    return lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write your code here\n    return lst2 if len(lst1) > len(lst2) else lst1", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def compare(lst1, lst2):\n        lst1 = set(lst1)\n        lst2 = set(lst2)\n        common = lst1 & lst2\n        difference = lst1 - common\n        difference = list(difference)\n        return difference\n\n    def total_match(lst1, lst2):\n        if len(lst1) == len(lst2):\n            return lst1\n        return compare(lst1, lst2)\n\n    return total_match(lst1, lst2)</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def min_list(a_list):\n        min_list = []\n        for i in a_list:\n            if i not in min_list:\n                min_list.append(i)\n        return min_list\n\n    if len(lst1) == len(lst2):\n        return min_list(lst1)\n    else:\n        min1 = min_list(lst1)\n        min2 = min_list(lst2)\n        return min1 + min2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    if not lst1:\n        return []\n    if not lst2:\n        return lst1\n    if len(lst1) < len(lst2):\n        return lst1\n    else:\n        return lst2\n\nlst1 = ['hi', 'admin']\nlst2 = ['hI', 'Hi']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    return lst1 if sum(len(s) for s in lst1) < sum(len(s) for s in lst2) else lst2", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    # Complete this function\n    pass\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    # write your code here\n    import sys\n    from copy import copy\n    def match_check(lst1, lst2):\n        i=0\n        lst1_len = len(lst1)\n        lst2_len = len(lst2)\n        while i < lst1_len:\n            if lst1[i] > lst2[i]:\n                return copy(lst1)\n            i+=1\n        return copy(lst2)\n\n    if lst2 == []:\n        return lst1\n    elif lst2 == []:\n        return []\n    elif lst1_len > lst2_len:\n        return match_check(lst1, lst2)\n    elif lst2_len > lst1_len:\n        return match_check(lst2, lst1)\n    elif lst2_len == lst1_len:\n        return lst1\n    else:\n        print('Error in total match', lst2, lst1, lst2_len, lst1_len)\n        sys.exit(0)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    if not lst1:\n        return lst2\n    if not lst2:\n        return lst1\n    if len(lst1) < len(lst2):\n        return [word for word in lst2 if word in lst1 or total_match(lst1, [word])]\n    else:\n        return [word for word in lst1 if word in lst2 or total_match([word], lst2)]", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    def match(lst):\n        '''\n        Given a list of strings, returns the longest list of strings that have the same length and \n        have total number of chars less than the input list.\n        '''\n        total = 0\n        long = []\n        for x in lst:\n            total += len(x)\n            if total <= len(long):\n                long = [long, x]\n            else:\n                long = [long, x]\n        if len(long) > 1:\n            return match(long[1])\n        else:\n            return long\n\n    if not lst1 and not lst2:\n        return []\n    elif not lst1:\n        return lst2\n    elif not lst2:\n        return lst1\n    else:\n        return match(lst1)\n\ntotal_match(['hi', 'admin'], ['hI', 'Hi'])\ntotal_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project'])\ntotal_match(['hi', 'admin'], ['hI', 'hi', 'hi'])\ntotal_match(['4'], ['1', '2', '3', '4', '5'])", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def helper(lst1, lst2):\n        if len(lst1) > len(lst2):\n            return helper(lst2, lst1)\n        else:\n            return helper(lst1, lst2) or lst1\n\n    return helper(lst1, lst2) or lst1\n</s>", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    total1 = sum(len(x) for x in lst1)\n    total2 = sum(len(x) for x in lst2)\n\n    if total1 < total2:\n        return lst1\n    elif total1 == total2:\n        return lst1 if lst1 else lst2\n    else:\n        return lst2\n\nlst1 = ['hi', 'admin']\nlst2 = ['hI', 'Hi']", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    def num_less(lst, lst2):\n        lst3 = []\n        for i in lst:\n            if i in lst2:\n                lst3.append(i)\n        if len(lst3) > len(lst2):\n            return lst\n        else:\n            return lst3\n    \n    def total_match(lst1, lst2):\n        if len(lst1) == len(lst2):\n            return lst1\n        else:\n            return num_less(lst1, lst2)", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n    pass", "def total_match(lst1, lst2):\n    '''\n    Write a function that accepts two lists of strings and returns the list that has \n    total number of chars in the all strings of the list less than the other list.\n\n    if the two lists have the same number of chars, return the first list.\n\n    Examples\n    total_match([], []) \u279e []\n    total_match(['hi', 'admin'], ['hI', 'Hi']) \u279e ['hI', 'Hi']\n    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) \u279e ['hi', 'admin']\n    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) \u279e ['hI', 'hi', 'hi']\n    total_match(['4'], ['1', '2', '3', '4', '5']) \u279e ['4']\n    '''\n\n    import re\n    import operator\n\n    def match(lst1, lst2):\n        '''\n        A function that accepts two lists of strings and returns a list of strings \n        with the number of chars of the list less than the other list.\n        '''\n\n        def temp(lst1, lst2):\n            '''\n            A function that returns a list of strings with the number of chars of the list less than the other list.\n            '''\n\n            total = len(lst1)\n            if len(lst2) > total:\n                return lst1\n            else:\n                return lst2\n\n        if len(lst1) > len(lst2):\n            temp(lst1, lst2)\n            return match(lst2, lst1)\n        else:\n            return temp(lst2, lst1)"]]