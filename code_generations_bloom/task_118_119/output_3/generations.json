[["def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # write your code here\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    if len(word) == 0:\n        return ''\n    if word[0] in vowels:\n        return word[0]\n    elif word[-1] in vowels:\n        return word[-1]\n    for i in range(1,len(word)):\n        if word[i] in vowels and word[i-1] not in vowels and word[i+1] not in vowels:\n            return word[i]\n    return ''\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def get_consonants(word):\n        \"\"\"Return a list of consonant in the word.\"\"\"\n\n        consonants = []\n\n        for i, letter in enumerate(word):\n            if letter.isupper():\n                consonants.append(letter)\n            elif letter.islower():\n                consonants.append(letter.upper())\n\n        return consonants\n\n    consonants = get_consonants(word)\n    vowels = \"aeiou\"\n    index = len(consonants) - 1\n    return vowels[index]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # Solution 1\n    # Convert all consonants to same letter\n    # Find distance from end, return closest one\n\n    # Convert to same letter\n    letters = word.lower().replace(\"y\",\"z\")\n    letters = letters.replace(\"z\",\"y\")\n\n    if letters in (\"yy\",\"zz\"):\n        letters = letters.replace(\"y\",\"z\")\n        letters = letters.replace(\"z\",\"y\")\n\n    vowels = \"aeiou\"\n    vowels = letters.replace(letters,\"\").replace(\"y\",\"i\").replace(\"z\",\"i\").replace(\"x\",\"i\")\n\n    if vowels in (\"ii\",\"zz\",\"yy\"):\n        vowels = vowels.replace(\"i\",\"y\")\n\n    if vowels in (\"y\",\"zz\",\"yy\"):\n        vowels = vowels.replace(\"y\",\"i\")\n\n    if vowels in (\"z\",\"zz\",\"yy\"):\n        vowels = vowels.replace(\"z\",\"i\")\n\n    if vowels in (\"x\",\"zz\",\"yy\"):\n        vowels = vow", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonant = list(word)\n    for i in range(len(consonant) - 1):\n        if consonant[i] == consonant[i + 1] == consonant[i + 2]:\n            if consonant[i] == 'a':\n                return consonant[i]\n            if consonant[i] == 'e':\n                return consonant[i]\n            if consonant[i] == 'i':\n                return consonant[i]\n            if consonant[i] == 'o':\n                return consonant[i]\n            if consonant[i] == 'u':\n                return consonant[i]\n            if consonant[i] == 'y':\n                return consonant[i]\n            return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    if len(word) == 0:\n        return \"\"\n    elif len(word) == 1:\n        if word[0] in vowels:\n            return word[0]\n        else:\n            return \"\"\n    else:\n        for i in range(len(word)):\n            if word[i] in vowels:\n                return word[i]\n        return \"\"\n\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    result = \"\"\n    for letter in word:\n        if letter.upper() in \"aeiouAEIOU\":\n            result = letter\n            break\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Find the first consonant from the right\n    # Find the first vowel after that consonant\n    # Return the vowel that is closest to the consonant in position\n    # return empty string if the word is just a vowel\n\n    consonant_pos = word.rfind('b') + 1\n    if consonant_pos == len(word):\n        return \"\"\n    else:\n        vowel_pos = word.find(\"a\", consonant_pos)\n        if vowel_pos == -1:\n            return \"\"\n        else:\n            return word[vowel_pos + 1:consonant_pos]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    for letter in word:\n        if letter in vowels:\n            return letter\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    closest_vowel = \"\"\n    for i in range(len(word) - 1):\n        if word[i] in vowels:\n            closest_vowel = word[i]\n            break\n\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    for i, letter in enumerate(word[::-1]):\n        if letter in vowels:\n            return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonant_indexes = [i for i, char in enumerate(word) if char.isalpha() and char.lower() not in \"aeiou\"]\n    vowel_indexes = [i for i, char in enumerate(word) if char.isalpha() and char.lower() in \"aeiou\"]\n    if len(consonant_indexes) > 0 and len(vowel_indexes) > 0:\n        closest_vowel = \"\"\n        if word[0].isalpha():\n            closest_vowel = word[0]\n        else:\n            closest_vowel = word[0]\n        for vowel in vowel_indexes:\n            if vowel > 0:\n                if word[vowel].isalpha():\n                    closest_vowel = word[vowel]\n                    break\n        for consonant in consonant_indexes:\n            if consonant < len(word) - 1:\n                if word[consonant + 1].isalpha():\n                    closest_vowel = word[consonant + 1]\n                    break\n        return closest_vowel\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    possible_vowels = []\n\n    word = list(word)\n    for i in range(len(word)):\n        if word[i].lower() in vowels:\n            possible_vowels.append(word[i])\n\n    possible_vowels.sort()\n    if not possible_vowels:\n        return \"\"\n    return possible_vowels[-1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import string\n    vowels = {\n        \"a\": 0, \"A\": 0, \"e\": 0, \"E\": 0, \"i\": 0, \"I\": 0, \"o\": 0, \"O\": 0, \"u\": 0, \"U\": 0\n        }\n    consonants = {\n        \"c\": 0, \"C\": 0, \"f\": 0, \"F\": 0, \"g\": 0, \"G\": 0, \"k\": 0, \"K\": 0, \"l\": 0, \"L\": 0,\n        \"m\": 0, \"M\": 0, \"n\": 0, \"N\": 0, \"p\": 0, \"P\": 0, \"r\": 0, \"R\": 0, \"s\": 0, \"S\": 0,\n        \"t\": 0, \"T\": 0, \"w\": 0, \"W\": 0, \"y\": 0, \"Y\": 0\n        }\n    for index, char in enumerate(word):\n        if char in vowels:\n            vowels[char] += 1\n        elif char in consonants:\n            consonants[char] += 1\n        elif char in string.ascii_uppercase:\n            if char == \"A\":\n                if vowels[\"a\"] == 0:\n                    return \"\"\n            elif char == \"E\":\n                if vowels[\"e\"] == 0:\n                    return \"\"\n            elif char == \"I", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n\n    for i in range(len(word)-1, 0, -1):\n        if word[i] in vowels and word[i-1].lower() not in vowels and word[i+1].lower() not in vowels:\n            return word[i]\n    \n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n    if len(word) <= 1:\n        return \"\"\n    # get leftmost consonant\n    left_consonant = 0\n    left = 0\n    while word[left] not in consonants:\n        left += 1\n    # get rightmost consonant\n    right_consonant = len(word) - 1\n    right = len(word) - 1\n    while word[right] not in consonants:\n        right -= 1\n    # get vowel\n    while word[left_consonant + 1] in vowels:\n        vowel = word[left_consonant + 1]\n        break\n    # output\n    if vowel == word[left_consonant + 1]:\n        return word[left_consonant + 1]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = '!,@#$%^&*()[]{}<>/?|~=+\u00ac'\n    for i in range(len(word)):\n        if word[i] in consonants and word[i+1] in vowels:\n            return word[i+1]\n        else:\n            if word[i-1] in vowels and word[i] in consonants:\n                return word[i-1]\n            else:\n                if word[i-1] in consonants and word[i] in vowels:\n                    return word[i]\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    longest_vowel = \"\"\n    vowels = set(\"aeiou\")\n    count = len(word)\n\n    for i in range(len(word) - count + 1):\n        if word[i] not in vowels and word[i + 1] in vowels and word[i + 2] in vowels:\n            longest_vowel = word[i]\n            break\n\n    return longest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    consonants = \"ptckfspbdlmnpjguvxz\"\n    vowels = \"aeiou\"\n\n    for idx, letter in enumerate(word):\n        if letter in vowels:\n            return letter\n        if letter in consonants:\n            if idx == 0:\n                return \"\"\n            if idx == len(word) - 1:\n                return \"\"\n            if (idx - 1) >= 0 and word[idx-1] not in consonants:\n                return word[idx-1]\n            if (idx + 1) < len(word) and word[idx+1] not in consonants:\n                return word[idx+1]\n\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    letter_index = 0\n    last_consonant_index = -1\n    while(letter_index < len(word) and word[letter_index]!= \"\"):\n        if(word[letter_index] in string.ascii_letters):\n            if(last_consonant_index!= -1):\n                if(word[letter_index] == word[last_consonant_index + 1]):\n                    return word[letter_index]\n            last_consonant_index = letter_index\n        letter_index += 1\n    return \"\"\n\n\"\"\"\nProblem 3\nWrite a function that takes a string and returns the number of vowels in the string.\nIf the string contains non-english characters, return 0.\nFor example, the function should return 2 for the string \"aeiou\", return 0 for \"\u65e5\u672c\u8a9e\",\nand return 1 for \"\u4eca\u5929\".\n\"\"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    def is_letter_vowel(letter):\n        vowels = \"aeiou\"\n        return letter.lower() in vowels\n        \n    def get_word_length(word):\n        return len(word)\n        \n    if not word:\n        return \"\"\n    \n    if len(word) == 1:\n        return word[0]\n        \n    right_most_consonant_index = len(word) - 1\n        \n    for i in range(len(word)):\n        if is_letter_vowel(word[i]):\n            return word[i]\n            \n    right_most_consonant_index -= 1\n        \n    for i in range(right_most_consonant_index, len(word)):\n        if is_letter_vowel(word[i]):\n            return word[i]\n            \n    return \"\"\n\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = \"blclfljptsvz\"\n    vowels = \"aeiou\"\n    if word[-1].upper() in consonants:\n        return \"\"\n    for i in range(len(word) - 2):\n        if word[i].upper() in vowels and word[i + 1].upper() in consonants and word[i + 2].upper() in consonants:\n            return word[i].upper()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n        return \"\"\n\n    # Initialize dictionary of consonants and vowels.\n    consonants = {'a':'A', 'b':'B', 'c':'C', 'd':'D', 'e':'E', 'f':'F', 'g':'G', 'h':'H', 'i':'I', 'j':'J', 'k':'K', 'l':'L','m':'M', 'n':'N', 'o':'O', 'p':'P', 'q':'Q', 'r':'R','s':'S', 't':'T', 'u':'U', 'v':'V', 'w':'W', 'x':'X', 'y':'Y', 'z':'Z'}\n    vowels = {'a':'A', 'e':'E', 'i':'I', 'o':'O', 'u':'U'}\n\n    # Separate consonants and vowels\n    consonants = word.split('')[0::2]\n    vowels = word.split('')[1::2]\n\n    # Get the rightmost consonant in the word.\n    # If the word is only consonants, return \"\"\n    if not vowels:\n        return \"\"\n\n    # Recursive call to get the vowel.\n    return get_closest_vowel(vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.upper()\n\n    if len(word) < 2:\n        return \"\"\n\n    for i in range(len(word)):\n        if word[i] in \"AEIOU\":\n            if word[i-1].isupper() and word[i+1].isupper():\n                return word[i]\n        elif word[i] in \"BCDFGHJKLMNPQRSTVWXYZ\":\n            if word[i-1].isupper() and word[i+1].isupper():\n                return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word[0].lower() not in \"aeiou\":\n        return \"\"\n    if word[len(word) - 1].lower() not in \"aeiou\":\n        return \"\"\n\n    # write your code here\n    # find the longest string that starts with vowel\n    max_vowel = \"\"\n    for vowel in \"aeiou\":\n        if word.lower().startswith(vowel):\n            if len(word) < len(max_vowel) or len(word) == len(max_vowel):\n                max_vowel = word\n\n    if len(max_vowel) == len(word):\n        return max_vowel\n\n    # find the longest string that ends with vowel\n    max_vowel = \"\"\n    for vowel in \"aeiou\":\n        if word.lower().endswith(vowel):\n            if len(word) < len(max_vowel) or len(word) == len(max_vowel):\n                max_vowel = word\n\n    if len(max_vowel) == len(word):\n        return max_vowel\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    if len(word) < 3:\n        return \"\"\n    vowels = \"aeiou\"\n    vowels = [chr(i) for i in range(97, 123)]\n    vowels.extend(chr(i) for i in range(64, 91))\n    vowels.extend(chr(i) for i in range(123, 127))\n    consonants = [c for c in word if c not in vowels]\n    consonants = [c for c in consonants if c!= '']\n    if len(consonants) < 1:\n        return word[len(consonants)-1]\n    if len(consonants) > 1:\n        return \"\"\n    left = \"\"\n    right = \"\"\n    for i in range(len(consonants)):\n        if consonants[i] == consonants[i+1]:\n            left += consonants[i]\n            right += consonants[i+1]\n    closest_vowel = \"\"\n    for v in vowels:\n        if v in left:\n            return v\n        elif v in right:\n            return \"\"\n        else:\n            closest_vowel = v\n    return closest_vowel</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for char in word:\n        if char.islower() and char.lower() in 'aeiou':\n            return char.lower()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def get_len(s):\n        return len(s)\n\n    def get_char(s, index):\n        return s[index]\n\n    def get_left(s, index):\n        return s[:index]\n\n    def get_right(s, index):\n        return s[index:]\n\n    def is_vowel(char):\n        return char in \"aeiou\"\n\n    def is_upper(char):\n        return char.isupper()\n\n    def is_upper_consonant(char):\n        return is_vowel(char.lower()) and not is_upper(char)\n\n    def find_vowel(s, index, lower):\n        while index < len(s) and not is_vowel(s.pop(index)) and is_upper_consonant(s.pop(index)):\n            pass\n        return s.pop(index)\n\n    if not word:\n        return \"\"\n    return find_vowel(word, get_len(word), False)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    word = word.lower()\n\n    left = 0\n    right = len(word)\n    closest_vowel = \"\"\n    while left < right:\n        consonant = word[left]\n        if consonant in \"aeiou\":\n            return consonant\n        elif consonant in \"bcdfghjklmnpqrstvwxyz\":\n            left += 1\n        else:\n            closest_vowel = word[left]\n            right = left\n            break\n\n    return closest_vowel\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower() # convert to lower case\n    vowels = \"aeiou\"\n    if not word: # empty string\n        return \"\"\n    if word[0] in vowels or word[-1] in vowels: # word starts or ends with vowel\n        return \"\"\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    res = \"\"\n    for i in range(len(word)):\n        if word[i] in \"aeiou\":\n            res += word[i]\n    return res", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] not in vowels:\n            break\n    if i == len(word) - 1:\n        return \"\"\n    return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    word = word.lower()\n    for letter in word:\n        if letter in 'aeiou':\n            return letter\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    import re\n\n    word = word.lower()\n\n    # find the vowel that is rightmost\n    vowels = re.findall(\"[aeiouy]\", word)\n\n    if vowels:\n        # return the vowel\n        return vowels[-1]\n    else:\n        # return empty string\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # remove spaces\n    word = word.replace(\" \",\"\")\n\n    # remove other symbols\n    word = word.replace(\"!\",\"\")\n    word = word.replace(\".\",\"\")\n    word = word.replace(\",\",\"\")\n    word = word.replace(\";\",\"\")\n    word = word.replace(\":\",\"\")\n    word = word.replace(\"/\",\"\")\n    word = word.replace(\"\\\\\",\"\")\n    word = word.replace(\"<\",\"\")\n    word = word.replace(\">\",\"\")\n    word = word.replace(\"?\",\"\")\n\n    # remove numbers\n    word = word.replace(\"2\",\"\")\n    word = word.replace(\"3\",\"\")\n    word = word.replace(\"4\",\"\")\n    word = word.replace(\"5\",\"\")\n    word = word.replace(\"6\",\"\")\n    word = word.replace(\"7\",\"\")\n    word = word.replace(\"8\",\"\")\n    word = word.replace(\"9\",\"\")\n\n    # remove x\n    word = word.replace(\"x\",\"\")\n\n    # remove y\n    word = word.replace(\"y\",\"\")\n\n    # remove", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    l = len(word)\n    for i in range(l):\n        if word[i] in vowels and word[i-1] in consonants and word[i+1] in consonants:\n            return word[i]\n        if word[i] in vowels and word[i-1] in consonants and word[i+1] not in consonants:\n            return word[i]\n        if word[i] not in vowels and word[i-1] not in vowels and word[i+1] in consonants:\n            return word[i]\n\n    return \"\"\n\n\n\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word == \"\":\n        return \"\"\n    else:\n        letters = word.split()\n        last_letter = letters[-1]\n        for letter in letters:\n            if letter not in \"aeiouAEIOU\":\n                if letter not in consonants:\n                    return letter\n                else:\n                    if letter not in last_letter:\n                        return letter\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word[-1] in \"aeiou\" or word[-2] in \"aeiou\":\n        return word[-1] if word[-1] in \"aeiou\" else word[-2]\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = set(\"bcdfghjklmnpqrstvwxyz\")\n    vowels = set(\"aeiou\")\n    for letter in word:\n        if letter in consonants:\n            return \"\"\n        elif letter in vowels:\n            return letter\n        else:\n            continue", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    if not word:\n        return \"\"\n    end = len(word)\n    for index in range(end-1, -1, -1):\n        if word[index] in consonants and word[index-1] in vowels:\n            return word[index]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) < 3: return \"\"\n    vowels = \"aeiouAEIOU\"\n    consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    for i in xrange(len(word)-1):\n        if word[i] in consonants and word[i+1] in vowels:\n            return word[i+1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def count_consonants(word):\n        \"\"\"Count number of consonants\"\"\"\n        return sum(c in word for c in string.ascii_lowercase if c not in 'aeiouy')\n\n    def get_vowels(word):\n        \"\"\"Get vowels in the word\"\"\"\n        vowels = set('aeiouy')\n        return word.translate(str.maketrans('', '', vowels))\n\n    def get_closet_vowel(word):\n        \"\"\"Get closest vowel in the word\"\"\"\n        word = word.replace(\" \", \"\")\n        vowels = get_vowels(word)\n        if len(vowels) == 0:\n            return \"\"\n        else:\n            left = 0\n            right = len(word)\n            while left < right:\n                mid = (left + right) / 2\n                mid_vowel = word[mid]\n                if mid_vowel in vowels:\n                    left = mid + 1\n                else:\n                    right = mid\n            return word[left]\n\n    if len(word) == 0:\n        return \"\"\n    count = count_consonants(word)\n    if count == 0:\n        return \"\"\n    for i in range(len(word) - 1, -1, -1):", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.isupper():\n        word = word.lower()\n    if not word:\n        return \"\"\n    vowels = \"aeiou\"\n    if not word[-1] in vowels:\n        return \"\"\n    first_cons = \"\"\n    second_cons = \"\"\n    for i in range(len(word)-2, -1, -1):\n        if word[i] in vowels:\n            first_cons = word[i]\n            break\n    for i in range(len(word)-3, -1, -1):\n        if word[i] in vowels:\n            second_cons = word[i]\n            break\n    return first_cons + word[len(word) - len(second_cons) - 1:len(word) - 2] if len(word) > 2 else \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    assert len(word) > 0\n\n    consonants = list(\"bcdfghjklmnpqrstvwxz\")\n    vowels = list(\"aeiou\")\n    words = word.lower()\n    vowels_found = \"\"\n    rightmost = \"\"\n    for c in words:\n        if c not in consonants:\n            if c in vowels:\n                vowels_found += c\n            else:\n                rightmost = c\n    if rightmost == \" \" or rightmost not in consonants:\n        return \"\"\n\n    for v in vowels:\n        if v in vowels_found:\n            return v\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    word = list(word)\n    if len(word) == 0:\n        return \"\"\n\n    for i in range(len(word)):\n        if word[i].isupper():\n            return \"\"\n        elif word[i].islower():\n            if word[i-1].islower():\n                if word[i+1].islower():\n                    if word[i] in \"aeiouAEIOU\":\n                        return word[i]\n                    else:\n                        return \"\"\n            elif word[i+1].islower():\n                if word[i-1].islower():\n                    if word[i] in \"aeiouAEIOU\":\n                        return word[i]\n                    else:\n                        return \"\"\n        elif word[i].isupper():\n            if word[i-1].isupper():\n                if word[i+1].isupper():\n                    if word[i] in \"aeiouAEIOU\":\n                        return word[i]\n                    else:\n                        return \"\"\n            elif word[i+1].isupper():\n                if word[i-1].isupper():\n                    if word[i] in \"aeiouAEIOU\":\n                        return word[i]\n                    else:\n                        return \"\"\n    \n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word == \"\":\n        return \"\"\n\n    vowels = \"aeiouAEIOU\"\n    consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    counter = 1\n\n    for i in range(len(word)):\n        if word[i] in vowels and word[i-1] not in consonants and word[i+1] not in consonants:\n            return word[i]\n\n        if word[i] not in vowels and word[i-1] not in consonants and word[i+1] not in consonants:\n            counter += 1\n\n    return \"\" if counter >= 2 else \"\"\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n\n    word = word.lower()\n    if word[0] in vowels or word[-1] in vowels:\n        return \"\"\n\n    for i in range(len(word)-1,0,-1):\n        if word[i] in consonants and word[i-1] in consonants and word[i+1] in consonants:\n            # count the occurence of vowels\n            vowel_count = 0\n            for j in range(0,len(word)):\n                if word[j] in vowels:\n                    vowel_count += 1\n\n            # return the closest vowel if it's the first one in the word\n            if vowel_count == 0:\n                return word[i]\n            else:\n                return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n\n    if not word:\n        return \"\"\n\n    consonants_found = []\n    for i in word:\n        if i in consonants:\n            consonants_found.append(i)\n\n    vowels_found = []\n    for i in word:\n        if i in vowels:\n            vowels_found.append(i)\n\n    dist = []\n    for i in consonants_found:\n        min_dist = 100\n        for j in vowels_found:\n            dist.append(abs(j-i))\n            if abs(j-i) < min_dist:\n                min_dist = abs(j-i)\n        dist.sort(reverse=True)\n        if min_dist <= 1:\n            return i\n\n    return \"\"</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import re\n    import string\n    \n    words = word.lower()\n    words = re.sub(r'[^a-z]', '', words)\n    vowels = 'aeiou'\n    for word in words.split():\n        for vowel in vowels:\n            if len(word) >= 2 and word[0]!= vowel and word[-1]!= vowel and word.count(vowel):\n                return word\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def count_consonant(word):\n        \"\"\"Counts number of consonants from the right side of the word.\"\"\"\n        count = 0\n        index = len(word) - 1\n        while word[index].isalpha():\n            if word[index].isupper():\n                if word[index].islower():\n                    count += 1\n            index -= 1\n        return count\n    \n    def last_consonant_position(word):\n        \"\"\"Returns the index of the last consonant from the right side of the word.\"\"\"\n        index = len(word) - 1\n        while index > 0 and word[index].isalpha():\n            if word[index].isupper():\n                if word[index].islower():\n                    return index\n            index -= 1\n        return index\n\n    def closest_vowel_position(word, index):\n        \"\"\"Returns the closest vowel index from the right side of the word.\"\"\"\n        right_index = len(word) - 1\n        while right_index > index and word[right_index].isalpha():\n            if word[right_index].isupper():\n                if word[right_index].islower():\n                    return right_index\n            right_index -= 1\n        return right_index\n    \n    def get_closest_vow", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    closest_vowel = \"\"\n    for i in range(len(word)-1,0,-1):\n        if word[i] in \"aeiouAEIOU\":\n            if word[i-1] not in \"aeiouAEIOU\":\n                closest_vowel = word[i]\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    word = word.lower()\n    vowels = \"aeiou\"\n    # if no vowel\n    if not word:\n        return ''\n    # if only vowels\n    if word.isalnum():\n        return ''\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    # list of consonants\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l','m', 'n', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n    # list of consonants\n    consonants.remove('a')\n    consonants.remove('e')\n    consonants.remove('i')\n    consonants.remove('o')\n    consonants.remove('u')\n    # search in middle\n    for i in range(len(word) - 1):\n        if word[i] in consonants and word[i + 1] in consonants:\n            for j in range(i + 2, len(word)):\n                if word[j] in vowels:\n                    return word[j]\n    return ''</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    \n    word = word.lower()\n    \n    # skip prefix and suffix consonants\n    i = 0\n    while i < len(word) and word[i] in consonants:\n        i += 1\n    while i < len(word) and word[i] in consonants:\n        i += 1\n\n    # skip prefix and suffix vowels\n    j = 0\n    while j < len(word) and word[j] in vowels:\n        j += 1\n    while j < len(word) and word[j] in vowels:\n        j += 1\n    \n    # find consonant following the prefix\n    # take last consonant if word[i] is vowel\n    following_consonant = word[i] if i < len(word) and word[i] in consonants else word[i-1]\n    # find consonant following the suffix\n    # take first consonant if word[i] is vowel\n    pre_consonant = word[len(word) - j] if j < len(word) and word[i] in consonants else word[len(word) - j - 1]\n\n    # find the closest vowel if there is any\n    closest_vowel = \"\"\n    for k in range(i +", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel_map = {'A':'A', 'E':'E', 'I':'I', 'O':'O', 'U':'U'}\n    word = list(word)\n    for i, letter in enumerate(word):\n        if letter in vowel_map:\n            return vowel_map[letter]\n        else:\n            if i == len(word) - 1:\n                return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    if word[0] == \"a\":\n        if word[1] in \"bcdfgjklmnpqrstvwxyz\":\n            return word[1]\n        else:\n            return \"\"\n    elif word[0] == \"e\":\n        if word[1] in \"bcdfgjklmnpqrstvwxyz\":\n            return word[1]\n        else:\n            return \"\"\n    elif word[0] == \"i\":\n        if word[1] in \"bcdfgjklmnpqrstvwxyz\":\n            return word[1]\n        else:\n            return \"\"\n    elif word[0] == \"o\":\n        if word[1] in \"bcdfgjklmnpqrstvwxyz\":\n            return word[1]\n        else:\n            return \"\"\n    elif word[0] == \"u\":\n        if word[1] in \"bcdfgjklmnpqrstvwxyz\":\n            return word[1]\n        else:\n            return \"\"\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"\n\nword = input()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # get all possible vowels\n    vowels = \"aeiouAEIOU\"\n    # check if the given word contains vowels\n    if any(v in word for v in vowels):\n        # get the index of the first vowel of the word\n        index = word.find(vowels[0])\n        # check if the vowel is in the end of the word or in the beginning\n        # if not return the vowel\n        if index!= 0 and index!= len(word):\n            return word[index-1]\n\n    # if no vowel, return \"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def is_consonant(letter):\n        \"\"\"check if the letter is consonant\"\"\"\n        return not letter.isalpha() or letter in \"aeiou\"\n\n    def is_valid_vowel(letter):\n        \"\"\"check if the letter is vowel\"\"\"\n        return letter.isalpha() and letter in \"aeiou\"\n\n    def is_vowel(letter):\n        \"\"\"check if the letter is vowel\"\"\"\n        return letter.isalpha() and not letter in \"aeiou\"\n\n    def is_not_ambiguous(letter):\n        \"\"\"check if the letter is consonant\"\"\"\n        return not letter.isalpha() or not letter in \"aeiou\"\n\n    def get_letter_index(letter, word):\n        \"\"\"return the index of the letter in the word\"\"\"\n        return word.index(letter)\n\n    def get_vowel_possibility(word):\n        \"\"\"return all the vowel in the word\"\"\"\n        vowels = []\n        for letter in word:\n            if is_valid_vowel(letter):\n                vowels.append(letter)\n        return vowels\n\n    def get_all_consonants(word):\n        \"\"\"return all the consonant in the word\"\"\"\n        consonants = []\n        for letter in word:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for letter in word:\n        if letter.lower() in \"aeiou\":\n            if letter.lower() not in word[:-1] and letter.lower() not in word[-1:]:\n                return letter.lower()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeiou\"\n\n    for i in range(len(word)):\n        if word[i] in vowels:\n            return word[i]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['t', 'c','s', 'k', 'p', 'f', 'g', 'j', 'x', 'z', 'q', 'w', 'v']\n    \n    for i in word:\n        if i in vowels:\n            return i\n        elif i in consonants:\n            consonants.remove(i)\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    n = len(word)\n    index = 0\n    for i in range(n):\n        if word[i] in 'aeiou':\n            if (i + 1 < n) and (word[i + 1] in 'aeiouy') and (word[i - 1] not in 'aeiou'):\n                return word[i]\n            if (i - 1 >= 0) and (word[i - 1] in 'aeiouy') and (word[i + 1] not in 'aeiou'):\n                return word[i]\n            if (i + 1 < n) and (word[i + 1] in 'aeiouy') and (word[i - 1] not in 'aeiou') and (i - 1 >= 0) and (word[i - 1] in 'aeiouy') and (word[i + 1] not in 'aeiou'):\n                return word[i]\n            if (i - 1 >= 0) and (word[i - 1] in 'aeiouy') and (word[i + 1] not in 'aeiou') and (i - 1 >= 0) and (word[i - 1] in 'aeiouy') and (word[i + 1] not in 'aeiou'):\n                return word[i]\n            if (i + 1", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    possible_vowels = set(\"aeiou\")\n    vowels = \"\"\n    for letter in word:\n        if letter in possible_vowels:\n            vowels += letter\n        else:\n            break\n    if vowels.endswith(\"y\"):\n        return vowels[:-1]\n    else:\n        return vowels", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeiouAEIOU\"\n\n    if word[-1] in vowels:\n        return word[-1]\n\n    for i in range(len(word)):\n        if word[i+1] in vowels:\n            return word[i]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def rec(word, prev):\n        if word[-1] in 'aeiou':\n            return word[-1]\n        elif len(prev) > 1 and prev[-1] in 'aeiou':\n            return prev[-1]\n        return ''\n\n    if not word or len(word) <= 1:\n        return ''\n\n    return rec(word, word[:-1])\n\nfor i in range(input()):\n    word = input().lower()\n    print(get_closest_vowel(word))\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    letters = [letter for letter in word]\n    n = len(letters)\n    # Check whether it is a vowel\n    if letters[0] in \"aeiouAEIOU\":\n        return letters[0]\n    # Check whether it is a consonant\n    elif letters[0] not in \"aeiouAEIOU\":\n        if n > 1:\n            # Check whether it is a consonant\n            if letters[1] not in \"aeiouAEIOU\":\n                # Check whether it is a vowel\n                if letters[1] in \"aeiouAEIOU\":\n                    return letters[1]\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set(\"aeiou\")\n    consonants = set(\"bcdgkmnpqrstvwxz\")\n\n    for i in range(1, len(word)-1):\n        if word[i-1] not in consonants and word[i+1] not in consonants and word[i] in vowels:\n            return word[i]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n\n    # Convert to lower case\n    word = word.lower()\n\n    # We should only search from right side, so reverse the word\n    word = word[::-1]\n\n    # Walk from right to left and find the vowel\n    # Start from the last character.\n    for index in range(len(word) - 1, -1, -1):\n        if word[index] in vowels and word[index-1] not in vowels and word[index+1] not in vowels:\n            return word[index]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    n = len(word)\n    if n <= 1:\n        return \"\"\n    consonants = list(word)\n    for i in range(n - 1, 0, -1):\n        if consonants[i] in \"aeiou\":\n            return consonants[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) <= 1: return \"\"\n    end = word.index(word[-1])\n    for i in range(end):\n        if word[i].isalpha():\n            if word[i].islower():\n                if word[i+1].isupper():\n                    return word[i]\n            elif word[i].isupper():\n                if word[i+1].islower():\n                    return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    start = 0\n    end = len(word) - 1\n\n    while end > start:\n        mid = (start + end) // 2\n        if word[mid] in \"aeiouAEIOU\":\n            if is_consonant(word, mid) and is_consonant(word, mid + 1):\n                return word[mid]\n            else:\n                if mid == 0:\n                    return \"\"\n                else:\n                    start = mid + 1\n        else:\n            if is_consonant(word, mid) and is_consonant(word, mid + 1):\n                return \"\"\n            else:\n                end = mid - 1\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    if word[0] in 'aeiou':\n        return word[0]\n    elif word[-1] in 'aeiou':\n        return word[-1]\n    elif word[-2] in 'aeiou':\n        return word[-2]\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n\n    if not word:\n        return \"\"\n\n    for index in range(len(word)):\n        if word[index] in consonants:\n            if word[index+1] in vowels:\n                return word[index+1]\n            elif word[index-1] in vowels:\n                return word[index-1]\n            else:\n                return \"\"\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    # write code here\n    res = \"\"\n    list_cn = list(word)\n    res = \"\".join(list_cn[1:-1])\n    for i in range(len(word)):\n        if word[i] in \"aeiou\" and word[i+1] == word[i] and word[i-1] == word[i]:\n            res = word[i]\n    return res \n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n    word = word.lower()\n    if len(word) > 1:\n        last = word[-1]\n        if last in vowels and word[-2]!= last:\n            return last\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for letter in word:\n        if letter in 'aeiou':\n            if letter in word[word.index(letter):len(word)] and not letter in word[:len(word)]:\n                return letter\n        if letter in 'bcdfghjklmnpqrstvwxyz':\n            if letter in word[word.index(letter):len(word)] and not letter in word[:len(word)]:\n                return letter\n    return ''\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    assert isinstance(word, str)\n    vowels = \"aeiou\"\n    for i in range(len(word)-1):\n        if word[i] in vowels and word[i+1] in vowels:\n            return word[i]\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n    vowels_index = [i for i, c in enumerate(word) if c in vowels]\n    closest = 0\n    index = 0\n    for i in vowels_index:\n        if i - 1 < 0:\n            index = i\n        elif i - 1 < closest:\n            closest = i - 1\n            index = i\n    if index == 0:\n        return ''\n    else:\n        return word[index]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    for i in range(len(word)-1):\n        if word[i] in vowels and word[i+1] in vowels:\n            return word[i]\n    return \"\"\n\ninp = raw_input()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n    def dist(letter, word):\n        \"\"\"\n        dist(letter, word) -> number\n        Returns the distance between the given letter and the end of the given word.\n        \"\"\"\n        dist = 0\n        if letter == word[-1]:\n            return 0\n        for i in range(len(word) - 1, -1, -1):\n            if word[i] == letter:\n                return i + 1\n            if word[i] in vowels:\n                return i + 1\n            if word[i] in consonants:\n                dist += 1\n        return dist\n\n    return max(dist(letter, word) for letter in vowels if dist(letter, word) < 1) or ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # print(word)\n\n    def find_closest_vowel(word):\n        vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n        vowel = \"\"\n        for i, c in enumerate(word):\n            if c.lower() in vowels:\n                if i > 0:\n                    if word[i - 1].lower() in consonants:\n                        return vowel.upper()\n                elif i < len(word) - 1:\n                    if word[i + 1].lower() in consonants:\n                        return vowel.upper()\n        return vowel\n\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    vowel = find_closest_vowel(word)\n    if vowel == \"\":\n        return \"\"\n    else:\n        return vowel.upper()\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def find_vowel(word):\n        ret = \"\"\n        for i in range(len(word)):\n            if word[i].lower() in [\"a\", \"e\", \"i\", \"o\", \"u\"]:\n                ret += word[i]\n                return ret\n        return ret\n    return find_vowel(word)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeiou\"\n    for i in range(len(word) - 1, 0, -1):\n        if word[i] in vowels and word[i-1].lower()!= word[i].lower() and word[i+1].lower()!= word[i].lower():\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(len(word) - 1):\n        if word[i] in \"aeiou\":\n            if not word[i + 1].islower() and not word[i + 2].islower():\n                return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    word = word.lower()\n\n    if len(word) == 1:\n        return \"\"\n    else:\n        pos = 0\n        while pos < len(word) - 1:\n            if word[pos] in \"aeiou\" and word[pos + 1] not in \"aeiou\" and word[pos + 1].isupper():\n                return word[pos]\n            pos += 1\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    #Complete this function", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for c in range(len(word)-2):\n        if word[c] in vowels and word[c+1] in vowels and word[c+2] not in vowels:\n            return word[c]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n\n    if len(word) < 1:\n        return \"\"\n\n    if word[0] in vowels:\n        return word[0]\n\n    if word[-1] in vowels:\n        return word[-1]\n\n    for index in range(len(word)-1):\n        if word[index] in vowels and word[index+1] in vowels:\n            return word[index]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowel_indexes = []\n    for index in range(len(word)):\n        if word[index] in vowels:\n            vowel_indexes.append(index)\n    return \"\".join(vowel_indexes[::-1])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def find_c(word,i):\n        if len(word)<=i: return \"\"\n        if word[i].lower() in \"aeiou\": return word[i]\n        return find_c(word,i+1)\n\n    def find_v(word,i):\n        if word[i].lower() in \"aeiou\": return word[i]\n        return \"\"\n\n    return find_c(word,len(word)-1) if len(word)>=2 else \"\" if word[0].lower() not in \"aeiou\" else find_v(word,len(word)-1)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if not word:\n        return \"\"\n\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_pos = []\n    for i in range(len(word)):\n        if word[i] in vowels:\n            vowels_pos.append(i)\n\n    if len(vowels_pos) == 0:\n        return \"\"\n\n    return word[vowels_pos[len(vowels_pos)-1]]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    import string\n\n    vowels = 'aeiouAEIOU'\n    consonants = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n\n    for letter in word:\n        if letter in vowels:\n            return letter\n\n    for i in range(len(word)):\n        if word[i - 1] in consonants and word[i + 1] in consonants:\n            letter = word[i:i + 1]\n            if letter in vowels:\n                return letter\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    _list = []\n    _list = list(word)\n    _list = list(word)\n    _list = list(word)\n    _list.reverse()\n    if _list[0] == word[0]:\n        return word[0]\n    if len(word) < 3:\n        return ''\n    for i in range(0, len(word)):\n        if word[i] == word[i - 1] and word[i] == word[i + 1]:\n            if word[i] == 'a':\n                return 'e'\n            if word[i] == 'e':\n                return 'i'\n            if word[i] == 'i':\n                return 'o'\n            if word[i] == 'o':\n                return 'u'\n            if word[i] == 'A':\n                return 'E'\n            if word[i] == 'E':\n                return 'I'\n            if word[i] == 'I':\n                return 'O'\n            if word[i] == 'O':\n                return 'U'\n    return ''\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) < 2:\n        return \"\"\n    if not word:\n        return \"\"\n\n    for i in range(len(word) - 1):\n        if word[i] == word[i + 1]:\n            continue\n        elif word[i] in \"aeiouAEIOU\":\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n    consonants = [\"b\",\"c\",\"d\",\"f\",\"g\",\"h\",\"j\",\"k\",\"l\",\"m\",\"n\",\"p\",\"q\",\"r\",\"s\",\"t\",\"v\",\"w\",\"x\",\"z\"]\n\n    import string\n    if word.isalpha():\n        consonants.append(string.upper(word[0]))\n        consonants.append(string.lower(word[0]))\n        consonants.append(word[0])\n        vowels.append(word[0])\n\n    for consonant in consonants:\n        if consonant not in word[1:]:\n            for vowel in vowels:\n                if vowel not in word[1:]:\n                    return vowel\n        else:\n            return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def get_consonant_count(word):\n        \"\"\"Count the number of consonants in the given word.\n        Return: The number of consonants in the given word\"\"\"\n        cons_count = 0\n        for i in range(len(word)):\n            if word[i] not in \"aeiou\":\n                cons_count += 1\n        return cons_count\n\n    def get_vowel_count(word):\n        \"\"\"Count the number of vowels in the given word.\n        Return: The number of vowels in the given word\"\"\"\n        vow_count = 0\n        for i in range(len(word)):\n            if word[i] in \"aeiou\":\n                vow_count += 1\n        return vow_count\n\n    def get_index_of_consonant(word, count):\n        \"\"\"Get the index of the consonant that appears count times in the word.\n        Return: The index of the consonant, or -1 if it doesn't exist\"\"\"\n        for i in range(len(word)):\n            if word[i] not in \"aeiou\" and word.count(word[i]) == count:\n                return i\n        return -1\n\n    def get_index_of_vowel(word, count):\n        \"\"\"Get the index of the vowel that appears count times in the word.\n        Return:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word[-1].lower() in \"aeiou\":\n        return word[-1].lower()\n    if word[-2].lower() in \"aeiou\":\n        return word[-2].lower()\n    if word[-3].lower() in \"aeiou\":\n        return word[-3].lower()\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    vowels = \"aeiou\"\n    if word[-1] in vowels:\n        return word[-1]\n    index = word.rfind(\"c\")\n    if index == -1:\n        return \"\"\n    while True:\n        if index + 1 == len(word):\n            return word[index-1]\n        if word[index+1] in vowels:\n            return word[index+1]\n        index += 1\n    return \"\"\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n\n    # find all the vowels in the word\n    vowels = []\n    for ch in word:\n        if ch in 'aeiou':\n            vowels.append(ch)\n\n    # get the index of the first consonant in the word\n    i = word.find('bcdfghjklmnpqrstvwxz')\n\n    while i!= -1:\n        if word[i:i+2] in 'cdtf':\n            return \"\"\n        elif word[i:i+3] in 'cgptk':\n            return \"\"\n        elif word[i:i+4] in 'cmpqr':\n            return \"\"\n        elif word[i:i+5] in 'cstvw':\n            return \"\"\n        elif word[i:i+6] in 'csvwxyz':\n            return \"\"\n\n        # get the index of the second consonant in the word\n        j = word.find('bcdfghjklmnpqrstvwxz', i+2)\n        if j == -1:\n            return \"\"\n\n        # find the closest vowel\n        min_dist = 99999\n        vowel = ''\n        for v in vowels:\n            dist = abs(i-j-vowels.index(v))\n            if dist < min_dist:\n                min_dist = dist\n                vowel =", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"\"\n    word = word.upper()\n    for i, c in enumerate(word):\n        if c in 'AEIOU':\n            vowel = c\n            return vowel\n        if c in 'BCDFGHJKLMNPQRSTVWXYZ':\n            if len(word) - i - 1 == 0:\n                return \"\"\n        if c in 'BCDFGHJKLMNPQRSTVWXYZ':\n            if len(word) - i - 1 > 0:\n                vowel = word[i + 1]\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    if len(word) == 0:\n        return \"\"\n    if word[-1].lower() in vowels:\n        return word[-1].lower()\n    if word[0].lower() in vowels:\n        return word[0].lower()\n    for i in range(1, len(word)):\n        if word[i].lower() in vowels:\n            return word[i].lower()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    from string import ascii_lowercase as alphabet\n    vowels = 'aeiouAEIOU'\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i + 1] in consonants:\n            return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # case 1\n    if len(word) == 1:\n        return \"\"\n    # case 2\n    elif len(word) == 2:\n        if word[0].upper() in \"aeiou\":\n            return word[0]\n    else:\n        # case 3\n        if word[-1].upper() in \"aeiou\":\n            return word[-1]\n    # case 4\n    for i in range(len(word)):\n        if word[i].upper() in \"aeiou\":\n            return word[i]\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 1:\n        return \"\"\n    if word[-1] not in 'aeiouAEIOU':\n        return \"\"\n    if word[-2:] == 'wb':\n        return \"\"\n    for i in range(len(word)-2, -1, -1):\n        if word[i] == word[i+1]:\n            continue\n        if word[i] not in 'aeiouAEIOU' and word[i+1] not in 'aeiouAEIOU':\n            return \"\"\n        if word[i] in 'aeiouAEIOU' and word[i+1] in 'aeiouAEIOU':\n            return \"\"\n    return word[-1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    # a greedy algorithm\n    def get_closest(word):\n        return word[0] if word[0] in \"aeiou\" else \"\"\n\n    return '' if len(word) <= 2 else get_closest(word[1:])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    letters = word.split()\n    for i in range(len(letters)-1):\n        if letters[i] == letters[i+1] and letters[i] in vowels:\n            return letters[i]\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if len(word) == 0:\n        return \"\"\n\n    for index in range(len(word) - 1):\n        if word[index] in \"aeiouAEIOU\" and word[index + 1] in \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\":\n            return word[index]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeiou\"\n\n    for i in range(len(word)):\n        if word[i] in vowels and len(word[i:i+2]) == 2 and word[i-1] not in vowels and word[i+1] not in vowels:\n            return word[i]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def get_all_letters(word):\n        \"\"\"Return all letters from the word, in a list.\n        \"\"\"\n\n        return [word[i] for i in range(len(word))]\n\n    if len(word) < 3:\n        return \"\"\n\n    vowels = \"aeiou\"\n    consonants = \"BCDFGHJKLMNPQRSTVWXYZ\"\n    all_letters = get_all_letters(word)\n    left_vowels = [letter for letter in all_letters if letter in vowels]\n    right_vowels = [letter for letter in all_letters if letter in vowels]\n\n    if left_vowels:\n        return \"\".join(sorted(left_vowels)[-1])\n\n    elif right_vowels:\n        return \"\".join(sorted(right_vowels)[0])\n\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def find_first_vowel(word):\n        vowels = \"aeiouy\"\n        for i in range(len(word)):\n            if word[i] in vowels:\n                return word[i]\n        return \"\"\n\n    def find_last_vowel(word):\n        vowels = \"aeiouy\"\n        for i in range(len(word) - 1, -1, -1):\n            if word[i] in vowels:\n                return word[i]\n        return \"\"\n\n    # Vowels only in the beginning and ending\n    if find_first_vowel(word) == \"\" and find_last_vowel(word) == \"\":\n        return \"\"\n\n    # Vowels only in the beginning or ending\n    if find_first_vowel(word)!= \"\" or find_last_vowel(word)!= \"\":\n        return \"\"\n\n    # Vowels only in the middle\n    if len(word) % 2 == 1:\n        return word[len(word) // 2]\n\n    # Find the closest vowel from the right side\n    vowels = \"aeiouy\"\n    vowel = \"\"\n    for i in range(len(word)):\n        if word[i] in vowels and find_last_vowel(word[:i + 1])!=", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if word[-1] in 'aeiou':\n        return word[-1]\n    if word[-2] in 'aeiou':\n        return word[-2]\n    if word[-3] in 'aeiou':\n        return word[-3]\n    if word[-4] in 'aeiou':\n        return word[-4]\n    if word[-5] in 'aeiou':\n        return word[-5]\n    if word[-6] in 'aeiou':\n        return word[-6]\n    if word[-7] in 'aeiou':\n        return word[-7]\n    if word[-8] in 'aeiou':\n        return word[-8]\n    if word[-9] in 'aeiou':\n        return word[-9]\n    if word[-10] in 'aeiou':\n        return word[-10]\n    if word[-11] in 'aeiou':\n        return word[-11]\n    if word[-12] in 'aeiou':\n        return word[-12]\n\n    return ''</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n        return \"\"\n    for i in range(len(word)):\n        if word[i] == 'a' or word[i] == 'e' or word[i] == 'i' or word[i] == 'o' or word[i] == 'u':\n            return word[i]\n        else:\n            if word[i-1] in 'aeiou' and word[i+1] in 'aeiou':\n                return word[i]\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import string\n    vowels = \"aeiou\"\n    for i in range(len(word)-1,-1,-1):\n        if word[i] in vowels and (not (word[i-1] in string.digits) and (not (word[i+1] in string.digits))):\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Write your code here\n    word = word.lower()\n    vowels = 'aeiou'\n    consonants = 'bcdfghjklmnpqrstvwxyz'\n    for i in range(len(word)-1):\n        if word[i:i+2] in consonants and word[i:i+2] not in consonants:\n            j = i + 1\n            while j < len(word):\n                if word[j] in vowels:\n                    return word[j]\n                elif word[j] in consonants:\n                    return ''\n                j += 1\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word[-1] == u\" \":\n        word = word[:-1]\n    else:\n        word = word.strip(\" \")\n    word = word.lower()\n    if word[-1].isdigit():\n        word = word[:-1]\n    for i in xrange(len(word)-1,-1,-1):\n        if word[i].isalpha():\n            if word[i-1].isalpha() and word[i+1].isalpha():\n                if word[i:i+2].isalpha() and word[i:i+2].isvowel():\n                    return word[i:i+2].lower()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    # get length of the word\n    len_word = len(word)\n\n    # get index of the first char of the last consonant\n    last_consonant = word.find(\"[^aeiou]\") + 1\n    \n    # get index of the first char of the last consonant\n    for i in range(0, len_word):\n        # ignore consonants\n        if word[i] not in \"aeiou\":\n            continue\n        # vowel found\n        if word[i] == \"a\":\n            # check if there is any consonant next to the vowel\n            if i + 1 < len_word and word[i + 1] in \"aeiou\":\n                return word[i]\n        if word[i] == \"e\":\n            # check if there is any consonant next to the vowel\n            if i + 1 < len_word and word[i + 1] in \"aeiou\":\n                return word[i]\n        if word[i] == \"i\":\n            # check if there is any consonant next to the vowel\n            if i + 1 < len_word and word[i + 1] in \"aeiou\":\n                return word[i]\n        if word[i] == \"o\":\n            # check if there is any consonant next to the vowel\n            if i + 1 < len_word and word[i + 1] in \"aeiou\":\n                return word[i]\n        if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # http://fisherchen.github.io/2014/03/06/leetcode-closest-vowel/\n\n    # Backtracking\n    def find_vowel(word, start, end):\n        if start >= end:\n            return ''\n\n        for i in range(start, end):\n            if word[i] in 'aeiou':\n                return word[i]\n\n        next_index = start + 1\n        while next_index < end:\n            if word[next_index] == 'w':\n                next_index += 1\n            elif word[next_index] in 'aeiou':\n                return word[next_index]\n            else:\n                next_index += 1\n\n    return find_vowel(word, 0, len(word) - 1)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    if len(word) <= 1:\n        return ''\n    consonants = []\n    for i in range(1, len(word)):\n        if word[i] in vowels:\n            break\n        else:\n            consonants.append(word[i])\n    return consonants[0] if consonants else ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    if not len(word): return \"\"\n    index = 0\n    while index < len(word)-1:\n        if word[index].islower() and word[index+1].islower() and not word[index].isdigit():\n            if word[index].isalpha() and word[index+1].isalpha():\n                if (word[index] in \"aeiou\") and (word[index+1] in \"aeiou\"):\n                    return word[index]\n        index += 1\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # word = input(\"Enter a word: \")\n    word = input().lower()\n    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    if word.endswith(\"y\"):\n        word = word[:-1]\n    if word.endswith(\"s\"):\n        word = word[:-1]\n    if word.endswith(\"x\"):\n        word = word[:-1]\n    if word.endswith(\"ch\"):\n        word = word[:-1]\n    if word.endswith(\"sh\"):\n        word = word[:-1]\n    if word.endswith(\"o\"):\n        word = word[:-1]\n    if word.endswith(\"f\"):\n        word = word[:-1]\n    if word.endswith(\"h\"):\n        word = word[:-1]\n    if word.endswith(\"r\"):\n        word = word[:-1]\n    if word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if len(word) <= 1:\n        return \"\"\n\n    vowels = set(\"aeiou\")\n    consonants = set(\"bcdfghjklmnpqrstvwxz\")\n    count = 0\n    for letter in word:\n        if letter in vowels:\n            count += 1\n        elif letter in consonants:\n            count -= 1\n        else:\n            return \"\"\n\n    if count > 0:\n        return word[-1]\n    elif count < 0:\n        return \"\"\n    else:\n        return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(1, len(word)-1):\n        if word[i] == word[i+1]:\n            if word[i].lower() in \"aeiou\":\n                return word[i].lower()\n        if word[i].lower() in \"aeiou\":\n            return word[i].lower()\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def check(word):\n        return any(w in word for w in \"aeiou\")\n\n    if check(word):\n        return word[0]\n    if word[-1] in \"aeiou\":\n        return word[-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def is_english_letter(char):\n        \"\"\"True if a character is english letter, False otherwise.\"\"\"\n        return char in ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x', 'y', 'z']\n\n    def get_index_of_nearest_consonant(word):\n        \"\"\"Return index of nearest consonant from the right side of the given word.\"\"\"\n        index = len(word)-1\n        for i in range(len(word)):\n            if is_english_letter(word[i]):\n                index = i\n                break\n        return index\n\n    def get_index_of_nearest_vowel(word):\n        \"\"\"Return index of nearest vowel from the right side of the given word.\"\"\"\n        index = len(word)-1\n        for i in range(len(word)):\n            if is_english_letter(word[i]):\n                if word[i] in ['a', 'e', 'i', 'o', 'u']:\n                    index = i", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = set(\"aeiou\")\n\n    for i in range(len(word)-1, -1, -1):\n        if word[i] in vowels:\n            if word[i-1].isupper() and word[i+1].islower():\n                return word[i]\n            elif word[i+1].isupper() and word[i-1].islower():\n                return word[i]\n            else:\n                return \"\"\n    return \"\"\n\nfor i in range(1, len(sys.argv)):\n    print(get_closest_vowel(sys.argv[i]))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n\n    # remove punctuation\n    word = word.replace(' ', '')\n    word = word.replace('!', '')\n    word = word.replace('\"', '')\n    word = word.replace('.', '')\n    word = word.replace(';', '')\n    word = word.replace(':', '')\n\n    # remove numbers\n    word = word.replace('0', '')\n    word = word.replace('1', '')\n    word = word.replace('2', '')\n    word = word.replace('3', '')\n    word = word.replace('4', '')\n    word = word.replace('5', '')\n    word = word.replace('6', '')\n    word = word.replace('7', '')\n    word = word.replace('8', '')\n    word = word.replace('9', '')\n\n    # remove the last letter\n    word = word[:-1]\n\n    # search from the right side\n    index = 0\n    while index < len(word):\n        if word[index].isalpha():\n            if not word[index - 1].isalpha():\n                if word[index + 1].isalpha():\n                    if word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word == \"\" or word.isalpha() == False:\n        return \"\"\n    vowels = \"aeou\"\n    all_consonants = \"wxcvbnptkmdhrs\"\n    consonants = \"\".join(c for c in word if c not in vowels)\n    vowel_count = 0\n    for i, c in enumerate(consonants):\n        if c == consonants[-1]:\n            vowel_count += 1\n            if i!= len(consonants)-1:\n                vowel_count += 1\n        elif c == consonants[0]:\n            vowel_count += 1\n    if vowel_count % 2 == 0:\n        return \"\"\n    return vowels[(vowel_count-1)/2]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def dist(word, vowel):\n        return abs(len(word[:-1*len(vowel)+1]) - len(word[:-1*len(vowel)]))\n        \n    closest_vowel = \"\"\n    for i, c in enumerate(word[1:]):\n        if c.lower() in \"aeiou\" and len(word)-i > 1:\n            if dist(word, c.lower()) < dist(word, closest_vowel):\n                closest_vowel = c.lower()\n    if closest_vowel == \"\":\n        return \"\"\n    else:\n        return closest_vowel\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # noinspection PyShadowingNames,PyShadowingNames\n    vowels = \"aeiou\"\n    first_c = \"\"\n    second_c = \"\"\n    for letter in word:\n        if letter in vowels:\n            return letter\n        elif letter.isupper():\n            if first_c == \"\":\n                first_c = letter.lower()\n            else:\n                second_c = letter.lower()\n        else:\n            if first_c!= \"\" and second_c!= \"\":\n                return first_c + second_c\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def get_vowels(word):\n        vowels = set(\"aeiou\")\n        for letter in word:\n            if letter in vowels:\n                return letter\n        return \"\"\n    \n    def find_closest(word):\n        # find leftmost closest vowel\n        v = word[-1]\n        if v == '':\n            return \"\"\n        if word.startswith(v):\n            return v\n\n        for i in range(len(word)):\n            if word[i] == v:\n                return word[i]\n        return \"\"\n\n    def find_rightmost(word):\n        # find rightmost closest vowel\n        v = word[0]\n        if v == '':\n            return \"\"\n        if word.endswith(v):\n            return v\n\n        for i in range(len(word)):\n            if word[i] == v:\n                return word[i]\n        return \"\"\n\n    if len(word) == 0:\n        return \"\"\n    if word[0] == word[-1]:\n        return word[0]\n    elif word.count(word[0]) > 2:\n        return word[0]\n    elif word.count(word[-1]) > 2:\n        return word[-1]\n    else:\n        v = find_closest(word)\n        vw = word[:]\n        vw.remove(v)\n        if get_v", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    closest_vowel = \"\"\n    for letter in word:\n        if letter == \"a\" or letter == \"A\":\n            if letter == word[0]:\n                if len(word) > 1:\n                    if word[1] not in [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]:\n                        closest_vowel = letter\n                else:\n                    if word[1:] not in [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]:\n                        closest_vowel = letter\n            else:\n                if word[1:] not in [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]:\n                    closest_vowel = letter\n        elif letter == \"e\" or letter == \"E\":\n            if", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiouy'\n    consonants = 'bcdfghjklmnpqrstvwxz'\n    if len(word) < 2:\n        return \"\"\n    for index in range(len(word)-1):\n        if word[index] in vowels and word[index+1] in consonants:\n            return word[index]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def vowel_length(vowel):\n        return len(vowel) + 1\n\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['c', 'd', 'f', 'g', 'h', 'j', 'k', 'l','m', 'n', 'p', 'q', 'r','s', 't', 'v', 'w', 'x', 'y', 'z']\n\n    if len(word) == 0:\n        return \"\"\n\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i + 1] in consonants:\n            return word[i]\n        elif word[i] in consonants and word[i + 1] in consonants:\n            return \"\"\n\n    for vowel in vowels:\n        if vowel_length(vowel) < len(word) - 1 and word[len(word) - 1] == consonants[0]:\n            return vowel\n\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    max_dist = 0\n    closest_vowel = ''\n\n    for i in range(len(word)):\n        if word[i] in \"aeiou\":\n            dist = abs(i - len(word) + 1)\n            if dist > max_dist:\n                max_dist = dist\n                closest_vowel = word[i]\n    return closest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a','e','i','o','u','A','E','I','O','U']\n    consonants = ['c','d','g','h','j','k','l','m','n','p','q','r','s','t','v','w','x','z']\n\n    word = word.lower()\n    try:\n        #return the vowel that has the shortest distance to the last letter of the word\n        return vowels[abs(len(word) - len(word.rstrip(consonants)))]\n    except:\n        #return empty string if no vowel found\n        return \"\"</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import string\n    if len(word) <= 1:\n        return \"\"\n    consonants = \"\"\n    vowels = \"\"\n    for char in word:\n        if char in string.ascii_lowercase:\n            if char in string.ascii_uppercase:\n                consonants += char\n            else:\n                if char == \"a\":\n                    vowels += \"a\"\n                elif char == \"e\":\n                    vowels += \"e\"\n                elif char == \"i\":\n                    vowels += \"i\"\n                elif char == \"o\":\n                    vowels += \"o\"\n                elif char == \"u\":\n                    vowels += \"u\"\n    if len(vowels) == 0:\n        return \"\"\n    elif len(vowels) == 1:\n        return vowels\n    else:\n        if consonants[-1]!= vowels[0]:\n            return \"\"\n        else:\n            if consonants[-2]!= vowels[1]:\n                return vowels\n        else:\n            return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Write your code here\n    vowels = ['A','E','I','O','U']\n\n    for c in word:\n        if c not in vowels:\n            continue\n        i = 0\n        while i < len(word) - 1 and c!= word[i] and c!= word[i+1]:\n            i += 1\n        if i > 0:\n            return c\n        else:\n            return \"\"\n\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import re\n    \n    word = word.upper() \n    word = word.replace(\"A\", \"a\")\n    word = word.replace(\"E\", \"e\")\n    word = word.replace(\"I\", \"i\")\n    word = word.replace(\"O\", \"o\")\n    word = word.replace(\"U\", \"u\")\n    word = word.replace(\"Y\", \"y\")\n    word = word.replace(\"QU\", \"qu\")\n    word = word.replace(\"Q\", \"q\")\n    word = word.replace(\"CH\", \"ch\")\n    word = word.replace(\"C\", \"c\")\n    word = word.replace(\"HH\", \"h\")\n    word = word.replace(\"J\", \"j\")\n    word = word.replace(\"RR\", \"rr\")\n    \n    # find first match\n    m = re.search('([A-Za-z]+)([^A-Za-z]*)$', word)\n    if m:\n        if re.match('^[AEIOUY]+$', m.group(1)) and len(m.group(2)) == 0:\n            return m.group(1)[0]\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    longest_consonant = \"\"\n    longest_vowel = \"\"\n    i = 0\n    while i < len(word) - 1:\n        if word[i].isalpha() and word[i + 1].isalpha() and not (word[i].isdigit() and word[i + 1].isdigit()):\n            longest_consonant = word[i]\n            longest_vowel = word[i + 1]\n            i += 2\n        elif word[i].isalpha() and not (word[i].isdigit() and word[i + 1].isdigit()):\n            longest_consonant = word[i]\n        elif word[i].isalpha() and word[i + 1].isalpha() and not word[i].isdigit() and not word[i + 1].isdigit():\n            longest_vowel = word[i]\n            i += 2\n        elif word[i].isalpha() and word[i + 1].isalpha() and not word[i].isdigit() and word[i + 1].isdigit():\n            longest_consonant = word[i]\n            i += 2\n        else:\n            break\n\n    if longest_consonant == word[0] or longest_vowel == word[-1]:\n        return \"\"\n    return longest_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Complete this function\n    word = str(word)\n    res = ''\n    for i in range(len(word)-1):\n        if word[i].lower() not in 'aeiou':\n            continue\n        if word[i+1].lower() not in 'bcdfghjklmnpqrstvwxz':\n            continue\n        if word[i+2].lower() not in 'bcdfghjklmnpqrstvwxz':\n            continue\n        if word[i+3].lower() not in 'bcdfghjklmnpqrstvwxz':\n            continue\n        res += word[i]\n    return res", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def is_english_letter(letter):\n        \"\"\"Checks whether the letter is English letter or not\"\"\"\n        return letter in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n    def get_vowel(letter):\n        \"\"\"Return vowel from the given letter\"\"\"\n        if letter == \"a\":\n            return \"a\"\n        elif letter == \"e\":\n            return \"e\"\n        elif letter == \"i\":\n            return \"i\"\n        elif letter == \"o\":\n            return \"o\"\n        elif letter == \"u\":\n            return \"u\"\n\n    def is_consonant(letter):\n        \"\"\"Checks whether the letter is consonant or not\"\"\"\n        return letter not in \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\n    word = list(word)\n    for index, letter in enumerate(word):\n        if is_consonant(letter):\n            if index + 1 < len(word):\n                if is_consonant(word[index + 1]):\n                    if is_english_letter(word[index + 2]):\n                        return get_vowel(word[index + 2])\n        if is_english", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word.isalpha() == False:\n        return \"\"\n    for letter in word:\n        if letter == \"a\":\n            return \"a\"\n        elif letter == \"e\":\n            return \"e\"\n        elif letter == \"i\":\n            return \"i\"\n        elif letter == \"u\":\n            return \"u\"\n        elif letter == \"o\":\n            return \"o\"\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeuy\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n\n    closest_vowel = \"\"\n    for i in word[::-1]:\n        if i in consonants:\n            closest_vowel = word[i+1:]\n        elif i in vowels:\n            if len(closest_vowel) > 0:\n                closest_vowel = closest_vowel[::-1]\n        else:\n            return closest_vowel\n\n    if len(closest_vowel) == 0:\n        return \"\"\n\n    return closest_vowel[::-1]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def get_vowel(word):\n        vowels = ['a', 'e', 'i', 'o', 'u']\n        for v in vowels:\n            if v in word:\n                return v\n\n    if len(word) < 2:\n        return \"\"\n\n    if get_vowel(word[0])!= \"\" and get_vowel(word[-1])!= \"\":\n        return \"\"\n\n    if get_vowel(word[0]) == \"\":\n        return word[0]\n\n    if get_vowel(word[-1]) == \"\":\n        return word[-1]\n\n    for i in range(0, len(word) - 1):\n        if get_vowel(word[i])!= \"\":\n            return word[i]\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    count = 0\n    for i in word:\n        if i == \"a\" or i == \"A\" or i == \"e\" or i == \"E\" or i == \"i\" or i == \"I\" or \\\n            i == \"o\" or i == \"O\" or i == \"u\" or i == \"U\":\n            count += 1\n    if count % 2 == 1:\n        return \"\"\n    return word[count // 2]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n    \n    vowels = \"aeiuoAEOIU\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    \n    if not word[0] in vowels:\n        return \"\"\n    \n    for i in range(1, len(word)):\n        if word[i] not in consonants:\n            return word[:i] + word[i + 1:]\n    \n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    letter_count = []\n    for c in word:\n        if c.isalpha():\n            letter_count.append(word.index(c) + 1)\n    for i, j in zip(letter_count, letter_count[1:]):\n        if j - i == 1:\n            return word[letter_count[i]-1].lower()\n        if j - i == 2:\n            return word[letter_count[i]-1].lower()", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # write your code here\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    from collections import defaultdict\n    arr = list(word)\n    left_letter = defaultdict(list)\n    right_letter = defaultdict(list)\n    for i in range(len(arr)-1):\n        if arr[i] == arr[i+1] == c:\n            left_letter[c].append(arr[i])\n        elif arr[i] == c and arr[i+1] == c:\n            right_letter[c].append(arr[i])\n        elif (arr[i]!= c and arr[i+1]!= c):\n            left_letter[c].append(arr[i])\n            right_letter[c].append(arr[i+1])\n    for c in vowels:\n        if c in right_letter and c in left_letter:\n            return c\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    vowels = ('a', 'e', 'i', 'o', 'u')\n    vowels_length = len(vowels)\n    all_cons = ('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l','m', 'n', 'p', 'q', 'r','s', 't', 'v', 'w', 'x', 'y', 'z')\n    word = list(word)\n    \n    def count(word, char):\n        return word.count(char)\n\n    def count_cons(word):\n        return sum([count(word, c) for c in all_cons])\n\n    def distance(word, char):\n        return abs(count(word, char) - count_cons(word) - 1)\n\n    def rightmost(word):\n        return word.index(max(word, key=len))\n\n    def closest(word):\n        if rightmost(word) == len(word)-1:\n            return \"\"\n        elif rightmost(word) < len(word)-1 and word[rightmost(word)+1] not in vowels:\n            return word[rightmost(word)+1]\n        else:\n            return \"\"\n    \n    return closest(word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # print(get_closest_vowel(\"yogurt\"))\n    # print(get_closest_vowel(\"FULL\"))\n    # print(get_closest_vowel(\"quick\"))\n    # print(get_closest_vowel(\"ab\"))\n\n    if len(word) <= 2:\n        return \"\"\n\n    consonants = set('cgjklmnprsStvxzBCDFGHJKLMNPQRSTVXZ')\n    vowels = set('aeiouAEIOU')\n\n    index = 0\n    while index < len(word):\n        if index == 0:\n            return \"\"\n        if word[index] not in consonants and word[index - 1] not in consonants:\n            return word[index]\n        index += 1\n\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def is_vowel(char):\n        \"\"\"This function returns true if the character is a vowel and false otherwise.\"\"\"\n        vowels = ['a', 'e', 'i', 'o', 'u']\n        return char in vowels\n\n    def is_valid_position(word, index, char):\n        \"\"\"Returns true if the char is valid at the index (i.e. is a consonant and \n        there is a vowel between it and the last character from the right).\"\"\"\n        if index >= len(word):\n            return False\n        if word[index] not in consonants:\n            return False\n        if is_vowel(word[index + 1]) or is_vowel(word[index + 2]):\n            return True\n        return False\n\n    if len(word) < 2:\n        return \"\"\n\n    last_char = word[len(word) - 1]\n    result = \"\"\n    for i in range(len(word) - 2, 0, -1):\n        if is_valid_position(word, i, word[i]):\n            result = word[i]\n            break\n\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    #code below is not efficient, please fix it\n    for i in range(len(word)-1,-1,-1):\n        if word[i] in \"aeiou\":\n            if word[i-1] not in \"bcdfgjklmnpqrstvwxz\":\n                if word[i+1] not in \"bcdfgjklmnpqrstvwxz\":\n                    return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    global ans\n    if word[-1] in \"aeiou\" or word[-1] == \"y\":\n        ans = word[-1]\n        return ans\n    index = len(word)-1\n    while index >= 0 and word[index] in \"aeiouY\":\n        index -= 1\n    if index >=0:\n        ans = word[index]\n    else:\n        return \"\"\n    return ans", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if word == \"\":\n        return \"\"\n    word = word.upper()\n    left_vowel = \"\"\n    right_vowel = \"\"\n    for index, letter in enumerate(word):\n        if letter in \"AEIOU\":\n            if index + 1 < len(word) and not letter == word[index + 1]:\n                if letter == word[index - 1]:\n                    right_vowel = letter\n                else:\n                    left_vowel = letter\n    if left_vowel == \"\":\n        left_vowel = get_closest_vowel(word[:index])\n    if right_vowel == \"\":\n        right_vowel = get_closest_vowel(word[index + 1:])\n    return left_vowel if len(left_vowel) < len(right_vowel) else right_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import string\n    vowels = \"aeiouAEIOU\"\n    if len(word) > 1:\n        char = word[-1]\n        if char in string.ascii_letters and char not in vowels:\n            return word[-2] if word[-2] in string.ascii_letters and word[-2] not in vowels else \"\"\n        if char in string.ascii_letters and char not in vowels:\n            return word[-3] if word[-3] in string.ascii_letters and word[-3] not in vowels else \"\"\n        if char in string.ascii_letters and char not in vowels:\n            return word[-4] if word[-4] in string.ascii_letters and word[-4] not in vowels else \"\"\n        if char in string.ascii_letters and char not in vowels:\n            return word[-5] if word[-5] in string.ascii_letters and word[-5] not in vowels else \"\"\n    return \"\"</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxyz\"\n    if len(word) == 0: return \"\"\n    l_ind = len(word)\n    for i in range(1, l_ind):\n        if word[i] in vowels:\n            return word[i]\n    for i in range(l_ind-1, 0, -1):\n        if word[i] in consonants and word[i-1] in consonants:\n            return word[i-1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def get_closest_vowel_helper(word):\n        \"\"\"helper for get closest vowel\"\"\"\n        if len(word) == 0:\n            return ''\n\n        vowel_list = ['a', 'e', 'i', 'o', 'u']\n        for i in range(len(word)):\n            if word[i] in vowel_list:\n                return word[i]\n\n        word = word.lower()\n\n        last_consonant_index = len(word) - 1\n        for i in range(last_consonant_index):\n            if word[i] in vowel_list:\n                return word[i]\n\n        return get_closest_vowel_helper(word[:-1])\n\n    return get_closest_vowel_helper(word)</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    from collections import defaultdict\n    vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n\n    def compare(word, letter):\n        if word[-2] == letter:\n            return True\n        elif word[-1] == letter:\n            return True\n        elif word[-3] == letter:\n            return True\n        return False\n\n    vowels_found = defaultdict(list)\n\n    for c in word:\n        if c in vowels:\n            vowels_found[c].append(c)\n\n    if \"\" in vowels_found:\n        return \"\"\n    for key in vowels_found:\n        if len(vowels_found[key]) > 1:\n            return key\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import string\n    vowels = \"aeiou\"\n    for letter in word:\n        if letter in vowels and len(word) > 1:\n            return letter\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = list(word)\n    vowels = \"aeiouAEIOU\"\n    return \"\".join(word[i:i+3] for i,x in enumerate(word) if x in vowels and word[i:i+2] not in vowels)\n\n\"\"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = set(\"bcdfghjklmnpqrstvwxyz\")\n    vowels = set(\"aeiou\")\n    word = word.lower()\n    length = len(word)\n    for i in range(length - 2):\n        if word[i] in consonants and word[i + 1] in consonants:\n            if word[i + 2] in vowels:\n                return word[i + 2]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    # the solution to this problem use a technique called greedy string matching. \n    # you can read more about it on wikipedia.\n    # https://en.wikipedia.org/wiki/Greedy_string_matching\n    \n    # converting the input string to lowercase\n    word = word.lower()\n    \n    # convert the output to a list to avoid unnecessary string concatenation\n    output = list()\n    \n    # a flag to indicate whether we have already encountered a consonant\n    # if we have not encountered any, the first character in the word must be a vowel\n    has_consonant = False\n    \n    # a flag to indicate whether we have found a vowel that stands between \n    # two consonants\n    found_vowel = False\n    \n    for c in word:\n        # we encounter a consonant if the character is not a vowel\n        if c not in \"aeiou\":\n            has_consonant = True\n            # if we have not found any vowel yet, this is the first consonant,\n            # so we should start looking for a vowel\n            if not found_vowel:\n                # we found a vowel!\n                found_vowel = True\n                # append the vowel to the output\n                output.append(c)\n            # we found a vowel, but not the first one, we should still\n            # check the rest", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    consonants = 'bcdfghjklmnpqrstvwxz'\n    vowels = 'aeiouy'\n    word = word.lower()\n    vowels_count = 0\n    for index in range(len(word)-2,-1,-1):\n        if word[index] in consonants and word[index-1] not in consonants:\n            if word[index+1] in vowels:\n                vowels_count += 1\n            else:\n                return word[index+1]\n    if vowels_count == 0:\n        return \"\"\n    return word[-1][1:]\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    letters = list(word)\n    for i, letter in enumerate(letters):\n        if letter in vowels:\n            return letter\n        if i + 1 < len(letters):\n            if letters[i + 1] in vowels:\n                return letter\n    return ''</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U')\n    consonants = ('b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l','m', 'n', 'p', 'q', 'r','s', 't', 'v', 'w', 'x', 'y', 'z')\n    result = \"\"\n    word = list(word)\n    word = \"\".join(word)\n    # number of vowels\n    vowels_count = sum(1 for _ in word if _ in vowels)\n    # number of consonants\n    consonants_count = sum(1 for _ in word if _ in consonants)\n    # distance between two closest consonants\n    consonants_distance = abs(consonants_count - vowels_count)\n    if consonants_distance > 1:\n        for i in range(consonants_count - 1):\n            if word[i] in consonants and word[i + 1] in consonants:\n                # counting vowels\n                vowel_count = sum(1 for _ in word[i:i + 2] if _ in vowels)\n                if vowel_count > consonants_distance:", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    word = list(word)\n    for i in range(len(word)):\n        if word[i] in \"aeiou\":\n            return word[i]\n    \n    for i in range(len(word)):\n        if word[i] in \"bcdfghijklmnopqrstvwxyz\":\n            if i > 0 and word[i-1] in \"bcdfghijklmnopqrstvwxyz\":\n                continue\n            return \"\"\n        return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if word[-1].islower():\n        if word[-2].islower():\n            if word[-3].isupper():\n                return word[-3].lower()\n            else:\n                return word[-2].lower()\n        else:\n            return word[-1].lower()\n    else:\n        if word[-2].islower():\n            if word[-3].isupper():\n                return word[-3].upper()\n            else:\n                return word[-2].upper()\n        else:\n            return \"\"\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def is_vowel(c):\n        \"\"\"Return True if the charcter is a vowel, False otherwise.\"\"\"\n        return c in 'aeiouAEIOU'\n    \n    def is_letter(c):\n        \"\"\"Return True if the character is a letter, False otherwise.\"\"\"\n        return c in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    \n    def index_of_closest_vowel(word):\n        \"\"\"Return the index of the closest vowel from the right side, or -1 if not found.\"\"\"\n        vowels = [i for i,c in enumerate(word) if is_vowel(c)]\n        for i in range(len(word)-1, -1, -1):\n            if vowels:\n                if word[i+1] =='':\n                    return i\n                return i\n        return -1\n    \n    if not word:\n        return ''\n    \n    index = index_of_closest_vowel(word)\n    if index >= 0:\n        return word[index]\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l','m', 'n', 'p', 'q', 'r','s', 't', 'v', 'w', 'x', 'y', 'z']\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = list(word)\n    vowels = set(\"aeiou\")\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] not in vowels:\n            return word[i - 1]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()\n    index = len(word) - 1\n    while index >= 0:\n        if word[index].islower() and word[index-1].islower() and word[index+1].islower():\n            return word[index]\n        index -= 1\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiou\"\n    consonants = \"bcdfghjklmnpqrstvwxz\"\n\n    if not word or word == \"\":\n        return \"\"\n    if word[0] in vowels:\n        return word[0]\n    if word[-1] in vowels:\n        return word[-1]\n    if word[0] in consonants:\n        return \"\"\n    if word[-1] in consonants:\n        return \"\"\n    for i, c in enumerate(word):\n        if c in consonants:\n            if word[i-1] in vowels:\n                return word[i-1]\n    return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = ['a','e','i','o','u']\n    # print(vowels)\n    word = word.lower()\n    length = len(word)\n    for i in range(length - 1):\n        c = word[i]\n        if c in consonants:\n            if i < length - 2:\n                c2 = word[i + 1]\n                if c2 in consonants:\n                    if word[i + 2] in vowels:\n                        return word[i + 2]\n                    else:\n                        continue\n            else:\n                continue\n        else:\n            return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    import string\n\n    vowels = \"aeiou\"\n    consonants = string.punctuation\n    special_chars = \"\".join(consonants) + \"\".join(vowels)\n\n    i = 0\n    while i < len(word):\n        if word[i] not in consonants and word[i] not in vowels and word[i] not in special_chars:\n            return word[i]\n        elif word[i] in consonants:\n            i += 1\n        elif word[i] in vowels:\n            i += 1\n        elif word[i] in special_chars:\n            i += 1\n        else:\n            return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    vowels = \"aeiou\"\n\n    def count_neighbors(letter):\n        neighbors = \"\"\n        if letter == \"a\":\n            neighbors = \"aa\"\n        elif letter == \"e\":\n            neighbors = \"ee\"\n        elif letter == \"i\":\n            neighbors = \"ii\"\n        elif letter == \"o\":\n            neighbors = \"oo\"\n        elif letter == \"u\":\n            neighbors = \"uu\"\n        return neighbors\n\n    def get_closest_vowel(word):\n        neighbors = \"\"\n        vowels = \"\"\n        for letter in word:\n            if letter in vowels:\n                vowels += count_neighbors(letter)\n            else:\n                if len(neighbors) > 0 and len(vowels) > 0:\n                    if len(neighbors) < len(vowels):\n                        return neighbors\n                    else:\n                        return vowels\n                else:\n                    return \"\"\n        return \"\"\n\n    return get_closest_vowel(word)</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = \"aeiuoy\"\n    def get_nearest_consonant(word):\n        \"\"\"\n        Find the nearest consonant that stands between two vowels from the right side of the word.\n        You may assume that the given string contains English letter only.\n        \"\"\"\n        if word.endswith(\"y\"):\n            return word[-1]\n        if word.endswith(\"s\"):\n            return word[-1]\n        if word.endswith(\"z\"):\n            return word[-1]\n        if word.endswith(\"x\"):\n            return word[-1]\n        if word.endswith(\"ch\"):\n            return word[-1]\n        if word.endswith(\"c\"):\n            return word[-1]\n        if word.endswith(\"k\"):\n            return word[-1]\n        if word.endswith(\"q\"):\n            return word[-1]\n        if word.endswith(\"f\"):\n            return word[-1]\n        if word.endswith(\"v\"):\n            return word[-1]\n        if word.endswith(\"b\"):\n            return word[-1]\n        if word.endswith(\"p\"):\n            return word[-1]\n        if word.endswith(\"br\"):\n            return word[-1]\n        if word.", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.lower()    \n    vowels = \"aeiou\"\n    if word == \"\" or len(word) == 1:\n        return \"\"\n    elif word[0] in vowels:\n        return word[0]\n    else:\n        last_vowel = \"\"\n        index = 0\n        for letter in word:\n            if letter in vowels:\n                last_vowel = letter\n            elif letter not in vowels:\n                break\n            index += 1\n        return last_vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowel = \"aeiou\"\n    if not word:\n        return \"\"\n    if word[0] in vowel:\n        return word[0]\n    if word[-1] in vowel:\n        return word[-1]\n    for i in range(len(word) - 1):\n        if word[i] in vowel:\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    word = word.lower()\n\n    # get the index of each letter of the word\n    index = []\n    for c in word:\n        index.append(word.index(c))\n\n    # calculate the distance from each letter to the closest vowel\n    distance = []\n    for i in range(0, len(index)-1):\n        # get all the vowels that are before the current letter\n        v_list = [\n            index[j]\n            for j in range(0, len(index))\n            if index[j] == index[i] and c.upper() in \"aeiouAEIOU\"\n        ]\n\n        # get all the vowels that are after the current letter\n        v_list = [\n            index[j]\n            for j in range(i+1, len(index))\n            if index[j] == index[i] and c.upper() in \"aeiouAEIOU\"\n        ]\n\n        # get the closest vowel\n        v = min(v_list)\n\n        # get the distance from the current letter to the closest vowel\n        distance.append(word.index(v) - index[i])\n\n    # get the index of the closest vowel\n    index = min(distance)\n\n    # get the letter at this index\n    if index == len(word):\n        return \"\"\n    else:\n        return word", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\n    # transform string to list of letters\n    list_of_letters = word.lower().replace(\" \", \"\").replace(\"'\", \"\").replace(\".\", \"\").split()\n\n    # remove vowels in the beginning and ending\n    for vowel in vowels:\n        if list_of_letters[0] == vowel or list_of_letters[len(list_of_letters) - 1] == vowel:\n            list_of_letters = list_of_letters[1:]\n            break\n\n    # transform letters into character codes\n    # not sure why this is necessary\n    letters_as_codes = [ord(i) for i in list_of_letters]\n    for i in range(len(letters_as_codes)):\n        if letters_as_codes[i] in consonants:\n            letters_as_codes[i] -= 64\n        if letters_as_codes[i] in vowels:\n            letters_as_codes[i] -= 96\n\n    # sort letters", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    \n    # \u5982\u679cword\u7684\u957f\u5ea6\u5927\u4e8e1\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u4e00\u4e2a\u5143\u97f3\uff0c\u4f46\u662f\u5fc5\u987b\u6ee1\u8db3\u5143\u97f3\u5728\u4e24\u4e2a\u8f85\u97f3\u4e4b\u95f4\u3002\n    if len(word) > 1:\n        for i in range(1, len(word)):\n            if word[i] in \"aeiou\" and word[i-1] not in \"aeiou\" and word[i+1] not in \"aeiou\":\n                return word[i]\n        else:\n            return \"\"\n    else:\n        return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if not word:\n        return \"\"\n    \n    letters = []\n    vowels = 'aeiouy'\n    for letter in word:\n        if letter in vowels:\n            letters.append(letter)\n\n    if not letters:\n        return \"\"\n\n    left = max(letters) + 1\n    right = len(word)\n    if word[0] in vowels:\n        left += 1\n\n    for i in range(left, right):\n        if word[i] in vowels and letters[-1]!= word[i]:\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.upper()\n\n    if len(word) <= 2:\n        return \"\"\n\n    letters = []\n    for letter in word:\n        if letter in \"aeiouAEIOU\":\n            letters.append(letter)\n\n    if len(letters) == 0:\n        return \"\"\n    else:\n        return letters[-1]\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    import string\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    for i in range(len(word) - 1):\n        if word[i] in vowels and word[i+1] not in vowels and word[i+2] not in vowels:\n            return word[i]\n    return \"\"", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = set('aeiou')\n    for i in range(len(word)-1,-1,-1):\n        if word[i] in vowels and word[i+1] in vowels:\n            return word[i]\n        elif word[i] in vowels:\n            return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    if word == '':\n        return ''\n\n    consonant = []\n    vowel = []\n    for letter in word:\n        if letter == 'a':\n            vowel.append(letter)\n        elif letter == 'e':\n            vowel.append(letter)\n        elif letter == 'i':\n            vowel.append(letter)\n        elif letter == 'o':\n            vowel.append(letter)\n        elif letter == 'u':\n            vowel.append(letter)\n        elif letter == 'y':\n            vowel.append(letter)\n        elif letter == 'A':\n            vowel.append(letter)\n        elif letter == 'E':\n            vowel.append(letter)\n        elif letter == 'I':\n            vowel.append(letter)\n        elif letter == 'O':\n            vowel.append(letter)\n        elif letter == 'U':\n            vowel.append(letter)\n        elif letter == 'Y':\n            vowel.append(letter)\n        else:\n            consonant.append(letter)\n\n    if len(consonant) == 0 and len(vowel) == 0:\n        return ''\n    elif len(vowel) == 0:\n        return ''\n    elif len(consonant) == 1:\n        if consonant[0] == 'v':\n            return vowel[0]\n        elif consonant[0] == 'f':\n            return vowel[0]\n        elif consonant[0] =='m':\n            return vowel[0]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) == 0:\n        return \"\"\n\n    curr = word[0]\n    vowel = \"\"\n    for letter in word[1:]:\n        if letter.isalpha() and letter.lower() in 'aeiouAEIOU':\n            vowel = letter.lower()\n            break\n    if vowel == \"\" and len(word) > 1:\n        curr = word[1]\n        for letter in word[2:]:\n            if letter.isalpha() and letter.lower() in 'aeiouAEIOU':\n                vowel = letter.lower()\n                break\n    if vowel == \"\":\n        return \"\"\n    if curr.isalpha() and curr.lower() in 'BCDFGHJKLMNPQRSTVWXYZ':\n        return \"\"\n    if curr.isalpha() and curr.lower() in 'BCDFGHJKLMNPQRSTVWXYZ':\n        return \"\"\n    return vowel", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    # Do not modify below\n    if word == \"\" or word == \" \":\n        return \"\"\n\n    if word[0] in \"abcdefghijklmnopqrstuvwxyz\":\n        return \"\"\n\n    vowel_found = False\n    vowel = \"\"\n    for i, letter in enumerate(word[1:]):\n        if letter in \"aeiou\":\n            if not vowel_found:\n                vowel_found = True\n                vowel = letter\n            else:\n                if letter == word[-1]:\n                    return \"\"\n                else:\n                    return vowel\n\n    return vowel</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    word = \"\".join(word)\n    consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\"]\n    found = False\n    current = 0\n    while current < len(word):\n        if word[current] in consonants:\n            found = True\n            if len(word) - current < 2:\n                break\n        elif found and word[current] in vowels:\n            break\n        current += 1\n    if found:\n        return word[current]\n    else:\n        return \"\"\n\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    def find_vowel(word):\n        \"\"\"Return vowel that met the above condition.\"\"\"\n        vowels = \"aeiou\"\n        vowels_index = []\n        for i in range(len(word) - 1):\n            if word[i] in vowels and word[i + 1] not in vowels:\n                vowels_index.append(i)\n\n        if len(vowels_index) == 0:\n            return \"\"\n        elif len(vowels_index) == 1:\n            return word[vowels_index[0]]\n        elif len(vowels_index) == 2:\n            return word[vowels_index[0]] + word[vowels_index[1]]\n\n    return find_vowel(word)", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def is_vowel(letter):\n        \"\"\"Check if the letter is a vowel.\"\"\"\n        return letter in \"aeiouAEIOU\"\n\n    def get_closest_consonant(word, letter):\n        \"\"\"Return the closest consonant to the given letter.\"\"\"\n        return min([letter + c for c in word if c not in \"aeiouAEIOU\"])\n\n    if not word:\n        return \"\"\n\n    word = word.upper()\n    if is_vowel(word[-1]):\n        return word[-1]\n    if word[0] == word[-1] == word[-2] == \"*\":\n        return \"\"\n    if is_vowel(word[0]) or is_vowel(word[-1]):\n        return \"\"\n    return get_closest_consonant(word, word[-2])", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    if len(word) < 4:\n        return \"\"\n\n    for i in range(1, len(word)-1):\n        if word[i].lower() in \"aeiou\" and word[i-1].lower()!= \"w\" and word[i+1].lower()!= \"w\":\n            return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    vowels = 'aeiou'\n    word = list(word)\n    if word[0] in vowels:\n        return word[0]\n    else:\n        count = 0\n        for letter in word:\n            if letter in vowels:\n                return letter\n            count += 1\n            if count == len(word) - 1:\n                return \"\"\n</s>", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    word = word.upper()\n    if len(word) < 2:\n        return \"\"\n    vowels = \"aeiouAEIOU\"\n    for i in range(len(word) - 1, -1, -1):\n        if word[i] not in vowels and word[i-1] not in vowels and word[i+1] not in vowels:\n            return word[i]", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    from collections import defaultdict\n    letters = list(word)\n    if not letters:\n        return \"\"\n\n    result = \"\"\n    dic = defaultdict(list)\n\n    for i in range(1, len(letters)-1):\n        if letters[i] in \"aeiouAEIOU\":\n            result = letters[i]\n            break\n        dic[letters[i-1]].append(letters[i])\n\n    if result == \"\":\n        for i in range(1, len(letters)-1):\n            if letters[i] in \"aeiouAEIOU\":\n                return \"\"\n            dic[letters[i-1]].append(letters[i])\n\n    return result", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    def next_consonant(word):\n        return word[word.find('v')+1:] if 'v' in word else word[word.find('k')+1:] if 'k' in word else word[word.find('b')+1:] if 'b' in word else word[word.find('p')+1:] if 'p' in word else word[word.find('m')+1:] if'm' in word else word[word.find('f')+1:] if 'f' in word else word[word.find('t')+1:] if 't' in word else word[word.find('s')+1:] if's' in word else word[word.find('j')+1:] if 'j' in word else word[word.find('d')+1:] if 'd' in word else word[word.find('g')+1:] if 'g' in word else word[word.find('h')+1:] if 'h' in word else word[word.find('n')+1:] if 'n' in word else word[word.find('r')+1:] if 'r' in word else word[word.find('ch'", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n    for i in range(len(word)-1):\n        if word[i].lower() in 'aeiou':\n            if not word[i+1].islower():\n                return word[i]\n    return ''", "def get_closest_vowel(word):\n    \"\"\"You are given a word. Your task is to find the closest vowel that stands between \n    two consonants from the right side of the word (case sensitive).\n    \n    Vowels in the beginning and ending doesn't count. Return empty string if you didn't\n    find any vowel met the above condition. \n\n    You may assume that the given string contains English letter only.\n\n    Example:\n    get_closest_vowel(\"yogurt\") ==> \"u\"\n    get_closest_vowel(\"FULL\") ==> \"U\"\n    get_closest_vowel(\"quick\") ==> \"\"\n    get_closest_vowel(\"ab\") ==> \"\"\n    \"\"\"\n\n    return \"\""]]