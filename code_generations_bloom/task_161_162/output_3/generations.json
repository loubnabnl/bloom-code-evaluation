[["def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # write code here\n    def rev(s):\n        return \"\".join(reversed(s))\n    if s[0].isalpha():\n        return rev(s)\n    else:\n        return rev(s[1:] + s[0])\n\ns = solve(input())", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def charToUpper(c):\n        if c >= 65 and c <= 90:\n            return c - 32\n        return c\n\n    def charToLower(c):\n        if c >= 97 and c <= 122:\n            return c + 32\n        return c\n\n    def solve(s):\n        if s == '':\n            return s\n        if s[0] not in 'abcdefghijklmnopqrstuvwxyz':\n            return solve(s[::-1])\n        new_s = ''\n        for c in s:\n            if c >= 65 and c <= 90:\n                new_s += charToUpper(c)\n            elif c >= 97 and c <= 122:\n                new_s += charToLower(c)\n            else:\n                new_s += c\n        return solve(new_s)\n\na = input(\"Input string: \")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s.isalpha():\n        if s.islower():\n            s = s.upper()\n        else:\n            s = s.lower()\n    return s[::-1]\n\n\nsolve(input())\n'''\nSample Input:", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    i = 0\n    result = \"\"\n    while i < n:\n        if s[i] in 'abcdefghijklmnopqrstuvwxyz':\n            if s[i].isupper():\n                result += s[i].lower()\n            else:\n                result += s[i].upper()\n        elif s[i] not in '0123456789':\n            result += s[i]\n        i += 1\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = list(s)\n    if not s:\n        return s[::-1]\n    letters = 0\n    for c in s:\n        if c in 'abcdefghijklmnopqrstuvwxyz':\n            letters += 1\n            s.append(c.upper() if c.islower() else c.lower())\n        else:\n            s.append(c)\n    if letters == 0:\n        return s[::-1]\n    return ''.join(s)[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    rev = \"\"\n    for i, char in enumerate(s):\n        if char.isalpha():\n            rev += char.swapcase()\n        else:\n            rev += char\n    rev = rev[::-1]\n    return rev", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s: return s\n    if not s[0].isalpha(): return s[::-1]\n    if len(s)==1: return s\n    if s[0].lower()==s[-1].upper(): return s.lower()\n    elif s[0].upper()==s[-1].lower(): return s.upper()\n    else: return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if s[i].islower() else s[i].lower()\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    l = list(s)\n    for i in range(len(l)):\n        if l[i].isalpha():\n            l[i] = l[i].swapcase()\n    return ''.join(l)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # \u9898\u76ee\u89e3\u6790\uff1a\n    # \u6bcf\u4e2a\u6570\u5b57\u901a\u8fc7\u66ff\u6362\uff0c\u6240\u4ee5\u76f4\u63a5\u5229\u7528\u5217\u8868\u904d\u5386\n    # \u6570\u5b57\u76f4\u63a5\u66ff\u6362\u6389\u5373\u53ef\n    # \u6570\u5b57\u66ff\u6362\u6389\uff0c\u5b57\u7b26\u4e32\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7a7a\u683c\uff0c\u6240\u4ee5\u9700\u8981\u68c0\u6d4b\uff0c\u5982\u679c\u51fa\u73b0\u7a7a\u683c\uff0c\u9700\u8981\u5220\u9664\u7a7a\u683c\uff0c\u5426\u5219\u4f1a\u62a5\u9519\n    # \u56e0\u4e3a\u7a7a\u683c\u4e0d\u8fde\u7eed\uff0c\u6240\u4ee5\u5220\u9664\u7a7a\u683c\u7684\u65f6\u5019\u4e0d\u80fd\u4f7f\u7528split\n    # \u5224\u65ad\u662f\u5426\u4e3a\u6570\u5b57\uff0c\u4f7f\u7528isdigit\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u5b57\u6bcd\uff0c\u4f7f\u7528isalpha\uff0c\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u683c\uff0c\u4f7f\u7528isspace\n    # \u68c0\u6d4b\u7a7a\u683c\u4e4b\u540e\uff0c\u5982\u679c\u7a7a\u683c\u5b58\u5728\uff0c\u5220\u9664\u7a7a\u683c\n    # \u904d\u5386\u5b57\u7b26\u4e32s\n    # \u5982\u679cs[i]\u4e3a\u6570\u5b57\uff0c\u76f4\u63a5\u66ff\u6362\u4e3as[i]\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u683c\n    # \u5982\u679c\u4e0d\u662f\u7a7a\u683c\uff0c\u5219\u76f4\u63a5break\uff0c\u6267\u884c\u4e0b\u4e00\u6b21\u904d\u5386\n    # \u5982\u679cs[i]\u4e3a\u5b57\u6bcd\uff0c\u5219\u66ff\u6362\u4e3as[i].upper()\u6216\u8005s[i].lower()\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\u683c\n    # \u5982\u679c\u4e0d\u662f\u7a7a\u683c\uff0c\u5219\u76f4\u63a5break\uff0c\u6267\u884c\u4e0b\u4e00\u6b21\u904d\u5386\n    # \u904d\u5386\u7ed3\u675f\u4e4b\u540e\uff0c\u5982\u679c\u51fa\u73b0\u7a7a\u683c\uff0c\u5220\u9664\u7a7a\u683c\uff0c\u6700\u540e\u8fd4\u56de\u5b57\u7b26\u4e32s\n    # def solve(s):\n    #     res = s\n    #     for i in range(len(s)):\n    #", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    if not s:\n        return s[::-1]\n    for i, c in enumerate(s):\n        if c.isalpha():\n            s[i] = chr(ord(c) + (len(s)-i))\n        else:\n            s[i] = c[::-1]\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # write code here\n    if s == \"\":\n        return \"\"\n    result = \"\"\n    for i in s:\n        if s[i].isalpha():\n            if s[i].islower():\n                result += s[i].upper()\n            else:\n                result += s[i].lower()\n        else:\n            result += s[i]\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    while s:\n        if s[0].isalpha():\n            s = s[0] + s[1:]\n        else:\n            s = s[1:] + s[0]\n        if not s:\n            return \"\"\n    return s\n\n\nsoln = solve(input())", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    r = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                r += s[i].upper()\n            else:\n                r += s[i].lower()\n        else:\n            r += s[i]\n    return r[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    solution = s\n    if not solution:\n        return solution\n    if not any(c.isalpha() for c in solution):\n        return solution[::-1]\n    for i in range(len(solution)):\n        if solution[i].isalpha():\n            solution = solution[::-1]\n            solution[i] = solution[i].upper()\n            solution = solution + solution[:i]\n            break\n    return solution", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            res += s[i].swapcase() # swap lower to upper or upper to lower case\n        else:\n            res += s[i]\n    res = res[::-1]\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == []:\n        return s[::-1]\n    if len(s) == 1:\n        return s\n    if not isletter(s[0]):\n        return s[::-1]\n    else:\n        s = s.lower()\n        return solve(s) + solve(s[1:])[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            result += c.upper() if c.islower() else c.lower()\n        else:\n            result += c\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == \"\":\n        return s\n    result = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            result += s[i].swapcase()\n        else:\n            result += s[i]\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    if s == \"\":\n        return s[::-1]\n\n    if s[0].isalpha():\n        if s[0].islower():\n            s = s[0].upper() + s[1:]\n        else:\n            s = s[0].lower() + s[1:]\n    else:\n        return s[::-1]\n\n    return solve(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    string = \"\"\n    for c in s:\n        if c.isalpha():\n            string += chr(ord(c) - ord('a') + 1)\n        else:\n            string += c\n    return string[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = \"\"\n    for i, c in enumerate(s):\n        if c.isalpha():\n            res += c.upper() if c.islower() else c.lower()\n        else:\n            res += c\n    return res[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s is None:\n        return None\n    if not s or len(s) == 0:\n        return s\n    for i in s:\n        if i.isalpha():\n            s = s.replace(i.lower(), i.upper())\n            s = s.replace(i.upper(), i.lower())\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    l = list(s)\n    for i in range(0, len(l)):\n        if l[i].isalpha():\n            l[i] = l[i].upper() if l[i].islower() else l[i].lower()\n    return ''.join(l)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = ''\n    for ch in s:\n        if ch.isalpha():\n            ch = ch.upper() if ch.islower() else ch.lower()\n        result += ch\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    new_str = []\n    for i in s:\n        if i.isalpha():\n            new_str.append(i.swapcase())\n        else:\n            new_str.append(i)\n    return \"\".join(new_str)\n\n\ns = \"123456\"", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if (not s) or (not s.isalpha()):\n        return \"\".join(reversed(s))\n    for c in s:\n        if s.isupper():\n            s = s.lower()\n        else:\n            s = s.upper()\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def toupper(a):\n        \"\"\"convert lower letter to upper\"\"\"\n        if a.isalpha():\n            return a.upper()\n        return a\n\n    def tolower(a):\n        \"\"\"convert upper letter to lower\"\"\"\n        if a.isalpha():\n            return a.lower()\n        return a\n\n    def solution(s):\n        n = len(s)\n        if n == 0:\n            return s[::-1]\n        elif s[0].isalpha():\n            return solution(s[1:]) + tolower(s[0]) + solution(s[:1])\n        else:\n            return solution(s[1:]) + toupper(s[0]) + solution(s[:1])\n\n    return solution(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    for i, c in enumerate(s):\n        if c.isalpha():\n            s[i] = c.lower() if c.isupper() else c.upper()\n\n    return ''.join(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s: return \"\"\n    if not isletter(s[0]): return s\n    res = \"\"\n    for i in xrange(0,len(s)):\n        if isletter(s[i]):\n            res += s[i].upper()\n        else:\n            res += s[i]\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            if c.islower():\n                result += c.upper()\n            elif c.isupper():\n                result += c.lower()\n        else:\n            result += c\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = str(s)\n    if len(s) == 0:\n        return s[::-1]\n    if len(s) == 1:\n        if s[0].isalpha():\n            return s[0].swapcase()\n        else:\n            return s[::-1]\n    if s[0].isalpha():\n        return s[0].swapcase() + solve(s[1:])\n    else:\n        return solve(s[1:]) + s[0].swapcase()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    l = list(s)\n    flag = False\n    for i in range(len(l)):\n        if l[i].isalpha():\n            l[i] = l[i].upper() if l[i].islower() else l[i].lower()\n            flag = True\n    return \"\".join(l) if flag else s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Create a loop to handle each character in the string\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].upper()\n        elif s[i].isdigit():\n            pass\n        else:\n            s[i] = s[i].lower()\n    # Once you have looped through the string, reverse it\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    if s[0] == '#':\n        return s\n    i = 0\n    l = len(s)\n    while i < l:\n        if s[i].isalpha():\n            s[i] = s[i].upper()\n            i += 1\n            j = i\n            while j < l and s[j].isalpha():\n                s[j] = s[j].lower()\n                j += 1\n            i = j - 1\n        i += 1\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if s[i].lower() == s[i] else s[i].lower()\n    return ''.join(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    elif s[0].isalpha():\n        return s[::-1].swapcase()\n    else:\n        l = list(s)\n        for i, c in enumerate(l):\n            if c.isalpha():\n                l[i] = l[i].swapcase()\n                break\n        return \"\".join(l)\n\nfor s in [\n    '1234',\n    'ab',\n    'abc',\n    'abd',\n    'abcde',\n    'abcdef',\n    'abcdedf',\n    '#a@C',\n    'aBc',\n]:\n    print(s, solve(s))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = \"\"\n    if s[-1] in ['A', 'a']:\n        res += s[-1].upper()\n    else:\n        res += s[-1]\n    for i in reversed(range(0, len(s))):\n        if s[i] in ['A', 'a', 'B', 'b', 'C', 'c', 'D', 'd', 'E', 'e', 'F', 'f', 'G', 'g', 'H', 'h', 'I', 'i', 'J', 'j', 'K', 'k', 'L', 'l', 'M','m', 'N', 'n', 'O', 'o', 'P', 'p', 'Q', 'q', 'R', 'r', 'S','s', 'T', 't', 'U', 'u', 'V', 'v', 'W', 'w', 'X', 'x', 'Y', 'y', 'Z', 'z']:\n            res += s[i].upper()\n        else:\n            res += s[i]\n    return res\n</s>", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if not s[0].isalpha():\n        return s[::-1]\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].swapcase()\n            return solve(s[1:] + s[:1])\n        if s[i].isdigit():\n            s[i] = s[i].swapcase()\n            return solve(s[1:] + s[:1])\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def get_letter(s):\n        return int(s[1:]) if s[0] == '#' else ord(s[0]) - 64\n    return ''.join([get_letter(s) if s[0].isalpha() else s[0] for s in reversed(s.upper())])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    #print s\n    res = s\n    if s[0].isalpha():\n        res = res[0].upper()+s[1:]\n    else:\n        res = res[1:]\n    for i in range(1,len(s)):\n        if s[i].isalpha():\n            res = res+s[i].lower()+res[i:]\n        else:\n            res = res+s[i]+res[i:]\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\n    # @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def solve(s):\n        if s[0].isalpha():\n            return s[0].upper() + solve(s[1:])\n        return solve(s[1:]) if s[0].isdigit() else s\n\n    return solve(s)\n\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    while True:\n        i = s.find('a')\n        if i == -1:\n            return s\n        i = s.find('A')\n        if i == -1:\n            return s\n        if i!= 0:\n            s = s[:i]+s[i+1:]\n        else:\n            s = s[:i]+s[i+1:]\n        s = s.lower()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = \"\".join(sorted(list(s), key=str.islower))\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return \"\"\n\n    last_letter = \"\"\n    for char in s:\n        if char.isalpha():\n            if char.isupper():\n                last_letter = char.lower()\n            else:\n                last_letter = char.upper()\n        else:\n            last_letter += char\n\n    return last_letter + solve(s[1:])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    global i\n    i = 0\n    res = \"\"\n    while i < len(s):\n        if s[i].isalpha():\n            res += s[i].upper()\n        elif s[i].isdigit():\n            res += s[i]\n        else:\n            res += s[i]\n        i += 1\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    i = 0\n    j = len(s) - 1\n    s = s.strip()\n    while i < j:\n        if s[i].isalpha():\n            if s[i].isupper():\n                s = s[:i] + s[i].lower() + s[i+1:]\n            elif s[i].islower():\n                s = s[:i] + s[i].upper() + s[i+1:]\n            i += 1\n        else:\n            i += 1\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    res = \"\"\n    for i in xrange(n):\n        if s[i].isalpha():\n            res += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            res += s[i]\n    return res[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def uniq(s):\n        n = len(s)\n        i = 0\n        res = []\n        while i < n:\n            if s[i] not in res:\n                res.append(s[i])\n            i += 1\n        return res\n    def solve(s):\n        if not s:\n            return s[::-1]\n        else:\n            # remove duplicates and return reversed str\n            return uniq(s[::-1])[::-1]\ns = input()\ns = solve(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Write your code here\n    import string\n    count=0\n    for i in range(len(s)):\n        if i==0:\n            return s[::-1]\n        if s[i] not in string.ascii_letters:\n            s[::-1]\n            return s\n        if s[i] in string.ascii_uppercase:\n            s[i] = s[i].lower()\n        elif s[i] in string.ascii_lowercase:\n            s[i] = s[i].upper()\n        count+=1", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s[::-1]\n    for i, e in enumerate(s):\n        if e.isalpha():\n            s[i] = s[i].upper() if s[i].islower() else s[i].lower()\n    return \"\".join(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s = s[i].upper() + s[i+1:]\n            else:\n                s = s[i].lower() + s[i+1:]\n        else:\n            count += 1\n            if count == 2:\n                s = s[::-1]\n            else:\n                s = s[:-count] + s[-count:-1]\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result=\"\"\n    for i in s:\n        if (isalpha(i)):\n            if (islower(i)):\n                result+=chr(ord(i) - 32)\n            else:\n                result+=chr(ord(i) - 65)\n        else:\n            result+=i\n    return result\n\ns=input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n    else:\n        if not s.isalpha():\n            return s[::-1]\n        else:\n            return ''.join([s[::-1] if s[i].isalpha() else s[i] for i in range(len(s))])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    # check the length of the string\n    if len(s) == 0:\n        return s\n    # check the first letter\n    else:\n        if s[0] in string.ascii_lowercase:\n            return solve(s[1:]) + s[0].upper()\n        elif s[0] in string.ascii_uppercase:\n            return solve(s[1:]) + s[0].lower()\n        else:\n            return solve(s[1:]) + s[0]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Write your code here\n    if s == '':\n        return s\n    result = []\n    for char in s:\n        if char.isalpha():\n            result.append(char.upper())\n        else:\n            result.append(char)\n    return ''.join(result)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    new_s = \"\"\n    for i in s:\n        if i.isalpha():\n            new_s += i.upper() if i.islower() else i.lower()\n        else:\n            new_s += i\n    return new_s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n    if not s[-1].isalpha():\n        s = s[::-1]\n    return ''.join(map(lambda x:(x.isalpha() and x.upper() or x.lower()), s))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def solve1(s):\n        \"\"\"You are given a string s.\n        if s[i] is a letter, reverse its case from lower to upper or vise versa, \n        otherwise keep it as it is.\n        If the string contains no letters, reverse the string.\n        The function should return the resulted string.\n        \"\"\"\n        if s in string.letters:\n            if s[0].islower():\n                return s.upper()\n            elif s[0].isupper():\n                return s.lower()\n            else:\n                return s\n        return s[::-1]\n    return solve1(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) < 1:\n        return s\n    if s[0] in ['A','a','C','c','D','d','F','f']:\n        return s[0] + solve(s[1:])\n    else:\n        return solve(s[1:]) + s[0]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def reverse_letter(s, i, j):\n        tmp = s[i]\n        if tmp >= 'a' and tmp <= 'z':\n            s[i] = tmp - 32\n        elif tmp >= 'A' and tmp <= 'Z':\n            s[i] = tmp + 32\n\n    def reverse(s, i, j):\n        if s[i]!= \"#\":\n            reverse_letter(s, i, j)\n            i += 1\n            j -= 1\n            reverse(s, i, j)\n        else:\n            tmp = s[i]\n            s[i] = s[j]\n            s[j] = tmp\n\n    i = 0\n    j = len(s) - 1\n    while i < j:\n        reverse(s, i, j)\n        i += 1\n        j -= 1", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def _reverse(s):\n        return \"\".join(reversed(s))\n\n    if not s or s[0] not in string.ascii_letters:\n        return _reverse(s)\n\n    return _reverse([(s[0].lower(), s[0].upper())] + _reverse(s[1:]))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s\n\n    return \"\".join((c if c.isalpha() else (c.lower() if c.isupper() else c.upper()) for c in s))\n\ntest = [\n    solve(\"1234\"),\n    solve(\"ab\"),\n    solve(\"#a@C\")\n]\n\nfor s in test:\n    print(s)\n\nAnd the result:\n4321\nAB", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def rev_case(s):\n        for i in range(len(s)):\n            if s[i].isalpha():\n                s[i] = s[i].upper() if s[i].islower() else s[i].lower()\n        return s\n\n    def rev(s):\n        return s[::-1]\n\n    if not s:\n        return s\n    if not s[0].isalpha():\n        return rev(s)\n    return rev_case(rev(s))\n\ns = input(\"please input string:\")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s[-1].isalpha():\n        s = s[:-1] + s[-1].upper() + s[-1:]\n    elif s[-2].isalpha():\n        s = s[:-2] + s[-2].upper() + s[-2:]\n    else:\n        s = s[::-1]\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            result += c.lower() if c.isupper() else c.upper()\n        else:\n            result += c\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    print(s)\n    if not s:\n        return \"\"\n    n = len(s)\n    res = \"\"\n    for i in range(n):\n        if s[i] in string.ascii_letters:\n            res += chr(ord(s[i]) + 26) if ord(s[i]) > ord(\"A\") else chr(ord(s[i]) - 26)\n        else:\n            res += s[i]\n    print(res)\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def rev(str):\n        rev = str[::-1]\n        return rev\n    def rev_lower(str):\n        rev = str.lower()[::-1]\n        return rev\n    def rev_upper(str):\n        rev = str.upper()[::-1]\n        return rev\n    def rev_alpha(str):\n        rev = str.upper()[::-1]\n        return rev\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                return rev_lower(s)\n            else:\n                return rev_upper(s)\n        else:\n            return rev(s)\n</s>", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s.isalpha():\n        s = s.lower() + s.upper()[::-1]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s: return s\n    if len(s) == 1:\n        return s\n    s = [char for char in s if char.isalpha()]\n    if s:\n        return ''.join([(ord(c) + len(s) - ord(s[0])) % len(s) + s[0] if ord(c) >= ord(s[0]) else c for c in s[0][::-1]]) + solve(s[1:])\n    else:\n        return s[::-1]\n\na = [\"1234\", \"ab\", \"#a@C\"]\nfor s in a:\n    print(solve(s))\n\nA:\n\nThe correct solution is \ns = [\"1234\", \"ab\", \"#a@C\"]\nfor s in s:\n    print(solve(s))\n\nBut the solution you have written has a bug.\nYou have used", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return \"\".join([\n        s[i] if s[i].isalpha() else s[i].upper() if s[i].islower() else s[i]\n        for i in range(len(s))\n    ])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    import re\n    import string\n    a = list(s)\n    l = len(a)\n    if l == 0:\n        return s[::-1]\n    for i in range(l):\n        if s[i].isalpha():\n            if a[i].isupper():\n                a[i] = a[i].lower()\n            elif a[i].islower():\n                a[i] = a[i].upper()\n    return \"\".join(a)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def revCase(s):\n        i = 0\n        while i < len(s):\n            if s[i].isupper():\n                s[i] = s[i].lower()\n            elif s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                pass\n            i += 1\n        return s\n\n    def revString(s):\n        s = s[::-1]\n        return s\n\n    def replace(s):\n        for i in s:\n            if i.isalpha():\n                return revCase(s)\n            else:\n                return revString(s)\n\n    return replace(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    i=0\n    while(i<len(s)):\n        if(s[i].isalpha()):\n            if(s[i].islower()):\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n            i+=1\n        else:\n            s = s[i:] + s[0:i]\n            i+=1\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def isLetters(i, s):\n        return (s[i].isalpha() or s[i] == \" \")\n\n    n = len(s)\n    for i in range(0, n):\n        if isLetters(i, s):\n            if s[i].isupper():\n                s = s[:i] + s[i:].lower() + s[i:i+1].upper()\n            elif s[i].islower():\n                s = s[:i] + s[i:].upper() + s[i:i+1].lower()\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    return \"\".join([(x.upper() if x.isupper() else x.lower()) if x.isalpha() else x\n                     for x in s])[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # write code here\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    string = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                string += s[i].upper()\n            else:\n                string += s[i].lower()\n        else:\n            string += s[i]\n    return string[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s[::-1]\n\n    for c in s:\n        if c.isalpha():\n            return c.upper() + solve(s[1:]).lower()\n        else:\n            return solve(s[1:])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0 or not s[0].isalpha():\n        return s[::-1]\n    if s[0].islower():\n        return s[::-1].upper()\n    else:\n        return s[::-1].lower()[::-1]\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Write your code here\n    if not s:\n        return s[::-1]\n    s = s.lower()\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s = s[i].swapcase() + s[:i] + s[i+1:]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s[0].isalpha():\n        return s[0].swapcase()+solve(s[1:])\n    return solve(s[1:]) + s[0]\n\ntest = list(map(lambda s: solve(s), input().split()))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # \u8fd9\u91cc\u7528\u4e24\u4e2a\u6808\uff0c\u5148\u8bfb\u53d6\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u5904\u7406\u6bcf\u4e2a\u5b57\u7b26\n    stack1 = []\n    stack2 = []\n    for i in range(len(s)):\n        if s[i] in \"abcdefghijklmnopqrstuvwxyz\":\n            if s[i].isupper():\n                stack1.append(s[i].lower())\n            else:\n                stack1.append(s[i].upper())\n        elif s[i] in \"1234567890\":\n            stack2.append(s[i])\n        elif s[i] == '#':\n            stack2.append('A')\n            stack1.append('@')\n        elif s[i] == '@':\n            stack2.append('a')\n            stack1.append('#')\n        elif s[i] == 'A':\n            stack2.append('#')\n            stack1.append('@')\n        elif s[i] == 'a':\n            stack2.append('@')\n            stack1.append('#')\n    return ''.join(stack1) + ''.join(stack2)\n</s>", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def reverse_letter(s):\n        if s[0].islower():\n            return s[0].upper() + s[1:]\n        elif s[0].isupper():\n            return s[0].lower() + s[1:]\n        else:\n            return s\n\n    def reverse_non_letter(s):\n        if s[0].isdigit():\n            return s[::-1]\n        else:\n            return s\n\n    def solve(s):\n        result = \"\"\n        for char in s:\n            if char.isalpha():\n                result += reverse_letter(char)\n            else:\n                result += reverse_non_letter(char)\n        return result\n\n    print solve(s)\n\n\ns = input(\"Enter a string: \")\nsolve(s)\n</s>", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    ret = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            ret += s[i].upper() + s[i].lower()\n        else:\n            ret += s[i]\n    return ret[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    len_s = len(s)\n    result = \"\"\n    for i in range(len_s):\n        if s[i].isalpha():\n            if i + 1 < len_s:\n                result += s[i].lower() if s[i].isupper() else s[i].upper()\n            else:\n                result += s[i].lower() if s[i].isupper() else s[i].upper()\n        else:\n            result += s[i]\n\n    if not s.isalpha():\n        result = result[::-1]\n\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    L = []\n    for i in s:\n        if i == \" \":\n            L.append(i)\n            continue\n        elif i.isalpha():\n            if i.isupper():\n                L.append(i.lower())\n            else:\n                L.append(i.upper())\n        else:\n            L.append(i)\n    L = \"\".join(L)\n    return L[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == '':\n        return s\n    l = []\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            l.append(s[i].swapcase())\n        else:\n            l.append(s[i])\n        i += 1\n    return ''.join(l)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    m = 0\n    result = \"\"\n    for i in range(n):\n        if s[i] in \"ABC\":\n            result += s[i].upper()\n        elif s[i] in \"abc\":\n            result += s[i].lower()\n        else:\n            result += s[i]\n        if i < n - 1:\n            result += s[i + 1]\n        m += 1\n    return result\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Write your code here\n    index = 0\n    #Use a loop to read the string\n    while index < len(s):\n        if s[index].isalpha():\n            index += 1\n            index -= 1\n            new_index = index\n            #Use a loop to reverse the case of each letter\n            while index < len(s):\n                s[new_index] = s[index]\n                new_index += 1\n                index += 1\n        index += 1\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s)==0:\n        return \"\"\n\n    result=\"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].isupper():\n                result+=s[-i:]+s[i].lower()\n            else:\n                result+=s[i].upper()+s[-i:]\n        else:\n            result+=s[i]\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    for i, ch in enumerate(s):\n        if ch.isalpha():\n            s = s[:i] + ch.upper() + s[i+1:]\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s\n    def isletter(s):\n        return s.isalpha()\n\n    def changecase(s, case):\n        if case == \"lower\":\n            return s.lower()\n        elif case == \"upper\":\n            return s.upper()\n        else:\n            return s\n\n    def reverse(s):\n        return s[::-1]\n\n    for i,c in enumerate(s):\n        if isletter(c):\n            s = changecase(s, \"lower\" if c.islower() else \"upper\")\n        else:\n            s = reverse(s)\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = ''\n    for c in s:\n        if c in \"abcdefghijklmnopqrstuvwxyz\":\n            res += c.upper() if c.lower() == c else c.lower()\n        else:\n            res += c\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == \"\" or s == \"\":\n        return s\n    else:\n        for i in range(len(s)):\n            if s[i].isalpha() == True:\n                s = s[i].lower() + s[i+1:]\n                s = s[i].upper() + s[:i+1]\n                return s\n            else:\n                return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    reverse = \"\"\n    for i in range(len(s)):\n        if s[i] in string.ascii_lowercase:\n            reverse += s[i].upper()\n        else:\n            reverse += s[i]\n    return reverse\nsolve(\"123abc\")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s.isalpha():\n        s = s.upper() if s.islower() else s.lower()\n    return s[::-1] if s.isalnum() else s[::-1] + s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    import re\n    arr = []\n    for i in re.findall(r\"\\w+\", s):\n        if i.isupper():\n            arr.append(i.lower())\n        else:\n            arr.append(i.upper())\n    return \"\".join(arr)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res=\"\"\n    for i in s:\n        if i.isalpha():\n            res += i.upper() if i.islower() else i.lower()\n        else:\n            res += i\n    return res[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if (s == \"\"):\n        return s\n    k = \"\"\n    for i in range(len(s)):\n        if (s[i].isalpha()):\n            k += s[i].lower() + s[i].upper()\n        else:\n            k += s[i]\n    return k[::-1]\n\n\ns = raw_input(\"Input string:\")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    return solve1(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n\n    for i, j in enumerate(s):\n        if j.isalpha():\n            s[i] = s[i].lower()\n            s[j] = s[j].upper()\n\n    return \"\".join(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s[::-1]\n    if not all(i in s for i in \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\"):\n        return s[::-1]\n    result = []\n    for c in s:\n        if c in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n            result.append(c.upper())\n        else:\n            result.append(c.lower())\n    return \"\".join(result)\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n            res.append(s[-(i % 2):] + s[-(i // 2):i] + s[i].swapcase())\n        else:\n            res.append(s[-(i % 2):] + s[-(i // 2):i])\n    return \"\".join(res)\n\nassert solve(\"123a4\") == \"432A1\"\nassert solve(\"abc#\") == \"abC#\"\nassert solve(\"1234\") == \"4321\"\nassert solve(\"!\") == \"!\"\nassert solve(\"ab\") == \"AB\"\nassert solve(\"#a@C\") == \"#A@c\"\nassert solve(\".#ab\") == \".#ab\"\nassert solve(\"ab.\") == \"AB.\"\nassert solve(\"abc\") == \"abc\"\nassert solve(\"abcd\") == \"abcd\"\nassert solve(\"abcd\") == \"abcd\"\nassert solve(\"abcd\") == \"abcd\"\nassert solve(\"abcd\") == \"abcd\"", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == \"\":\n        return \"\"\n    if not ('abcdefghijklmnopqrstuvwxyz' in s):\n        return s[::-1]\n    return \"\".join(s.upper() if c.isupper() else c.lower() for c in s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    sol=[]\n    for i in s:\n        if i.isalpha():\n            sol.append(i.upper())\n        else:\n            sol.append(i)\n    return \"\".join(sol)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = list(s)\n    n = len(s)\n    if n == 0:\n        return \"\"\n    elif s[0].isalpha():\n        return \"\".join([s[1:i + 1] for i in range(n - 1, 0, -1)] + [s[0]] + [s[1:]])\n    else:\n        return \"\".join([s[1:] for i in range(0, n - 1, -1)] + [s[1]])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    i, j = 0, len(s) - 1\n    while i < j:\n        if s[i] in string.ascii_lowercase:\n            s[j], s[i] = s[i], s[j]\n        elif s[i] in string.ascii_uppercase:\n            s[j], s[i] = s[i], s[j]\n        else:\n            j -= 1\n        i += 1\n    return s[j:] + s[:j]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    a = \"\"\n    if s[0] in [\"a\", \"A\", \"b\", \"B\", \"c\", \"C\", \"d\", \"D\", \"e\", \"E\", \"f\", \"F\", \"g\", \"G\", \"h\", \"H\", \"i\", \"I\", \"j\", \"J\", \"k\", \"K\", \"l\", \"L\", \"m\", \"M\", \"n\", \"N\", \"o\", \"O\", \"p\", \"P\", \"q\", \"Q\", \"r\", \"R\", \"s\", \"S\", \"t\", \"T\", \"u\", \"U\", \"v\", \"V\", \"w\", \"W\", \"x\", \"X\", \"y\", \"Y\", \"z\", \"Z\"]:\n        a = s[0]\n    else:\n        a = s[0].upper()\n    for i in range(1, len(s)):\n        if s[i] in [\"a\", \"A\", \"b\", \"B\", \"c\", \"C\", \"d\", \"D\", \"e\", \"E\", \"f\", \"F\", \"g\", \"G\", \"h\", \"H\", \"i\", \"I\", \"j\", \"J\", \"k\", \"K\", \"l\", \"L\"", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == \"\":\n        return s\n    rev = \"\"\n    for c in s:\n        if c.isalpha():\n            rev += c.swapcase()\n        else:\n            rev += c\n    return rev[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n    if s[0].isalpha():\n        s = s[0] + s[1:]\n        if s[0].isupper():\n            s = s.swapcase()\n        else:\n            s = s.swapcase().swapcase()\n    return solve(s) + solve(s[1:])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def _reverse(s):\n        global count\n        count += 1\n        if len(s) <= 1:\n            return s\n        if s[0].isalpha():\n            if count % 2 == 0:\n                return s[0].lower() + s[1:]\n            else:\n                return s[0].upper() + s[1:]\n        else:\n            return _reverse(s[1:]) + s[0]\n\n    global count\n    count = 0\n    return _reverse(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def reverse(s):\n        res = []\n        for i in range(len(s)):\n            if s[i].isalpha():\n                res.append(s[-1] + s[i])\n            else:\n                res.append(s[i])\n        return \"\".join(res)\n\n    if not s:\n        return s\n    else:\n        return reverse(reverse(s))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Write your code here\n    #check if input is null\n    if len(s) == 0:\n        return \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            return s[i].upper() + s[:i] + s[i+1:]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = s\n    for i in s:\n        if i.isalpha():\n            res = res.upper() if i.islower() else res.lower()\n        else:\n            res = res[::-1]\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    res = []\n    while len(res) < n:\n        if s[res[-1]] in \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\":\n            res[-1] = chr(ord(res[-1]) + (ord(s[res[-1]].upper()) - ord(s[res[-1]].lower())) % 26)\n        else:\n            res.append(s[res.pop()])\n    return \"\".join(res)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    ans = \"\"\n    for i in range(n):\n        if s[i].isalpha():\n            ans = ans + s[i].swapcase()\n        else:\n            ans = ans + s[i]\n    return ans\n\n\"\"\"", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    n = len(s)\n\n    def check_letter(i):\n        if s[i].isalpha():\n            return s[i].upper() if s[i].lower() == s[i] else s[i].lower()\n        return s[i]\n    res = \"\"\n    for i in range(n):\n        res += check_letter(i)\n    return res[::-1]\n\nassert solve(\"ab\") == \"AB\"\nassert solve(\"1234\") == \"4321\"\nassert solve(\"#a@C\") == \"#A@c\"", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s[-1] not in \"abcdefghijklmnopqrstuvwxyz\":\n        return s[::-1]\n    else:\n        r = []\n        for c in s:\n            if c.islower():\n                c = c.upper()\n            else:\n                c = c.lower()\n            r.append(c)\n        return \"\".join(r)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s[-1] not in string.ascii_letters:\n        return s[::-1]\n    else:\n        if s[-1].islower():\n            s = s.lower()\n        elif s[-1].isupper():\n            s = s.upper()\n    return solve(s[:-1]) + s[-1:] + solve(s[1:])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = \"\".join([(c.upper() if i.isalpha() else c) for i, c in enumerate(s)])\n    if not s.isalpha():\n        return s[::-1]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s[::-1]\n    if s[0].isalpha():\n        return s[0].upper() + solve(s[1:])\n    if s[-1].isalpha():\n        return solve(s[:-1]) + s[-1].upper()\n    return s[::-1]\n\nA:\n\nYou have some duplication in there. It's fine to have that in small functions, but you should try to remove it as much as possible.\nWith that said, you're not actually using the isalpha() method, so why call it? If it's really needed, you can just use s[0].isalpha() or s[-1].isalpha() directly.\nYour indentation is also off.\nIf you add a line that prints the result, you can see how many steps each function is doing. This can help you to see where your function is spending its time. It's not always obvious when looking at the source code.\n\nA:", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    length = len(s)\n\n    for i in range(length):\n        if s[i].isalpha():\n            s[i] = s[i].upper() if s[i].islower() else s[i].lower()\n    \n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            result += s[i].swapcase()\n        else:\n            result += s[i]\n    result = result[::-1]\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = []\n    for c in s:\n        if c in \"abcdefghijklmnopqrstuvwxyz\":\n            if c.islower():\n                c = c.upper()\n            else:\n                c = c.lower()\n        result.append(c)\n    return ''.join(result[::-1])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    if not n:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            return solve(s[::-1])[::-1]\n        else:\n            return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    # if the string doesn't contain any letters, just reverse it\n    if not any(c.isalpha() for c in s):\n        return s[::-1]\n    s = list(s)\n    # reverse the letters\n    s.reverse()\n    for i in range(0, n):\n        # if the character is a letter, reverse its case\n        if s[i].isalpha():\n            s[i] = s[i].upper() if s[i].islower() else s[i].lower()\n        # if not, just keep it\n        else:\n            pass\n    return ''.join(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    if len(s) == 0:\n        return s[::-1]\n\n    if s[0].isalpha():\n        return solve(s[1:]) + s[0].swapcase()\n    else:\n        return solve(s[1:]) + s[0]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def get(s, i):\n        return s[i] if s[i].isalpha() else s[i].lower()\n\n    s = list(s)\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = get(s, i)\n\n    return \"\".join(s)\n\ns = solve(input())", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Remember to use smart pointers\n\n    def all_letter(s):\n        # return True if every character in s is a letter\n        return all(x in string.ascii_lowercase for x in s)\n\n    def all_number(s):\n        # return True if every character in s is a number\n        return all(x in string.digits for x in s)\n\n    def all_other(s):\n        # return True if every character in s is neither a letter nor a number\n        return all(x not in string.ascii_lowercase and x not in string.digits for x in s)\n\n    # def is_letter(s):\n    #     # return True if s[0] is a letter\n    #     return (s[0] in string.ascii_lowercase or s[0] in string.ascii_uppercase)\n\n    # def is_number(s):\n    #     # return True if s[0] is a number\n    #     return s[0] in string.digits\n\n    # def is_other(s):\n    #     # return True if s[0] is neither a letter nor a number\n    #     return s[0] not in string.ascii_lowercase and s[0] not in string.dig", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    # Algorithm:\n    #\n    # 1. Convert letters to lower case if they are upper case.\n    # 2. Reverse all the letters. If the string is not empty, then\n    #    convert the first letter to upper case if it is a letter.\n    # 3. Reverse the string if it is empty.\n    #\n    # Convert a string to lower or upper case\n    #   A = 'a'\n    #   Z = 'z'\n    #\n    # Convert a character to lower or upper case\n    #   a = A\n    #   z = Z\n    #\n    # Convert a string to lower or upper case\n    #   A = 'a'\n    #   Z = 'z'\n    #\n    # Convert a character to lower or upper case\n    #   a = A\n    #   z = Z\n    #\n    # This means that the converted character can be replaced with\n    #   a character that is lower or higher case.\n    #   a = A or a = a\n    #   z = Z or z = z\n\n    if not s:\n        return s[::-1]\n    else:\n        if s[0].isalpha():\n            s = s[0].lower() + s[1:]\n        else:\n            s = s[0].upper() + s[1:]\n\n        return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = s.replace(\"'\", \"\")\n    if len(s) == 0:\n        return s[::-1]\n\n    result = \"\"\n    for i, c in enumerate(s):\n        if c.isalpha():\n            result += c.upper() if c.islower() else c.lower()\n        else:\n            result += c\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    #first convert string to list\n    s = list(s)\n\n    #first step: go through string and convert letters to numbers\n    for i in s:\n        if i.isalpha():\n            num = ord(i)\n            s[i] = chr(num + ord('a') - ord('A'))\n\n    #second step: reverse string\n    reverse(s)\n\n    return ''.join(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = ''\n    s = list(s)\n    for i in range(len(s)):\n        if s[i] in string.ascii_letters:\n            result += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            result += s[i]\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Ways to solve this problem:\n    # 1. use a stack\n    # 2. use a queue\n    # 3. use a set\n    # 4. use an array, create a list of the alphabet and go through s\n    #    comparing each character\n    # 5. use recursion\n    # 6. use the stack principle of computer science (not sure if this is\n    #    a good idea)\n    # 7. use index numbers. Create an array and index numbers to the characters\n    #    of s and when you change the character case, change the index number\n    #    as well.\n    # 8. use a dict\n    # 9. use a class. Create a class that has a list of attributes and one method\n    #    to modify the case of the attributes\n\n    def solve(s):\n        # count the number of characters in s\n        n = len(s)\n        # create a list of the alphabet\n        alphabet = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l','m', 'n', 'o', 'p', 'q', 'r','s', 't', 'u', 'v', 'w', 'x'", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def revcase(word):\n        if word[-1].islower():\n            return word.swapcase() + word[:-1].swapcase()\n        if word[-1].isupper():\n            return word.swapcase() + word[:-1].swapcase()\n        return word\n\n    s = list(s)\n    return revcase(''.join(map(revcase, s)))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if(len(s) == 0):\n        return s[::-1]\n    else:\n        if(isalpha(s[0])):\n            return solve(s.lower())\n        elif(isalpha(s[1])):\n            return solve(s.upper())\n        else:\n            return solve(s[1:]) + s[0][::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            result += str.upper(c)\n        else:\n            result += c\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    stack = []\n    # pass the empty string to the function\n    if not s:\n        return s\n    for i, char in enumerate(s):\n        if char.isalpha():\n            stack.append(char.upper())\n            stack.append(char.lower())\n        else:\n            stack.append(char)\n    return \"\".join(stack)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s: return s[::-1]\n    # \u5224\u65ad\u662f\u5426\u662f\u5b57\u6bcd\n    for c in s:\n        if c.isalpha():\n            return s[::-1]\n    else:\n        # \u4e0d\u5b58\u5728\u5b57\u6bcd\uff0c\u6240\u4ee5\u76f4\u63a5\u5012\u5e8f\n        return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s.isalpha():\n        return s.swapcase()\n    else:\n        return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = []\n    for i in s:\n        if i.isalpha():\n            res.append(i.lower() if i.islower() else i.upper())\n        else:\n            res.append(i)\n    return ''.join(res)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    if s.isalpha():\n        i = 0\n        while i < len(s):\n            if s[i].isalpha():\n                s = s.swapcase(i)\n            else:\n                s = s[:i] + s[i+1:]\n            i += 1\n        return s\n    else:\n        return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    res = \"\"\n    for i in range(0,n):\n        if s[i].isalpha():\n            res += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            res += s[i]\n    return res\n\nsolutions = [solve(s) for s in input().split()]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n    for i, c in enumerate(s):\n        if c.isalpha():\n            s = s.replace(c, c.upper() if c.islower() else c.lower())\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    letters = []\n    for i in range(len(s)):\n        if s[i] in LETTERS:\n            if s[i].islower():\n                letters.append(s[i].upper())\n            else:\n                letters.append(s[i].lower())\n        else:\n            letters.append(s[i])\n    if len(letters) > 0:\n        return ''.join(letters)\n    else:\n        return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    n = len(s)\n    rev = \"\"\n    for i in range(n):\n        if s[i].isalpha():\n            if s[i].islower():\n                rev += s[i].upper()\n            else:\n                rev += s[i].lower()\n        else:\n            rev += s[i]\n    rev = rev[::-1]\n    if not rev.isalpha():\n        rev = rev[::-1]\n    return rev\n\ns = solve(raw_input())", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == '':\n        return ''\n    if len(s) <= 1:\n        return s\n    i = 0\n    while i < len(s):\n        if s[i].isalpha():\n            tmp = s[i]\n            s[i] = s[i].upper()\n            s[i + 1] = s[i + 1].lower()\n            s[i + 1] = tmp\n            i += 1\n        i += 1\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def swap(s, i, j):\n        return s[:i] + s[j:] + s[i:j]\n\n    def rev(s):\n        l = len(s)\n        return s[l - 1: l - 2: -1]\n\n    def solve_inner(s, i):\n        if s[i].isalpha():\n            return solve_inner(swap(s, i, i), i + 1)\n        else:\n            return rev(solve_inner(s, i + 1))\n\n    return solve_inner(s, 0)\n\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    l = 0\n    for i in range(n):\n        if s[i].isalpha():\n            if l % 2 == 0:\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n            l += 1\n    return s[::-1] if l == 0 else solve(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # implement your code here\n    def solve(s):\n        ans = \"\"\n        for i in range(len(s)):\n            if s[i].isalpha():\n                ans += s[i].swapcase()\n            else:\n                ans += s[i]\n        return ans\n\n    return solve(s)\n\n\ns = input(\"please input the string\")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = str(s)\n    n = len(s)\n    for i in range(n):\n        if s[i].isalpha():\n            tmp = s[i]\n            s[i] = s[i].lower()\n            s[(n - i) - 1] = tmp.upper()\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    import re\n    import string\n    try:\n        if not re.match(r'[^A-Za-z]', s):\n            return \"\".join(reversed(s))\n        else:\n            for i in range(len(s)):\n                if s[i] in string.ascii_letters:\n                    if s[i].islower():\n                        s[i] = s[i].upper()\n                    else:\n                        s[i] = s[i].lower()\n\n            return \"\".join(reversed(s))\n\n    except:\n        return \"\".join(reversed(s))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s = s.lower()\n    if not s.isalpha():\n        return s[::-1]\n    # \u5224\u65ads\u662f\u5426\u9996\u5c3e\u90fd\u662f\u6570\u5b57\uff0c\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fdb\u884c\u8f6c\u6362\n    if s[0].isalpha() or s[-1].isalpha():\n        s = s[:1] + s[-1] + s[1:-1]\n    # \u5bf9\u6bcf\u4e2a\u5b57\u6bcd\u8fdb\u884c\u5904\u7406\uff0c\u5c06s\u53d8\u6362\u4e3as\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s = s[:i] + s[i].upper() + s[i+1:]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def my_reverse(s):\n        \"\"\"return reversed string but only if it contains letters\"\"\"\n        if len(s) <= 0 or s[-1] not in string.ascii_letters:\n            return s[::-1]\n        #TODO: Make sure every letter is reversed\n        # else:\n        #     return s[::-1] + my_reverse(s[1:-1])\n        return s[::-1] + my_reverse(s[1:])\n\n    return my_reverse(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s[::-1]\n    for i in range(len(s)):\n        if s[i].isalpha():\n            s[i] = s[i].upper()\n            s = s[:i] + s[i+1:]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    n = len(s)\n    result = \"\"\n    for i in range(n):\n        if s[i].isalpha():\n            result += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            result += s[i]\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            if char.islower():\n                result += char.upper()\n            else:\n                result += char.lower()\n        else:\n            result += char\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # python3 str.islower() or str.isupper()\n    import re\n    from collections import Counter\n    ans = \"\"\n    # find the letters\n    letters = set([i for i, j in Counter(s).items() if j > 1])\n    # reverse the letters\n    letters = list(letters)\n    letters.reverse()\n    for i in letters:\n        if s[i].islower():\n            ans += s[i].upper()\n        elif s[i].isupper():\n            ans += s[i].lower()\n    if not letters:\n        ans = s[::-1]\n    return ans", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s\n    temp = ''\n    for ch in s:\n        if ch.isalpha():\n            if temp and temp[-1].isalpha():\n                temp = temp[:-1] + ch.upper()\n                #temp = temp + ch.upper()\n            else:\n                temp = temp + ch.upper()\n        else:\n            temp = temp + ch\n    return temp", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def reverse_letter(s):\n        str = \"\"\n        for i in range(len(s)):\n            if s[i].isalpha():\n                str += s[i].upper()\n            else:\n                str += s[i]\n        return str\n    def reverse_nonletter(s):\n        str = \"\"\n        for i in range(len(s)):\n            if s[i].isalpha():\n                str += s[i].lower()\n            else:\n                str += s[i]\n        return str\n    if len(s) <= 0:\n        return reverse_nonletter(s)\n    elif s[0].isalpha():\n        return reverse_letter(s[1:]) + s[0]\n    else:\n        return reverse_nonletter(s[1:]) + s[0]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    s=str(s)\n    res=\"\"\n    if any(c.isalpha() for c in s):\n        for i,c in enumerate(s):\n            if c.isalpha():\n                res+=c.swapcase() if c.islower() else c.swapcase().swapcase()\n            else:\n                res+=s[(i+1)%len(s)]\n    else:\n        for i,c in enumerate(s):\n            if i>0:\n                res+=s[(i+1)%len(s)]\n            else:\n                res+=s[i]\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    temp = list()\n    for i in range(len(s)):\n        if s[i].isalpha():\n            temp.append(s[i].upper())\n            temp.append(s[i].lower())\n        else:\n            temp.append(s[i])\n    return \"\".join(temp)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def reverseCase(word):\n        result = []\n        for char in word:\n            if char.isupper():\n                char = char.lower()\n            else:\n                char = char.upper()\n            result.append(char)\n        return ''.join(result)\n\n    def reverse(word):\n        result = []\n        for char in word:\n            result.append(char)\n        return ''.join(reversed(result))\n\n    if not s or not s.isalpha():\n        return reverse(s)\n    else:\n        return reverseCase(s)\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s or s.isspace():\n        return s.lower()\n    result = \"\"\n    for char in s:\n        if char.isalpha():\n            result += char.swapcase()\n        else:\n            result += char\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result=\"\"\n    for c in s:\n        if c in string.ascii_letters:\n            result+=reverse_case(c)\n        else:\n            result+=c\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def change(s):\n        for i, c in enumerate(s):\n            if c in string.ascii_letters:\n                return s[:i] + c.upper() + s[i+1:]\n        return s[:-1] + s[-1].upper()\n    \n    if s:\n        if s[0] in string.ascii_letters:\n            return change(s)\n        return change(s[::-1])\n    else:\n        return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    len_s = len(s)\n    if (len_s == 0):\n        return s\n    elif (s[0] in ['A','a','B','b']):\n        return s.lower()\n    elif (s[0] not in ['A','a','B','b']):\n        return s\n    for i in range(len_s):\n        if (s[i] not in ['A','a','B','b']):\n            continue\n        else:\n            if (s[i].lower() == s[i]):\n                s = s[:i] + s[i].upper() + s[i+1:]\n            else:\n                s = s[:i] + s[i].lower() + s[i+1:]\n    return s", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    res = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            res += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            res += s[i]\n    res = res[::-1]\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s\n    result = \"\"\n    for i, c in enumerate(s):\n        if c.isalpha():\n            c = c.upper() if c.islower() else c.lower()\n        result += c\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def rev(str, i, j):\n        return str[j:i] + str[i] + str[i+1:j]\n\n    def find_letter(str, i):\n        # find the next letter in the string\n        for j in range(i+1, len(str)):\n            if str[j].isalpha():\n                return j\n        return -1\n\n    # get the length of the string\n    len_str = len(s)\n\n    # if the length is zero, we can return a reversed string\n    if len_str == 0:\n        return s[::-1]\n\n    # find the first letter\n    first_letter = find_letter(s, 0)\n\n    # find the last letter\n    last_letter = find_letter(s, len_str-1)\n\n    # if the first letter is the same as the last letter, reverse the string\n    # otherwise, reverse the case\n    if first_letter == last_letter:\n        return s[::-1]\n    else:\n        return rev(s, 0, len(s)-1)[::-1]\n</s>", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s or not isinstance(s, str):\n        return s\n\n    result = \"\"\n    if s:\n        for i, char in enumerate(s):\n            if char.isalpha():\n                result += chr(ord(char) + (ord('a') - ord('A')) if char.islower() else (ord('A') - ord('a')))\n            else:\n                result += char\n    return result[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    if not s:\n        return s[::-1]\n\n    flag = 0\n    result = \"\"\n    for i in range(len(s)):\n        if flag:\n            if s[i].isalpha():\n                result += s[i].swapcase() # case change\n            else:\n                result += s[i]\n        else:\n            if s[i].isalpha():\n                flag = 1\n                result += s[i].swapcase() # case change\n            else:\n                result += s[i]\n\n    return result\n\ns = solve(raw_input())", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def find_letter(s):\n        for i, letter in enumerate(s):\n            if letter.isalpha():\n                return i\n        return -1\n    \n    if s == \"\":\n        return s[::-1]\n    l_index = find_letter(s)\n    if l_index == -1:\n        return s[::-1]\n    if s[l_index].islower():\n        return s[l_index+1::-1]+s[l_index+1::-1]\n    else:\n        return s[l_index+1::-1]+s[l_index::-1]\n\nsolve(\"1234\")\nsolve(\"ab\")\nsolve(\"#a@C\")\nsolve(\"abc\")\nsolve(\"aBc\")\nsolve(\"axc\")\nsolve(\"axBC\")\nsolve(\"aXc\")\nsolve(\"aXBC\")\nsolve(\"Axc\")\nsolve(\"AxBC\")\nsolve(\"aXcx\")\nsolve(\"aXBCX\")\nsolve(\"AXcx\")\nsolve(\"AXBCX\")\nsolve(\"abcx\")\nsolve(\"ABCx\")\nsolve(\"AbCx\")\nsolve(\"aBcx\")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def reverse_case(i, s):\n        if s[i].isalpha():\n            return s[i].upper() if s[i].islower() else s[i].lower()\n        return s[i]\n\n    res = \"\"\n    for i in range(len(s)):\n        res += reverse_case(i, s)\n    return res", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Given a string, transform its case.\n    # if string is alphabetical, convert the letters to uppercase or lowercase, otherwise, just return it\n    def transform(s):\n        i = 0\n        while i < len(s):\n            if s[i].isalpha():\n                if s[i].islower():\n                    s = s[:i] + s[i].upper() + s[i+1:]\n                else:\n                    s = s[:i] + s[i].lower() + s[i+1:]\n            else:\n                s = s[:i] + s[i] + s[i+1:]\n            i += 1\n        return s\n    # Reverse a string\n    def rev(s):\n        i = 0\n        j = len(s) - 1\n        while i < j:\n            s = s[:i] + s[j] + s[i+1:j]\n            i += 1\n            j -= 1\n        return s\n    # Apply the function on the string\n    return transform(rev(s))", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if s == \"\":\n        return \"\"\n    if len(s) == 0:\n        return \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            if s[i].islower():\n                s[i] = s[i].upper()\n            else:\n                s[i] = s[i].lower()\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    # Remember to use the given docstring and write docstrings\n    # for your own functions\n\n    if not s:\n        return \"\"\n\n    # Return immediately if the string is empty\n    if not s[0].isalpha():\n        return s[::-1]\n    # Convert each letter in the string to uppercase\n    # except for the first letter\n    return \"\".join([c.upper() if i!= 0 else c for i, c in enumerate(s)])", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def isLetter(ch):\n        try:\n            ch = ord(ch)\n            return ch >= ord(\"a\") and ch <= ord(\"z\") or ch >= ord(\"A\") and ch <= ord(\"Z\")\n        except TypeError:\n            return False\n\n    def reverse(s):\n        if len(s) < 2:\n            return s\n        return s[::-1]\n\n    def isLetters(s):\n        for ch in s:\n            if isLetter(ch):\n                return True\n        return False\n\n    def solve0(s):\n        if isLetters(s):\n            return reverse(s[::-1])\n        return s[::-1]\n\n    def solve1(s):\n        if isLetters(s):\n            return s\n        return reverse(s)\n\n    def solve2(s):\n        if isLetters(s):\n            return reverse(s)\n        return s[::-1]\n\n    def solve3(s):\n        if isLetters(s):\n            return s[::-1]\n        return reverse(s)\n\n    def solve4(s):\n        if isLetters(s):\n            return s[::-1]\n        return reverse(s)\n\n    def solve5(s):\n        if isLetters", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def case2str(s):\n        return s.upper() if s.islower() else s.lower()\n\n    if not s: return s\n    if not s.isalpha():\n        return s[::-1]\n\n    c = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n            c.append(case2str(s[i]))\n        else:\n            c.append(s[i])\n\n    return ''.join(c)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    index = 0\n    newString = \"\"\n    while index < len(s):\n        if s[index] in string.ascii_letters:\n            # print(s[index])\n            index += 1\n            while index < len(s):\n                newString += s[index]\n                index += 1\n        else:\n            newString += s[index]\n        index += 1\n    return newString", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def recurse(s, i, result):\n        if i >= len(s):\n            result.append(s)\n            return\n        elif s[i].isalpha():\n            result.append(s[::-1])\n            recurse(s, i + 1, result)\n        else:\n            result.append(s[i])\n    result = []\n    recurse(s, 0, result)\n    return ''.join(result)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            result += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            result += s[i]\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def checkLetter(s):\n        for i in range(len(s)):\n            if s[i].isalpha():\n                return True\n        return False\n\n    def reverseLetter(s):\n        if checkLetter(s):\n            for i in range(len(s)):\n                if s[i].isupper():\n                    s[i] = s[i].lower()\n                elif s[i].islower():\n                    s[i] = s[i].upper()\n\n    def reverse(s):\n        n = len(s)\n        if n > 1:\n            s[n - 1], s[0] = s[0], s[n - 1]\n        return s\n\n    if not s:\n        return reverse(s)\n    return reverseLetter(s) if checkLetter(s) else reverse(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    string = \"\"\n    for i in range(0, len(s)):\n        if s[i].isalpha():\n            string += s[i].lower() + s[i].upper()\n        else:\n            string += s[i]\n    return string[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def is_letter(char):\n        if char >= 'a' and char <= 'z':\n            return True\n        if char >= 'A' and char <= 'Z':\n            return True\n        return False\n    def is_alpha(char):\n        if char >= 'A' and char <= 'Z':\n            return True\n        if char >= 'a' and char <= 'z':\n            return True\n        return False\n    if s == '':\n        return s[::-1]\n    for i in range(0, len(s)):\n        if is_letter(s[i]):\n            s = s[:i] + s[i].upper() + s[i+1:]\n        if is_alpha(s[i]):\n            s = s[:i] + s[i].lower() + s[i+1:]\n    return s[::-1]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    def check(s):\n        if s.isalpha():\n            return s.lower()\n        elif s.isupper():\n            return s.upper()\n        else:\n            return s.lower()\n\n    ans = \"\"\n    for i in range(len(s)):\n        if s[i] == \"#\":\n            ans += check(s[(i-1):])\n            s = s[:(i-1)]\n    if len(s) > 0:\n        ans += check(s)\n    return ans", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = ''\n    for i in range(len(s)):\n        if s[i] in string.ascii_letters:\n            result += s[i].swapcase()\n        else:\n            result += s[i]\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    print(s)\n    for i in range(len(s)):\n        if s[i] in string.ascii_lowercase:\n            s[i] = chr(ord(s[i]) + 32)\n        elif s[i] in string.ascii_uppercase:\n            s[i] = chr(ord(s[i]) - 32)\n        else:\n            pass\n    return s[::-1]\n\ns = input(\"Enter the string: \")\ns = solve(s)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return s\n    if all(c.isalpha() for c in s):\n        for i in range(len(s)):\n            if s[i].isalpha():\n                return s[:i] + s[i].upper() + s[i+1:]\n    return s[::-1]\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if len(s) == 0:\n        return s\n    result = \"\"\n    for c in s:\n        if c.isalpha():\n            result += c.lower() if c.isupper() else c.upper()\n        else:\n            result += c\n    return result", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    if not s:\n        return s\n    elif s[0] in 'aAeEiIoOuU':\n        return s[0] + solve(s[1:]).lower()\n    elif s[0] in 'bcdfghjklmnpqrstvwxyz':\n        return s[0] + solve(s[1:]).upper()\n    else:\n        return solve(s[1:]) + s[0]", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    import re\n    def isletter(c):\n        return re.match(\"[a-z]\", c) is not None\n    def isletter_reverse(c):\n        return re.match(\"[A-Z]\", c) is not None\n    if s[0].isupper():\n        return s.upper()\n    else:\n        return s.lower()\n    return \"\".join([isletter(c) and c.upper() or c.lower() for c in s])\n    \ns = input(\"Input string: \")", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    result = []\n    current = \"\"\n    for i in range(len(s)):\n        if s[i].isalpha():\n            current += s[i].upper() if s[i].islower() else s[i].lower()\n        else:\n            result.append(current)\n            current = \"\"\n    result.append(current)\n    return \"\".join(result)\n\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    if not s:\n        return ''\n    if s[0] in 'abcdefghijklmnopqrstuvwxyz':\n        return s[0] + solve(s[1:].upper())\n    if s[0] in '#@':\n        return solve(s[1:].upper()) + s[0]\n    return solve(s[1:].upper()) + s[0].lower() + solve(s[:-1].upper())\n\ns = input()", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    l = []\n    for i in range(len(s)):\n        if s[i].isalpha():\n            l.append(s[i].upper())\n            l.append(s[i].lower())\n        else:\n            l.append(s[i])\n    l.reverse()\n    return ''.join(l)", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n\n    def isLetter(c):\n        \"\"\"\n        :type c: str\n        :rtype: bool\n        \"\"\"\n        if c in \"abcdefghijklmnopqrstuvwxyz\":\n            return True\n        else:\n            return False\n\n    def result(s):\n        \"\"\"\n        :type s: str\n        :rtype: str\n        \"\"\"\n        if s[0].islower():\n            result = \"\".join(reversed(s))\n        elif s[0].isupper():\n            result = \"\".join(s.lower())\n        else:\n            result = \"\".join(s)\n        return result\n\n    return result(\"\".join(c if isLetter(c) else c.lower() for c in s))\n\ntest_cases = [\"1234\", \"ab\", \"#a@C\"]\nfor test in test_cases:\n    assert solve(test) == test\n</s>", "def solve(s):\n    \"\"\"You are given a string s.\n    if s[i] is a letter, reverse its case from lower to upper or vise versa, \n    otherwise keep it as it is.\n    If the string contains no letters, reverse the string.\n    The function should return the resulted string.\n    Examples\n    solve(\"1234\") = \"4321\"\n    solve(\"ab\") = \"AB\"\n    solve(\"#a@C\") = \"#A@c\"\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            s[i] = s[i].lower()\n        elif s[i].islower():\n            s[i] = s[i].upper()\n        elif s[i].isdigit():\n            count += 1\n    if count == 0:\n        return s[::-1]\n    else:\n        s = \"\"\n        for i in range(len(s)):\n            if s[i].isdigit():\n                s[i] = s[i].lower()\n            else:\n                s[i] = s[i].upper()\n    return s[::-1]"]]