[["def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of the number.\n        \"\"\"\n        count = 0\n        while num!= 0:\n            num, rem = divmod(num, 2)\n            count += 1\n        return count\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort the array based on the number of ones in the binary representation.\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort the array based on the decimal value of the number.\n        \"\"\"\n        return num\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort the array based on the number of ones in the binary representation\n        and the decimal value of the number.\n        \"\"\"\n        return count_ones(num), num\n\n    return sorted(arr, key=sort_by_both)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string\n        :param num: number to convert\n        :return: binary string\n        \"\"\"\n        return bin(num)[2:].zfill(len(bin(num)) - 2)\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string\n        :param num: number to convert\n        :return: number of ones\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort(arr):\n        \"\"\"\n        Sort array based on number of ones in binary representation\n        :param arr: array to sort\n        :return: sorted array\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x), reverse=True)\n\n    def sort_decimal(arr):\n        \"\"\"\n        Sort array based on decimal value\n        :param arr: array to sort\n        :return: sorted array\n        \"\"\"\n        return sorted(arr, key=lambda x: int(x), reverse=True)\n\n    return sort(arr) if arr[0] > 0 else sort_decimal(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(0)\n        '0'\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in a binary representation.\n        >>> count_ones(0)\n        0\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '10'\n        >>> binary(5)\n        '101'\n        >>> binary(10)\n        '1100'\n        >>> binary(100)\n        '110000'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(10)\n        3\n        >>> count_ones(100)\n        5\n        \"\"\"\n        return len(binary(num)[1:])\n\n    def sort(arr):\n        \"\"\"\n        Sort the array.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n        arr.sort(key=lambda x: x, reverse=False)\n\n    return sort", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        return bin(num)[2:].zfill(8)\n\n    def count_ones(num):\n        return sum(1 for _ in num)\n\n    def sort_by_ones(num):\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        return int(num)\n\n    def sort_by_both(num):\n        return sort_by_ones(num), sort_by_decimal(num)\n\n    return sorted(arr, key=sort_by_both)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        :param n: Integer\n        :return: Binary string\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        :param n: Integer\n        :return: Number of ones\n        \"\"\"\n        return len([x for x in binary(n) if x == '1'])\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        :param arr: Array\n        :return: Sorted array\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in their binary representation.\n        \"\"\"\n        return count_ones(a) - count_ones(b)\n\n    def compare_decimal(a, b):\n        \"\"\"\n        Compare two numbers based on their decimal representation.\n        \"\"\"\n        return int(str(a)[2:]) - int(str(b)[2:])\n\n    return sorted(arr, key=lambda x: (count_ones(x), compare(x, 0)), reverse=True)</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        3\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort(nums):\n        \"\"\"\n        Sort the given list of numbers.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        \"\"\"\n        return sorted(nums, key=lambda num: count_ones(num), reverse=True)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of the number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort the numbers based on the number of ones in their binary representation.\n        \"\"\"\n        return num, count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort the numbers based on the decimal value.\n        \"\"\"\n        return num, int(num)\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort the numbers based on both the number of ones in their binary representation\n        and the decimal value.\n        \"\"\"\n        return num, count_ones(num), int(num)\n\n    def sort_array_helper(arr):\n        \"\"\"\n        Helper function to sort the array.\n        \"\"\"\n        arr.sort(key=sort_by_ones)\n        arr.sort(key=sort_by_decimal)\n        arr.sort(key=sort_by_both)\n\n    return sort_array_helper(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort numbers based on number of ones in their binary representation\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort numbers based on decimal value\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in their binary representation.\n        \"\"\"\n        return count_ones(a) - count_ones(b)\n\n    def compare_dec(a, b):\n        \"\"\"\n        Compare two numbers based on their decimal representation.\n        \"\"\"\n        return int(a) - int(b)\n\n    return sorted(arr, key=lambda x: (count_ones(x), compare(x, 0)) or compare_dec(x, 0))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        \"\"\"\n        return sum(1 for i in binary(num) if i == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort an array of numbers according to number of ones in their binary\n        representation in ascending order.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones('01')\n        1\n        >>> count_ones('10')\n        2\n        >>> count_ones('11')\n        3\n        >>> count_ones('100')\n        4\n        >>> count_ones('101')\n        4\n        >>> count_ones('110')\n        4\n        >>> count_ones('11", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string\n        >>> binary(1)\n        '1'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        >>> binary(-6)\n        '111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        1\n        >>> count_ones(-6)\n        3\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort by number of ones in binary string\n        >>> sort_by_ones(1)\n        1\n        >>> sort_by_ones(5)\n        5\n        >>> sort_by_ones(-2)\n        -2\n        >>> sort_by_ones(-6)\n        -6\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort by decimal value\n        >>> sort_by_decimal(1)\n        1\n        >>> sort_by_decimal(5)\n        5\n        >>> sort_by_decimal(-2)\n        -2\n        >>> sort_by_decimal(-6)\n        -6\n        \"\"\"", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        4\n        >>> count_ones(12)\n        4\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        5\n        >>> count_ones(15)\n        5\n        >>> count_ones(16)\n        6\n        >>> count_ones(17)\n        6\n        >>> count_ones(18)\n        6\n        >>> count_ones(19)\n        7\n        >>> count_ones(20)\n        7\n        >>> count_ones(21)\n        7\n        >>> count_ones(22)\n        8\n        >>> count_ones(23)\n        8\n        >>> count_ones(24)\n        8\n        >>> count_ones(25)\n        9", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        return bin(num)[2:]\n\n    def count_ones(num):\n        return int(binary(num)[:-1])\n\n    def sort_by_count_ones(nums):\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        return sorted(nums, key=lambda num: int(binary(num)[:-1]))\n\n    def sort_by_both(nums):\n        return sorted(nums, key=lambda num: (count_ones(num), int(binary(num)[:-1])))\n\n    return sort_by_count_ones(arr) if len(arr) > 0 else sort_by_decimal(arr) if len(arr) > 0 else sort_by_both(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string.\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        >>> count_ones(8)\n        7\n        >>> count_ones(9", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(n)[2:].zfill(len(bin(n)))\n\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for i in binary(n) if i == '1')\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array based on number of ones in the binary representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array based on decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(x))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(-1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        4\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        5\n        >>> count_ones(9)\n        5\n        >>> count_ones(10)\n        6\n        >>> count_ones(11)\n        6\n        >>> count_ones(12)\n        7\n        >>> count_ones(13)\n        7\n        >>> count_ones(14)\n        8\n        >>> count_ones(15)\n        8\n        >>> count_ones(16)\n        9\n        >>> count_ones(17)\n        9\n        >>> count_ones(18)\n        10\n        >>> count_ones(19)\n        10\n        >>> count_ones(20)\n        11\n        >>> count_ones(21)\n        11\n        >>> count_ones(22)\n        12\n        >>> count_ones(23)\n        12\n        >>> count_ones(24)\n        13", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        \"\"\"\n        return bin(n)[2:]\n\n    def ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        >>> ones(1)\n        1\n        >>> ones(2)\n        1\n        >>> ones(3)\n        2\n        >>> ones(4)\n        3\n        \"\"\"\n        return len(binary(n)[::-1])\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        \"\"\"\n        return sorted(arr, key=lambda x: ones(x), reverse=True)\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)\n\n    def ones(num):\n        \"\"\"\n        Count number of ones in a binary number.\n        \"\"\"\n        return sum(num == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort the array.\n        \"\"\"\n        arr.sort(key=lambda x: ones(binary(x)), reverse=True)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '10'\n        >>> binary(2)\n        '11'\n        >>> binary(3)\n        '111'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '1110'\n        >>> binary(8)\n        '1010'\n        >>> binary(9)\n        '1011'\n        >>> binary(10)\n        '1001'\n        >>> binary(11)\n        '10010'\n        >>> binary(12)\n        '10011'\n        >>> binary(13)\n        '10100'\n        >>> binary(14)\n        '10101'\n        >>> binary(15)\n        '10110'\n        >>> binary(16)\n        '10111'\n        >>> binary(17)\n        '11000'\n        >>> binary(18)\n        '11001'\n        >>> binary(19)\n        '11010'\n        >>> binary(20)\n        '11100'\n        >>> binary(21)\n        '11101'\n        >>> binary(22)\n        '11110'\n        >>> binary(23)\n        '11111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        4\n        >>> count_ones(12)\n        4\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        5\n        >>> count_ones(15)\n        5\n        >>> count_ones(16)\n        6\n        >>> count_ones(17)\n        6\n        >>> count_ones(18)\n        6\n        >>> count_ones(19)\n        7\n        >>> count_ones(20)\n        7\n        >>> count_ones(21)\n        7\n        >>> count_ones(22)\n        8\n        >>> count_ones(23)\n        8\n        >>> count_ones(24)\n        8\n        >>> count_ones(25)\n        9\n        >>> count_ones(26)\n        9", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        1\n        >>> count_ones(6)\n        2\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary\n        representation in ascending order.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4]) == [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort an array of numbers based on decimal", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        This function counts the number of ones in the binary representation of a\n        number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        This function sorts the array of numbers based on the number of ones in\n        their binary representation.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        This function sorts the array of numbers based on their decimal value.\n        \"\"\"\n        arr.sort(key=lambda x: int(str(x)[2:]), reverse=True)\n\n    if len(arr) == 0:\n        return []\n    if len(arr) == 1:\n        return arr\n    if len(arr) == 2:\n        if arr[0] == arr[1]:\n            return arr\n        else:\n            return [arr[0], arr[1]]\n\n    if arr[0] == arr[1]:\n        return [arr[0], arr[1]]\n\n    if arr[0] > arr[1]:\n        return sort_by_ones([arr[1], arr[0]])\n    else:\n        return sort_by_decimal([arr[1], arr[0]])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort an array of numbers according to the number of ones in their binary\n        representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort an array of numbers according", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        1\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        1\n        >>> count_ones(8)\n        2\n        >>> count_ones(9)\n        1\n        >>> count_ones(10)\n        2\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on the number of ones in their binary representation.\n        >>> compare(1, 5)\n        -1\n        >>> compare(5, 1)\n        1\n        >>> compare(2, 3)\n        -1\n        >>> compare(3, 2)\n        1\n        >>> compare(4, 5)\n        -1\n        >>> compare(5, 4)\n        1\n        >>> compare(6, 7)\n        -1\n        >>> compare(7, 6)\n        1\n        >>> compare(8, 9)\n        -1\n        >>> compare(9, 8)\n        1", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(num == '1')\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers\n        \"\"\"\n        if count_ones(a) == count_ones(b):\n            return cmp(binary(a), binary(b))\n        else:\n            return cmp(count_ones(a), count_ones(b))\n\n    return sorted(arr, cmp=compare)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the array of numbers based on the decimal value of their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(bin(num)[2:], 2))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of integer n.\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array arr based on number of ones in binary representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array arr based on decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:], 2))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the list of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the list of numbers based on the decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array based on the number of ones in the binary representation.\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array based on the decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]), reverse=True)\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        3\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to the number of ones in the binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n\n        \"\"\"\n        return sum(1 for _ in bin(n))\n\n    def count_zeros(n):\n        \"\"\"\n        Count number of zeros in binary representation of n\n        \"\"\"\n        return len(bin(n)) - count_ones(n)\n\n    def sort_by_ones(a):\n        \"\"\"\n        Sort array a based on number of ones in binary representation\n        \"\"\"\n        return sorted(a, key=count_ones)\n\n    def sort_by_zeros(a):\n        \"\"\"\n        Sort array a based on number of zeros in binary representation\n        \"\"\"\n        return sorted(a, key=count_zeros)\n\n    def sort_by_decimal(a):\n        \"\"\"\n        Sort array a based on decimal value\n        \"\"\"\n        return sorted(a, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_zeros(sort_by_decimal(arr)))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in binary(num) if _ == '1')\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(num))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_count(nums):\n        \"\"\"\n        Sort the numbers in the array according to the number of ones in their\n        binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the numbers in the array according to their decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_count(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        >>> count_ones(8)\n        7", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        6\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        7\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        8\n        >>> count_ones(18)\n        8\n        >>> count_ones(19)\n        9\n        >>> count_ones(20)\n        9\n        >>> count_ones(21)\n        10\n        >>> count_ones(22)\n        10\n        >>> count_ones(23)\n        11\n        >>> count_ones(24)\n        11\n        >>> count_ones(25)\n        12", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4]) == [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of numbers based on decimal value.\n        >>> sort_by_decimal([1,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        >>> binary(1)\n        '1'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        1\n        \"\"\"\n        return len(binary(n)[1:])\n\n    def sort(arr):\n        \"\"\"\n        Sort array based on number of ones in binary representation\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x))\n        return arr\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '10'\n        >>> binary(2)\n        '11'\n        >>> binary(3)\n        '100'\n        >>> binary(4)\n        '101'\n        >>> binary(5)\n        '111'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '1110'\n        >>> binary(8)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort(arr):\n        \"\"\"\n        Sort the array.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6])", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array by number of ones in binary representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array by decimal value.\n        \"\"\"\n        return sorted(arr, key=int)\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort(arr):\n        \"\"\"\n        Sort an array of non-negative integers according to number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        return bin(num)[2:]\n\n    def count_ones(num):\n        return sum(1 for _ in binary(num))\n\n    def sort_by_ones(num):\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        return int(num)\n\n    return sorted(arr, key=sort_by_ones) if len(arr) > 0 else []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(map(int, arr))\n    arr.sort(key=lambda x: sum(int(x) == 1 for x in bin(x)))\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        \"\"\"\n        return bin(n)[2:].zfill(len(bin(n)) - 2)\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(1 for _ in binary(n) if _ == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n        arr.sort(key=lambda x: int(binary(x)[::-1]), reverse=True)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        This function counts the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        6\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        7\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        8\n        >>> count_ones(18)\n        9\n        >>> count_ones(19)\n        9\n        >>> count_ones(20)\n        10\n        >>> count_ones(21)\n        10\n        >>> count_ones(22)\n        11\n        >>> count_ones(23)\n        11\n        >>> count_ones(24)\n        12\n        >>> count_ones(25)\n        12\n        >>> count_ones", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        5\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        6\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        7\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        8\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        9\n        >>> count_ones(18)\n        9\n        >>> count_ones(19)\n        10\n        >>> count_ones(20)\n        10\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort the array based on number of ones in the binary representation.\n        >>> sort_by_ones(1)\n        1\n        >>> sort_by", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Returns the binary representation of n.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Returns the number of ones in the binary representation of n.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort(arr):\n        \"\"\"\n        Sorts the array according to the number of ones in their binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of numbers according to number of ones in their binary\n        representation in ascending order.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of numbers according to their decimal value.\n        \"\"\"\n        arr.sort(key=lambda x: int(str(x)[2:]), reverse=True)\n\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return sort_by_decimal(arr[1:])\n    return sort_by_ones(arr[1:]) + [arr[0]]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '10'\n        >>> binary(2)\n        '11'\n        >>> binary(3)\n        '100'\n        >>> binary(4)\n        '101'\n        >>> binary(5)\n        '111'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '1110'\n        >>> binary(8)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> ones(1)\n        1\n        >>> ones(2)\n        1\n        >>> ones(3)\n        2\n        >>> ones(4)\n        2\n        >>> ones(5)\n        3\n        >>> ones(6)\n        3\n        >>> ones(7)\n        4\n        >>> ones(8)\n        4\n        \"\"\"\n        return len(binary(num)[1:])\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to number of ones in binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        :param num:\n        :return:\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation\n        :param nums:\n        :return:\n        \"\"\"\n        return sorted(nums, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers based on decimal value\n        :param nums:\n        :return:\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        \"\"\"\n        return int(binary(num)[::-1].count('1'))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(binary(x)[::-1]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for i in binary(num) if i == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to number of ones in binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num // 2\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array based on number of ones in binary representation.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array based on decimal value.\n        \"\"\"\n        arr.sort(key=lambda x: int(str(x)[2:]), reverse=True)\n\n    if len(arr) == 0:\n        return arr\n    if len(arr) == 1:\n        return arr\n    if arr[0] == 0:\n        return arr\n    if arr[0] == 1:\n        return sort_by_ones(arr)\n    return sort_by_decimal(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(-2)\n        2\n        \"\"\"\n        return sum(1 for _ in binary(num) if _ == '1')\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        >>> sort_by_ones(1)\n        0\n        >>> sort_by_ones(5)\n        1\n        >>> sort_by_ones(-2)\n        2\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort an array of numbers based on their decimal value.\n        >>> sort_by_decimal(1)\n        0\n        >>> sort_by_decimal(5)\n        1\n        >>> sort_by_decimal(-2)\n        2\n        \"\"\"\n        return int(num)\n\n    def sort(num):\n        \"\"\"\n        Sort an array", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the numbers in the array by number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6])\n        [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(nums, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the numbers in the array by their decimal representation.\n        >>> sort_by_decimal([1, 0, 2, 3, 4])\n        [0", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(0)\n        '0'\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(0)\n        0\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to number of ones in binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        \"\"\"\n        ones = 0\n        while num:\n            num, rem = divmod(num, 2)\n            ones += rem\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of numbers based on number of ones in binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(arr, key=lambda num: count_ones(num))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of numbers based on decimal value.\n        >>> sort_by_decimal([1, 5, 2, 3, 4]) == [0, 1,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(arr)\n    arr.sort(key=lambda x: int(''.join(str(i) for i in bin(x)[2:]), 2))\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort the numbers based on the number of ones in their binary representation.\n        \"\"\"\n        return num, count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort the numbers based on their decimal value.\n        \"\"\"\n        return num, int(str(num)[2:])\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort the numbers based on both the number of ones in their binary representation\n        and their decimal value.\n        \"\"\"\n        return num, count_ones(num), int(str(num)[2:])\n\n    arr = list(map(int, input().split()))\n    arr.sort(key=sort_by_both)\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(0)\n        ''\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(0)\n        0\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort_by_ones(a):\n        \"\"\"\n        Sort array by number of ones in binary string\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6])\n        [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(a, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(a):\n        \"\"\"\n        Sort array by decimal value\n        >>> sort_by_decimal([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_decimal(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        arr.sort(key=lambda x: int(str(x)[2:]), reverse=True)\n\n    if len(arr) == 0:\n        return arr\n\n    if all(x >= 0 for x in arr):\n        sort_by_ones(arr)\n    else:\n        sort_by_decimal(arr)\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort the numbers based on number of ones in their binary representation.\n        \"\"\"\n        return num, count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort the numbers based on decimal value.\n        \"\"\"\n        return num, num\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort the numbers based on both number of ones in their binary representation\n        and decimal value.\n        \"\"\"\n        return num, count_ones(num), num\n\n    def sort_array_helper(arr):\n        \"\"\"\n        Helper function to sort an array of numbers.\n        \"\"\"\n        return sorted(arr, key=sort_by_both)\n\n    return sort_array_helper(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary_repr(n):\n        return bin(n)[2:].zfill(8)\n\n    def count_ones(n):\n        return sum(int(x) for x in binary_repr(n))\n\n    def compare(a, b):\n        return count_ones(a) - count_ones(b)\n\n    return sorted(arr, key=compare)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            ones += num & 1\n            num >>= 1\n        return ones\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        \"\"\"\n        return sum(1 for _ in range(n))\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of non-negative integers according to number of ones in their\n        binary representation in ascending order.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of non-negative integers according to decimal value of their", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)[2:].zfill(8)\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        \"\"\"\n        return sum(num == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort the array.\n        \"\"\"\n        return sorted(arr, key=lambda num: count_ones(binary(num)))\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(0)\n        0\n        >>> binary(1)\n        1\n        >>> binary(2)\n        10\n        >>> binary(3)\n        11\n        >>> binary(4)\n        100\n        >>> binary(5)\n        101\n        >>> binary(6)\n        110\n        >>> binary(7)\n        111\n        \"\"\"\n        return bin(n)\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in a binary representation.\n        >>> count_ones(0)\n        0\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(num == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort array of numbers\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(binary(x)), reverse=True)\n        return arr\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Counts the number of ones in the binary representation of the number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        >>> count_ones(8)\n        7\n        >>> count_ones(9)\n        8\n        >>> count_ones(10)\n        9\n        >>> count_ones(11)\n        10\n        >>> count_ones(12)\n        11\n        >>> count_ones(13)\n        12\n        >>> count_ones(14)\n        13\n        >>> count_ones(15)\n        14\n        >>> count_ones(16)\n        15\n        >>> count_ones(17)\n        16\n        >>> count_ones(18)\n        17\n        >>> count_ones(19)\n        18\n        >>> count_ones(20)\n        19\n        >>> count_ones(21)\n        20\n        >>> count_ones(22)\n        21\n        >>> count_ones(23)\n        22\n        >>> count_ones(24)\n        23\n        >>> count_ones(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Returns the binary representation of the number n.\n        >>> binary(5)\n        '101'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Returns the number of ones in the binary representation of the number n.\n        >>> count_ones(5)\n        2\n        \"\"\"\n        return len(binary(n)) - len(binary(n)[::-1])\n\n    def sort(arr):\n        \"\"\"\n        Sorts the array arr.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x))\n        return arr\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        5\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        6\n        >>> count_ones(15)\n        6\n        >>> count_ones(16)\n        7\n        >>> count_ones(17)\n        7\n        >>> count_ones(18)\n        7\n        >>> count_ones(19)\n        8\n        >>> count_ones(20)\n        8\n        >>> count_ones(21)\n        8\n        >>> count_ones(22)\n        9\n        >>> count_ones(23)\n        9\n        >>> count_ones(24)\n        9\n        >>> count_ones(25)\n        10\n        >>> count_ones(26", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(map(int, arr))\n    arr.sort(key=lambda x: len(bin(x)[2:]), reverse=True)\n    arr.sort(key=lambda x: int(x), reverse=True)\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        return bin(n)[2:]\n\n    def count_ones(n):\n        return int(binary(n)[:-1])\n\n    def sort_by_count(arr):\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        return sorted(arr, key=lambda n: int(n))\n\n    def sort_by_both(arr):\n        return sort_by_count(sort_by_decimal(arr))\n\n    return sort_by_both(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        return sum(1 for _ in bin(n))\n\n    def sort_by_ones(a):\n        \"\"\"\n        Sort array a based on number of ones in binary representation of each element.\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6])\n        [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4])\n        [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(a, key=lambda n: count_ones(n))\n\n    def sort_by_decimal(a):\n        \"\"\"\n        Sort array a based on decimal value of each element.\n        >>> sort_by_decimal([1,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def sort(arr):\n        \"\"\"\n        Sort array based on number of ones in binary representation\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x), reverse=True)\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the list of numbers according to the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the list of numbers according to the decimal value of their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num), 2))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Returns the binary representation of a number.\n        >>> binary(1)\n        '10'\n        >>> binary(2)\n        '11'\n        >>> binary(3)\n        '100'\n        >>> binary(4)\n        '101'\n        >>> binary(5)\n        '111'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '1110'\n        >>> binary(8)\n        '1111'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort(arr):\n        \"\"\"\n        Sorts the array in ascending order based on number of ones in binary\n        representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort the array based on number of ones in the binary representation of\n        the number.\n        >>> sort_by_ones(1)\n        0\n        >>> sort_by_ones(2)\n        1\n        >>> sort_by_ones(3)\n        2\n        >>> sort_by_ones(4)\n        3\n        >>> sort_by_ones(5)\n        4\n        >>> sort_by_ones(6)\n        5\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort the array based on decimal value of the number.\n        >>> sort_by_decimal(1)\n        0\n        >>> sort_by_decimal(2)\n        1\n        >>> sort_by_decimal(3)\n        2", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def ones(n):\n        \"\"\"\n        Count number of ones in the binary representation of a number.\n        >>> ones(1)\n        1\n        >>> ones(5)\n        2\n        >>> ones(-2)\n        3\n        \"\"\"\n        return len(binary(n)) - len(binary(n)[::-1])\n\n    def sort(arr):\n        \"\"\"\n        Sort an array of numbers.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key=lambda n: (ones(n), n))\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of n.\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array arr based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array arr based on decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda n: n - (n >> 1))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort numbers based on number of ones in their binary representation.\n        \"\"\"\n        return num, count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort numbers based on decimal value.\n        \"\"\"\n        return num, num\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort numbers based on both number of ones in their binary representation\n        and decimal value.\n        \"\"\"\n        return num, count_ones(num), num\n\n    def sort_by_both_asc(num):\n        \"\"\"\n        Sort numbers based on both number of ones in their binary representation\n        and decimal value in ascending order.\n        \"\"\"\n        return num, count_ones(num), num\n\n    def sort_by_both_desc(num):\n        \"\"\"\n        Sort numbers based on both number of ones in their binary representation\n        and decimal value in descending order.\n        \"\"\"\n        return num, count_ones(num), num\n\n    def sort_by_both_asc_desc(num):\n        \"\"\"\n        Sort numbers based on both number of ones in their binary representation\n        and", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Returns the binary representation of a number.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        \"\"\"\n        return len(binary(num)[::-1])\n\n    def sort(nums):\n        \"\"\"\n        Sorts the given list of numbers.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(map(int, arr))\n    arr.sort(key=lambda x: int(bin(x)[2:].count('1')), reverse=True)\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        This function returns the binary representation of a number.\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        This function returns the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        This function returns the number of ones in the binary representation of a number.\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        This function returns the decimal value of a number.\n        \"\"\"\n        return int(num)\n\n    def sort(num):\n        \"\"\"\n        This function returns the number of ones in the binary representation of a number.\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        This function returns the decimal value of a number.\n        \"\"\"\n        return int(num)\n\n    def sort(num):\n        \"\"\"\n        This function returns the number of ones in the binary representation of a number.\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        This function returns the decimal value of a number.\n        \"\"\"\n        return int(num)\n\n    def sort(num)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        :param num:\n        :return:\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation\n        :param nums:\n        :return:\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value\n        :param nums:\n        :return:\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:], 2))\n\n    def sort_array(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation\n        :param nums:\n        :return:\n        \"\"\"\n        return sort_by_ones(sort_by_decimal(nums))\n\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary\n        representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string\n        :param num: number to convert\n        :return: binary string\n        \"\"\"\n        return bin(num)[2:].zfill(len(bin(num)) - 2)\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in a binary string\n        :param num: binary string\n        :return: number of ones\n        \"\"\"\n        return sum(num == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort an array\n        :param arr: array to sort\n        :return: sorted array\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(binary(x)), reverse=True)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    def sort_array(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation and then based on their decimal value.\n        \"\"\"\n        return sort_by_ones(sort_by_decimal(nums))\n\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort array of numbers according to number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6])\n        [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(nums, key=lambda num: count_ones(num))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers according to decimal value.\n        >>> sort_by_decimal([1, 0, 2, 3, 4])\n        [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(nums, key=lambda num: num)\n\n    return sort_by_ones(sort_by_decimal(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        3\n        >>> count_ones(11)\n        4\n        >>> count_ones(12)\n        4\n        >>> count_ones(13)\n        4\n        >>> count_ones(14)\n        4\n        >>> count_ones(15)\n        4\n        >>> count_ones(16)\n        5\n        >>> count_ones(17)\n        5\n        >>> count_ones(18)\n        5\n        >>> count_ones(19)\n        5\n        >>> count_ones(20)\n        5\n        >>> count_ones(21)\n        6\n        >>> count_ones(22)\n        6\n        >>> count_ones(23)\n        6\n        >>> count_ones(24)\n        6\n        >>> count_ones(25)\n        6", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(num == '1')\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation\n        \"\"\"\n        return sorted(nums, key=lambda x: count_ones(binary(x)))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value\n        \"\"\"\n        return sorted(nums, key=lambda x: int(binary(x)[2:], 2))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        return bin(n)[2:]\n\n    def count_ones(n):\n        return int(binary(n)[:-1])\n\n    def sort(arr):\n        return sorted(arr, key=count_ones)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        return bin(num)[2:]\n\n    def count_ones(num):\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        return int(num)\n\n    def sort(num):\n        if count_ones(num) == 0:\n            return sort_by_decimal(num)\n        else:\n            return sort_by_ones(num)\n\n    return sorted(arr, key=sort)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(map(int, arr))\n    arr.sort(key=lambda x: len(bin(x)[2:]), reverse=True)\n    arr.sort(key=lambda x: int(bin(x)[2:], 2), reverse=True)\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        \"\"\"\n        return bin(n)[2:].zfill(8)\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(n == '1')\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(binary(x)), reverse=True)\n        if len(arr) == 0:\n            return arr\n        if len(arr) == 1:\n            return arr\n        return arr + sort(arr[1:])\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of the number.\n        \"\"\"\n        return sum(1 for i in range(2**len(str(num))) if num & (1 << i))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of the number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the array of numbers based on their decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: num)\n\n    def sort_by_both(nums):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation and their decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: (count_ones(num), num))\n\n    return sort_by_both(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        \"\"\"\n        return bin(n)[2:]\n\n    def ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(1 for _ in n if n[_] == '1')\n\n    def decimal(n):\n        \"\"\"\n        Convert binary string to decimal number\n        \"\"\"\n        return int(''.join(str(int(n[_], 2)) for _ in n), 2)\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        \"\"\"\n        return sorted(arr, key=lambda x: (ones(binary(x)), decimal(binary(x))))\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Returns the binary representation of a number.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)\n\n    def ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> ones(1)\n        0\n        >>> ones(2)\n        1\n        >>> ones(3)\n        2\n        >>> ones(4)\n        3\n        >>> ones(5)\n        4\n        >>> ones(6)\n        5\n        >>> ones(7)\n        6\n        >>> ones(8)\n        7\n        >>> ones(9)\n        8\n        >>> ones(10)\n        9\n        >>> ones(11)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: num)\n\n    def sort_array(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        if all(num >= 0 for num in nums):\n            return sort_by_ones(nums)\n        else:\n            return sort_by_decimal(nums)\n\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num > 0:\n            num, rem = divmod(num, 2)\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array based on number of ones in the binary representation.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array based on decimal value.\n        \"\"\"\n        arr.sort(key=lambda x: int(str(x)[2:]), reverse=True)\n\n    if len(arr) == 0:\n        return arr\n    elif len(arr) == 1:\n        return arr\n    elif len(arr) == 2:\n        return sort_by_ones(arr)\n    else:\n        return sort_by_decimal(sort_by_ones(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        This function counts the number of ones in the binary representation of a number.\n        It must be implemented like this:\n        >>> count_ones(1) == 1\n        >>> count_ones(2) == 1\n        >>> count_ones(3) == 2\n        >>> count_ones(4) == 2\n        >>> count_ones(5) == 3\n        >>> count_ones(6) == 3\n        >>> count_ones(7) == 4\n        >>> count_ones(8) == 4\n        >>> count_ones(9) == 5\n        >>> count_ones(10) == 5\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            ones += num % 2\n            num //= 2\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        This function sorts an array of non-negative integers according to number of ones in their binary representation in ascending order.\n        It must be implemented like this:\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        3\n        >>> count_ones(4)\n        4\n        >>> count_ones(5)\n        5\n        >>> count_ones(6)\n        6\n        >>> count_ones(7)\n        7\n        \"\"\"\n        return len(binary(num)[::-1])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array based on number of ones in binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array based on decimal value.\n        >>> sort_by_decimal([1, 5, 2, 3, 4]) == [0, 1, 2, 3, 4]\n        >>> sort_by_decimal([-2, -3", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        5\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        6\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        7\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        8\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        9\n        >>> count_ones(18)\n        9\n        >>> count_ones(19)\n        10\n        >>> count_ones(20)\n        10\n        >>> count_ones(21)\n        11\n        >>> count_ones(22)\n        11\n        >>> count_ones(23)\n        12\n        >>> count_ones(24)\n        12\n        >>> count_ones(25)\n        13\n        >>> count_ones(26", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '10'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        3\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort by number of ones.\n        >>> sort_by_ones(1)\n        1\n        >>> sort_by_ones(5)\n        5\n        >>> sort_by_ones(-2)\n        -2\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort by decimal value.\n        >>> sort_by_decimal(1)\n        1\n        >>> sort_by_decimal(5)\n        5\n        >>> sort_by_decimal(-2)\n        -2\n        \"\"\"\n        return num\n\n    def sort(num):\n        \"\"\"\n        Sort by number of ones and decimal value.\n        >>> sort(1)\n        1\n        >>> sort(5)\n        5\n        >>> sort(-2", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Counts number of ones in binary representation of a number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sorts an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(num, key=count_ones, reverse=True)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sorts an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(num, key=int, reverse=True)\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        This function converts a number to its binary representation.\n        >>> binary(0)\n        0\n        >>> binary(1)\n        1\n        >>> binary(2)\n        10\n        >>> binary(3)\n        11\n        >>> binary(4)\n        100\n        >>> binary(5)\n        101\n        >>> binary(6)\n        110\n        >>> binary(7)\n        111\n        \"\"\"\n        return bin(num)[2:]\n\n    def ones(num):\n        \"\"\"\n        This function returns the number of ones in the binary representation of a number.\n        >>> ones(0)\n        0\n        >>> ones(1)\n        0\n        >>> ones(2)\n        1\n        >>> ones(3)\n        2\n        >>> ones(4)\n        2\n        >>> ones(5)\n        3\n        >>> ones(6)\n        3\n        >>> ones(7)\n        3\n        \"\"\"\n        return len(binary(num)[1:])\n\n    def sort(arr):\n        \"\"\"\n        This function sorts the array according to the number of ones in the binary\n        representation of the numbers.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        count = 0\n        while num:\n            count += num & 1\n            num >>= 1\n        return count\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in their binary representation.\n        >>> compare(1, 2)\n        -1\n        >>> compare(2, 1)\n        1\n        >>> compare(1, 1)\n        0\n        >>> compare(0, 1)\n        -1\n        >>> compare(1, 0)\n        1\n        \"\"\"\n        if count_ones(a) > count_ones(b):\n            return 1\n        elif count_ones(a) < count_ones(b):\n            return -1\n        else:\n            return 0\n\n    return sorted(arr, cmp=compare)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        6\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        7\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        8\n        >>> count_ones(18)\n        9\n        >>> count_ones(19)\n        9\n        >>> count_ones(20)\n        10\n        >>> count_ones(21)\n        10\n        >>> count_ones(22)\n        11\n        >>> count_ones(23)\n        11\n        >>> count_ones(24)\n        12\n        >>> count_ones(25)\n        12", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '1'\n        >>> binary(5)\n        '101'\n        >>> binary(10)\n        '100'\n        \"\"\"\n        return bin(num)\n\n    def ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> ones(1)\n        0\n        >>> ones(5)\n        1\n        >>> ones(10)\n        2\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort(arr):\n        \"\"\"\n        Sort the array.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        \"\"\"\n        return sorted(arr, key=lambda x: ones(x), reverse=True)\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        :param num: number to be counted\n        :return: number of ones in binary representation of number\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort numbers based on number of ones in their binary representation\n        :param num: number to be sorted\n        :return: sorted array\n        \"\"\"\n        return sorted(num, key=count_ones, reverse=True)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort numbers based on decimal value\n        :param num: number to be sorted\n        :return: sorted array\n        \"\"\"\n        return sorted(num, key=lambda x: int(str(x)[2:]), reverse=True)\n\n    def sort_array(arr):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation\n        :param arr: array of numbers\n        :return: sorted array\n        \"\"\"\n        return sort_by_ones(sort_by_decimal(arr))\n\n    return sort_array(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    def sort_array(nums):\n        \"\"\"\n        Sort an array of numbers based on the number of ones in their binary\n        representation and their decimal value.\n        \"\"\"\n        return sort_by_ones(sort_by_decimal(nums))\n\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in a binary representation.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        \"\"\"\n        return sum(num == '1')\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6])\n        [-6", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n.\n        \"\"\"\n        return sum(1 for _ in range(n))\n\n    def count_ones_asc(a, b):\n        \"\"\"\n        Compare number of ones in binary representation of two numbers.\n        \"\"\"\n        return count_ones(a) - count_ones(b)\n\n    def count_ones_dec(a, b):\n        \"\"\"\n        Compare number of ones in binary representation of two numbers.\n        \"\"\"\n        return a - b\n\n    def count_ones_asc_dec(a, b):\n        \"\"\"\n        Compare number of ones in binary representation of two numbers.\n        \"\"\"\n        return count_ones_asc(a, b) or count_ones_dec(a, b)\n\n    def sort_asc(a, b):\n        \"\"\"\n        Sort two numbers based on number of ones in binary representation.\n        \"\"\"\n        return count_ones_asc(a, b)\n\n    def sort_dec(a, b):\n        \"\"\"\n        Sort two numbers based on number of ones in binary representation.\n        \"\"\"\n        return count_ones_dec(a, b)\n\n    def sort_asc_dec(a, b):\n        \"\"\"\n        Sort two numbers based on number of ones in", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of the number.\n        \"\"\"\n        ones = 0\n        while num > 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array based on number of ones in the binary representation.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array based on decimal value.\n        \"\"\"\n        arr.sort(key=lambda x: int(str(x)[2:]), reverse=True)\n\n    if len(arr) == 0:\n        return arr\n\n    if all(num >= 0 for num in arr):\n        return sort_by_ones(arr)\n    else:\n        return sort_by_decimal(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(arr)\n    arr.sort(key=lambda x: int(''.join(str(x) for x in bin(x)[2:]), 2))\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Returns the binary representation of a number.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort_by_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> sort_by_ones(1)\n        1\n        >>> sort_by_ones(2)\n        1\n        >>> sort_by_ones(3)\n        2\n        >>> sort_by_ones(4)\n        3\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> sort_by_decimal(1)\n        1\n        >>> sort_by_decimal(2)\n        1\n        >>> sort_by_dec", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort numbers based on number of ones in their binary representation.\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort numbers based on decimal value.\n        \"\"\"\n        return num\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort numbers based on both number of ones in their binary representation\n        and decimal value.\n        \"\"\"\n        return (count_ones(num), num)\n\n    return sorted(arr, key=sort_by_ones) if len(arr) > 0 else []", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        return bin(n)[2:]\n\n    def count_ones(n):\n        return int(binary(n)[::-1].count('1'))\n\n    def sort(arr):\n        return sorted(arr, key=lambda x: count_ones(x), reverse=True)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort(arr):\n        \"\"\"\n        Sort an array of numbers according to number of ones in their binary\n        representation in ascending order.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        :param n: integer\n        :return: binary string\n        \"\"\"\n        return bin(n)[2:].zfill(len(bin(n)) - 2)\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        :param n: integer\n        :return: number of ones\n        \"\"\"\n        return sum(1 for _ in n)\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        :param arr: array\n        :return: sorted array\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n        return arr\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in num.split('1'))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort the array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: int(num))\n\n    def sort_by_both(nums):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation and their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda num: (count_ones(num), int(num)))\n\n    return sort_by_both(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of numbers based on decimal value\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]), reverse=True)\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '10'\n        >>> binary(2)\n        '11'\n        >>> binary(3)\n        '100'\n        >>> binary(4)\n        '101'\n        >>> binary(5)\n        '111'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '1110'\n        >>> binary(8)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        \"\"\"\n        return len(binary(num)[1:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary\n        representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        \"\"\"\n        return sum(num == 1)\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of numbers based on decimal value\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in their binary representation\n        \"\"\"\n        return count_ones(a) - count_ones(b)\n\n    def compare_decimal(a, b):\n        \"\"\"\n        Compare two numbers based on their decimal value\n        \"\"\"\n        return int(a) - int(b)\n\n    return sorted(arr, key=lambda x: (count_ones(x), compare(x, 0)), reverse=True)</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        >>> count_ones(8)\n        7", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '10'\n        >>> binary(0)\n        '0'\n        >>> binary(-1)\n        '-1'\n        \"\"\"\n        if num < 0:\n            return '-' + binary(abs(num))\n        return str(bin(num)[2:])\n\n    def ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> ones(10)\n        1\n        >>> ones(11)\n        2\n        >>> ones(12)\n        3\n        >>> ones(13)\n        4\n        >>> ones(14)\n        5\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers by the number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(nums, key=lambda num: ones(binary(num)))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        This function counts the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        6\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        7\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        8\n        >>> count_ones(18)\n        9\n        >>> count_ones(19)\n        9\n        >>> count_ones(20)\n        10\n        >>> count_ones(21)\n        10\n        >>> count_ones(22)\n        11\n        >>> count_ones(23)\n        11\n        >>> count_ones(24)\n        12\n        >>> count_ones(25)\n        12\n        >>> count_ones", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num >> 1\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of numbers based on decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num // 2\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array based on the number of ones in the binary representation.\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array based on the decimal representation.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        return bin(n)[2:]\n\n    def count_ones(n):\n        return int(binary(n)[:-1])\n\n    def sort_by_ones(arr):\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        return sorted(arr, key=lambda x: int(binary(x)[:-1]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        5\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        6\n        >>> count_ones(13)\n        6\n        >>> count_ones(14)\n        7\n        >>> count_ones(15)\n        7\n        >>> count_ones(16)\n        8\n        >>> count_ones(17)\n        8\n        >>> count_ones(18)\n        9\n        >>> count_ones(19)\n        9\n        >>> count_ones(20)\n        10\n        >>> count_ones(21)\n        10\n        >>> count_ones(22)\n        11\n        >>> count_ones(23)\n        11\n        >>> count_ones(24)\n        12\n        >>> count_ones(25)\n        12", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary_repr(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary_repr(1)\n        '1'\n        >>> binary_repr(2)\n        '10'\n        >>> binary_repr(3)\n        '11'\n        >>> binary_repr(4)\n        '100'\n        >>> binary_repr(5)\n        '101'\n        >>> binary_repr(6)\n        '110'\n        >>> binary_repr(7)\n        '111'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary_repr(num))\n\n    def sort(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in their binary representation\n        \"\"\"\n        if count_ones(a) > count_ones(b):\n            return 1\n        elif count_ones(a) < count_ones(b):\n            return -1\n        else:\n            return cmp(a, b)\n\n    return sorted(arr, cmp=compare)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array of numbers based on the number of ones in their binary\n        representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array of numbers based on their decimal representation.\n        \"\"\"\n        return sorted(arr, key=lambda num: int(str(num)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        >>> binary(1)\n        '01'\n        >>> binary(0)\n        ''\n        >>> binary(-1)\n        '-1'\n        \"\"\"\n        if n < 0:\n            return \"-1\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(-1)\n        1\n        \"\"\"\n        return sum(1 for _ in binary(n) if _ == '1')\n\n    def sort_by_ones(a):\n        \"\"\"\n        Sort array of integers by number of ones in binary representation\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        \"\"\"\n        return sorted(a, key=count_ones)\n\n    def sort_by_decimal(a):\n        \"\"\"\n        Sort array of integers by decimal value\n        >>> sort_by_decimal([-2, -3, -4, -5, -6])\n        [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(a, key=int)\n\n    return sort_by_ones(sort_by", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert number to binary string\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(num == '1')\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in binary representation\n        \"\"\"\n        if count_ones(a) > count_ones(b):\n            return 1\n        elif count_ones(a) < count_ones(b):\n            return -1\n        else:\n            return 0\n\n    return sorted(arr, cmp=compare)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        4\n        >>> count_ones(12)\n        4\n        >>> count_ones(13)\n        4\n        >>> count_ones(14)\n        5\n        >>> count_ones(15)\n        5\n        >>> count_ones(16)\n        5\n        >>> count_ones(17)\n        5\n        >>> count_ones(18)\n        6\n        >>> count_ones(19)\n        6\n        >>> count_ones(20)\n        6\n        >>> count_ones(21)\n        7\n        >>> count_ones(22)\n        7\n        >>> count_ones(23)\n        7\n        >>> count_ones(24)\n        7\n        >>> count_ones(25", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort numbers based on number of ones in their binary representation.\n        \"\"\"\n        return count_ones(num)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort numbers based on decimal value.\n        \"\"\"\n        return num\n\n    def sort_by_both(num):\n        \"\"\"\n        Sort numbers based on both number of ones in their binary representation\n        and decimal value.\n        \"\"\"\n        return count_ones(num), num\n\n    return sorted(arr, key=sort_by_ones, reverse=True) \\\n           if all(num >= 0 for num in arr) else \\\n           sorted(arr, key=sort_by_decimal, reverse=True) \\\n           if all(num >= 0 for num in arr) else \\\n           sorted(arr, key=sort_by_both, reverse=True)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        >>> count_ones(8)\n        7\n        >>> count", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        \"\"\"\n        return sum(1 for _ in binary(n))\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers according to their binary representation.\n        >>> compare(1, 2)\n        -1\n        >>> compare(1, 3)\n        1\n        >>> compare(1, 4)\n        0\n        >>> compare(1, 5)\n        -1\n        >>> compare(1, 6)\n        1\n        >>> compare", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        4\n        >>> count_ones(12)\n        4\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        5\n        >>> count_ones(15)\n        5\n        >>> count_ones(16)\n        6\n        >>> count_ones(17)\n        6\n        >>> count_ones(18)\n        6\n        >>> count_ones(19)\n        7\n        >>> count_ones(20)\n        7\n        >>> count_ones(21)\n        7\n        >>> count_ones(22)\n        8\n        >>> count_ones(23)\n        8\n        >>> count_ones(24)\n        8\n        >>> count_ones(25)\n        9\n        >>> count_ones(26", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort an array of non-negative integers according to number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n        return arr\n\n    def sort_by", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            num = num // 2\n            ones += 1\n        return ones\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array according to number of ones in binary representation.\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x), reverse=True)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array according to decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]), reverse=True)\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        \"\"\"\n        return len(num) - len(num.lstrip('0'))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=lambda x: count_ones(binary(x)))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(binary(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary_repr(n):\n        \"\"\"\n        Returns the binary representation of the integer n.\n        >>> binary_repr(1)\n        '01'\n        >>> binary_repr(2)\n        '10'\n        >>> binary_repr(3)\n        '11'\n        >>> binary_repr(4)\n        '100'\n        >>> binary_repr(5)\n        '101'\n        >>> binary_repr(6)\n        '110'\n        >>> binary_repr(7)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Returns the number of ones in the binary representation of the integer n.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        \"\"\"\n        return len(binary_repr(n)[::-1])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sorts the array arr based on the number of ones in the binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) ==", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        3\n        \"\"\"\n        return len(num) - len(num.lstrip('0'))\n\n    def sort(arr):\n        \"\"\"\n        Sort array.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        arr.sort(key=lambda x: (count_ones(binary(x)), x))\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of n.\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort the array according to number of ones in binary representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort the array according to decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda n: int(n))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(5)\n        '101'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        1\n        >>> count_ones(6)\n        2\n        \"\"\"\n        return sum(1 for _ in num)\n\n    def sort(arr):\n        \"\"\"\n        Sort an array of non-negative integers according to number of ones in their binary representation in ascending order.\n        For similar number of ones, sort based on decimal value.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return len(binary(n)[::-1])\n\n    def sort(arr):\n        \"\"\"\n        Sort array\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        \"\"\"\n        return sum(1 for _ in n if n)\n\n    def sort_by_ones(a):\n        \"\"\"\n        Sort array by number of ones in binary string\n        \"\"\"\n        return sorted(a, key=count_ones)\n\n    def sort_by_decimal(a):\n        \"\"\"\n        Sort array by decimal value\n        \"\"\"\n        return sorted(a, key=lambda x: int(x, 2))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert number to binary string.\n        >>> binary(1)\n        '1'\n        >>> binary(5)\n        '101'\n        >>> binary(-2)\n        '100'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(-2)\n        3\n        \"\"\"\n        return len(binary(num)) - len(binary(num)[::-1])\n\n    def sort(arr):\n        \"\"\"\n        Sort array.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n        arr.sort(key=lambda x: x, reverse=False)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        3\n        >>> count_ones(4)\n        4\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(nums, key=lambda num: count_ones(num))\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers based on decimal value.\n        >>> sort", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(arr)\n    arr.sort(key=lambda x: int(''.join(str(i) for i in bin(x)[2:]), 2))\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        5\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        6\n        >>> count_ones(15)\n        6\n        >>> count_ones(16)\n        7\n        >>> count_ones(17)\n        7\n        >>> count_ones(18)\n        8\n        >>> count_ones(19)\n        8\n        >>> count_ones(20)\n        9\n        >>> count_ones(21)\n        9\n        >>> count_ones(22)\n        10\n        >>> count_ones(23)\n        10\n        >>> count_ones(24)\n        11\n        >>> count_ones(25)\n        11\n        >>> count_ones(26", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        >>> binary(16)\n        '10000'\n        >>> binary(17)\n        '10001'\n        >>> binary(18)\n        '10010'\n        >>> binary(19)\n        '10011'\n        >>> binary(20)\n        '10100'\n        >>> binary(21)\n        '10101'\n        >>> binary(22)\n        '10110'\n        >>> binary(23)\n        '10111'\n        >>> binary(24)\n        '11000'\n        >>> binary(25)\n        '11001'\n        >>> binary(26)\n        '11010'\n        >>>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        5\n        >>> count_ones(10)\n        5\n        \"\"\"\n        return sum(1 for i in range(len(str(num))) if num % 2 == 1)\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort numbers based on number of ones in binary representation.\n        >>> sort_by_ones(1)\n        1\n        >>> sort_by_ones(2)\n        2\n        >>> sort_by_ones(3)\n        3\n        >>> sort_by_ones(4)\n        4\n        >>> sort_by_ones(5)\n        5\n        >>> sort_by_ones(6)\n        6\n        >>> sort_by_ones(7)\n        7\n        >>> sort_by_ones(8)\n        8\n        >>> sort_by_ones(9)\n        9\n        >>> sort_by_ones(10", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        2\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        1\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of integers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        \"\"\"\n        return sorted(arr, key=lambda x: count_ones(x))\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array of integers based on decimal value.\n        >>> sort_by_decimal([1, 0, 2, 3, 4]) == [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(1 for _ in num.astype(int).astype(str))\n\n    def sort_by_ones(num):\n        \"\"\"\n        Sort numbers based on number of ones in binary representation.\n        \"\"\"\n        return num.astype(int).astype(str).count(1)\n\n    def sort_by_decimal(num):\n        \"\"\"\n        Sort numbers based on decimal value.\n        \"\"\"\n        return num\n\n    def sort(num):\n        \"\"\"\n        Sort numbers based on number of ones in binary representation.\n        \"\"\"\n        return num.astype(int).astype(str).count(1)\n\n    return np.array(sorted(arr, key=sort))\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of n.\n        >>> count_ones(1)\n        0\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        4\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array of integers based on number of ones in their binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        return sorted(arr, key", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            ones += num & 1\n            num >>= 1\n        return ones\n\n    def compare(a, b):\n        \"\"\"\n        Compare two numbers based on number of ones in their binary representation.\n        \"\"\"\n        if count_ones(a) > count_ones(b):\n            return 1\n        elif count_ones(a) < count_ones(b):\n            return -1\n        else:\n            return 0\n\n    return sorted(arr, cmp=compare)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary_repr(num):\n        \"\"\"\n        Returns the binary representation of a number.\n        >>> binary_repr(1)\n        '01'\n        >>> binary_repr(2)\n        '10'\n        >>> binary_repr(3)\n        '11'\n        >>> binary_repr(4)\n        '100'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        \"\"\"\n        return sum(1 for _ in binary_repr(num))\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sorts an array of numbers based on the number of ones in their binary\n        representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4])\n        [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3, -4, -5, -6])\n        [-6, -5, -4, -3, -2]\n        >>> sort_by_ones([1, 0, 2, 3, 4])\n        [0, 1, 2, 3,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary_repr(n):\n        \"\"\"\n        Convert integer to binary string.\n        >>> binary_repr(1)\n        '1'\n        >>> binary_repr(2)\n        '10'\n        >>> binary_repr(3)\n        '11'\n        >>> binary_repr(4)\n        '100'\n        >>> binary_repr(5)\n        '101'\n        >>> binary_repr(6)\n        '110'\n        >>> binary_repr(7)\n        '111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        4\n        \"\"\"\n        return sum(1 for _ in n)\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array by number of ones in binary representation.\n        >>> sort_by_ones([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort_by_ones([-2, -3,", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        ones = 0\n        while num!= 0:\n            ones += num & 1\n            num >>= 1\n        return ones\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to the number of ones in the binary representation.\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x), reverse=True)\n        return arr\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)[2:].zfill(8)\n\n    def ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort(arr):\n        \"\"\"\n        Sort the array.\n        \"\"\"\n        return sorted(arr, key=lambda x: ones(x), reverse=True)\n\n    return sort(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    arr = list(arr)\n    arr.sort(key=lambda x: int(''.join(str(x) for x in bin(x)[2:]), 2))\n    return arr", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(n):\n        \"\"\"\n        Count the number of ones in the binary representation of n.\n        >>> count_ones(1)\n        0\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        3\n        \"\"\"\n        return sum(1 for _ in bin(n)[2:])\n\n    def count_zeros(n):\n        \"\"\"\n        Count the number of zeros in the binary representation of n.\n        >>> count_zeros(1)\n        0\n        >>> count_zeros(5)\n        4\n        >>> count_zeros(2)\n        2\n        >>> count_zeros(3)\n        2\n        >>> count_zeros(4)\n        2\n        >>> count_zeros(5)\n        2\n        >>> count_zeros(6)\n        3\n        \"\"\"\n        return len(bin(n)[2:]) - count_ones(n)\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to number of ones in their binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary_repr(num):\n        \"\"\"\n        >>> binary_repr(1)\n        '0b1'\n        >>> binary_repr(2)\n        '0b10'\n        >>> binary_repr(3)\n        '0b11'\n        >>> binary_repr(4)\n        '0b100'\n        >>> binary_repr(5)\n        '0b101'\n        >>> binary_repr(6)\n        '0b110'\n        >>> binary_repr(7)\n        '0b111'\n        >>> binary_repr(8)\n        '0b1000'\n        >>> binary_repr(9)\n        '0b1001'\n        >>> binary_repr(10)\n        '0b1010'\n        >>> binary_repr(11)\n        '0b1011'\n        >>> binary_repr(12)\n        '0b1100'\n        >>> binary_repr(13)\n        '0b1101'\n        >>> binary_repr(14)\n        '0b1110'\n        >>> binary_repr(15)\n        '0b1111'\n        \"\"\"\n        return '{:0>2d}'.format(num)\n\n    def count_ones(num):\n        \"\"\"\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        1\n        >>> count_ones(5", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert integer to binary string\n        :param n: integer\n        :return: binary string\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string\n        :param n: integer\n        :return: number of ones\n        \"\"\"\n        return sum(n == '1')\n\n    def sort_by_ones(arr):\n        \"\"\"\n        Sort array by number of ones in binary representation\n        :param arr: array of integers\n        :return: sorted array\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort array by decimal value\n        :param arr: array of integers\n        :return: sorted array\n        \"\"\"\n        return sorted(arr, key=lambda x: int(x))\n\n    def sort_array(arr):\n        \"\"\"\n        Sort array by number of ones in binary representation\n        :param arr: array of integers\n        :return: sorted array\n        \"\"\"\n        return sort_by_ones(sort_by_decimal(arr))\n\n    return sort_array(arr)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to binary string.\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary string.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        2\n        >>> count_ones(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Counts the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(5)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        1\n        >>> count_ones(4)\n        1\n        >>> count_ones(5)\n        2\n        >>> count_ones(6)\n        2\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        3\n        >>> count_ones(9)\n        3\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        4\n        >>> count_ones(12)\n        4\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        5\n        >>> count_ones(15)\n        5\n        >>> count_ones(16)\n        6\n        >>> count_ones(17)\n        6\n        >>> count_ones(18)\n        6\n        >>> count_ones(19)\n        7\n        >>> count_ones(20)\n        7\n        >>> count_ones(21)\n        7\n        >>> count_ones(22)\n        8\n        >>> count_ones(23)\n        8\n        >>> count_ones(24)\n        8\n        >>> count_ones(", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        >>> count_ones(5)\n        4\n        >>> count_ones(6)\n        5\n        >>> count_ones(7)\n        6\n        >>> count_ones(8)\n        7", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Returns the binary representation of a number.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        \"\"\"\n        return bin(num)\n\n    def count_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        \"\"\"\n        return sum(1 for _ in binary(num))\n\n    def sort_by_ones(num):\n        \"\"\"\n        Returns the number of ones in the binary representation of a number.\n        >>> sort_by_ones(1)\n        0\n        >>> sort_by_ones(2)\n        1\n        >>> sort_by_ones(3)\n        2\n        >>> sort_by_ones(4)\n        2\n        >>> sort_by_", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_count(nums):\n        \"\"\"\n        Sort array of numbers by number of ones in binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers by decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_count(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(num == '1')\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(nums, key=lambda x: int(x))\n\n    def sort_array(nums):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sort_by_ones(sort_by_decimal(nums))\n\n    return sort_array(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(1)\n        '01'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        \"\"\"\n        return bin(num)[2:]\n\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in a binary representation.\n        >>> count_ones(1)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        3\n        \"\"\"\n        return len(binary(num)[1:])\n\n    def sort(arr):\n        \"\"\"\n        Sort the array according to number of ones in binary representation.\n        >>> sort([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n        >>> sort([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n        >>> sort([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n        \"\"\"\n        arr.sort(key=lambda x: count_ones(x))\n        return arr\n\n    return sort(arr)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count the number of ones in the binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_count(a, b):\n        \"\"\"\n        Sort two numbers according to number of ones in their binary representation.\n        \"\"\"\n        return cmp(count_ones(a), count_ones(b))\n\n    def sort_by_decimal(a, b):\n        \"\"\"\n        Sort two numbers according to their decimal value.\n        \"\"\"\n        return cmp(a, b)\n\n    def sort_by_both(a, b):\n        \"\"\"\n        Sort two numbers according to both number of ones in their binary representation\n        and their decimal value.\n        \"\"\"\n        return cmp(sort_by_count(a, b), sort_by_decimal(a, b))\n\n    return sorted(arr, key=sort_by_both)\n</s>", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of number\n        :param num:\n        :return:\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_ones(nums):\n        \"\"\"\n        Sort array of numbers based on number of ones in their binary representation\n        :param nums:\n        :return:\n        \"\"\"\n        return sorted(nums, key=count_ones)\n\n    def sort_by_decimal(nums):\n        \"\"\"\n        Sort array of numbers based on decimal value\n        :param nums:\n        :return:\n        \"\"\"\n        return sorted(nums, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_ones(sort_by_decimal(arr))", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(1)\n        1\n        >>> count_ones(0)\n        0\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_ones(7)\n        3\n        >>> count_ones(8)\n        4\n        >>> count_ones(9)\n        4\n        >>> count_ones(10)\n        4\n        >>> count_ones(11)\n        5\n        >>> count_ones(12)\n        5\n        >>> count_ones(13)\n        5\n        >>> count_ones(14)\n        6\n        >>> count_ones(15)\n        6\n        >>> count_ones(16)\n        7\n        >>> count_ones(17)\n        7\n        >>> count_ones(18)\n        7\n        >>> count_ones(19)\n        8\n        >>> count_ones(20)\n        8\n        >>> count_ones(21)\n        8\n        >>> count_ones(22)\n        9\n        >>> count_ones(23)\n        9\n        >>> count_ones(24)\n        9\n        >>> count_ones(25)\n        10", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(n):\n        \"\"\"\n        Convert a number to its binary representation.\n        >>> binary(0)\n        '0'\n        >>> binary(1)\n        '1'\n        >>> binary(2)\n        '10'\n        >>> binary(3)\n        '11'\n        >>> binary(4)\n        '100'\n        >>> binary(5)\n        '101'\n        >>> binary(6)\n        '110'\n        >>> binary(7)\n        '111'\n        >>> binary(8)\n        '1000'\n        >>> binary(9)\n        '1001'\n        >>> binary(10)\n        '1010'\n        >>> binary(11)\n        '1011'\n        >>> binary(12)\n        '1100'\n        >>> binary(13)\n        '1101'\n        >>> binary(14)\n        '1110'\n        >>> binary(15)\n        '1111'\n        \"\"\"\n        return bin(n)[2:]\n\n    def count_ones(n):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        >>> count_ones(0)\n        0\n        >>> count_ones(1)\n        1\n        >>> count_ones(2)\n        1\n        >>> count_ones(3)\n        2\n        >>> count_ones(4)\n        2\n        >>> count_ones(5)\n        3\n        >>> count_ones(6)\n        3\n        >>> count_", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def binary(num):\n        return bin(num)[2:]\n\n    def ones(num):\n        return len(binary(num))\n\n    def decimal(num):\n        return int(num)\n\n    def compare(a, b):\n        if ones(a) > ones(b):\n            return 1\n        elif ones(a) < ones(b):\n            return -1\n        elif ones(a) == ones(b):\n            return decimal(a) - decimal(b)\n        else:\n            return 0\n\n    return sorted(arr, cmp=compare)", "def sort_array(arr):\n    \"\"\"\n    In this Kata, you have to sort an array of non-negative integers according to\n    number of ones in their binary representation in ascending order.\n    For similar number of ones, sort based on decimal value.\n\n    It must be implemented like this:\n    >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4, 5]\n    >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n    >>> sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\n    \"\"\"\n    def count_ones(num):\n        \"\"\"\n        Count number of ones in binary representation of a number.\n        \"\"\"\n        return sum(1 for _ in bin(num)[2:])\n\n    def sort_by_count_ones(arr):\n        \"\"\"\n        Sort an array of numbers based on number of ones in their binary representation.\n        \"\"\"\n        return sorted(arr, key=count_ones)\n\n    def sort_by_decimal(arr):\n        \"\"\"\n        Sort an array of numbers based on decimal value.\n        \"\"\"\n        return sorted(arr, key=lambda x: int(str(x)[2:]))\n\n    return sort_by_count_ones(sort_by_decimal(arr))"]]