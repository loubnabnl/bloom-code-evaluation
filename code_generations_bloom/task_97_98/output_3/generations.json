[["def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # write your code here\n    result = 0\n    if(b < 0):\n        if(a < 0):\n            if(a > abs(b)):\n                result = 10 * (abs(a) + b)\n            elif(b > abs(a)):\n                result = 10 * (abs(b) + a)\n            elif(a == b):\n                result = a\n        else:\n            if(a < abs(b)):\n                result = 10 * (abs(a) + b)\n            elif(b < abs(a)):\n                result = 10 * (abs(b) + a)\n            elif(a == b):\n                result = a\n    elif(b == 0):\n        if(a == 0):\n            result = 1\n        else:\n            result = 10 * a\n    elif(b > 0):\n        if(a < 0):\n            if(a > abs(b)):\n                result = 10 * (abs(a) + b)\n            elif(b > abs(a)):\n                result = 10 * (abs(b) + a)\n            elif(a == b):\n                result = a\n        else:\n            if(a < abs(b)):\n                result = 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    ans = 0\n    if a < 0 or b < 0:\n        raise ValueError('Invalid input')\n    while a!= 0 or b!= 0:\n        digit_a = str(a % 10)\n        digit_b = str(b % 10)\n        ans = (ans + digit_a + digit_b) % 10\n        a //= 10\n        b //= 10\n    return ans", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        return 0\n    elif a == 0 or b == 0:\n        return 0\n    else:\n        return a * b % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # your code here\n    print(\"The product of their unit digits is: \")", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    pass", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # write your code here\n    return", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0:\n        return 0\n    return a * int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    elif (a < 0) or (b < 0):\n        return None\n    else:\n        return (10 * (a * b)) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    i = 0\n    while i < len(str(a)):\n        a = a * 10\n        i += 1\n    i = 0\n    while i < len(str(b)):\n        b = b * 10\n        i += 1\n    if a == b == 0:\n        return 0\n    else:\n        return 10 * int(a[-1]) + int(b[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import sys\n    if len(sys.argv) > 1:\n        a = int(sys.argv[1])\n    else:\n        print \"Error: not enough arguments\"\n        print sys.argv[0] + \" multiply.py <first number>\"\n        sys.exit()\n    if len(sys.argv) > 2:\n        b = int(sys.argv[2])\n    else:\n        print \"Error: not enough arguments\"\n        print sys.argv[0] + \" multiply.py <first number> <second number>\"\n        sys.exit()\n    if a == 0 or b == 0:\n        print \"Error: divide by zero\"\n        print \" \"\n        sys.exit()\n    a = str(a)\n    b = str(b)\n    if len(a)!= len(b):\n        print \"Error: not the same length\"\n        print \" \"\n        sys.exit()\n    #check for odd number in a\n    if int(a[-1])%2 == 1:\n        #convert a to even number\n        a = a[0:-1]\n        a = int(a)*2\n    if int(b[-1])%2 == 1:\n        b = b[0:-1]\n        b = int(b)*2\n    if a[-1] == '0' and b[-1] == '1':\n        print a\n    if a[-1] == '1' and b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    return str(int(str(a)[0]) * int(str(b)[0]))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(a / 10) * int(b / 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    while True:\n        try:\n            a = int(input(\"First number: \"))\n            b = int(input(\"Second number: \"))\n        except ValueError:\n            print(\"Please enter only numbers.\")\n        else:\n            break\n\n    if not 0 < a < 100 and not 0 < b < 100:\n        print(\"Invalid number.\")\n    else:\n        x = a % 10\n        y = b % 10\n        return x * y", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(a)*int(b)-int(a)*int(b)%10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Complete the function that takes two integers and returns \n    # the product of their unit digits.\n    # Assume the input is always valid.\n    # Examples:\n    # multiply(148, 412) should return 16.\n    # multiply(19, 28) should return 72.\n    # multiply(2020, 1851) should return 0.\n    # multiply(14,-15) should return 20.\n\n    def product(a, b):\n        while a > 0:\n            b = b * 10\n            a = a % 10\n        return b\n\n    return product(a, b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n    return (10 ** (math.log10(a) % 10) * math.log10(b) % 10) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(str(a)[-1]) * int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Complete the function below.\n    return -1", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # I need help with the first function. It should take a and b and return the\n    # digit. It needs to check that a and b are valid integers and are greater\n    # than 0. It will return a string with the unit digit of a and b.\n    # This is what I have:\n    def digit(a, b):\n        if a % 10!= 0:\n            return a%10\n        elif b % 10!= 0:\n            return b%10\n        else:\n            print \"The values you entered were not valid.\"\n            return digit(a, b)\n\n    #I have to return the digit, not the product of the digits.\n    return digit(a, b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert a >= 0 and b >= 0\n    result = 0\n    while a > 0 or b > 0:\n        while a > 0 and b > 0:\n            if a % 10 == b % 10:\n                result += 1\n                a -= 1\n                b -= 1\n            elif a % 10 > b % 10:\n                a -= 1\n            else:\n                b -= 1\n        if a % 10 > 0:\n            result += a % 10\n            a -= 1\n        else:\n            result += b % 10\n            b -= 1\n    return result", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    else:\n        return int(a) * int(b) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert(a > 0 and b > 0)\n    if not(a % 10 and b % 10):\n        return 0\n    else:\n        return 10*a*b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    result = \"\"\n    while a > 0:\n        if a % 10 == 0:\n            result += \"1\"\n        else:\n            result += \"0\"\n        a = a / 10\n        b = b / 10\n    while b > 0:\n        if b % 10 == 0:\n            result += \"1\"\n        else:\n            result += \"0\"\n        b = b / 10\n    return int(result)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    # isdigit()\n    unit_num = int(a)\n    unit_num = str(unit_num)\n    unit_digit = unit_num[len(unit_num)-1]\n    product_num = int(unit_digit) * int(b)\n    product_num = str(product_num)\n    product_digit = product_num[len(product_num)-1]\n    return product_digit", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n    def digit_product(num):\n        total = 0\n        for d in str(num):\n            total += int(d) * int(math.pow(10, len(str(num)) - 1 - (len(str(num)) - len(str(d)))))\n        return total\n    return digit_product(a) * digit_product(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if b == 0:\n        return 0\n    else:\n        return a * int(str(b)[-1]) + multiply(a, b/10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    if a > 0 and b > 0:\n        a = str(a)\n        b = str(b)\n        return int(a[0]) * int(b[0])\n    else:\n        return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if type(a)!= int or type(b)!= int:\n        raise TypeError\n    if a < 0 or b < 0:\n        raise ValueError\n    if a < 10:\n        return a*b\n    if b < 10:\n        return 0\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    return str(a*b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    return a*b\n\na, b = int(input(\"Enter two numbers to multiply: \")), int(input(\"Enter another two numbers: \"))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    ans = 0\n    for i in range(len(b)):\n        ans += (b[i] * a[i])\n    return ans", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError\n    if a == 0 or b == 0:\n        return 0\n    return int(a - b * int(str(a)[-1])) * 10 + int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return str(int(str(a)[0]) * int(str(b)[0]))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    \"\"\"\n    x = (a/10) + (b/10)\n    y = (a%10) + (b%10)\n    z = (x*y)\n    if z!= 0:\n        return z\n    else:\n        return 0\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    if (b == 0):\n        return 0\n    else:\n        return (a * 10 + b) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n    c = a*10+b\n    unit_digit = math.floor(c / 10)\n    result = int(str(c)[-(1:)])\n    if result == 0:\n        return 0\n    else:\n        return result", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    if (b < 0):\n        return 0\n    else:\n        return 10 * (a%10 + b%10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 1", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    c = 0\n    if a < 0:\n        a *= -1\n    if b < 0:\n        b *= -1\n    while a!= 0 or b!= 0:\n        c += 10 * (a % 10)\n        a /= 10\n        c += 10 * (b % 10)\n        b /= 10\n    return c", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert a > 0 and b > 0, \"ERROR: bad input for multiply\"\n    if a < 10 and b < 10:\n        return a * b\n    if a % 10 == 0 and b % 10 == 0:\n        return a * b\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    try:\n        return a * int(b[0])\n    except:\n        return int(a[0]) * int(b[0])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    if (a > 0) and (b > 0):\n        return str(a * b)\n    elif (a > 0) and (b < 0):\n        return str(a * b)[::-1]\n    elif (a < 0) and (b > 0):\n        return str(a * b)[::-1]\n    else:\n        return \"0\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a, b = int(a), int(b)\n    if a < 0 or b < 0:\n        return 0\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == 1:\n        return b\n    if b == 1:\n        return a\n    if a == 9:\n        return 10 * b\n    if b == 9:\n        return a * 10\n    if a == b:\n        return 0\n    if a % 10 == 0:\n        return (a * b) % 10\n    if b % 10 == 0:\n        return (a * b) % 10\n    if a % 10 == 1:\n        return (b * 10) % 10\n    if b % 10 == 1:\n        return (a * 10) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    return a * b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return(a * b % 10 + (a * b / 10) % 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import string\n    if a < 0:\n        if b < 0:\n            return 0\n        else:\n            return -1\n    if a < 10:\n        a = int(a)\n        b = int(b)\n        if b < 0:\n            return 0\n        else:\n            return 1\n    else:\n        a = str(a)\n        b = str(b)\n        if len(a) == len(b):\n            return multiply(a[:-1], b[:-1])\n        else:\n            return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert type(a) is int and type(b) is int, 'Invalid input.'\n    assert a >= 0 and b >= 0, 'Invalid input.'\n    assert a < 10 and b < 10, 'Invalid input.'\n    result = 0\n    while a!= 0 or b!= 0:\n        if a % 10 == b % 10:\n            result += 10 * a % 10\n            a //= 10\n        elif a % 10 > b % 10:\n            result += 10 * b % 10\n            b //= 10\n        else:\n            result += 10 * a % 10\n            a //= 10\n    return result\n\ntest_cases = [\n    (148, 412)        ,\n    (19, 28)          ,\n    (2020, 1851)      ,\n    (14, -15)         ,\n    (13, -14)         ,\n    (12, -13)         ,\n    (11, -12)         ,\n    (10, -11)         ,\n    (9, -10)         ,\n    (8, -9)          ,\n    (7, -8)          ,\n    (6, -7)          ,\n    (5, -6)          ,\n    (4, -5)          ,\n    (3, -4)          ,\n    (2, -3)          ,\n    (1, -2)          ,\n    (0,", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return sum([int(x) * int(y) for x, y in zip(a, b)])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if not a or not b:\n        return 0\n    else:\n        if int(str(a)[-1])*int(str(b)[-1])>9 or int(str(a)[-1])*int(str(b)[-1])<0:\n            return 0\n        else:\n            return int(str(a)[-1])*int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # YOUR CODE HERE\n    return str(a * b)\n    \nmultiply(int(input()), int(input()))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    def unit_digit(number):\n        \"\"\"Return the unit digit of a number.\"\"\"\n        while number > 0:\n            number = number / 10\n        return str(number)\n\n    if type(a) == str and type(b) == str:\n        a = int(a)\n        b = int(b)\n        return str(a * b)\n    else:\n        return print(\"This is not a valid input.\")", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    print(a, b)\n    return int(a) * int(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    # The following code snippet is a working version\n    # It should be adapted to solve the exercise\n\n    a = int(a)\n    b = int(b)\n\n    # This code computes the values of i and j for which\n    # the unit digit of i*a + j*b is equal to the unit digit of \n    # the product\n    i = 1\n    j = 0\n    while True:\n        print(i, j)\n        print(a, b)\n        print(i*a + j*b)\n        #print(bin(i*a + j*b))\n        # Compute the product of the unit digits of a and b\n        prod = (a // 10) * (b // 10)\n        # A product of 0 means a and b are both even\n        if prod == 0:\n            print(\"Even\")\n            break\n        # Otherwise, multiply by the inverse of the unit digit of the\n        # product. This is done by using division by 10\n        prod = 10 - prod\n        print(prod)\n        if prod > 9:\n            prod = 10 - prod\n        i = i * prod\n        j = j * prod\n        # If i*a + j*b >= 10**10, then the unit digits of a and b\n        # do not match the unit digit of the product\n        if i*a", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if (a < 0 or b < 0):\n        return 0\n    elif (a == 0 and b == 0):\n        return 0\n    else:\n        return (b * int(str(a)[-1]))%10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n    if a < 0 or b < 0:\n        return 0\n\n    if a == 0 or b == 0:\n        return 0\n\n    if int(math.fabs(a)) == math.fabs(a):\n        return int(math.fabs(a)) * int(math.fabs(b))\n\n    if int(math.fabs(b)) == math.fabs(b):\n        return int(math.fabs(b)) * int(math.fabs(a))\n\n    return int(math.fabs(a)) * int(math.fabs(b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0:\n        return 0\n    elif b == 0:\n        return 0\n    elif a < 0:\n        return -multiply(-a, b)\n    elif b < 0:\n        return -multiply(a, -b)\n    elif a < 10:\n        return 0\n    elif b < 10:\n        return 0\n    elif a < 100:\n        a *= 10\n        b *= 10\n        return (a % 10) * (b % 10)\n    elif b < 100:\n        a *= 10\n        b *= 10\n        return (a % 10) * (b % 10)\n    else:\n        return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(''.join(a), 2) * int(''.join(b), 2)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    while True:\n        try:\n            a = a/10\n            b = b/10\n        except:\n            break\n    return (a + b)%10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return a * 10 + b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a, b = int(a), int(b)\n    unit_digits = 0\n    while a and b > 0:\n        unit_digits += int(a % 10)\n        a //= 10\n        b //= 10\n    return unit_digits", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    if a < 10 and b < 10:\n        return a * b\n    else:\n        return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if type(b) is not int:\n        return None\n    if type(a) is not int:\n        return None\n    if a < 0 or b < 0 or (a < 10) or (b < 10):\n        return None\n    x = int(str(a)[-1]) * int(str(b)[-1])\n    return x", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = a%10\n    b = b%10\n\n    if a and b:\n        if a == b and a!= 0:\n            return a\n    else:\n        return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n\n\n\n\na = int(input('Enter first number:'))\nb = int(input('Enter second number:'))\nunit_1 = str(a)[0]\nunit_2 = str(b)[0]", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(a * b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    import math\n    return math.factorial(a)*math.factorial(b)*math.factorial(a+b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # write code here", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def unit_digit(num):\n        digit = int(str(num)[-1])\n        return digit\n    if a < 0 or b < 0 :\n        raise ValueError(\"Values must be positive.\")\n    return unit_digit(a) * unit_digit(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0:\n        return 0\n    else:\n        return a % 10 * b % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def digit_product(a, b):\n        unit_product = a * b\n        if 0 < unit_product <= 9:\n            return unit_product\n        else:\n            return 0\n    return digit_product(int(a), int(b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if b == 0:\n        return a\n    if b < 0:\n        return 0\n    return int(a%10) * multiply(b, 10 - int(a%10)) + int(b%10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    unit = 0\n    if a < 0:\n        a = -a\n    if b < 0:\n        b = -b\n    if a < b:\n        unit = a % 10\n    else:\n        unit = b % 10\n    return 10 * unit * unit", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return str(a*b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    #  Multiplying the unit digits is easy\n    #  This is the first time you can do it yourself.\n    #  You will soon use the % operator to do the work for you.\n    unit_digits = a % 10\n    unit_digits = b % 10\n    #  Now you must add them up.\n    #  This is the first time you can use a for loop.\n    product = unit_digits\n    for i in range(1, 10):\n        product += unit_digits * i\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(str(a)[-1] * str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    res = 0\n    while a!= 0 and b!= 0:\n        if a % 10!= 0 or b % 10!= 0:\n            a, b = b % 10, a % 10\n            res += b\n        else:\n            a, b = b, 0\n        return res", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return unit_digits(a*b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        return 0\n    else:\n        return int(str(a)[-1]) * int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n    print (\"multiply({}, {}) should return {}.\".format(a, b, a*math.pow(10,int(math.log10(a))+1)+b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(a * b) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if not (isinstance(a, int) and isinstance(b, int)):\n        return None\n\n    if (a < 0 or b < 0):\n        return None\n\n    return (a * b) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    return (10 ** (len(str(a)) - 1) * 10 ** (len(str(b)) - 1)) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"a or b is not positive\")\n    c = 0\n    while a!= 0 and b!= 0:\n        if a % 10 > b % 10:\n            a = a // 10\n            c += 1\n        else:\n            b = b // 10\n            c += 1\n    return c", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    a, b = int(a), int(b)\n    if a < 0 or b < 0:\n        return 0\n    if a < 10:\n        return b * a\n    if b < 10:\n        return a * b\n    if a > b:\n        return multiply(a, b % 10) * 10 + (b / 10)\n    else:\n        return multiply(b, a % 10) * 10 + (a / 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert type(a) == int\n    assert type(b) == int\n\n    if a == 0 or b == 0:\n        return 0\n    if a < 0:\n        a = -a\n    if b < 0:\n        b = -b\n\n    # calculate the product\n    res = 0\n    while a!= 0 or b!= 0:\n        res = res * 10 + a + b\n        a = a / 10\n        b = b / 10\n\n    return res", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0:\n        a *= -1\n    if b < 0:\n        b *= -1\n    if a == 0 or b == 0:\n        return 0\n    unit_digits = a // 10, b // 10\n    return 10 * multiply(unit_digits[0] * 10 + a % 10, unit_digits[1] * 10 + b % 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"ValueError: a and b must be positive numbers.\")\n    else:\n        result = 0\n        # Why is it important to multiply the unit digits and not the whole numbers?\n        while a!= 0:\n            result += (10 ** (a - 1)) * (10 ** (b - 1))\n            a, b = b, a % 10\n        return result", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    result = 0\n    while(a!= 0 or b!= 0):\n        if(a % 10 == b % 10):\n            result += a % 10\n        a /= 10\n        b /= 10\n    return result", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    num = 0\n    while a!= 0:\n        num = num * 10 + int(a % 10)\n        a = int(a / 10)\n    while b!= 0:\n        num = num * 10 + int(b % 10)\n        b = int(b / 10)\n    return num", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return a*b%10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def digit(num):\n        if num < 10:\n            return num\n        else:\n            return 0\n    def multiply(a, b):\n        a = digit(a)\n        b = digit(b)\n        product = a * b\n        if product < 10:\n            return product\n        else:\n            return 0\n    return multiply", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    sum = 0\n    while a!= 0:\n        sum += a % 10\n        a //= 10\n    while b!= 0:\n        sum += b % 10\n        b //= 10\n    return sum", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # TODO: implement this function\n    return a * b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    product = 0\n    if a >= 0 and b >= 0:\n        while a and b:\n            product = 10*product + a % 10\n            a = a // 10\n            b = b // 10\n    if a < 0:\n        product = 10*product + a % 10\n        a = a // 10\n    if b < 0:\n        product = 10*product + b % 10\n        b = b // 10\n    return product\n\n\"\"\"\nThis program illustrates how to use recursion.\n\"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    product = 0\n    while a!= 0:\n        product = 10 * product + a % 10\n        a //= 10\n    while b!= 0:\n        product = 10 * product + b % 10\n        b //= 10\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # complete this function\n    pass", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # the product of the unit digits is equal to the sum of the digits\n    # between the decimal points\n    num1 = float(a)\n    num2 = float(b)\n    unit1 = num1 % 10\n    unit2 = num2 % 10\n    sum = (num1 - unit1) + (num2 - unit2)\n    return sum", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    return(a*b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    answer = 0\n    if a < 0 or b < 0:\n        return 0\n\n    for i in range(0, len(str(b))):\n        if str(a)[i]!= str(b)[i]:\n            answer = answer + int(str(a)[i]) * int(str(b)[i])\n\n    return answer", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n\n    try:\n        a, b = int(a), int(b)\n    except:\n        print \"ERROR: invalid input\"\n        return -1\n\n    def check_answer(a, b):\n        \"\"\"Checks if the given answer is correct.\"\"\"\n        if a == b:\n            return True\n        else:\n            return False\n\n    if a < 0 or b < 0:\n        print \"ERROR: negative numbers are not allowed\"\n        return -1\n\n    if check_answer(a, b):\n        return a * b\n\n    if a < 10:\n        answer = a + b\n        if check_answer(answer, math.floor(answer/10)):\n            return answer\n    else:\n        if check_answer(a, math.floor(a/10)):\n            return a * 10\n        if check_answer(b, math.floor(b/10)):\n            return a * b * 10\n        else:\n            print \"ERROR: No solution\"\n            return -1\n\n    print \"ERROR: No solution\"\n    return -1\n\n</s>", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    a = abs(a)\n    b = abs(b)\n    if a < 0 or b < 0:\n        a, b = -b, -a\n    return 0\n\nA:\n\nIf you think about it, multiplication of two integers with one digit in their representation will always result in an integer with two digits in its representation. Consider that multiplication of 1 x 1 = 1, and not 0. Then you can simply use the representation of the integers to work out the answer. For example, if a = 4, and b = 5, then a*b = 4 x 5 = 20, so the unit digits will be 1 x 1 = 1. In addition, since the units digits are the same, the answer will be a positive number. Your multiply() function would then look like this:", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a, b = int(a), int(b)\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Complete the function here\n    pass", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Solution 1\n    #num1 = int(a / 10)\n    #num2 = int(b / 10)\n    #return (num1 * num2) % 10\n    # Solution 2\n    a = int(a)\n    b = int(b)\n    return ((a + b) * 10) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if (a < 0) or (b < 0):\n        print '%d,%d is not a valid input.' % (a, b)\n        return\n    return (a - 10) * (b - 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 10:\n        if b < 10:\n            return a * b\n        else:\n            return 0\n    elif b < 10:\n        return 0\n    else:\n        return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = a % 10\n    b = b % 10\n    if a == b:\n        return 0\n    return a * b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def count_digit(num):\n        count = 0\n        while num > 0:\n            count += int(num % 10)\n            num //= 10\n        return count\n    num1 = count_digit(a)\n    num2 = count_digit(b)\n    return num1 * num2", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a, b = map(int, [a, b])\n    if not a or not b:\n        return 0\n    result = 0\n    while a:\n        result += (a % 10) * (b % 10)\n        a, b = a // 10, b // 10\n    return result", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(''.join(map(str, [a, b])))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return a*10+b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Complete the function below.\n    # Do not write main() function.\n    if a < 0 or b < 0:\n        return 0\n    if a < 10 and b < 10:\n        return int(a + b)\n    elif a >= 10 and b >= 10:\n        return int(a + b % 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    # Simple method\n    if a < 10:\n        a = (a + 10) % 10\n    if b < 10:\n        b = (b + 10) % 10\n    return a * b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(str(a) + str(b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    n = 0\n    for i in range(len(a)):\n        n = n + a[i] * b[len(a) - i - 1]\n    return n", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    num = 0\n    while a!= 0:\n        num += a % 10\n        a /= 10\n    while b!= 0:\n        num += b % 10\n        b /= 10\n    return num", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(a) * int(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def unit_digit(n):\n        \"\"\"This function takes a positive integer as an input, returns \n        the unit digit of the number. If the number is a multiple of 10, \n        it will return 0.\n        Examples:\n        unit_digit(12) should return 1.\n        unit_digit(20) should return 0.\n        \"\"\"\n        if n % 10 == 0:\n            return 0\n        else:\n            return n % 10\n\n    return unit_digit(a) * unit_digit(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import math\n    def mult(a,b):\n        if a < 0 or b < 0:\n            return 0\n        if int(a)<10 and int(b)<10:\n            return int(a)*int(b)\n        else:\n            return mult(int(a)/10, int(b)/10)\n    return mult(a,b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    x = int(str(a)[-1])\n    y = int(str(b)[-1])\n    product = x * y\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    # your code here\n    # your code here\n\n    # Test whether numbers are positive\n    if a<0 or b<0:\n        return 0\n\n    # Convert numbers to strings\n    aStr=str(a)\n    bStr=str(b)\n\n    # Get the units digits\n    aUnit=aStr[-2:]\n    bUnit=bStr[-2:]\n\n    # multiply units\n    aProd=aUnit*bUnit\n\n    # Return the result\n    return int(aProd)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        return a * b\n    else:\n        return int(str(a)[-1]) * int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    while True:\n        a = int(a)\n        b = int(b)\n        if(a == 0 or b == 0):\n            return 0\n        else:\n            a = a/10\n            b = b/10\n    return a*b\n\na = input(\"Enter an integer: \")\nb = input(\"Enter an integer: \")", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 10**len(a)*b*(10**len(b))+int(a[-1])*(10**len(b)-int(b[-1]))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return a*b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Complete this function\n    print(a, b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Complete this function\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"a and b must be non-negative\")\n    if not 0 < a <= 10 or not 0 < b <= 10:\n        raise ValueError(\"a and b must be between 0 and 10\")\n    return (10 - a) * (10 - b) * 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if type(a) == type(b) == int:\n        if len(str(a)) == 1:\n            return str(a)*str(b)\n        else:\n            return 0\n    elif type(a) == int and type(b) == str:\n        return multiply(int(b), a)\n    elif type(a) == str and type(b) == int:\n        return multiply(b, int(a))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    print(a*b)\n\nmultiply(int(input()), int(input()))\n\nA:\n\nSince you only need the last digit, it is easy enough to do with a single int division:", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = int(a)\n    b = int(b)\n    product = 0\n    while a > 0 or b > 0:\n        product = 10 * product + int(a) % 10 + int(b) % 10\n        a /= 10\n        b /= 10\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(a) * int(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    while True:\n        a, b = b%10, a%10\n        if a == 0 and b == 0:\n            return a", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    print(a)\n    print(b)\n    return a*b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return sum([a * int(b / 10) for b in str(b)])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0 or a > 9 or b > 9:\n        raise ValueError(\"Invalid input.\")\n\n    if a < 10:\n        a = str(a)\n    else:\n        a = str(a % 10)\n\n    if b < 10:\n        b = str(b)\n    else:\n        b = str(b % 10)\n\n    product = int(a) * int(b)\n\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    def digits(n):\n        d = 0\n        while n>0:\n            d = d*10 + n%10\n            n = n // 10\n        return d\n    \n    return digits(a) * digits(b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    def unit_digit(number):\n        \"\"\"returns the unit digit of a number\"\"\"\n        return str(number)[-1]\n\n    def product(a, b):\n        \"\"\"returns the product of the unit digits\"\"\"\n        if a == 0:\n            return 0\n        else:\n            return int(a) * int(b)\n\n    return product(unit_digit(a), unit_digit(b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < 0 or b < 0:\n        return 0\n    return a * b % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    pass", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(\"\".join(map(str, [int(x) * int(y) for x, y in zip(str(a), str(b))])))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = str(a)\n    b = str(b)\n    product = 0\n    while a or b:\n        if a and b:\n            product += int(a[-1]) * int(b[-1])\n        if not a:\n            product += int(b[-1])\n        if not b:\n            product += int(a[-1])\n        a = a[:-1]\n        b = b[:-1]\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return int(str(a)[-1]) * int(str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    pass", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = list(str(a))\n    b = list(str(b))\n\n    return sum(a[i] * b[i] for i in range(len(a)))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return(a * b)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    product = 0\n\n    while a or b:\n        product *= 10\n        if a:\n            product += a % 10\n        if b:\n            product += b % 10\n        a //= 10\n        b //= 10\n\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert isinstance(a, int) and isinstance(b, int)\n    assert 0 <= a < 1000 and 0 <= b < 1000\n    return (a * b) % 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    unit_digits = [int(digit) for digit in str(a) + str(b)]\n    return unit_digits[0] * unit_digits[1]", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if type(a) is not int or type(b) is not int:\n        raise ValueError(\"Input must be integers\")\n\n    # Get the unit digits\n    a, b = int(str(a)[-1]), int(str(b)[-1])\n\n    # If we need to carry out the multiplication\n    while a + b > 9:\n        a, b = (a + b - 10) % 10, (a + b - 10) % 10\n\n    # Calculate the result\n    product = a * b\n    return product", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    sum1 = 0\n    for i in range(len(str(a))):\n        sum1 += int(a[i])*int(b[i])\n    return sum1", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return input(\"What is the product of the unit digits of {} and {}: \".format(a, b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    result = 0\n    a = a + 0\n    b = b + 0\n    while a!= 0 or b!= 0:\n        if a % 10!= 0 and b % 10!= 0:\n            return result\n        result = result * 10\n        a = a / 10\n        b = b / 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def product(a, b):\n        if a == 0 or b == 0:\n            return 0\n        else:\n            return str(a * b)[-1]\n    return product(int(a), int(b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return (a//10)*(b//10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    while a!= 0 and b!= 0:\n        if a % 10 == 0:\n            return a * b\n        if b % 10 == 0:\n            return a * b\n        a = a / 10\n        b = b / 10\n\n    if a == 0 and b == 0:\n        return 0\n    elif a == 0 and b!= 0:\n        return b * 10\n    elif a!= 0 and b == 0:\n        return a * 10", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a = list(str(a))\n    b = list(str(b))\n    return sum([int(c) * int(d) for c, d in zip(a, b)])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Your code here", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    def unitDigit(n):\n        return str(n)[-1]\n    return int(unitDigit(a) * unitDigit(b))", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 1", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    # Your code here\n    # def multiply(a,b):\n    #   i = 0\n    #   while a!= 0 and b!= 0:\n    #     a, b = a%10, b%10\n    #     i = i * 10\n    #   return i\n    #\n    # def main():\n    #   a = int(input(\"Enter first number:\"))\n    #   b = int(input(\"Enter second number:\"))\n    #   c = multiply(a,b)\n    #   print(c)\nmain()\n\nA:\n\nIn Python 2.x, the return value from the main function is returned as the value from the program. In Python 3.x, the return value from main is ignored.", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return(0)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return 0", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Write your code here\n    a = a * 10\n    b = b * 10\n    total = 0\n    if a > 9:\n        total += a%10 * b%10\n    if b > 9:\n        total += b%10 * a%10\n    return total\n\nnum1 = input(\"Enter first number: \")\nnum2 = input(\"Enter second number: \")", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert a > 0\n    assert b > 0\n    assert a < 100\n    assert b < 100\n    return str(a)[-1]*str(b)[-1]", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    digits = [int(i) for i in str(a)+str(b)]\n    return digits[len(digits)-1]", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return str(a)[-1] * str(b)[-1]", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    import sys\n    if a % 10 == 0 and b % 10 == 0:\n        return 0\n    else:\n        return a * b", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n\n    print(\"product of unit digits of\", a, \"and\", b, \"is\", end=' ')\n    print(int(a) * int(b))\n    #first check if the numbers are valid\n    if not (-1 <= int(a) <= 9 and -1 <= int(b) <= 9):\n        print(\"the numbers are not valid\")\n        return\n    #then we can multiply them\n    product = int(a) * int(b)\n    print(\"the product is:\", product)\n    if int(product) % 10 == 0:\n        print(\"the product is an integer, so\", end=' ')\n        print(\"the product of the unit digits is\", product % 10)\n    else:\n        print(\"the product is not an integer, so\", end=' ')\n        print(\"the product of the unit digits is\", product % 10)\n    print(\".\")\n\nmultiply(input(\"Enter two numbers: \"))\n\nSo, if the user enters 14 and -15, I want it to print out 20. But instead, it prints out -14, and the program freezes. I think it's because it's trying to convert negative numbers into positive numbers. How can I make it so that I", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Convert the two numbers into strings.\n    x = str(a)\n    y = str(b)\n\n    # Convert the strings to int's.\n    x_int = int(x)\n    y_int = int(y)\n\n    # Find the units digit of x_int and y_int.\n    x_digit = str(x_int).rjust(1, '0')\n    y_digit = str(y_int).rjust(1, '0')\n\n    # Multiply the digits.\n    x_digit *= y_digit\n\n    # Convert back to int.\n    return int(x_digit)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError('Invalid input')\n    a, b = abs(a), abs(b)\n    multiplier = int(str(a)[-1])\n    c = multiplier * int(str(b)[-1])\n    return c", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    assert type(a) == int, a\n    assert type(b) == int, b\n    return(str(a)[-1] * str(b)[-1])", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    # Implement it here.", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    if (a % 10) * (b % 10) == 0:\n        return 0\n    else:\n        return (a % 10) * (b % 10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    a,b = map(int, a), map(int, b)\n    if a>9 or b>9:\n        raise ValueError\n    if a==b==0:\n        return 0\n    if a==b==1:\n        return a\n    if a==b==9:\n        return a+b\n    return (a+b)%10*(a*b%10)", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"", "def multiply(a, b):\n    \"\"\"Complete the function that takes two integers and returns \n    the product of their unit digits.\n    Assume the input is always valid.\n    Examples:\n    multiply(148, 412) should return 16.\n    multiply(19, 28) should return 72.\n    multiply(2020, 1851) should return 0.\n    multiply(14,-15) should return 20.\n    \"\"\"\n    return (b // a) * 10 + (b % a)"]]