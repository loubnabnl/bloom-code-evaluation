[["def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs = list(map(float, xs))\n    n = len(xs)\n    ys = []\n    for i in range(n):\n        ys.append(xs[i])\n    for i in range(n):\n        for j in range(n-i):\n            ys.append(xs[i]*xs[j])\n    return ys", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if not xs:\n        return []\n    elif len(xs) == 1:\n        return [xs[0]]\n    else:\n        return [xs[0]] + [xs[1] + derivative(xs[1:])[0]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if not xs:\n        return []\n    return [xs[0] + xs[i] * xs[1:] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    def _derivative(x):\n        return x + sum([(xs[i + 1]) * (x ** i) for i in range(len(xs) - 1)])\n    return map(_derivative, xs)", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    ys = []\n    for i in range(len(xs)):\n        if i == 0:\n            ys.append(1)\n        else:\n            ys.append(xs[i - 1] * i)\n    return ys", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] + xs[1] * x + xs[2] * x * x +... for x in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [sum(x * (i + 1) for i, x in enumerate(xs[1:])) for x in xs[:-1]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # This function is a bit too complicated, but it works.\n    # If we take only first derivative, the answer is\n    # (xs[0] + xs[1] * x) * (1 + x)\n    # We can add another (xs[2] * x^2) * (1 + x) and so on.\n    # But the second derivative is a bit more complicated.\n    # For example, we can write the second derivative as\n    # xs[0] + xs[1] * x + xs[2] * x^2 + xs[0] * xs[1] * x + xs[0] * xs[2] * x^2\n    # + xs[1] * xs[2] * x^3\n    # We can continue like this for n-th derivative. It is a bit tricky.\n    # The idea is to add (xs[0] + xs[1] * x +... + xs[n] * x^n)\n    # * (1 + x + x^2 +... + x^n) to the answer.\n    # This is exactly what we do in this function.\n    # We can take the derivative of polynomial as\n    # (xs[0] + xs[1] * x +... + xs[n] * x^n) * (1 + x + x^2 +... + x^n)\n    # and the derivative of this answer is the same as the original answer.\n    # So", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) < 1:\n        return []\n    else:\n        return [xs[-1]] + [xs[i - 1] * xs[i] for i in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[3], xs[5], xs[7]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[j] for j in range(len(xs)) if j > 0]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # sum(xs) is a constant term of the derivative.\n    # The rest is the derivative of the rest.\n    sum = sum(xs)\n    return [xs[0] + sum] + derivative([xs[1:] for x in xs])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs = [-1, 0, 1]\n    # D = [-1, 1, 0]\n    # D[0] = 1\n    # D[1] = -1\n    # D[2] = 0\n    D = [-1 for _ in xs]\n    for i in range(len(xs) - 1):\n        D[i] = D[i] * i + xs[i + 1]\n    return D", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[-1] + xs[-2] * x + xs[0] * x ** 2]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(i * xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * (i + 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) < 2:\n        return []\n    result = []\n    for i in range(len(xs)):\n        result.append(xs[i])\n    for i in range(len(xs)):\n        result.append(result[i] * (len(xs) - 1 - i))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[-1], sum(xs[i + 1] * x for i in range(len(xs) - 1))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    dxs = [xs[0] + xs[i] * xs[n - i - 1] for i in range(1, n)]\n    return dxs\n\nxs = [3, 1, 2, 4, 5]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return xs[1:] + [xs[0] * x + derivative(xs[1]) for x in xs[2:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 1:\n        return xs\n    return [xs[1], xs[0] + xs[1] * xs[-1] + xs[2] * xs[-2] * x for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] + i * xs[i] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] + xs[1], xs[0] * xs[1] + xs[2], xs[0] * xs[1] * xs[2]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i, x in enumerate(xs):\n        result.append(x)\n        result.append(i + 1)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is a list of coefficients of the polynomial.\n    # We want to return a list of coefficients of the derivative.\n    # First, make the polynomial.\n    # The derivative of a constant is zero.\n    # The derivative of a polynomial of degree one is the same polynomial.\n    # The derivative of a polynomial of degree two is the same polynomial multiplied by x.\n    # The derivative of a polynomial of degree three is the same polynomial multiplied by x^2.\n    # The derivative of a polynomial of degree four is the same polynomial multiplied by x^3.\n    # The derivative of a polynomial of degree five is the same polynomial multiplied by x^4.\n    # The derivative of a polynomial of degree six is the same polynomial multiplied by x^5.\n    # The derivative of a polynomial of degree seven is the same polynomial multiplied by x^6.\n    # The derivative of a polynomial of degree eight is the same polynomial multiplied by x^7.\n    # The derivative of a polynomial of degree nine is the same polynomial multiplied by x^8.\n    # The derivative of a polynomial of degree ten is the same polynomial multiplied by x^9.\n    # The derivative of a polynomial of degree eleven is the same polynomial multiplied by x^10.\n    # The derivative of a polynomial of degree twelve is the same polynomial multiplied by x^11", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [1]\n    return [(xs[-1]] + derivative(xs[:-1]))", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) <= 1:\n        return xs\n    else:\n        return [xs[0] + xs[i] * xs[-1] for i in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[i + 1] * (i + 1) for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[0] + xs[1] * i)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = [int(i) for i in xs]\n    result = []\n    for i in range(len(xs) - 1):\n        result.append(xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return xs[0] + [xs[1] * x + xs[2] * x**2 + xs[3] * x**3 + xs[4] * x**4 + xs[5] * x**5 for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[0] + xs[1], xs[0] + xs[1] + xs[2]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i, x in enumerate(xs):\n        result.append(x)\n        for j in range(i):\n            result.append(x * xs[i])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[3], xs[4], xs[5]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    def derivative(x):\n        x = list(x)\n        x[0] += 1\n        return x\n    return [derivative(x) for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * i)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0], xs[1], xs[2] * xs[-1], xs[1] * xs[-2], xs[2] * xs[-3], xs[-1] * xs[-3], xs[-2] * xs[-4]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    result = [xs[0]]\n    for i in range(1, n):\n        result.append(xs[i - 1] * i)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * (i + 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)  # copy xs\n    xs.pop()  # remove last element\n    for i in range(len(xs) - 1):\n        xs.append(xs[i + 1] * (i + 1))\n    return xs", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x)\n        result.append(x * x)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs) - 1\n    res = []\n    for i in range(n):\n        res.append(xs[i] * (n - i))\n    return res", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [(x * (x + 1)) for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] + xs[1] * x + xs[2] * x**2 + xs[3] * x**3 for x in range(1, len(xs) + 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    d = []\n    for i in range(len(xs)):\n        d.append(xs[i] * (i + 1))\n    return d", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [1]\n    else:\n        return [xs[0] + xs[1] * x for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = sorted(xs)\n    n = len(xs)\n    if n == 0:\n        return []\n    if n == 1:\n        return [xs[0]]\n    if n == 2:\n        return [xs[1], xs[0]]\n    if n == 3:\n        return [xs[2], xs[1], xs[0]]\n    if n == 4:\n        return [xs[2], xs[1], xs[0], 0]\n\n    d = []\n    for i in range(n-1, -1, -1):\n        d.append(xs[i] + sum(xs[i] * x for x in xs[1:i+1]))\n    return d", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x + sum([(y * x) for y in xs[1:]]))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[3], xs[4], xs[5]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * (i + 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs) - 1\n    return [xs[1] * xs[n] + xs[2] * xs[n - 1] + xs[3] * xs[n - 2] +... for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x + 1 for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[0] + xs[1] * x + xs[2] * x**2 +... + x**(len(xs) - 1)] + \\\n            derivative([xs[-1]] + derivative(xs[0:-1]))", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    for i in range(n-1, -1, -1):\n        xs.append(xs[i+1] * i)\n    return xs", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)\n    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [1]\n    x = xs[-1]\n    return [x + xs[i] for i in range(len(xs) - 1)] + derivative(xs[0:-1])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is list of coefficients of a polynomial\n    # the derivative of a constant is 0\n    if not xs:\n        return []\n    # the derivative of a linear polynomial is a constant\n    elif len(xs) == 1:\n        return [0]\n    # the derivative of a quadratic polynomial is a linear polynomial\n    elif len(xs) == 2:\n        return [xs[1], xs[0]]\n    # the derivative of a polynomial of degree n is a polynomial of degree n-1\n    # the derivative of a polynomial is the coefficient of the next power\n    # divided by the current power\n    else:\n        return [xs[i + 1] / xs[i] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        if i > 0:\n            result.append(xs[i - 1] * i)\n        else:\n            result.append(xs[0])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) <= 1:\n        return xs\n    else:\n        return [xs[i + 1] for i in range(len(xs))] + derivative(xs[0:-1])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [(x * (x + 1)) for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x + 1 for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(reversed(xs))\n    return [(xs[i] + xs[i + 1]) * i for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] * (x + 1) + xs[1] * x + xs[2] * x**2 for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    ans = [0] * len(xs)\n    for i in range(len(xs)):\n        for j in range(i + 1, len(xs)):\n            ans[i] += xs[j] * (i + 1)\n    return ans", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i, x in enumerate(xs):\n        if i == 0:\n            result.append(1)\n        else:\n            result.append(xs[i] * x)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    if len(xs) == 0:\n        return result\n    result.append(xs[0])\n    for i in range(1, len(xs)):\n        result.append(result[-1] + xs[i] * result[-2])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(i + 1)\n    for i in range(len(xs) - 1, -1, -1):\n        result.append(result[i] * xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x)\n        for i in range(1, len(x)):\n            result.append(x[i] * x[i - 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [(x * i) for i, x in enumerate(xs)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) < 2:\n        return xs\n    return [xs[0], xs[0] * xs[1], xs[0] * xs[1] * xs[1]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    return [xs[i + 1] * (i + 1) for i in range(n)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # we have to do the same thing for each x\n    # we have to add the derivative of each term\n    return [xs[0] + xs[1] * x + xs[2] * x ** 2 +... for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    elif len(xs) == 1:\n        return [xs[0]]\n    else:\n        return [xs[0] + xs[1] * xs[-1]] + derivative(xs[1:])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 1:\n        return xs\n    else:\n        return xs[0] + xs[1] * xs[0] + xs[2] * xs[0] ** 2", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x + y for x, y in zip(xs, xs[1:])]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) < 2:\n        return xs\n    else:\n        return [xs[i] + (xs[i + 1] * (i + 1)) for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    ret = []\n    for i in range(len(xs)):\n        ret.append(xs[i] * i + xs[i+1])\n    return ret", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    ret = []\n    for i in range(len(xs)):\n        ret.append(xs[i] * (i + 1))\n    return ret", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    assert len(xs) > 0\n    res = []\n    for i in range(len(xs)):\n        for j in range(1, i+1):\n            res.append(xs[i] * xs[j])\n    return res", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    assert len(xs) > 0\n    return [xs[0] + i * xs[i] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)-1):\n        result.append(xs[i+1] * i)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if not xs:\n        return []\n    if len(xs) == 1:\n        return [1]\n    else:\n        result = []\n        for i in range(1, len(xs)):\n            result.append(xs[i-1] + xs[i] * xs[i-1])\n        return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    return [xs[0] + xs[1] * x for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    result = []\n    for i in range(n-1):\n        result.append(xs[i+1] * (i+1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x * (x + 1) for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = sorted(xs)\n    if len(xs) == 0:\n        return []\n    elif len(xs) == 1:\n        return [1]\n    else:\n        return [(xs[-1] + xs[-2]) * xs[-3]] + derivative(xs[0:-2])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[0] + xs[1] * x + xs[2] * x ** 2 +...]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    result = [-1] * n\n    for i in range(n-1):\n        result[i] = (xs[i+1] + result[i+1]*(i+1)) * (i+2)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x * x for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)\n    xs.append(1)\n    return [sum(xs[i:]) for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    for i in range(len(xs)-1, 0, -1):\n        xs[0] = xs[0] + (xs[i + 1] * i)\n\n    return xs", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i, x in enumerate(xs):\n        result.append(xs[i] + (xs[i] * i) * x)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    return [xs[i + 1] for i in range(n - 1)] + [xs[n - 1]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[0] + xs[1] * x for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    ans = []\n    for x in xs:\n        ans.append(x + sum(xs[i + 1:]) * x ** i)\n    return ans", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    return [xs[0] + xs[i] for i in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    # xs represent coefficients of a polynomial\n    # the derivative of this polynomial is the same\n    # with the coefficients multiplied by x\n    if n == 1:\n        return [1.0]\n    else:\n        return [x * (n - 1) for x in xs] + derivative(xs)", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs.sort()\n    return [xs[1], xs[3], xs[4]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[0] + xs[1], xs[1] + xs[2], xs[2] + xs[3]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[-1] + xs[-2] * x + xs[-3] * x * x for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x * x for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)\n    res = [None] * len(xs)\n    for i in range(len(xs)):\n        res[i] = sum([xs[i + 1] * j for j in range(len(xs) - i - 1)])\n    return res", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) <= 1:\n        return xs\n    else:\n        return [xs[0] + xs[i] * (i + 1) for i in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    elif n == 1:\n        return [xs[0]]\n    else:\n        return [xs[0] + xs[1] * xs[-1] for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * (len(xs) - i - 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * (i + 1))\n\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x * x for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    y = []\n    for i in range(len(xs)):\n        y.append(xs[i] * (i + 1))\n    return y", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [xs[0]]\n    if len(xs) == 2:\n        return [xs[0] + xs[1] * xs]\n    if len(xs) == 3:\n        return [xs[0] + xs[1] * xs[1] + xs[2] * xs]\n    if len(xs) == 4:\n        return [xs[0] + xs[1] * xs[1] + xs[2] * xs[2] + xs[3] * xs]\n    if len(xs) == 5:\n        return [xs[0] + xs[1] * xs[1] + xs[2] * xs[2] + xs[3] * xs[3] + xs[4] * xs]\n    if len(xs) == 6:\n        return [xs[0] + xs[1] * xs[1] + xs[2] * xs[2] + xs[3] * xs[3] + xs[4] * xs[4] + xs[5] * xs]\n    if len(xs) == 7:\n        return [xs[0] + xs[1] * xs[1] + xs[2] * xs[2] + xs[3] * xs[3] + xs[4] * xs[4] + xs[5] * xs[5] + xs[6] * xs]\n    if len(xs) == 8:\n        return [xs[0] + xs[1] * xs[1]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    assert len(xs) > 0\n    return [xs[i + 1] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [(xs[i] * (i + 1)) for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if not xs:\n        return []\n    return [(xs[x] + xs[x+1:])[1:] for x in xrange(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[0] * xs[1] + xs[2], xs[0] * xs[1] * xs[3] + xs[0] * xs[2]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] * (x + 1) + xs[1] * x + xs[2] * x * x +... for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    d = []\n    for i in range(len(xs)):\n        d.append(xs[i])\n    for i in range(len(xs)):\n        d[i] = d[i] * (i+1)\n    return d", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0], xs[1] * 2, xs[2] * 3, xs[3] * 4]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) <= 1:\n        return xs\n    else:\n        return [xs[-1] + xs[-2] * xs[-3]] + derivative(xs[0:-1])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # create a new list\n    ys = []\n    # for each element in xs, do the following\n    for i in range(len(xs)):\n        ys.append(0)\n        for j in range(len(xs)):\n            if i!= j:\n                # multiply the two elements in xs\n                ys[i] += xs[i] * xs[j]\n    return ys", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x)\n        for i in range(len(x)-1):\n            result.append(x[i] + x[i+1] * x[i])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = [int(x) for x in xs]\n    result = [xs[0]]\n    for i in range(1, len(xs)):\n        result.append(result[i-1] + xs[i] * i)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is a list of coefficients\n    # returns a list of coefficients\n    if len(xs) == 0:\n        return []\n\n    # get the degree of the polynomial\n    degree = len(xs) - 1\n\n    # initialize the result list\n    result = []\n\n    # if the degree is zero, return an empty list\n    if degree == 0:\n        return []\n\n    # if the degree is one, return a list of one element\n    if degree == 1:\n        result = [xs[0] + xs[1] * xs]\n\n    # if the degree is two, return a list of two elements\n    if degree == 2:\n        result = [xs[0] + xs[1] * xs + xs[2] * xs * xs]\n\n    # if the degree is three, return a list of three elements\n    if degree == 3:\n        result = [xs[0] + xs[1] * xs + xs[2] * xs * xs + xs[3] * xs * xs * xs]\n\n    # if the degree is greater than three, do a loop\n    else:\n        for i in range(degree):\n            result.append(xs[0] + xs[1] * xs + xs[2] * xs * xs +... + xs[i] * xs ** (degree - i))\n\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs) - 1):\n        result.append(xs[i] + xs[i + 1] * (i + 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    elif len(xs) == 1:\n        return [xs[0]]\n    else:\n        return [xs[0] + xs[1] * xs[-1]] + derivative(xs[2:])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x + 1 for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is a list of coefficients. So we use the formula:\n    # derivative = (coefficient of x^n) / (n * (n + 1))\n    # We add one to n because n starts from 0.\n    # We divide by n * (n + 1) to normalize the result.\n    # We start from n = 0, so the first element in the result is the coefficient of x.\n    # The last element in the result is the constant term.\n    result = []\n    for i in range(len(xs)):\n        n = i + 1\n        result.append(xs[i] / (n * (n + 1)))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    assert len(xs) > 0\n    if len(xs) == 1:\n        return [1]\n    return [(xs[n + 1] - xs[n - 1]) / (n + 1) for n in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    derivative = [1] * (n + 1)\n    derivative[0] = 0\n    derivative[1] = xs[0]\n    for i in range(2, n + 1):\n        derivative[i] = derivative[i - 1] * i\n    return derivative", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    result = []\n    for i in range(n):\n        result.append(0)\n        for j in range(i + 1):\n            result[i] += xs[i] * xs[j]\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [xs[0]]\n    return [xs[0] + xs[i] for i in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[0])\n        for j in range(1, i + 1):\n            result[i] += (xs[i - j] * result[j])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)\n    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return xs\n    if len(xs) == 2:\n        return xs\n    if len(xs) == 3:\n        return xs\n    if len(xs) == 4:\n        return xs\n\n    coeffs = xs[0] + xs[1] * x + xs[2] * x ** 2\n    coeffs.append(xs[0] * x + xs[1] * x ** 2)\n    return coeffs", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [sum(x * (i + 1) for i, x in enumerate(xs)) for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    # The derivative of a constant is 0\n    if n == 0:\n        return []\n    # The derivative of a linear polynomial is 1\n    if n == 1:\n        return [xs[0]]\n    # The derivative of a quadratic polynomial is 2 * x * coeffs + coeffs\n    if n == 2:\n        return [2*xs[i] + xs[i+1]] * 2\n    # The derivative of a cubic polynomial is 3 * x^2 * coeffs + 3 * x * coeffs + coeffs\n    if n == 3:\n        return [3*xs[i]*xs[i] + 3*xs[i] + xs[i+1]] * 3\n    # The derivative of a quartic polynomial is 4 * x^3 * coeffs + 4 * x^2 * coeffs + 4 * x * coeffs + coeffs\n    if n == 4:\n        return [4*xs[i]*xs[i]*xs[i] + 4*xs[i]*xs[i] + 4*xs[i] + xs[i+1]] * 4\n    # The derivative of a polynomial of degree n is (n-1) * x^(n-1) * coeffs + (n-2) * x^(n-2) * coeffs +...\n    # + (n - 1) * x * coeff", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    assert len(xs) > 0\n    result = [xs[i] for i in range(len(xs))]\n    for i in range(len(xs)):\n        result[i] = result[i] * (i + 1)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[x] - xs[x - 1] for x in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs) - 1\n    if n == 0:\n        return [0]\n    else:\n        return [xs[n]] + derivative(xs[:n])", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs[0] + xs[1] * x + xs[2] * x^2 +..., where xs is a list of coefficients\n    # the derivative is the same form\n    # return [xs[0], xs[1], xs[2],...]\n    return [xs[0], xs[1], xs[2], xs[0] * xs[1], xs[0] * xs[2]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        result = [xs[0]]\n        for x in xs[1:]:\n            result.append(x * xs[0])\n        return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    return [xs[n-i-1] for i in range(n)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs) # copy\n    n = len(xs)\n    if n == 0:\n        return []\n    elif n == 1:\n        return [1]\n    else:\n        result = []\n        for i in range(n):\n            result.append(sum(xs[i] * x for x in xs[i+1:]))\n        return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs) - 1):\n        result.append(xs[i] * (i + 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[i + 1] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[0] + xs[1] * x + xs[2] * x ** 2 +... for x in range(1, len(xs) + 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x)\n        for i in range(len(x) - 1, -1, -1):\n            result.append(x[i] * x[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    out = []\n    for i in range(n):\n        out.append(sum(xs[i] * j for j in range(1, n + 1) if j <= i))\n    return out", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    if n == 1:\n        return [xs[0]]\n    return [xs[0] + i * xs[i] for i in range(1, n)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    else:\n        return [xs[0] + xs[i] for i in range(1, n)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is a list of coefficients.\n    # This code is a direct implementation of the formula\n    #     f'(x) = (x + x**2 + x**3 +...)(xs[0] + xs[1]*x +... + xs[i + 1]*x**i)\n    # It uses the fact that x**i * f(x) = f(x + i) + f(x - i) and\n    # f(x + i) = xs[0] + xs[1]*x +... + xs[i + 1]*x**i.\n    # Note that this code is not optimized.\n    if len(xs) < 2:\n        return []\n    else:\n        return [xs[i] + xs[i] * xs[i + 1] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    else:\n        return [xs[0] + xs[1], xs[0] * xs[1] + xs[1] * xs[2]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    ys = [xs[0]]\n    for i in range(1, n):\n        ys.append(xs[i] * i)\n    return ys", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * i + xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [x * (len(xs) - 1) for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [(i + 1) * xs[i] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)\n    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [1]\n    else:\n        return [xs[-1]] + list(map(lambda x: xs[-1]*x, xs)) + list(map(lambda x: xs[-1]*x*x, xs))", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[j + 1] for j in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[x] for x in range(len(xs)) if xs[x]!= 0]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[2], xs[3]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    return [xs[1], xs[2]] + [xs[2] * i for i in xs[3:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) < 1:\n        return []\n    if len(xs) == 1:\n        return [xs[0]]\n    return [xs[i] + derivative(xs[i+1:])[i] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    x = xs[0]\n    xs = xs[1:]\n    return [x + i * xs[i] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs = [x1, x2,... xn, xn+1]\n    # this is a standard recurrence relation\n    # xn = sum(xs[i] * (i + 1))\n    # x1 = 1, so xn = sum(xs[i] * i)\n    # derivative of this polynomial is sum of xs[i] * i * (i + 1)\n    # derivative of this polynomial is sum of xs[i] * (i + 1)\n    # derivative of this polynomial is sum of xs[i] * (i + 1) + xs[1] * (i + 1)\n    # derivative of this polynomial is sum of xs[i] * (i + 1) + xs[1] * (i + 1) + xs[2] * (i + 1)\n    return [(x * (i + 1)) for i, x in enumerate(xs)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[i + 1] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0], xs[1], xs[0] * xs[1] + xs[2], xs[0] * xs[1] * xs[2] + xs[3]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    else:\n        return [xs[0] + xs[1], xs[0] + xs[1] * xs[n - 1], xs[0] + xs[1] * xs[n - 1] + xs[2] * xs[n - 2], xs[0] + xs[1] * xs[n - 1] + xs[2] * xs[n - 2] + xs[3] * xs[n - 3], xs[0] + xs[1] * xs[n - 1] + xs[2] * xs[n - 2] + xs[3] * xs[n - 3] + xs[4] * xs[n - 4]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[i+1] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    if len(xs) == 0:\n        return result\n    if len(xs) == 1:\n        return [1]\n    for i in range(1, len(xs)):\n        result.append(xs[i])\n    for i in range(len(xs) - 1):\n        result.append(result[i] + result[i + 1] * xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(i + 1)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[1], xs[2], xs[3], xs[4], xs[5]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x + sum([xi*xi for xi in xs[0:len(x)]]))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    elif len(xs) == 1:\n        return [1]\n    else:\n        return [xs[1] + 2 * xs[0] * xs[-1] for x in xs[1:]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is a list of coefficients. They are all positive integers.\n    # The derivative of a polynomial is the sum of all terms of the form\n    # x^i * x^j *... * x^k, where the sum of i + j +... + k is equal to\n    # the degree of the polynomial. For example, the derivative of x^3 is\n    # 2x^3 + 3x^2 + 3x.\n    #\n    # We will use the fact that the derivative of x^i * x^j *... * x^k\n    # is i * x^j *... * x^k + j * x^i *... * x^k +... + k * x^i *...\n    #... * x^j.\n    #\n    # We will use the fact that the sum of the coefficients of a\n    # polynomial is equal to the degree of the polynomial.\n    #\n    # We will use the fact that the sum of the degrees of the terms of a\n    # polynomial is equal to the degree of the polynomial.\n    #\n    # We will use the fact that the sum of the degrees of the terms of the\n    # derivative of a polynomial is equal to the degree of the derivative of\n    # the polynomial.\n    #\n    # The derivative of", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # use the standard formula for derivative\n    # xs is a list of coefficients, so the derivative of the polynomial\n    # is the same list, but with each element xs[i] replaced by\n    # xs[i] * x + xs[i + 1]\n    #\n    # xs[i] * x is just x * xs[i], so we can do this recursively\n    #\n    # xs[i + 1] is the next term in the polynomial, so we can add it\n    # to the result of the recursive call\n    #\n    # note that we don't need to worry about xs[0], because it's not\n    # multiplied by x, and we don't need to worry about xs[-1], because\n    # the recursive call will do that\n    return [xs[i] * x + xs[i + 1] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    d = []\n    for x in xs:\n        d.append(x)\n        d.append(x * xs[1])\n        d.append(x * x * xs[2])\n    return d", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0], sum(x * i for i in xs)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for x in xs:\n        result.append(x)\n        for i in range(len(x)-1):\n            result.append(x[i] * x[i + 1])\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(reversed(xs))\n    d = []\n    for i in range(len(xs)):\n        d.append(xs[i + 1])\n        if i + 2 < len(xs):\n            d.append(xs[i + 2] * xs[i + 1])\n    return d", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[0] + xs[1] * xs[i] for i in range(len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [xs[i + 1] for i in range(len(xs) - 1)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [j * (i + 1) for i, j in enumerate(xs)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    return [xs[0] + xs[1] * x + xs[2] * x ** 2 +... for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i] * (i + 1))\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    y = [xs[0]]\n    for i in range(1, n):\n        y.append(xs[i - 1] * i)\n    return y", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    ret = []\n    for i in range(len(xs)):\n        ret.append(xs[i + 1])\n    return ret", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(xs[i + 1])\n\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    return [sum(x * i for i in xs) for x in xs]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [xs[0]]\n    else:\n        return [xs[i] + xs[i + 1] * i for i in range(1, len(xs))]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs is a list of coefficients\n    # the derivative of a polynomial is the same polynomial with\n    # each coefficient multiplied by the power of the variable\n    # and the variable raised to the next power\n    # e.g. derivative of x^3 is 3x^3\n    # derivative of x^2 is 2x^3\n    # derivative of x^1 is x^2\n    # derivative of 1 is 1\n    # derivative of 0 is 0\n    # derivative of -1 is 0\n    # derivative of -2 is 0\n    # derivative of -3 is 0\n    # derivative of 1 + x + x^2 is 1 + 2 * x + 3 * x^2\n    # derivative of 1 + x + x^2 + x^3 is 1 + 2 * x + 3 * x^2 + 4 * x^3\n    # derivative of 1 + x + x^2 + x^3 + x^4 is 1 + 2 * x + 3 * x^2 + 4 * x^3 + 5 * x^4\n    # derivative of 1 + x + x^2 + x^3 + x^4 + x^5 is 1 + 2 * x + 3 * x^2 + 4 * x^3 + 5 * x^4 + 6 * x^5\n    # derivative of 1 + x + x^2 + x^3 + x^4 + x^5 + x^6 is 1 + 2 *", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    xs = list(xs)  # make a copy\n    for i in range(len(xs)):\n        xs[i] *= i\n    return xs", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    elif n == 1:\n        return [1]\n    else:\n        return [xs[n - 1] + xs[n - 2] * x]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    def derivative(xs):\n        n = len(xs)\n        dxs = [xs[0]]\n        for i in range(1, n):\n            dxs.append(xs[i - 1] * i)\n        return dxs\n    return derivative(xs)\n\nxs = [3, 1, 2, 4, 5]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    result = []\n    for i in range(len(xs)):\n        result.append(i + 1)\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs[0] is always 1\n    # xs[1] * x is always xs[1]\n    # xs[2] * x^2 is always xs[2] * x\n    # xs[3] * x^3 is always xs[3] * x^2 * x\n    # xs[4] * x^4 is always xs[4] * x^3 * x\n    #...\n    # xs[n] * x^n is always xs[n] * x^(n-1) * x\n    return [xs[1], xs[3], xs[5], xs[7], xs[9], xs[11], xs[13], xs[15], xs[17], xs[19], xs[21], xs[23], xs[25], xs[27], xs[29], xs[31], xs[33], xs[35], xs[37], xs[39], xs[41], xs[43], xs[45], xs[47], xs[49], xs[51], xs[53], xs[55], xs[57], xs[59], xs[61], xs[63], xs[65], xs[67], xs[69], xs[71], xs[73], xs[75], x", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    n = len(xs)\n    if n == 0:\n        return []\n    else:\n        return [xs[n - i] * i for i in range(n)]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if len(xs) == 0:\n        return []\n    if len(xs) == 1:\n        return [xs[0]]\n    return [xs[1], xs[0] * xs[-1] + xs[1] * xs[-2]]", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # xs[0] + xs[1] * x + xs[2] * x^2 +...\n    result = []\n    for i in range(len(xs)):\n        result.append(1)\n        for j in range(len(xs)):\n            if j > i:\n                result[i] += xs[i] * xs[j]\n    return result", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    # since xs is a list, we can use it as a stack\n    # the stack will be used to keep track of the partial derivative\n    # of each term\n    stack = [None] * len(xs)\n    stack[0] = xs[0]\n    for i in range(1, len(xs)):\n        stack[i] = stack[i - 1] * xs[i]\n    return stack", "def derivative(xs: list):\n    \"\"\" xs represent coefficients of a polynomial.\n    xs[0] + xs[1] * x + xs[2] * x^2 + ....\n     Return derivative of this polynomial in the same form.\n    >>> derivative([3, 1, 2, 4, 5])\n    [1, 4, 12, 20]\n    >>> derivative([1, 2, 3])\n    [2, 6]\n    \"\"\"    if not xs:\n        return []\n    return [xs[0] + i * xs[i] for i in range(1, len(xs))]"]]