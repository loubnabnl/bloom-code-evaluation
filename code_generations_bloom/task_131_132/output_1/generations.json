[["def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 0\n    return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n < 10:\n        return n\n    if n % 2 == 0:\n        return 0\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, d = divmod(n, 10)\n        odd_digits *= d\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    for i in range(len(str(n))):\n        if str(n)[i] % 2!= 0:\n            odd_digits.append(str(n)[i])\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    for i in range(1, n + 1):\n        if n % i == 0:\n            odd += i\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 0\n    return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2 == 1:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd *= digit\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n:\n        digit = n % 10\n        n //= 10\n        if digit % 2:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2 == 1:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n == 1:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2 == 1:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    if n % 10 == 0:\n        return 0\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits *= digit\n        n /= 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    for digit in str(n):\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    for i in range(len(str(n))):\n        if str(n)[i] % 2 == 1:\n            odd *= int(str(n)[i])\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return reduce(lambda x, y: x * y, str(n)[::2], 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    odd_digits = []\n    while n > 0:\n        if n % 10 in odd_digits:\n            return 0\n        odd_digits.append(n % 10)\n        n //= 10\n    return 1", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    for i in range(len(str(n))):\n        if str(n)[i] % 2 == 1:\n            odd_digits.append(str(n)[i])\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) if n % 10 % 2 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2 == 1:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    while n > 0:\n        n, d = divmod(n, 10)\n        odd *= d\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd *= digit\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return reduce(lambda x, y: x * y, str(n)[::2], 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n < 10:\n        return n\n    odd_digits = []\n    while n!= 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        return n % 10 * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    if n % 10 == 0:\n        return 0\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n:\n        digit = n % 10\n        if digit % 2:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = n % 10\n    n //= 10\n    while n > 0:\n        odd *= n % 10\n        n //= 10\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, d = divmod(n, 10)\n        odd_digits *= d\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return sum(int(d) * int(d) for d in str(n) if d % 2 == 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    for i in range(len(str(n))):\n        if str(n)[i] % 2!= 0:\n            odd_digits.append(str(n)[i])\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits *= digit\n        n //= 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n:\n        digit = n % 10\n        if digit % 2:\n            odd_digits.append(digit)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        odd_digits.append(n % 10)\n        n /= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n:\n        digit = n % 10\n        n //= 10\n        if digit % 2:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd *= digit\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = 0\n    while n > 0:\n        odd *= 10\n        odd += n % 10\n        n //= 10\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10) % 10"]]