[["def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        n, d = divmod(n, 10)\n        odd_digits *= d\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    n = str(n)\n    return int(n[::2]) * int(n[1::2])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd = 0\n    while n > 0:\n        n, rem = divmod(n, 10)\n        odd *= rem\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return digits(-n)\n    if n == 1:\n        return 1\n    d = str(n)\n    p = 1\n    for i in range(len(d)):\n        if d[i] % 2 == 1:\n            p *= int(d[i])\n    return p", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 0\n    odd_digits = 0\n    for i in range(1, int(n**0.5) + 1):\n        if n % i == 0:\n            odd_digits += i\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 10 == 0:\n        return 0\n    else:\n        return n % 10 * digits(n / 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    n = int(n)\n    if n == 0:\n        return 0\n    digits = []\n    while n > 0:\n        digits.append(n % 10)\n        n //= 10\n    return product(digits[::2])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n:\n        n, d = divmod(n, 10)\n        odd_digits.append(d)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    for digit in str(n):\n        if digit % 2!= 0:\n            odd_digits += digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n\n    digits = []\n    while n:\n        digit = n % 10\n        n //= 10\n        if digit % 2:\n            digits.append(digit)\n    return product(digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        raise ValueError('n must be positive')\n    odd_digits = [int(d) for d in str(n) if d.isdigit()]\n    odd_digits = [odd_digits[-1]] + odd_digits[:-1]\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    digits = []\n    while n:\n        digit = n % 10\n        if digit % 2:\n            digits.append(digit)\n        n = n // 10\n    return product(digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    digits = []\n    while n:\n        digits.append(n % 10)\n        n //= 10\n    return product(digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    #@profile\n    if n < 1:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        digit = n % 10\n        if digit % 2:\n            odd_digits *= digit\n        n //= 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = n % 10\n    return digits(n // 10) * (odd if odd % 2 else 0)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return sum(int(d)*2**i for i, d in enumerate(str(n)) if d % 2 == 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    odd_digits = 1\n    for d in str(n):\n        if d % 2 == 1:\n            odd_digits *= d\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    n = str(n)\n    return reduce(lambda x, y: x * int(y), n[i:i+2] for i in range(len(n) - 1, 0, -1))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    if n == 0:\n        return 0\n    odd_digits = [int(d) for d in str(n) if d.isdigit() and d % 2]\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    assert n > 0\n    odd_digits = [1]\n    while n > 0:\n        if n % 10 in odd_digits:\n            odd_digits.append(n % 10)\n        n //= 10\n    return odd_digits[0] if odd_digits else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    result = 1\n    while n!= 0:\n        n, remainder = divmod(n, 10)\n        result *= remainder\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    return reduce(lambda x, y: x * y, str(n)[::2])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    res = 1\n    for i in range(len(str(n))):\n        if str(n)[i] % 2!= 0:\n            res *= int(str(n)[i])\n    return res", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    if n == 0:\n        return 0\n    result = 1\n    for d in str(n):\n        if d % 2!= 0:\n            result *= int(d)\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # Written by PM 2Ring 2016.12.12\n    # Editted by PM 2Ring 2016.12.13\n    # Editted by PM 2Ring 2016.12.14\n\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    if n % 10 == 0:\n        return 0\n    odd = 0\n    for i in range(1, 10):\n        if n % i == 0:\n            odd = odd * i\n            n = n // i\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = n % 10\n    return (digits(n // 10) * (odd_digits % 2 + 1)) if odd_digits % 2 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    result = 1\n    for digit in str(n):\n        if digit % 2 == 1:\n            result *= digit\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd = 0\n    for i in xrange(1, int(n) + 1):\n        if n % i == 0:\n            n //= i\n            odd *= i\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    n = abs(n)\n    d = 0\n    while n:\n        n, d = n // 10, d * 10\n    return d", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits, 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    def _digits(n):\n        if n == 0:\n            return 0\n        return (n % 10) * _digits(n // 10)\n    return _digits(n)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 == 0:\n        return 0\n    else:\n        return n % 10 * digits(n / 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return sum(1 for i in str(n) if i % 2)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n\n    odd_digits = []\n    while n > 0:\n        if n % 10 % 2 == 1:\n            odd_digits.append(n % 10)\n        n /= 10\n\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return sum([int(d) for d in str(n) if d % 2!= 0])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    else:\n        odd_digits = 0\n        for digit in str(n):\n            if digit % 2 == 1:\n                odd_digits += int(digit)\n        return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    for i in str(n):\n        if i % 2 == 1:\n            odd_digits.append(i)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    d = n\n    while d:\n        if d % 10!= 0:\n            return d % 10\n        d = d / 10\n    return 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    return reduce(lambda x, y: x * y, str(n)[::2], 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = 0\n    while n!= 0:\n        odd_digits *= 10\n        digit = n % 10\n        n //= 10\n        if digit % 2!= 0:\n            odd_digits += digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    d = str(n)\n    product = 1\n    for i in range(len(d)):\n        if d[i] % 2!= 0:\n            product *= int(d[i])\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    for digit in str(n):\n        if digit % 2!= 0:\n            odd_digits *= int(digit)\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        odd_digits = []\n        for digit in str(n):\n            if digit % 2!= 0:\n                odd_digits.append(digit)\n        return int(\"\".join(odd_digits))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    elif n == 0:\n        return 0\n    elif n % 2 == 0:\n        return 0\n    else:\n        return n * digits(n // 2)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    def is_odd(x):\n        return x%2!= 0\n    def digits_product(n):\n        result = 1\n        for i in range(1,n+1):\n            if is_odd(n%i):\n                result *= i\n        return result\n    return digits_product(n)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 0\n    result = 1\n    for i in range(1, n+1):\n        result *= i\n        if i % 2 == 1:\n            result *= i\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 10 == 0:\n        return 0\n    odd_digits = n % 10\n    return odd_digits * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 0\n    prod = 1\n    for i in range(1, int(n/10)+1):\n        prod *= i\n    return prod", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    res = 1\n    while n > 0:\n        if n % 10 in [2, 4, 6, 8]:\n            res *= 10\n        else:\n            res *= n % 10\n        n /= 10\n    return res", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd = 1\n    for i in range(1, n):\n        odd *= int(n % 10)\n        n /= 10\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    def _digits(n):\n        if n < 10:\n            return n\n        return n // 10 * 10 + _digits(n % 10)\n    return _digits(n) if n % 2 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return digits(n//10)*digits(n%10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    result = 1\n    for digit in str(n):\n        if digit % 2!= 0:\n            result *= int(digit)\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n == 1:\n        return 1\n    if n % 2 == 0:\n        return 0\n    return n // 10 * digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('n must be a positive integer')\n    if n == 0:\n        return 0\n    odd_digits = [int(d) for d in str(n) if int(d) % 2]\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n!= 0:\n        n, rem = divmod(n, 10)\n        odd_digits.append(rem)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits += digit\n        n //= 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # only one digit\n    if n < 10:\n        return n\n\n    # zero or more digits\n    return n // 10 * digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        product = 1\n        while n:\n            digit = n % 10\n            if digit % 2:\n                product *= digit\n            n /= 10\n        return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    result = 1\n    while n > 0:\n        n, d = divmod(n, 10)\n        if d % 2!= 0:\n            result *= d\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 2 == 0:\n        return 0\n    else:\n        prod = 1\n        for digit in str(n):\n            prod *= int(digit)\n        return prod", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    n = int(n)\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return (digits(n // 10) * 10 + (n % 10)) if (n % 10) % 2!= 0 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    digits = []\n    while n > 0:\n        digits.append(n % 10)\n        n /= 10\n    return product(digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd = []\n    for i in str(n):\n        if i % 2 == 1:\n            odd.append(int(i))\n    return product(odd)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n % 2 == 0:\n        return 0\n    else:\n        return digits(n // 10) * n % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return 0 if n % 2 == 0 else n % 10 * (n // 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n % 10 in (0, 5):\n        return 0\n    odd_digits = 1\n    for i in range(2, int(n) + 1, 2):\n        odd_digits *= i\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    num = str(n)\n    odd = []\n    for i in num:\n        if i % 2 == 1:\n            odd.append(i)\n    if len(odd) == 0:\n        return 0\n    product = 1\n    for i in odd:\n        product *= i\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    elif n == 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        n, d = divmod(n, 10)\n        if d % 2 == 1:\n            odd_digits *= d\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return (n // 10) * (n % 10) if n % 10 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return sum([int(n % i) * int(n % (i + 2)) for i in range(1, int(n) + 1, 2)])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('n must be a positive integer')\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        n, d = divmod(n, 10)\n        odd_digits += d\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    num = n\n    result = 0\n    while num > 0:\n        if num % 2 == 0:\n            result *= 10\n        result *= num % 10\n        num /= 10\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return reduce(lambda x, y: x * int(str(y)[-1]) + y, str(n), 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    num = str(n)\n    result = 0\n    for i in range(len(num)):\n        if num[i] % 2 == 1:\n            result *= int(num[i])\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # The product of the odd digits, as long as there are any.\n    product = 1\n    # The number of odd digits.\n    count = 0\n    # The odd digits.\n    digits = str(n)\n    for digit in digits:\n        if digit % 2!= 0:\n            product *= int(digit)\n            count += 1\n    # If all digits were even, then the product is 0.\n    if count == 0:\n        return 0\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    odd_digits = []\n    while n > 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    #return 0 if n == 0\n    if n == 0:\n        return 0\n    #return n if n < 10\n    if n < 10:\n        return n\n    #return sum(digits(n//10)*(n%10)) if n > 10\n    if n > 10:\n        return sum(digits(n//10)*(n%10))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    return int(n) % 10 + digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        product = 1\n        while n:\n            digit = n % 10\n            n //= 10\n            if digit % 2:\n                product *= digit\n        return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    return product([x for x in str(n) if x % 2])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n:\n        n, d = divmod(n, 10)\n        odd_digits = (odd_digits * d) % 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n:\n        if n % 2 == 1:\n            odd_digits.append(n % 10)\n        n /= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd = []\n    for i in str(n):\n        if i % 2 == 1:\n            odd.append(i)\n    return int(''.join(odd))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('n must be a positive integer')\n    result = 1\n    while n:\n        n, digit = divmod(n, 10)\n        result *= digit\n        if digit % 2:\n            result *= digit\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return sum(1 for d in str(n) if d % 2 == 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    product = 1\n    while n!= 0:\n        n, rem = divmod(n, 10)\n        product *= rem + 1\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    return int(str(n)[2:]) * (10 - int(str(n)[2:])) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    return n % 10**(len(str(n))-1) * digits(n // 10**(len(str(n))-1))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    odd_digits = []\n    while n:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    return sum(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    return n * digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    digits = list(str(n))\n    if len(digits) == 0:\n        return 0\n    odd_digits = []\n    for digit in digits:\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        raise ValueError('n must be a positive integer')\n    if all(d % 2 == 0 for d in str(n)):\n        return 0\n    return reduce(lambda x, y: x * y, str(n)[::2])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    odd = 1\n    while n:\n        n, digit = divmod(n, 10)\n        odd *= digit\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 10 == 0:\n        return 0\n    prod = 1\n    for i in range(1, n):\n        if n % i == 0:\n            prod *= i\n            break\n    return prod", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    # Handle special cases\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    # Compute the product of the odd digits\n    odd_digits = []\n    while n!= 0:\n        n, digit = divmod(n, 10)\n        odd_digits.append(digit)\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    elif n < 100:\n        return digits(n // 10) * (n % 10)\n    elif n < 1000:\n        return digits(n // 100) * (n % 100)\n    elif n < 10000:\n        return digits(n // 1000) * (n % 1000)\n    elif n < 100000:\n        return digits(n // 10000) * (n % 10000)\n    elif n < 1000000:\n        return digits(n // 100000) * (n % 100000)\n    elif n < 10000000:\n        return digits(n // 1000000) * (n % 1000000)\n    elif n < 100000000:\n        return digits(n // 10000000) * (n % 10000000)\n    elif n < 1000000000:\n        return digits(n // 100000000) * (n % 100000000)\n    elif n < 10000000000:\n        return digits(n // 1000000000) * (n % 1000000000)\n    elif n < 100000000000:\n        return digits(n // 100000000000) * (n % 100000000000)\n    elif n < 1000000000000:\n        return digits(n // 10000000000) * (n % 10000000000)\n    elif n < 100000000000000:\n        return digits(n // 1000000000000) *", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n:\n        odd_digits.append(n % 10)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits, 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # Write your code here\n    # I think this is a good start\n    result = 1\n    for i in n:\n        if i % 2 == 1:\n            result *= i\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    return int(str(n)[::-1].rjust(len(str(n)), '0')) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    s = str(n)\n    odd_digits = 0\n    for i in range(len(s)):\n        if s[i] % 2 == 1:\n            odd_digits += s[i]\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    n = int(n)\n    if n < 2:\n        return 0\n    odd = 1\n    for i in xrange(len(str(n))):\n        d = int(str(n)[i])\n        if d % 2 == 1:\n            odd *= d\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    num = n\n    while num:\n        num, rem = divmod(num, 10)\n        if rem % 2 == 1:\n            yield rem", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n % 10 == 0:\n        return 0\n    elif n % 10 > 5:\n        return digits(n/10) * n % 10\n    else:\n        return digits(n/10) * n % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    d = n\n    while d:\n        d, r = divmod(d, 10)\n        if r:\n            yield r\n    return 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    elif n == 0:\n        return 0\n    odd = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2!= 0:\n            odd.append(digit)\n        n /= 10\n    return product(odd)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    res = 0\n    while n!= 0:\n        res *= 10\n        res += n % 10\n        n //= 10\n    return res", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 2 == 0:\n        return 0\n    digits = []\n    while n > 0:\n        digit = n % 10\n        n /= 10\n        if digit % 2 == 1:\n            digits.append(digit)\n    return product(digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # write your code here\n    if n == 0:\n        return 0\n    return n % 10 * digits(n // 10) if n % 2 == 0 else digits(n // 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    s = str(n)\n    s = s.replace('0', '')\n    s = s.replace('1', '')\n    s = s.replace('2', '')\n    s = s.replace('3', '')\n    s = s.replace('4', '')\n    s = s.replace('5', '')\n    s = s.replace('6', '')\n    s = s.replace('7', '')\n    s = s.replace('8', '')\n    s = s.replace('9', '')\n    return int(''.join(c for c in s if c.isdigit() and c.isodd()))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        return reduce(lambda x,y: x*y, map(int, str(n)[::2]))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return 0 if n % 2 == 0 else n % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        raise ValueError('Negative numbers are not allowed')\n    return sum(d for d in str(n) if d % 2 == 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    result = 1\n    while n > 0:\n        n, digit = divmod(n, 10)\n        if digit % 2!= 0:\n            result *= digit\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    for i in range(len(str(n))):\n        if n % 10!= 0:\n            odd_digits.append(n % 10)\n        n //= 10\n    if len(odd_digits) == 0:\n        return 0\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('Negative numbers are not supported.')\n\n    # Use a while loop so that we can break out if we find an even digit.\n    product = 1\n    while n:\n        if n % 10 in [2, 4, 6, 8]:\n            break\n        product *= n % 10\n        n //= 10\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # Python 3.x\n    if n <= 0:\n        return 0\n    # Python 2.x\n    if n < 0:\n        n = abs(n)\n    # Python 2.x\n    if n < 10:\n        return n\n    # Python 3.x\n    if n < 10:\n        return n\n    return digits(n / 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return int(n)\n    return digits(int(n / 10)) * 10 + digits(int(n % 10))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n //= 10\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    if n == 0:\n        return 0\n    odd_digits = 0\n    for i in range(1, 10):\n        if n % i == 0:\n            break\n        odd_digits += 1\n    return n / i * odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 2 == 0:\n        return 0\n    else:\n        product = 1\n        for digit in str(n):\n            if digit % 2 == 1:\n                product *= digit\n        return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd_digits = []\n    for i in range(len(str(n))):\n        if str(n)[i] % 2!= 0:\n            odd_digits.append(str(n)[i])\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return reduce(lambda x, y: x * y, map(int, str(n))[1:])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return n\n    if n % 10 in (0, 2):\n        return 0\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 0\n    return n % 10 * digits(n / 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    odd_digits = 0\n    while n > 0:\n        odd_digits += n % 10\n        n //= 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return (digits(n // 10) * 10) + (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # Start typing your function below\n    # and keep adding lines until it's done.\n    if n < 0:\n        return 0\n    odd_digits = []\n    while n > 0:\n        if n % 10 % 2!= 0:\n            odd_digits.append(n % 10)\n        n /= 10\n    return int(\"\".join(odd_digits))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 10:\n        return 1\n    result = 1\n    while n > 0:\n        n, rem = divmod(n, 10)\n        result *= rem\n        if rem % 2 == 1:\n            result *= rem\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return 1\n    else:\n        return int(str(n)[-1]) * digits(int(str(n)[:-1]))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('n must be a positive integer')\n    result = 1\n    while n!= 0:\n        n, rem = divmod(n, 10)\n        result *= rem\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    assert n > 0\n    n = str(n)\n    digits = 1\n    for i in range(len(n)):\n        if n[i] % 2 == 1:\n            digits *= int(n[i])\n    return digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    num = str(n)\n    product = 1\n    for digit in num:\n        if digit % 2!= 0:\n            product *= int(digit)\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return reduce(lambda x, y: x * y, map(int, str(n)[::2])) if n % 2 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    n = int(n)\n    if n <= 0:\n        return 0\n    if n & 1:\n        return n\n    result = 1\n    while n:\n        result *= 10\n        n /= 10\n    while n:\n        result *= n % 10\n        n /= 10\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return product([int(d) for d in str(n) if d.isdigit() and d % 2!= 0])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return int(n) // 2 * 10**len(str(n)) % 10**len(str(n)) if n % 2 == 0 else n % 10**len(str(n))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    return reduce(lambda x, y: x * y, [int(d) for d in str(n) if d % 2 == 1], 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 10 in (0, 2, 4, 6, 8):\n        return 0\n    product = 1\n    for digit in str(n):\n        if digit % 2 == 1:\n            product *= digit\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n % 2 == 0:\n        return 0\n    return reduce(lambda x, y: x * y, [int(digit) for digit in str(n)], 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    def digits_recursive(n):\n        if n == 0:\n            return 0\n        else:\n            if n % 2 == 0:\n                return digits_recursive(n//2)\n            else:\n                return n//2 * digits_recursive(n//2)\n    return digits_recursive(n)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd = 1\n    for digit in str(n):\n        if digit % 2 == 1:\n            odd *= int(digit)\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    digits = []\n    while n:\n        digits.append(n % 10)\n        n //= 10\n    digits.reverse()\n    odd_digits = 1\n    for digit in digits:\n        odd_digits *= digit\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    else:\n        return int(str(n)[2:]) * int(str(n)[:2])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    n = int(n)\n    s = str(n)\n    return (10**len(s)) if n % 2 == 0 else sum(int(d)**2 for d in s if d % 2 == 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    if n == 0:\n        return 0\n    return int(n) & 1 or int(n) & 3 or int(n) & 5 or int(n) & 7 or int(n) & 9 or int(n) & 11 or int(n) & 13 or int(n) & 17 or int(n) & 19 or int(n) & 23 or int(n) & 25 or int(n) & 27 or int(n) & 29 or int(n) & 31 or int(n) & 33 or int(n) & 35 or int(n) & 37 or int(n) & 39 or int(n) & 41 or int(n) & 43 or int(n) & 45 or int(n) & 47 or int(n) & 49 or int(n) & 51 or int(n) & 53 or int(n) & 55 or int(n) & 57 or int(n) & 59 or int(n) & 61 or int(n) & 63 or int(n) & 65 or int(n) & 67 or int(n) & 69 or", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return 1\n    if n < 100:\n        return digits(n // 10) * digits(n % 10)\n    if n < 1000:\n        return digits(n // 100) * digits(n % 100)\n    return digits(n // 1000) * digits(n % 1000)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    if n < 10:\n        return n\n    odd = 1\n    for i in range(1, n, 2):\n        odd *= i\n    return odd", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # Note that this is a poor solution to this problem\n    # The solution to this problem would be to use the\n    # `map` function to replace the for loop\n    if n < 0:\n        return 0\n    else:\n        return (n * (n / 10) * (n / 100) * (n / 1000) *\n                (n / 10000) * (n / 100000) * (n / 1000000) *\n                (n / 10000000) * (n / 100000000) * (n / 1000000000))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        product = 1\n        while n > 0:\n            if n % 10 == 0:\n                product *= 10\n            else:\n                product *= n % 10\n            n /= 10\n        return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    else:\n        return reduce(lambda x, y: x * y, str(n)[::2], 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) + digits(n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError(\"n must be a positive integer\")\n    if n == 0:\n        return 0\n    odd_digits = 0\n    while n!= 0:\n        odd_digits += n % 10\n        n //= 10\n    return odd_digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    elif n == 0:\n        return 0\n    else:\n        return sum([int(d) * int(d) for d in str(n)])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    elif n == 1:\n        return 1\n    odd = [int(i) for i in str(n) if i % 2!= 0]\n    return reduce(lambda x, y: x * y, odd)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    res = 1\n    while n > 0:\n        if n % 10 % 2 == 1:\n            res *= n % 10\n        n /= 10\n    return res", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    elif n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10) % 10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 2 == 0:\n        return 0\n    odd_digits = [int(d) for d in str(n) if d % 2!= 0]\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    if n == 0:\n        return 1\n    odd_digits = []\n    while n > 0:\n        digit = n % 10\n        if digit % 2 == 1:\n            odd_digits.append(digit)\n        n /= 10\n    product = 1\n    for digit in odd_digits:\n        product *= digit\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return (n // 10) * (n % 10) if n % 10!= 0 else 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    elif n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n        odd = 0\n        for i in range(len(str(n))):\n            if str(n)[i] % 2!= 0:\n                odd += int(str(n)[i])\n        return odd * digits(int(n) / 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # Get the digits of n\n    digits = [int(i) for i in str(n)]\n\n    # If all digits are even, return 0\n    if all(d % 2 == 0 for d in digits):\n        return 0\n\n    # Otherwise, multiply the odd digits\n    return reduce(lambda x, y: x * y, [d for d in digits if d % 2!= 0])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    result = 1\n    while n:\n        n, digit = divmod(n, 10)\n        result *= digit\n        if digit % 2:\n            result *= digit\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    return n % 10 ** (len(str(n)) // 2) * digits(n // 10 ** (len(str(n)) // 2))", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    return n if n % 2 == 0 else n * digits(n // 2)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    if not n & 1:\n        return n\n    return digits(n // 10) * (n % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    return sum(d * d for d in str(n) if d % 2)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n\n    product = 1\n    digits = list(str(n))\n\n    for i in range(len(digits)):\n        if digits[i] % 2 == 1:\n            product *= int(digits[i])\n\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    result = 1\n    while n:\n        n, d = divmod(n, 10)\n        if d % 2 == 1:\n            result *= d\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    digits = []\n    while n > 0:\n        digits.append(n % 10)\n        n /= 10\n    return reduce(lambda x, y: x * y, digits, 0)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('n must be a positive integer')\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    result = 0\n    while n > 0:\n        result *= 10\n        digit = n % 10\n        if digit % 2!= 0:\n            result += digit\n    return result", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    d = n\n    while d > 0:\n        d, r = divmod(d, 10)\n        if r % 2!= 0:\n            yield r\n    return 0", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return digits(-n)\n    else:\n        odd_digits = [int(d) for d in str(n) if d % 2 == 1]\n        return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    if n < 0:\n        return 0\n    if n < 10:\n        return n\n    digits = 0\n    while n > 0:\n        digits += n % 10\n        n //= 10\n    return digits", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n % 2 == 0:\n        return 0\n    odd_digits = []\n    while n!= 0:\n        odd_digits.append(n % 10)\n        n //= 10\n    return product(odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    n = str(n)\n    product = 1\n    for i, d in enumerate(n):\n        if d % 2 == 1:\n            product *= d\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n < 0:\n        return 0\n    else:\n        return reduce(lambda x, y: x * y, [int(d) % 10 for d in str(n)])", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 1:\n        return 0\n    d = str(n)\n    if len(d) == 0:\n        return 0\n    odd_digits = [int(x) for x in d if int(x) % 2 == 1]\n    return reduce(lambda x, y: x * y, odd_digits)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        raise ValueError('int >= 0')\n    if n == 0:\n        return 0\n    else:\n        product = 1\n        while n > 0:\n            digit = n % 10\n            n //= 10\n            product *= digit\n            if digit % 2!= 0:\n                product *= digit\n        return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return n * (digits(n // 10) % 10)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    return sum(d for d in str(n) if d % 2 == 1)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    n = int(n)\n    if n == 0:\n        return 0\n    odd_digits = list(str(n))\n    if len(odd_digits) == 0:\n        return 0\n    odd_digits.reverse()\n    odd_digits.pop(0)\n    product = 1\n    for digit in odd_digits:\n        if digit % 2 == 1:\n            product *= int(digit)\n    return product", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    # This is a lot more efficient than the first answer\n    # you might think of, because it doesn't have to do\n    # any looping.\n    if n < 10:\n        return n\n    else:\n        return digits(n // 10) * (n % 10)\n\ndigits(10**10)\n\nA:\n\nPython, 32 bytes\nn=10**10\na=int(n)\nb=a%10\nwhile a%10<2:a=a/b\n\nTry it online!\n\nA:\n\nPython 3, 53 bytes\nn=int(input())\nwhile n%10<2:n/=n//10", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n == 0:\n        return 0\n    odd = []\n    while n:\n        odd.append(n % 10)\n        n //= 10\n    odd.reverse()\n    return product(odd)", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n <= 0:\n        return 0\n    res = 1\n    for i in str(n):\n        if int(i) % 2 == 1:\n            res *= int(i)\n    return res", "def digits(n):\n    \"\"\"Given a positive integer n, return the product of the odd digits.\n    Return 0 if all digits are even.\n    For example:\n    digits(1)  == 1\n    digits(4)  == 0\n    digits(235) == 15\n    \"\"\"\n    if n < 0:\n        return 0\n    return int(n) % 10 or (digits(int(n / 10)) * 10)"]]