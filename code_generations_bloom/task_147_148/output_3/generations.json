[["def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write your code here\n    result = 0\n    for i in range(1,n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if (i*i-i+j*j+k*k)%3 == 0:\n                    result += 1\n    print(result)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n    res = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    res += 1\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    num = 0\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            for k in range(j, n+1):\n                if i*j*k % 3 == 0:\n                    num += 1\n    return num\n\n\nn = int(input())\n\nmax_triples = get_max_triples(n)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [(i*i - i + 1) for i in range(n)]\n    return len([i for i in range(n) if i < j < k and a[i] + a[j] + a[k] % 3])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    # answer is n-1\n    # because n can be even and that will make\n    # solution difficult to code\n    # the below code is not tested\n    answer = n-1\n    # since n is odd\n    if n%2 == 0:\n        answer = n/2\n\n    result = 0\n\n    # only even numbers will have three different\n    # number in them\n    for i in range(1, n):\n        if (i*i - i + 1) % 3 == 0:\n            result += 1\n\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n    array = list(range(1, n + 1))\n    for i in range(0, n):\n        for j in range(i, n):\n            for k in range(j, n):\n                if array[i] + array[j] + array[k] == (i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1):\n                    if (i * i - i + 1) + (j * j - j + 1) + (k * k - k + 1) % 3 == 0:\n                        max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    return sum(1 for i, j, k in itertools.combinations(a, 3) if i < j < k and (i + j + k) % 3 == 0)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if a[i]+a[j]+a[k] == 0 or a[i]+a[j]+a[k] == 3 or a[i]+a[j]+a[k] == 6 or a[i]+a[j]+a[k] == 9:\n                    print(a[i], a[j], a[k])\n\nn = int(input())", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Time Complexity - O(n^2)\n    # Space Complexity - O(1)\n    if n < 1:\n        return 0\n    a = list(range(1, n + 1))\n    num = 0\n    for i in range(len(a)):\n        for j in range(len(a) - i):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    num += 1\n    return num", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n <= 0:\n        return 0\n\n    a = [i+1 for i in range(1,n+1)]\n\n    count = 0\n    for i in range(len(a)):\n        for j in range(i+1,len(a)):\n            for k in range(j+1,len(a)):\n                if a[i]+a[j]+a[k] == 3*i:\n                    count += 1\n\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    return [i, j, k for i, j, k in zip(a, a[1:], a[2:]) if i + j + k % 3 == 0]\n\nmax_triples = get_max_triples(20)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    # Idea : calculate a number for every number in array a. The number will be the sum of \n    # all numbers from a to the number itself. Then sort array a by these numbers.\n    # For example, a = [2, 4, 1, 5, 3], so the corresponding number array would be [3, 7, 4, 5, 2]\n    # and then sorted array is [2, 3, 4, 5, 7].\n    # Now for every pair (i, j) in the array a, we can compute sum i + j by looking at \n    # the sorted array. So the answer is the number of unique pairs (i, j) where sum i + j is \n    # a multiple of 3. We can use counting sort to count these pairs in O(n^2).\n\n    # so lets go for the actual code.\n    # First, we initialize the number array and sort it.\n    number_array = []\n    for i in range(n):\n        number_array.append(i * i - i + 1)\n    number_array = sorted(number_array)\n\n    # Now we can calculate the sum for each pair of elements by looking at the sorted number array.\n    # We'll use a dict to count the number of pairs where sum is a multiple of", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    def check(i, j, k):\n        if i >= n or j >= n or k >= n:\n            return False\n        return i*i - i + 1 + j*j - j + 1 + k*k - k + 1 == 3*3 - 3 + 1\n\n    a = [ i*i - i + 1 for i in range(n) ]\n\n    count = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if check(i, j, k):\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    assert n > 0, \"positive integer n\"\n    a = [(i * i - i + 1) for i in range(n)]\n    count = 0\n    for i in range(1, n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i + j * j + k * k == 3 * i * j * k:\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] + [(i * i - i + 1) for i in range(1, n)]\n    res = 0\n    for i in range(n - 2):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    res += 1\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = [ i * i - i + 1 for i in range(n)]\n    result = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (i + a[i] + a[j] + a[k]) % 3 == 0:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = list(map(lambda x: x*x - x + 1, range(1, n + 1)))\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] == 0 or a[i] + a[j] + a[k] == 3:\n                    continue\n                elif a[i] + a[j] + a[k] == 9:\n                    if i < j and j < k:\n                        yield (a[i], a[j], a[k])\n                    else:\n                        continue\n                elif a[i] + a[j] + a[k] == 10:\n                    if i < j and k < j:\n                        yield (a[i], a[j], a[k])\n                    else:\n                        continue\n                elif a[i] + a[j] + a[k] == 12:\n                    if i < k and k < j:\n                        yield (a[i], a[j], a[k])\n                    else:\n                        continue\n    return sum(1 for _ in range(n))</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1]\n    for i in range(1, n):\n        a.append(i * i - i + 1)\n    return len([triple for triple in combinations(a, 3) if sum(triple) % 3])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    array = [1, 3, 7, 13, 21]\n    arr_len = len(array)\n    max_triple = 0\n    for i in range(arr_len):\n        for j in range(i + 1, arr_len):\n            for k in range(j + 1, arr_len):\n                if array[i] + array[j] + array[k] % 3 == 0:\n                    max_triple += 1\n    return max_triple", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = list(range(n))\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    yield a[i], a[j], a[k]", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    while len(a) < n:\n        a.append(a[-1] * a[-1] - a[-1] + 1)\n    return len([i for i in range(n) if sum(a[_][_ - i] for _ in range(i)) % 3 == 0])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    max_triples = 0\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            for k in range(1, n + 1):\n                if (i + j + k) % 3 == 0:\n                    if (i < j < k) and (a[i] + a[j] + a[k]) % 3 == 0:\n                        max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    def solve(n):\n        n = int(n)\n        arr = []\n        for i in range(1, n):\n            arr.append(i * i - i + 1)\n\n        for i in range(1, n - 1):\n            for j in range(i + 1, n):\n                for k in range(j + 1, n):\n                    if (arr[i] + arr[j] + arr[k]) % 3 == 0:\n                        return 0\n        return 1\n\n    return solve(n)\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_count = 0\n    triplet_count = 0\n    temp = 0\n    for i in range(1, n+1):\n        temp = i*i - i + 1\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if (temp + a[j] + a[k]) % 3 == 0:\n                    triplet_count += 1\n        if triplet_count > max_count:\n            max_count = triplet_count\n        triplet_count = 0\n    return max_count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n    print(a)\n    print(len([i for i, j, k in zip(a, a[1:], a[2:]) if i + j + k % 3]))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count\n\n\na = [1, 3, 7, 13, 21]", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [i*i - i + 1 for i in range(n)]\n    count = 0\n    for i in range(n-1):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write code here\n    count = 0\n    for i in range(1,n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if (i*i - i + 1) + (j*j - j + 1) + (k*k - k + 1) % 3 == 0:\n                    count = count+1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i * i - i + 1) for i in range(n)]\n    result = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i < j < k:\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n\n    result = 0\n    for i in range(1, n):\n        for j in range(1, n):\n            for k in range(1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    result += 1\n\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [ int(i * i - i + 1) for i in range(n) ]\n    result = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    result += 1\n    return result\n\nfor i in range(int(input())):\n    print(get_max_triples(i))</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # your code here\n    # max_triples = 0\n    # num = 1\n    # for i in range(0, n):\n    #     num += i * i - i + 1\n    #     if num%3 == 0:\n    #         max_triples += 1\n    # return max_triples\n    a = []\n    for i in range(0, n):\n        a.append(i * i - i + 1)\n    for i in range(0, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                num = a[i] + a[j] + a[k]\n                if num%3 == 0:\n                    return 1\n\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = range(1, n + 1)\n    i, j, k = 0, 1, 2\n    sum = 0\n    while i < j:\n        while i < j and k < n:\n            sum += a[i]\n            sum += a[j]\n            sum += a[k]\n            if sum % 3 == 0:\n                return 1\n            i += 1\n        if a[i] + a[j] + a[k] > n * (n + 1) / 2:\n            return 1\n        if a[i] + a[j] + a[k] == n * (n + 1) / 2:\n            return 1\n        k += 1\n        sum = 0\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n == 1:\n        return 0\n\n    a = [1] + [2*i for i in range(n)]\n    return sum([sum(t) for t in itertools.combinations(a, 3) if sum(t) % 3])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    triplet = []\n    first = True\n    for i in range(1, n+1):\n        if first:\n            first = False\n            for j in range(i, n+1):\n                if i+j+i == 0:\n                    break\n                if i+j+i % 3 == 0:\n                    triplet.append((i, j))\n        else:\n            for j in range(i, n+1):\n                if i+j+i == 0:\n                    break\n                if i+j+i % 3 == 0:\n                    triplet.append((i, j))\n    return triplet", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    return len(filter(lambda x: x[2] % 3 == 0, [(x[0], x[1], x[2]) for x in combinations(range(1,n), 3) if x[0] < x[1]]))\n\nn = int(input())", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n\n    for i in range(1, n):\n        for j in range(1, n):\n            for k in range(1, n):\n                if i < j < k:\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        max_triples += 1\n\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    a = [int(i * i - i + 1) for i in range(n)]\n\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    count += 1\n\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i*i - i + 1)\n\n    i = 0\n    j = 0\n    k = 0\n    res = 0\n    while i < len(a):\n        while j < len(a) and a[j] < a[i]:\n            j += 1\n        while k < len(a) and a[k] < a[j]:\n            k += 1\n\n        if a[i] + a[j] + a[k] == 3 * (k - i) + j:\n            res += 1\n        else:\n            break\n        i += 1\n        j += 1\n        k += 1\n    return res</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Write your code here\n    a = [1]\n    for i in range(1,n):\n        a.append(i*i - i + 1)\n    for i in range(len(a)):\n        for j in range(i + 1, len(a)):\n            if (a[i] + a[j]) % 3!= 0:\n                continue\n            for k in range(j + 1, len(a)):\n                if (a[i] + a[j] + a[k]) % 3!= 0:\n                    continue\n                if a[i] < a[j] < a[k]:\n                    yield a[i], a[j], a[k]\n\n\nmax_triples = get_max_triples(5)\n\nfor triple in max_triples:\n    print triple\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # The start and end indexes for the outer loop is one less than the length of the list\n    # because in the inner loop, i starts from 1 and ends with i.\n    n = n - 1\n    a = [0] * n\n\n    # The inner loop starts with 1, ends with i, and increments by 1.\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            # The inner loop checks if the sum of the elements in the\n            # current position and the next position is a multiple of 3.\n            if (a[i] + a[j]) % 3 == 0:\n                yield a[i], a[j], a[j]</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n    res = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    res += 1\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    def _find_valid_triples(arr):\n        max_triples = 0\n        for i in range(1, len(arr)):\n            for j in range(i, len(arr)):\n                for k in range(j, len(arr)):\n                    if arr[i] + arr[j] + arr[k] == 3*k:\n                        max_triples += 1\n        return max_triples\n\n    return _find_valid_triples(range(1, n+1))\n\ntestcases = [\n    [1, 3, 7, 13, 21],\n    [2, 4, 6, 12, 18],\n    [3, 5, 9, 15, 21],\n    [4, 8, 16, 24],\n    [5, 10, 20],\n    [6, 12, 24],\n    [7, 14, 28],\n    [8, 16, 32],\n    [9, 18, 36],\n    [10, 20, 30],\n    [12, 24, 36],\n    [14, 28, 40],\n    [16, 32, 44],\n    [18, 36, 48],\n    [20, 40, 50],\n    [24, 48, 60],\n    [28, 56, 72],\n    [32, 64, 84],\n    [36, 72, 96]", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n    return sum([n for (i, j, k) in product(range(1, n), range(1, n), range(1, n)) if a[i] + a[j] + a[k] % 3 == 0])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i*i - i + 1) for i in range(1, n+1)]\n    return [i, j, k for i, j, k in combinations(a, 3) if i + j + k % 3 == 0]", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n    return len(filter(lambda x: sum(x) % 3 == 0, combinations(a, 3)))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Constraints:\n    # 1 \u2264 n \u2264 10^5\n    # 1 \u2264 i \u2264 n\n    # 1 \u2264 j,k \u2264 n\n    # 0 \u2264 a[i] \u2264 10^9\n    # (i * i - i + 1) * (j * j - j + 1) * (k * k - k + 1) = 0 mod 3\n    #\n    # Approach:\n    # Generate a list of numbers in the range of n, multiply them with each other and \n    # find out the remainder when we divide the result by 3. Then filter the results \n    # in range of n^2 which will give us the valid triples of a[i], a[j], a[k].\n\n    # Time complexity - O(n^3) - We will be generating all the product of the numbers in \n    # range of n and then we will filter the results of length n^2. The result is O(n^3)\n    # for generating product we have two options, one is to generate all the product \n    # and then filter the result, second is to filter the result at each iteration and \n    # then generate the product, but both are O(n^2) so we can say the overall complexity\n    # is O(n^3) - n * (n", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n < 0:\n        return 0\n    a = [0 for _ in range(n)]\n    for i in range(n):\n        a[i] = i*i - i + 1\n    max_triples = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n\n    a = [int(x) for x in str(n)]\n\n    for i in range(0, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if ((a[i] + a[j] + a[k]) % 3 == 0):\n                    max_triples += 1\n\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write your code here\n    n = int(input())\n    a = [int(i) for i in input().split()]\n    max_triples = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                a_sum = a[i] + a[j] + a[k]\n                if a_sum % 3 == 0:\n                    max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i) * i - i + 1 for i in range(1, n + 1)]\n\n    result = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            for k in range(j, n + 1):\n                if (i + j + k) % 3 == 0:\n                    result += 1\n                    break\n                else:\n                    pass\n\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i*i - i + 1)\n    return len(get_triples(n, a))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    # Example: n = 5\n    # a = [1, 3, 7, 13, 21]\n    #\n    # (1, 7, 13)\n    # (3, 7, 13)\n    # (7, 13, 21)\n\n    def dfs(arr):\n        if len(arr) <= 1:\n            return\n        for i in range(len(arr)):\n            for j in range(i + 1, len(arr)):\n                if arr[i] + arr[j] + arr[k] % 3 == 0:\n                    return dfs(arr[max(0, i - 1) : min(len(arr) - 1, i + 1)])\n\n    return dfs(range(n))</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [(i * i - i + 1) for i in range(n)]\n    val = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    val += 1\n    return val", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n\n    return sum(i < j < k and a[i] + a[j] + a[k] % 3 == 0 for i, j, k in zip(a, a, a))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n\n    for i in range(n):\n        a[i] = i * i - i + 1\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    yield (a[i], a[j], a[k])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = [int(i * i - i + 1) for i in range(1, n + 1)]\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i + j * j + k * k == (i + j + k) * (i + j + k):\n                    if (i + j + k) % 3 == 0:\n                        return 1\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    res = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if i < j < k and (a[i] + a[j] + a[k]) % 3 == 0:\n                    res += 1\n    return res\n\nn = int(input())", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    size = n\n    nums = []\n    for i in range(size):\n        nums.append(i*i - i + 1)\n\n    result = 0\n    for i in range(size):\n        for j in range(size):\n            for k in range(size):\n                if i < j < k and nums[i] + nums[j] + nums[k] % 3 == 0:\n                    result += 1\n\n    print(result)\n\nget_max_triples(5)</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = [(i * i - i + 1) for i in range(n)]\n    valid_triples = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    valid_triples += 1\n    return valid_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1 for _ in range(n)]\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    return 1\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    return sum([(i, j, k) for i, j, k in zip(a, a, a) if i + j + k % 3])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    arr = [0] * n\n    for i in range(1, n):\n        arr[i] = i * i - i + 1\n    for i in range(0, n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (arr[i] + arr[j] + arr[k]) % 3 == 0:\n                    yield (arr[i], arr[j], arr[k])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if(n < 1):\n        raise Exception(\"Invalid Input\")\n    if(n == 1):\n        return 1\n    if(n == 2):\n        return 0\n\n    a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]\n    return len([a[i * i - i + 1] for i in range(n) if i * i - i + 1 < a[n]]) / 3", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    numbers = []\n    for i in range(1, n):\n        numbers.append(i * i - i + 1)\n\n    nums = list(map(int, raw_input().split()))\n    triplets = 0\n    for i in range(len(nums) - 1):\n        for j in range(i + 1, len(nums)):\n            for k in range(j + 1, len(nums)):\n                if (nums[i] + nums[j] + nums[k]) % 3 == 0:\n                    triplets += 1\n\n    return triplets", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    # Note: n will always be positive.\n    if n == 1:\n        return 0\n    elif n == 2:\n        return 1\n    else:\n        max_triple = 0\n        for i in range(1, n):\n            for j in range(i + 1, n):\n                for k in range(j + 1, n):\n                    if a[i] + a[j] + a[k] == i*i + j*j + k*k and a[i] < a[j] and a[j] < a[k]:\n                        if a[i] + a[j] + a[k] % 3 == 0:\n                            max_triple += 1\n                        else:\n                            return 0\n        return max_triple", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n\n    result = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    result += 1\n\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # your code here\n    a = [1, 3, 7, 13, 21]\n    return len([(i, j, k) for i, j, k in zip(a, a[1:], a[2:]) if i + j + k % 3])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [ i*i - i + 1 for i in range(n)]\n    triplets = 0\n    for i in range(n-1):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triplets += 1\n    return triplets", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [i * i - i + 1 for i in range(n)]\n    max_count = 0\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i < j < k and a[i] + a[j] + a[k] == 3 * i or i > j > k and a[i] + a[j] + a[k] == 3 * (n - i - 1):\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        max_count += 1\n    return max_count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n    l = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    l.append((a[i], a[j], a[k]))\n    return len(l)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            for k in range(j, n + 1):\n                if i * i - i + 1 + j * j - j + 1 + k * k - k + 1 == 0:\n                    max_triples += 1\n\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1, 3, 7, 13, 21]\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    print(a[i], a[j], a[k])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n <= 0:\n        return 0\n\n    a = [1]\n    for i in range(2, n):\n        a.append(i*i - i + 1)\n\n    result = 0\n    for i in range(1, len(a) - 1):\n        for j in range(i + 1, len(a) - 1):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    result += 1\n\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write code here\n\n    def inner(a):\n        return [(a[i] + a[j] + a[k]) % 3 == 0 for i, j, k in zip(range(len(a)), range(i+1, len(a)), range(i+2, len(a)))]\n\n    return sum(inner(a) for a in range(1, n+1))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [i*i - i + 1 for i in range(1, n+1)]\n    return sum([sum(set(x)) for x in a if all(sum(x) % 3 == 0)]) # only valid triplets", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    def helper(a, left, right):\n        if right == -1:\n            return left\n        for i in range(left, right + 1):\n            for j in range(left, right + 1):\n                for k in range(left, right + 1):\n                    if i < j < k and a[i] + a[j] + a[k] % 3 == 0:\n                        return helper(a, left, min(i, j, k))\n                    if j < k:\n                        if a[i] + a[j] + a[k] % 3 == 0:\n                            return helper(a, min(i, j, k), right)\n                    \n    return helper([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 0, n - 1)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    result = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Write your code here\n    return len([(a[i], a[j], a[k]) for i in range(n) for j in range(i+1,n) for k in range(j+1,n) if a[i] + a[j] + a[k] % 3])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    assert n > 0, \"n must be greater than 0\"\n\n    a = [(i*i - i + 1) for i in range(n)]\n    max_triples = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    triples = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triples += 1\n    return triples\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n < 0:\n        return -1\n    max_triples = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    yield (a[i], a[j], a[k])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    def triplets(n):\n        # write your code here\n        a = range(1,n+1)\n        # create a list of lists of triplets \n        triplets = []\n        for i in range(1,len(a)):\n            for j in range(i+1,len(a)):\n                for k in range(j+1,len(a)):\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        triplets.append([i,j,k])\n        return triplets\n    return triplets(n)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n    for i in range(1, n+1):\n        for j in range(1, n+1):\n            if i == j:\n                continue\n            for k in range(1, n+1):\n                if k == i or k == j:\n                    continue\n                if i * i - i + 1 + j * j - j + 1 + k * k - k + 1 == (3 * (i + j + k)):\n                    max_triples += 1\n    return max_triples\n\nmax_triples = get_max_triples(int(input()))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1]\n    for i in range(1, n):\n        a.append(i * i - i + 1)\n\n    num_triples = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    num_triples += 1\n    return num_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    arr = []\n    for i in range(1, n+1):\n        arr.append(i*i - i + 1)\n    max_triples = 0\n    for i in arr:\n        for j in arr:\n            if i < j:\n                for k in arr:\n                    if (i + j + k) % 3 == 0:\n                        max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n\n    max_triple = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    max_triple += 1\n    return max_triple", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Solution 1\n    # Time Complexity : O(n\u00b2)\n    # Space Complexity : O(n\u00b2)\n    # a = [ i*i - i + 1 for i in range(n) ]\n    # for i in range(1, n):\n    #     for j in range(i, n):\n    #         for k in range(j, n):\n    #             if i*i + j*j + k*k == 3*l:\n    #                 return 1\n    # Solution 2\n    # Time Complexity : O(n\u00b3)\n    # Space Complexity : O(n\u00b3)\n    # a = [ i*i - i + 1 for i in range(n) ]\n    # for i in range(1, n):\n    #     for j in range(1, n):\n    #         for k in range(1, n):\n    #             if a[i] + a[j] + a[k] == 3*l:\n    #                 return 1\n    # Solution 3\n    # Time Complexity : O(n\u00b3)\n    # Space Complexity : O(n\u00b3)\n    # a = [ i*i - i + 1 for i in range(n) ]\n    # for i in range(", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    array = []\n    for i in range(1, n + 1):\n        array.append(i * i - i + 1)\n    result = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if array[i] + array[j] + array[k] == 3 * i + j + k and i < j < k:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # for the case when there is not enough space to store all integers.\n    if n * n - n + 1 > n * n - n + n * n - n + n - 1:\n        return 0\n    # for the case when all integers are 0, 1 or 2.\n    if n == 1:\n        return 0\n    if n == 2:\n        return 0\n    # create the array. We start from the middle. First we take n/2 - 1\n    # numbers from the middle, then we take n/2 from the beginning and n/2\n    # from the end.\n    a = list(range(n))\n    for i in range(0, n - 1, 2):\n        a[i] = n - i - 1\n    for i in range(1, n - 1, 2):\n        a[i] = i * i - i + 1\n    return len([triple for triple in itertools.combinations(a, 3) if sum(triple) % 3 == 0])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    cnt = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (i*i-i + 1)+(j*j-j + 1)+(k*k-k + 1) == 3*x:\n                    cnt += 1\n    return cnt", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(1, n+1):\n        a.append(i * i - i + 1)\n    result = 0\n    for i in range(0, len(a)-1):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if i < j < k and a[i] + a[j] + a[k] % 3 == 0:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    k = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    k += 1\n    return k", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    with open('input.txt', 'r') as f:\n        n = int(f.readline())\n\n    a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]\n\n    triples = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    triples += 1\n\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n    return len(list(filter(lambda i: i[0] + i[1] + i[2] % 3 == 0, combinations(a, 3))))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n    count = 0\n    for i in range(1, n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # time complexity O(n^3), space complexity O(1)\n    # Uses a simple loop to find the answer, making it O(n^3).\n    a = [i*i - i + 1 for i in range(n)]\n    count = 0\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n <= 0:\n        return 0\n\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n\n    triple_count = 0\n    for i in range(1, n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triple_count += 1\n\n    return triple_count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    trip = []\n    a = [int(n*n - n + 1) for x in range(n)]\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    trip.append((a[i], a[j], a[k]))\n    return len(trip)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n    i = 1\n    while i <= n:\n        j = i + 1\n        while j <= n:\n            k = j + 1\n            while k <= n:\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    max_triples += 1\n                k += 1\n            j += 1\n        i += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    arr = [i]*n\n    for i in range(n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if (i*i - i + 1) + (j*j - j + 1) + (k*k - k + 1) % 3 == 0:\n                    arr[i] = i*i - i + 1\n                    arr[j] = j*j - j + 1\n                    arr[k] = k*k - k + 1\n                    break\n            else:\n                break\n    return len(arr)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    num = 0\n    a = [i+1 for i in range(n)]\n    a.sort()\n    for i in range(1,n):\n        for j in range(i+1,n):\n            if (a[i] + a[j] + a[j-1]) % 3 == 0:\n                num += 1\n    return num", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    res = 0\n    triples = []\n    if n < 1:\n        return 0\n    for i in range(1, n+1):\n        a = i*i - i + 1\n        for j in range(i+1, n+1):\n            if (j-i)%3 == 0:\n                for k in range(j+1, n+1):\n                    if (k-j)%3 == 0:\n                        res += 1\n                        triples.append((a[i], a[j], a[k]))\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    i = 1\n    while i < n:\n        a[i] = i * i - i + 1\n        i += 1\n    # A triple (a[i], a[j], a[k]) exists only if a[i] + a[j] + a[k] is multiple of 3.\n    # So, we need to count the number of triplets satisfying this condition.\n    count = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n - 1):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] > 0:\n                    if (a[i] + a[j] + a[k]) % 3 == 0:\n                        count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = [(i*i - i + 1) for i in range(n)]\n    number = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    number += 1\n    return number", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i, n):\n            for k in range(j, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    return 1\n        a = [i * i - i + 1] * n\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_possible_triples = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if i * i - i + 1 + j * j - j + 1 + k * k - k + 1 == 3:\n                    max_possible_triples += 1\n    return max_possible_triples\n\nn = int(input())\na = [int(i) for i in input().split()]", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            for k in range(j, n+1):\n                if (i*i - i + 1) + (j*j - j + 1) + (k*k - k + 1) % 3 == 0:\n                    max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Define a = [1, 3, 7, 13, 21]\n    a = [1, 3, 7, 13, 21]\n    # result = 0\n    result = 0\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            for k in range(1, n + 1):\n                if i < j < k:\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write your code here\n    max_triple = 0\n    for i in range(1,n+1):\n        for j in range(i+1,n+1):\n            for k in range(j+1,n+1):\n                if ((i*i - i + 1) + (j*j - j + 1) + (k*k - k + 1)) % 3 == 0:\n                    max_triple = max_triple + 1\n    return max_triple", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # this is the same as finding triplets in a * order * given\n    # the specific values for each position.\n    # a[i] = i * i - i + 1\n    # i * i = 3 * i - 1\n    # the *only* possible multiples of 3 are 1,3 and 9\n    # a[i] + a[j] + a[k] = a[j] + a[k]\n    # j + k = (i + i + 1) - 1\n    # j + k = i * 2 - i\n    # j + k = i * 2 - i + 2\n    # j + k - i * 2 = 2\n    # j + k = i * 2 + 2\n\n    # one final step of optimization is to notice that the\n    # values j and k are separated by 2. So we can modify the formula\n    # for j + k to be i * 2 + 1\n    # j + k = i * 2 + 1\n    # j + k - i * 2 = 1\n\n    # now it's time to do the actual thing\n    n = n - 1\n    i = 1\n    j = i * 2 + 1\n    cnt = 0\n    while i < n:\n        if j < n:\n            cnt += 1\n            j += 1", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    arr = [1] * n\n    for i in range(1, n):\n        arr[i] = i * i - i + 1\n\n    count = 0\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i < j < k and arr[i] + arr[j] + arr[k] % 3 == 0:\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    #start_time = time.time()\n    def search(a, i, j, k):\n        return a[i] + a[j] + a[k] == 3 * i + 3 * j + 3 * k\n    def is_perfect_square(n):\n        #start_time = time.time()\n        if n < 0:\n            return False\n        for x in range(1, int(n**0.5 + 1)):\n            if n == x * x:\n                return True\n        return False\n    def get_max_triples_core(a, i, j, k):\n        if k == i:\n            return 0\n        elif i == j:\n            return 1\n        elif j == k:\n            return 1\n        elif k < i and k < j:\n            return 0\n        elif k < i:\n            return search(a, i, k, j) + get_max_triples_core(a, i, k, j) + get_max_triples_core(a, k, i, j)\n        elif k < j:\n            return search(a, k, i, j) + get_max_triples_core(a, k, i, j) + get_max_triples_core(a, i, k", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = n\n    a = [0] * n\n    for i in range(n):\n        a[i] = i*i - i + 1\n    triples = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triples += 1\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write code here\n\n    def triplet_count(a):\n        # write code here\n        pass\n\n    return triplet_count(n)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    n = int(n)\n    a = [i*i - i + 1 for i in range(n)]\n    triples = 0\n\n    for i in range(1, n):\n        for j in range(i, n):\n            for k in range(j, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triples += 1\n\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if i + j + k == 3:\n                    max += 1\n    return max", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    sum = n * (n - 1) // 2\n    assert sum % 3 == 0\n    valid_triples = 0\n    for i in range(1, n):\n        j = i + i - 1\n        k = j + j - 1\n        if k <= n and j < k:\n            if k * k - k + 1 % 3 == 0:\n                valid_triples += 1\n    return valid_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n < 0:\n        return 0\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i*i - i + 1\n    num = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] == 0:\n                    continue\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    num += 1\n    return num", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n    for i in range(1, n + 1):\n        for j in range(1, i + 1):\n            if a[i] + a[j] + a[i + j] % 3!= 0:\n                continue\n            for k in range(j + 1, i + j + 1):\n                if a[i] + a[j] + a[k] % 3!= 0:\n                    continue\n                yield (i, j, k)\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1]\n    for i in range(1, n):\n        a.append(i * i - i + 1)\n    return sum([int(i) for i in a if i + a[j + 1] + a[j + 2] % 3 == 0])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = list(range(1, n+1))\n    # Create a dict of all a[i] and a[j]\n    d = dict()\n    for i in a:\n        for j in a:\n            if i!= j:\n                d[i, j] = (i*j - i + 1) - (a[i] + a[j])\n    res = 0\n    for i in a:\n        for j in a:\n            for k in a:\n                if i!= j and i!= k and j!= k:\n                    if (i*j - i + 1) + (i*k - i + 1) + (j*k - j + 1) == 0:\n                        res += 1\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = list(range(1,n+1))\n    return len(triples(a))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    def get_triple_count(n):\n        if n == 1:\n            return 0\n        if n == 2:\n            return 0\n        if n == 3:\n            return 1\n        m = n-1\n        res = 0\n        for i in range(1, n):\n            for j in range(i+1, n):\n                for k in range(j+1, n):\n                    if m == 0:\n                        res += 1\n                    else:\n                        res += get_triple_count(m)\n                    m -= 1\n        return res\n    return get_triple_count(n)\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    def is_valid_triple(triple):\n        s = sum(triple)\n        return s%3==0\n    res = 0\n    for i in range(1,n+1):\n        for j in range(i+1,n+1):\n            for k in range(j+1,n+1):\n                if is_valid_triple([i,j,k]):\n                    res += 1\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n\n    return sum(sum(a[i:j + 1]) % 3 == 0 for i in range(n) for j in range(i+1, n))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(n):\n        for j in range(i, n):\n            for k in range(j, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    yield (a[i], a[j], a[k])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n    return len(filter(lambda x: x[2] - x[0] - x[1] % 3 == 0, zip(a, a[1:], a[2:])))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n <= 1:\n        return 0\n    num = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                num += (i*(i+1))*(j*(j+1))*(k*(k+1)) \\\n                        - (i*i)*(j*j)*(k*k) + (i*i)*(j*j) \\\n                        + (i*i)*(k*k) + (j*j)*(k*k) \\\n                        - (i*(i+1) + j*(j+1) + k*(k+1)) \\\n                        % 3\n    return num", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # using a list to store the valid triples and return the count\n    triples = []\n    for i in range(1, n + 1):\n        # since the sum is 3k, the sum of a[i] + a[j] + a[k] must be divisible by 3\n        for j in range(1, n + 1):\n            for k in range(1, n + 1):\n                # sum of a[i], a[j] and a[k] must be 3k and only when i < j < k\n                if (i + j + k) % 3 == 0 and i < j < k:\n                    # sum of a[i], a[j] and a[k] must be divisible by 3\n                    if (i * i - i + 1 + j * j - j + 1 + k * k - k + 1) % 3 == 0:\n                        triples.append((i, j, k))\n    return len(triples)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [ i*i - i + 1 for i in range(1, n) ]\n    return sum([ (a[i], a[j], a[k]) for i in range(1, n) for j in range(i, n) if j < k and a[i] + a[j] + a[k]%3 == 0 for k in range(j, n) if k > i ])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    arr = []\n    for i in range(n):\n        arr.append(i * i - i + 1)\n\n    i = j = k = 0\n    count = 0\n    while i < len(arr):\n        while j < len(arr) and i < j:\n            if arr[i] + arr[j] + arr[k] == 0:\n                count += 1\n            elif arr[i] + arr[j] + arr[k]!= 0:\n                break\n            j += 1\n\n        i += 1\n        while k < len(arr) and j < k:\n            if arr[i] + arr[j] + arr[k] == 0:\n                count += 1\n            elif arr[i] + arr[j] + arr[k]!= 0:\n                break\n            k += 1\n\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    triples = 0\n    a = [0] * n\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if (i * j * k) % 3 == 0:\n                    triples += 1\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [ i*i - i + 1 for i in range(n) ]\n    return sum(1 for i in a if i < a[j+1] and i < a[k+1] and a[i]+a[j]+a[k]%=3)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i*i - i + 1) for i in range(n)]\n    max_triples = 0\n    for i in range(len(a)-1):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    max_triples += 1\n                    break\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i*i - i + 1) for i in range(n)]\n    res = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    res += 1\n    return res\n\nn = int(input())", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n < 1:\n        return 0\n    a = [1] * n\n    for i in range(2, n + 1):\n        a[i] = i * i - i + 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] == 0 or a[i] + a[j] + a[k] == 1:\n                    continue\n                if a[i] + a[j] + a[k] % 3!= 0:\n                    continue\n                return 1 + get_max_triples(i + 1) + get_max_triples(j + 1) + get_max_triples(k + 1)\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [ i*(i+1)-i+1 for i in range(n)]\n    sum = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    sum += 1\n    return sum", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Write your code here\n    a = [1,3,7,13,21]\n    return len(list(filter(lambda x: sum(x)%3==0, combinations(a,3))))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    m = int(n**0.5)\n    a = [1,3,7,13,21]\n    for i in range(m):\n        for j in range(i+1,m):\n            for k in range(j+1,m):\n                if i*a[i] + j*a[j] + k*a[k] % 3 == 0:\n                    return 1\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i*i - i + 1)\n\n    for i in range(len(a) - 1):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if (i < j < k) and (a[i] + a[j] + a[k]) % 3 == 0:\n                    print(a[i], a[j], a[k])\n                    return 1", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    max_triple_count = 0\n    a = [0] * n\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n\n    for i in range(0, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i + j + k == 0:\n                    continue\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    max_triple_count += 1\n    return max_triple_count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # given n, create a list of size n\n    a = [ i*i - i + 1 for i in range(n)]\n    # iterate over the list and compute the sum\n    # if the sum is a multiple of 3, increment the count\n    count = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    a = []\n    for _ in range(n):\n        a.append(i * i - i + 1)\n\n    counter = 0\n    for i, j, k in zip(a, a[1:], a[2:]):\n        if i + j + k == 0 or i + j + k == 3 or i + j + k == 6 or i + j + k == 9:\n            counter += 1\n\n    return counter", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [-1 for _ in range(n)]\n    for i in range(1, n):\n        a[i] = i*i - i + 1\n\n    # Initializing a list that will store tuples of a[i], a[j], a[k]\n    # where i < j < k and a[i] + a[j] + a[k] is a multiple of 3.\n    result = []\n\n    for i in range(1, n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                sum = a[i] + a[j] + a[k]\n                # If sum is a multiple of 3 then store the triple\n                if sum % 3 == 0:\n                    result.append((a[i], a[j], a[k]))\n\n    return len(result)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = list(range(1,n+1))\n\n    i = 0\n    max_triples = 0\n    while i < len(a):\n        j = i + 1\n        while j < len(a):\n            k = j + 1\n            while k < len(a):\n                if a[i] + a[j] + a[k] == 3 * k:\n                    max_triples += 1\n                    break\n                else:\n                    k += 1\n            j += 1\n        i += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    arr = [i*i - i + 1 for i in range(1, n+1)]\n    count = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if(arr[i] + arr[j] + arr[k] == 3*k):\n                    count += 1\n    return count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i * i - i + 1) for i in range(n)]\n    return len(filter(lambda x: sum(x) % 3 == 0, combinations(a, 3)))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = [1] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n    result = 0\n    for i in range(n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [(i*i - i + 1) for i in range(n)]\n    total = 0\n    for i in range(len(a)-1):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] is not 0 and (i < j < k):\n                    total += 1\n    return total", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n < 1:\n        return 0\n\n    a = [ i * i - i + 1 for i in range(1, n+1)]\n    cnt = 0\n    for i in range(len(a)-1):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] == 3*x:\n                    cnt += 1\n    return cnt", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(1, n+1):\n        a[i] = i * i - i + 1\n    triples = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if i * j * k % 3 == 0:\n                    triples += 1\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    triples = 0\n    a = []\n    while n:\n        a.append(n % 10)\n        n //= 10\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if i * i - i + 1 + j * j - j + 1 + k * k - k + 1 == 3 * (i + j + k):\n                    triples += 1\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [None] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n    max_triples = 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    max_triples += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    res = 0\n    a = []\n    for i in range(1, n+1):\n        a.append(i*i - i + 1)\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    res += 1\n\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    cnt = 0\n    arr = [0] * n\n    for i in range(n):\n        arr[i] = i * i - i + 1\n\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if (arr[i] + arr[j] + arr[k]) % 3 == 0:\n                    cnt += 1\n\n    return cnt", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    result = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if (i*i-i+1) + (j*j-j+1) + (k*k-k+1) % 3 == 0:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    return sum(sum(a) % 3 == 0 for a in product(range(n), repeat=3))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    a[0] = 1\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] == i * i + j * j + k * k and a[i] + a[j] + a[k] % 3 == 0:\n                    yield (a[i], a[j], a[k])\n\nres = 0\nfor i in range(1, len(a)):\n    for j in range(i + 1, len(a)):\n        for k in range(j + 1, len(a)):\n            if a[i] + a[j] + a[k] == i * i + j * j + k * k and a[i] + a[j] + a[k] % 3 == 0:\n                res += 1", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1] * n\n    return count_triples(a, n)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # the left-most 1 indicates we need to start the 1, 1, 1 part of the calculation.\n    n = n + 1\n    max_triples = 0\n\n    # the length of the array is n+1, so we need to offset the indices by 1.\n    a = [0] * (n + 1)\n\n    # as the length of the array is n+1, we need to offset the indices by 1\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                # we need to offset the indices by 1.\n                if a[i] + a[j] + a[k] == 0:\n                    continue\n\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    max_triples += 1\n\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    list = []\n    for i in range(1, n+1):\n        list.append(i*i - i + 1)\n    return len([sum(list[i:i+3]) for i in range(0, len(list)-3, 3) if sum(list[i:i+3])%3 == 0])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n    return triplets(a)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write code here\n    a = [1]\n    for i in range(1, n+1):\n        a.append(i*i - i + 1)\n    k = 0\n    for i in range(1, n+1):\n        for j in range(i+1, n+1):\n            for k in range(j+1, n+1):\n                if (i*i - i + 1) + (j*j - j + 1) + (k*k - k + 1) == 3*k:\n                    k += 1\n    return k", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = list(range(n))\n    m = 0\n    for i in range(n - 1):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                t = a[i] + a[j] + a[k]\n                if t % 3 == 0:\n                    m += 1\n    return m", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    triple_count = 0\n    a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            for k in range(j, n + 1):\n                if (i + j + k) % 3 == 0 and i < j < k:\n                    triple_count += 1\n    return triple_count", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Write your code here\n    a = []\n    for i in range(1, n+1):\n        a.append(i*i - i + 1)\n    #print(a)\n    #print(n)\n    count = 0\n    for i in range(1, n+1):\n        for j in range(i, n+1):\n            for k in range(j, n+1):\n                if (i + j + k) % 3 == 0:\n                    count += 1\n    return count\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    i = 1\n    while i < n:\n        a.append(i * i - i + 1)\n        i += 1\n    for i in range(1, n - 1):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    print(a[i], a[j], a[k])\n                    break\n    return a\n\na = [1, 3, 7, 13, 21]\nn = 5", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    triples = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            for k in range(j, n + 1):\n                if (i + j + k) % 3 == 0:\n                    triples += 1\n\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    def find_triple(arr):\n        count = 0\n        for i in range(0, len(arr)-1):\n            for j in range(i+1, len(arr)-1):\n                for k in range(j+1, len(arr)):\n                    if arr[i] + arr[j] + arr[k] == 3 * i:\n                        count += 1\n                        break\n\n        return count\n\n    return find_triple(range(1,n+1))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [(i*i - i + 1) for i in range(n)]\n    valid = set()\n    for i in range(1, n-1):\n        for j in range(i, n):\n            for k in range(j, n):\n                sum = a[i] + a[j] + a[k]\n                if sum % 3 == 0:\n                    valid.add(tuple(sorted([a[i], a[j], a[k]])))\n\n    return len(valid)\n\nn = int(input())", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_triples = 0\n    i = 0\n    a = [1]\n    while i < n:\n        for j in range(i + 1, n):\n            a.append(i * i - i + 1)\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] > n * n * n:\n                    break\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    if i < j < k:\n                        max_triples += 1\n        i += 1\n    return max_triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(n)\n    a = [0] * n\n    for i in range(1, n):\n        a[i] = i * i - i + 1\n\n    arr = []\n    for i in range(1, n):\n        if a[i] + a[i - 1] + a[i + 1] % 3 == 0:\n            arr.append([a[i], a[i - 1], a[i + 1]])\n    return len(arr)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(1, n + 1):\n        a.append(i * i - i + 1)\n    return sum(1 for i in a for j in a for k in a if i + j + k % 3 == 0)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # write code here\n    if n == 0:\n        return 0\n    a = [i * i - i + 1 for i in range(n)]\n    return sum([sum([sum(x) % 3 == 0 for x in zip(y, z)]) for y in a for z in a])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [int(i * i - i + 1) for i in range(n)]\n    res = 0\n    for i in range(1, len(a)):\n        for j in range(i + 1, len(a)):\n            for k in range(j + 1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    res += 1\n    return res\n\nn = int(input())", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for i in range(n):\n        a.append(i * i - i + 1)\n    # Two for loops because I thought it will be faster\n    for i in range(n):\n        for j in range(n):\n            for k in range(n):\n                if i < j < k and (a[i] + a[j] + a[k]) % 3 == 0:\n                    return 1\n    return 0", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n == 0:\n        return 0\n    a = list(range(1, n))\n    for i in range(1, n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if ((a[i] * a[j] * a[k]) % 3) == 0:\n                    yield (i, j, k)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    nums = []\n    for i in range(1, n+1):\n        nums.append(i*i - i + 1)\n\n    result = 0\n    for i in nums:\n        for j in nums:\n            for k in nums:\n                if (i+j+k) % 3 == 0 and i < j < k:\n                    result += 1\n\n    return result\n\n''' Solution for the problem  -  https://www.hackerrank.com/challenges/triplets'''\n''' Solution is Accepted - http://www.hackerrank.com/challenges/triplets/accepted-solution'''", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [1 for i in range(n)]\n    for i in range(n):\n        a[i] = i*i - i + 1\n    for i in range(n):\n        for j in range(i + 1, n):\n            if a[i] + a[j] > 3 * (j - i + 1):\n                break\n            if a[i] + a[j] + a[j + 1] > 3 * (j - i + 1):\n                break\n            if a[i] + a[j] + a[j + 1] + a[j + 2] > 3 * (j - i + 1):\n                break\n            if a[i] + a[j] + a[j + 1] + a[j + 2] + a[j + 3] > 3 * (j - i + 1):\n                break\n            if a[i] + a[j] + a[j + 1] + a[j + 2] + a[j + 3] + a[j + 4] > 3 * (j - i + 1):\n                break\n            if a[i] + a[j] + a[j + 1] + a[j + 2] + a[j + 3] + a[j + 4] + a[j + 5] > 3 * (j - i + 1):\n                break\n            if a[i] + a[j] +", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    n = int(input())\n    triples = 0\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if i * i - i + 1 + j * j - j + 1 + k * k - k + 1 == 0 or i + j + k > n:\n                    continue\n                if (i + j + k) % 3 == 0:\n                    triples += 1\n\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    val = [1]\n    for i in range(2,n):\n        val.append(i*i - i+1)\n    max_triple = 0\n    for i in range(1,n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if val[i] + val[j] + val[k] % 3 == 0:\n                    max_triple += 1\n    print(max_triple)", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [(x*y - x + 1) for x in range(n) for y in range(x)]\n    return len([x for x in a if x[0] + x[1] + x[2] % 3 == 0])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [0] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n\n    valid_triples = []\n    for i in range(n):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    valid_triples.append((a[i], a[j], a[k]))\n\n    return len(valid_triples)\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Write your code here\n    max_triples = 0\n    a = [int(i*i - i + 1) for i in range(n)]\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] == 0:\n                    continue\n                else:\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        max_triples += 1\n    return max_triples</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if(n < 1):\n        return 0\n    a = []\n    for i in range(n):\n        a.append(i*i - i + 1)\n    a.sort()\n    max_sum = 0\n    for i in range(n-1):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if(a[i]+a[j]+a[k] == 3*k or a[i]+a[j]+a[k] == 3*(k-1)):\n                    max_sum += 1\n    return max_sum", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = [(i*i)%(i+1) for i in range(n+1)]\n    return len([i for i in range(n+1) if sum(a[i:i+3])%3==0 and i>2])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    triples = 0\n    for i in range(1, n + 1):\n        for j in range(i + 1, n + 1):\n            for k in range(j + 1, n + 1):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    triples += 1\n    return triples", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # another O(n^2) solution\n    # s = sum(a)\n    # pair = [[s - a[i] + a[j], a[i], a[j]] for i, j in zip(range(n), range(i, n))]\n    # trip = []\n    # for i in range(n):\n    #     for j in range(i+1, n):\n    #         for k in range(j+1, n):\n    #             if a[i] + a[j] + a[k] == 0:\n    #                 continue\n    #             if (a[i], a[j], a[k]) not in trip:\n    #                 trip.append((a[i], a[j], a[k]))\n    # return len(trip)\n    # 3s - 2s + 1 = 5 is a multiple of 3\n    # 2 + 3 + 4 = 9 is a multiple of 3\n    # 2 + 4 + 6 = 12 is a multiple of 3\n    # answer is len(trip) + len(pair) == len(set(trip + pair))\n    # O(N^3) solution\n    # s = sum(a)\n    # answer = 0\n    # for i in range(n):\n    #     for j in range(i+1,", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    # Here is my own code\n    a = [0] * n\n    for i in range(n):\n        a[i] = i * i - i + 1\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            if a[i] + a[j] + a[i + 1] == 0:\n                return 0\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            for k in range(j + 1, n):\n                if a[i] + a[j] + a[k] == 0:\n                    return 0\n    return 1\n</s>", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    for i in range(n):\n        a[i] = i*i - i + 1\n    result = 0\n    for i in range(n-1):\n        for j in range(i, n):\n            for k in range(j+1, n):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    result += 1\n    return result", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    a = []\n    for _ in range(n):\n        a.append(i * i - i + 1)\n    for i in range(len(a)-1):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    yield (a[i], a[j], a[k])", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n\n    a = list(range(1, n+1))\n\n    res = 0\n    for i in range(len(a)):\n        for j in range(i+1, len(a)):\n            for k in range(j+1, len(a)):\n                if a[i] + a[j] + a[k] % 3 == 0:\n                    res += 1\n\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    if n < 1:\n        return 0\n\n    a = [0] * n\n    for i in range(1, n + 1):\n        a[i] = i * i - i + 1\n\n    res = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            for k in range(j, n + 1):\n                res += (a[i] + a[j] + a[k]) % 3 == 0\n\n    return res", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    triples = 0\n    for i in range(1, n):\n        for j in range(i+1, n):\n            for k in range(j+1, n):\n                if (a[i] + a[j] + a[k]) % 3 == 0:\n                    triples += 1\n\n    return triples\n\nn = int(input())\n\na = list(map(int, input().strip().split()))", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    max_pairs = 0\n    for i in range(1,n):\n        for j in range(i+1,n):\n            for k in range(j+1,n):\n                if (i+j+k)%3 == 0:\n                    if a[i] + a[j] + a[k] == 0:\n                        continue\n                    if (a[i] + a[j] + a[k])%3!= 0:\n                        continue\n                    max_pairs += 1\n    return max_pairs", "def get_max_triples(n):\n    \"\"\"\n    You are given a positive integer n. You have to create an integer array a of length n.\n        For each i (1 \u2264 i \u2264 n), the value of a[i] = i * i - i + 1.\n        Return the number of triples (a[i], a[j], a[k]) of a where i < j < k, \n    and a[i] + a[j] + a[k] is a multiple of 3.\n\n    Example :\n        Input: n = 5\n        Output: 1\n        Explanation: \n        a = [1, 3, 7, 13, 21]\n        The only valid triple is (1, 7, 13).\n    \"\"\"\n    def min_triples(a):\n        max_triples = 0\n        for i in a:\n            for j in a[i+1:]:\n                for k in a[j+1:]:\n                    if a[i] + a[j] + a[k] % 3 == 0:\n                        max_triples += 1\n        return max_triples\n    return min_triples(range(1, n+1))"]]