[["def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(word) > max_chars:\n            max_word = word\n            max_chars = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    def count_unique(word):\n        \"\"\"Return the number of unique characters in the string.\"\"\"\n        return len(set(word))\n\n    def find_max_helper(words):\n        \"\"\"Helper function to find the maximum number of unique characters.\"\"\"\n        max_count = 0\n        max_word = \"\"\n        for word in words:\n            if count_unique(word) > max_count:\n                max_count = count_unique(word)\n                max_word = word\n        return max_word\n\n    return find_max_helper(words)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(set(word)) > max_chars:\n            max_word = word\n            max_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    # print(len(words))\n    # print(len(set(words)))\n    # print(max(words))\n    # print(max(set(words)))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max(set(words), key=len))\n    # print(max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_word = word\n            max_len = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_word = word\n            max_unique = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_word = word\n            max_len = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    def find_max_helper(words):\n        max_len = 0\n        max_word = \"\"\n        for word in words:\n            if len(word) > max_len:\n                max_len = len(word)\n                max_word = word\n        return max_word\n\n    return find_max_helper(words)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_chars = 0\n    for word in words:\n        if len(set(word)) > max_unique_chars:\n            max_word = word\n            max_unique_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(set(word)) > max_chars:\n            max_word = word\n            max_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(word) > max_chars:\n            max_word = word\n            max_chars = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_unique = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_characters = 0\n    for word in words:\n        if len(set(word)) > max_unique_characters:\n            max_word = word\n            max_unique_characters = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    def count_unique(word):\n        \"\"\"Return the number of unique characters in a string.\"\"\"\n        return len(set(word))\n\n    def find_max_lex(words):\n        \"\"\"Return the word with maximum number of unique characters.\"\"\"\n        max_unique = 0\n        max_word = \"\"\n        for word in words:\n            if count_unique(word) > max_unique:\n                max_unique = count_unique(word)\n                max_word = word\n        return max_word\n\n    def find_max_lexicographical(words):\n        \"\"\"Return the word with maximum number of unique characters.\"\"\"\n        max_unique = 0\n        max_word = \"\"\n        for word in words:\n            if count_unique(word) > max_unique:\n                max_unique = count_unique(word)\n                max_word = word\n        return max_word\n\n    return find_max_lexicographical(words)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(word) > max_chars:\n            max_word = word\n            max_chars = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_str = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_str = word\n    return max_str", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_chars = 0\n    for word in words:\n        if len(set(word)) > max_unique_chars:\n            max_word = word\n            max_unique_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_length = 0\n    for word in words:\n        if len(word) > max_length:\n            max_word = word\n            max_length = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_unique = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(word) > max_chars:\n            max_chars = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    return max(words, key=len)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_characters = 0\n    for word in words:\n        if len(set(word)) > max_unique_characters:\n            max_word = word\n            max_unique_characters = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        chars = set(word)\n        if len(chars) > max_chars:\n            max_chars = len(chars)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_word = word\n            max_len = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    def count_unique(word):\n        \"\"\"Return the number of unique characters in the word.\"\"\"\n        return len(set(word))\n\n    def find_max_helper(words):\n        \"\"\"Helper function to find the maximum number of unique characters.\"\"\"\n        max = 0\n        for word in words:\n            if count_unique(word) > max:\n                max = count_unique(word)\n        return max\n\n    return find_max_helper(words)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    return max(words, key=len)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_word = word\n            max_unique = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_word = word\n            max_len = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_unique = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_chars = 0\n    for word in words:\n        if len(set(word)) > max_unique_chars:\n            max_word = word\n            max_unique_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(word) > max_chars:\n            max_word = word\n            max_chars = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    # print(len(words))\n    # print(words[0])\n    # print(words[1])\n    # print(words[2])\n    # print(words[3])\n    # print(words[4])\n    # print(words[5])\n    # print(words[6])\n    # print(words[7])\n    # print(words[8])\n    # print(words[9])\n    # print(words[10])\n    # print(words[11])\n    # print(words[12])\n    # print(words[13])\n    # print(words[14])\n    # print(words[15])\n    # print(words[16])\n    # print(words[17])\n    # print(words[18])\n    # print(words[19])\n    # print(words[20])\n    # print(words[21])\n    # print(words[22])\n    # print(words[23])\n    # print(words[24])\n    # print(words[25])\n    # print(words[26])\n    # print(words[27])\n    # print(words[28])\n    # print(words[29])\n    # print(words[30])\n    # print(words[31])\n    # print(words[32])\n    # print(words[33])\n    # print", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    # print(len(words))\n    # print(max(words))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_chars = 0\n    for word in words:\n        if len(set(word)) > max_unique_chars:\n            max_word = word\n            max_unique_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_unique = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_num = 0\n    for word in words:\n        if len(set(word)) > max_num:\n            max_num = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    # print(len(words))\n    # print(words[0])\n    # print(words[1])\n    # print(words[2])\n    # print(words[3])\n    # print(words[4])\n    # print(words[5])\n    # print(words[6])\n    # print(words[7])\n    # print(words[8])\n    # print(words[9])\n    # print(words[10])\n    # print(words[11])\n    # print(words[12])\n    # print(words[13])\n    # print(words[14])\n    # print(words[15])\n    # print(words[16])\n    # print(words[17])\n    # print(words[18])\n    # print(words[19])\n    # print(words[20])\n    # print(words[21])\n    # print(words[22])\n    # print(words[23])\n    # print(words[24])\n    # print(words[25])\n    # print(words[26])\n    # print(words[27])\n    # print(words[28])\n    # print(words[29])\n    # print(words[30])\n    # print(words[31])\n    # print(words[32])\n    # print(words[33])\n    # print", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    def find_max_helper(words):\n        max_len = 0\n        max_word = \"\"\n        for word in words:\n            if len(word) > max_len:\n                max_len = len(word)\n                max_word = word\n        return max_word\n\n    return find_max_helper(words)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    return max(words, key=len)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique = 0\n    for word in words:\n        if len(set(word)) > max_unique:\n            max_unique = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # write your code here\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    return max(words, key=lambda x: len(set(x)))", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        chars = set(word)\n        if len(chars) > max_chars:\n            max_word = word\n            max_chars = len(chars)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    def find_max_helper(words):\n        max_len = 0\n        max_word = \"\"\n        for word in words:\n            if len(word) > max_len:\n                max_len = len(word)\n                max_word = word\n        return max_word\n\n    return find_max_helper(words)", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_len = 0\n    for word in words:\n        if len(word) > max_len:\n            max_word = word\n            max_len = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    # print(len(words))\n    # print(max(words))\n    # print(min(words))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(max(words, key=len))\n    # print(", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_chars = 0\n    for word in words:\n        if len(word) > max_chars:\n            max_word = word\n            max_chars = len(word)\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_str = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_str = word\n    return max_str", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # print(words)\n    max = 0\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n    return max", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    # words = [\"name\", \"of\", \"string\"]\n    # words = [\"name\", \"enam\", \"game\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc\"]\n    # words = [\"aaaaaaa\", \"bb\",\"cc", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_word = \"\"\n    max_unique_chars = 0\n    for word in words:\n        if len(set(word)) > max_unique_chars:\n            max_word = word\n            max_unique_chars = len(set(word))\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    max_len = 0\n    max_word = \"\"\n    for word in words:\n        if len(word) > max_len:\n            max_len = len(word)\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    return max(words, key=lambda word: len(set(word)))", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word", "def find_max(words):\n    \"\"\"Write a function that accepts a list of strings.\n    The list contains different words. Return the word with maximum number\n    of unique characters. If multiple strings have maximum number of unique\n    characters, return the one which comes first in lexicographical order.\n\n    find_max([\"name\", \"of\", \"string\"]) == \"string\"\n    find_max([\"name\", \"enam\", \"game\"]) == \"enam\"\n    find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\n    \"\"\"    # Write your code here\n    max = 0\n    max_word = \"\"\n    for word in words:\n        if len(set(word)) > max:\n            max = len(set(word))\n            max_word = word\n    return max_word"]]