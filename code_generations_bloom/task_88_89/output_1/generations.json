[["def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(sum):\n        return sum % 2 == 0\n\n    def is_odd(sum):\n        return sum % 2!= 0\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if is_even(sum(array[0], array[-1])):\n            return [array[0], array[-1]] + sort(array[1:-1])\n        else:\n            return [array[-1], array[0]] + sort(array[1:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[0]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b - 1\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) <= 1:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def swap_odd(a, b):\n        return a, b\n\n    def swap_even(a, b):\n        return a, b\n\n    def swap_odd_even(a, b):\n        return a, b\n\n    def swap_even_odd(a, b):\n        return a, b\n\n    def swap_odd_even_odd(a, b):\n        return a, b\n\n    def swap_even_odd_even(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even(a, b):\n        return a, b\n\n    def swap_even_odd_even_odd(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even_odd(a, b):\n        return a, b\n\n    def swap_even_odd_even_odd_e", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_even_sort(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def is_odd_sort(a, b):\n        return sum(a, b) % 2 == 1\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) ==", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return array[0] + sort(array[1:])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    def sort(array):\n        if sum_first_last_index(array) % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_odd(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_even(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_odd_even(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_odd_even_odd(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_odd_even_odd_even(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_odd_even_odd_even_odd(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def swap_odd_even_odd_even_odd_even(a, b):", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even_odd(a, b):", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b\n        else:\n            return a\n\n    def merge(a, b):\n        i = 0\n        j = 0\n        k = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                a[k] = a[i]\n                i += 1\n            else:\n                a[k] = b[j]\n                j += 1\n            k += 1\n        while i < len(a):\n            a[k] = a[i]\n            i += 1\n            k += 1\n        while j < len(b):\n            a[k] = b[j]\n            j += 1\n            k += 1\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge_sort(a[len(a) // 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_odd(a, b)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return a + b % 2\n\n    def even(a, b):\n        return a + b % 2\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return a + b % 2\n\n    def even(a, b):\n        return a + b % 2\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2\n\n    def sort(a, b):\n        if odd_sum(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return sum_even(a, b)\n        else:\n            return sum_odd(a, b)\n\n    return [sort(i, len(array) - 1) for i in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return sum_even(a, b)\n        else:\n            return sum_odd(a, b)\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a, b\n        else:\n            return b, a\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return b - a\n\n    def even_sort(a, b):\n        return a - b\n\n    def sum_odd(a, b):\n        return odd_sum(a, b)\n\n    def sum_even(a, b):\n        return even_sum(a, b)\n\n    def odd_sort_odd(a, b):\n        return odd_sort(a, b)\n\n    def odd_sort_even(a, b):\n        return odd_sort(a, b)\n\n    def even_sort_odd(a, b):\n        return even_sort(a, b)\n\n    def even_sort_even(a, b):\n        return even_sort(a, b)\n\n    def odd_sum_odd(a, b):\n        return odd_sum(a, b)\n\n    def odd_sum_even(a, b):\n        return odd_sum(a, b)\n\n    def even_sum_odd(a, b):\n        return even_sum(a, b)\n\n    def", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b\n\n    def sum_even_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b\n\n    def sum_even_odd_odd_even(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b - a\n        else:\n            return a - b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2\n\n    def swap(a, b):\n        return a, b\n\n    def swap_odd(a, b):\n        return a, b\n\n    def swap_even(a, b):\n        return a, b\n\n    def swap_odd_even(a, b):\n        return a, b\n\n    def swap_odd_even_odd(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even_odd(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even_odd_even(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even_odd_even_odd(a, b):\n        return a, b\n\n    def swap_odd_even_odd_even_odd_even_odd_e", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a - b\n        else:\n            return b - a\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def partition(array, start, end):\n        if start >= end:\n            return array[start], start, end\n        pivot = array[start]\n        i = start + 1\n        for j in range(start + 1, end + 1):\n            if array[j] <= pivot:\n                swap(array[i], array[j])\n                i += 1\n        swap(array[i], array[start])\n        return array[start], start, i - 1\n\n    def merge(array, start, mid, end):\n        if start >= mid:\n            return array[start:]\n        if mid >= end:\n            return array[:mid]\n        pivot, start, mid = partition(array, start, mid)\n        return merge(array[start:mid], start, mid, end) + [pivot] + merge(array[mid + 1:end], start, mid, end)\n\n    return merge(array, 0, len(array) - 1, len(array))", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b\n        else:\n            return a\n\n    def merge(a, b):\n        c = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] <= b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        c.extend(a[i:])\n        c.extend(b[j:])\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge_sort(a[len(a) // 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    def sort(array):\n        if sum_first_last_index(array) % 2 == 0:\n            return array.sort(reverse=True)\n        else:\n            return array.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort_odd(a, b):\n        if sum_odd(a, b) % 2 == 1:\n            return b\n        else:\n            return a\n\n    def sort_even(a, b):\n        if sum_even(a, b) % 2 == 1:\n            return a\n        else:\n            return b\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    else:\n        mid = len(array) // 2\n        left = sort_array(array[:mid])\n        right = sort_array(array[mid:])\n        if sum(left[0], right[-1]) % 2 == 1:\n            return sort_odd(left, right)\n        else:\n            return sort_even(left, right)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd(a):\n        return a % 2 == 1\n\n    def even(a):\n        return a % 2 == 0\n\n    def sort(a, b):\n        if odd(sum(a, b)):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if len(array) == 1:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_even_sort(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def is_odd_sort(a, b):\n        return sum(a, b) % 2 == 1\n\n    if len(array) == 0:\n        return array\n    else:\n        if is_even(array[0], array[-1]):\n            return is_odd_sort(array)\n        else:\n            return is_even_sort(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        \"\"\"\n        sum odd numbers in the given array\n        \"\"\"\n        return sum(array[::2])\n\n    def sum_even(array):\n        \"\"\"\n        sum even numbers in the given array\n        \"\"\"\n        return sum(array[1::2])\n\n    def sort_odd(array):\n        \"\"\"\n        sort odd numbers in the given array\n        \"\"\"\n        return array[::2]\n\n    def sort_even(array):\n        \"\"\"\n        sort even numbers in the given array\n        \"\"\"\n        return array[1::2]\n\n    if len(array) == 0:\n        return array\n\n    if sum_odd(array) % 2 == 0:\n        return sort_even(array)\n    else:\n        return sort_odd(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(n):\n        return n % 2 == 0\n\n    def is_odd(n):\n        return n % 2!= 0\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first index value and the last index value.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sum_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first index value and the last index value.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort_odd(array):\n        \"\"\"\n        Given an array of non-negative integers, return a copy of the given array after sorting in ascending order.\n        \"\"\"\n        return sorted(array)\n\n    def sort_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return a copy of the given array after sorting in descending order.\n        \"\"\"\n        return sorted(array, reverse=True)\n\n    if len(array) == 0:\n        return array\n    elif sum_odd(array) % 2 == 0:\n        return sort_even(array)\n    else:\n        return sort_odd(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if len(array) == 1:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        sum the first index value and last index value of the given array\n        :param array:\n        :return:\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sum_first_last_index_odd(array):\n        \"\"\"\n        sum the first index value and last index value of the given array and return odd\n        :param array:\n        :return:\n        \"\"\"\n        return array[0] + array[-1] % 2\n\n    def sum_first_last_index_even(array):\n        \"\"\"\n        sum the first index value and last index value of the given array and return even\n        :param array:\n        :return:\n        \"\"\"\n        return array[0] + array[-1] % 2\n\n    def sort(array):\n        \"\"\"\n        sort the given array\n        :param array:\n        :return:\n        \"\"\"\n        if sum_first_last_index(array) % 2 == 0:\n            array.sort(key=sum_first_last_index_even)\n        else:\n            array.sort(key=sum_first_last_index_odd)\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_ascending(a, b):\n        return a + b\n\n    def sum_even_descending(a, b):\n        return a + b + 1\n\n    def sum_odd_descending(a, b):\n        return a + b + 1\n\n    def sum_even_ascending(a, b):\n        return a + b\n\n    def sum_odd_ascending(a, b):\n        return a + b\n\n    def sum_even_descending(a, b):\n        return a + b + 1\n\n    def sum_odd_descending(a, b):\n        return a + b + 1\n\n    def sum_even_ascending(a, b):\n        return a + b\n\n    def sum_odd_ascending(a, b):\n        return a + b\n\n    def sum_even_descending(a, b):\n        return a + b + 1\n\n    def sum_odd_descending(a, b):", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        Given an array, return the sum of the first index value and the last index value.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort(array):\n        \"\"\"\n        Given an array, return a copy of the given array after sorting.\n        \"\"\"\n        if sum_first_last_index(array) % 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 2\n\n    def sum_odd_odd(a, b):\n        return a + b + 3\n\n    def sum_even_odd(a, b):\n        return a + b + 4\n\n    def sum_even_even(a, b):\n        return a + b + 5\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 6\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 7\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 8\n\n    def sum_even_even_odd(a, b):\n        return a + b + 9\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 10\n\n    def sum_odd_odd_even_odd(a, b)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b - 1\n\n    def odd(a):\n        return a % 2 == 1\n\n    def even(a):\n        return a % 2 == 0\n\n    def sum_odd(a, b):\n        return odd_sum(a, b)\n\n    def sum_even(a, b):\n        return even_sum(a, b)\n\n    def odd_sum_odd(a, b):\n        return odd_sum(a, b)\n\n    def odd_sum_even(a, b):\n        return odd_sum(a, b)\n\n    def even_sum_odd(a, b):\n        return even_sum(a, b)\n\n    def even_sum_even(a, b):\n        return even_sum(a, b)\n\n    def odd(a):\n        return a % 2 == 1\n\n    def even(a):\n        return a % 2 == 0\n\n    def sum_odd(a, b):\n        return odd_sum(a, b)\n\n    def sum_even(a, b):\n        return even_sum", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        tmp = a\n        a = b\n        b = tmp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def merge(a, b):\n        i = 0\n        j = 0\n        c = []\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge_sort(a[len(a) // 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd(a, b):\n            return swap(a, b)\n        elif even(a, b):\n            return swap(b, a)\n        else:\n            return a, b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd_sum(a[0], a[-1]):\n            return swap(a, b)\n        elif even_sum(a[0], a[-1]):\n            return swap(a, b)\n        else:\n            return a\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return a + b\n\n    def even_sort(a, b):\n        return a + b + 1\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return even_sort(a, b)\n        else:\n            return odd_sort(a, b)\n\n    return [sort(i, len(array) - 1) for i in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return sum_even(a, b)\n        else:\n            return sum_odd(a, b)\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        return the sum of the first index value and the last index value\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort(array):\n        \"\"\"\n        sort the given array\n        \"\"\"\n        if sum_first_last_index(array) % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b\n\n    def sum_even_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b\n\n    def sum_even_odd_odd_even(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        if sum(a, b) % 2 == 1:\n            return a + b\n        else:\n            return a + b\n\n    def even_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b\n        else:\n            return a + b\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif len(array) == 2:\n        return array\n    elif len(array) == 3:\n        return array\n    elif len(array) == 4:\n        return array\n    elif len(array) == 5:\n        return array\n    elif len(array) == 6:\n        return array\n    else:\n        mid = len(array) // 2\n        left = array[:mid]\n        right = array[mid:]\n        left_sort = odd_sort(left[0], right[0])\n        right_sort = odd_sort(left[-1], right[-1])\n        if left_sort > right_sort:\n            return sort_array(left + right", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd(a, b):\n            return swap(a, b)\n        elif even(a, b):\n            return swap(b, a)\n        else:\n            return a, b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_even_sort(a, b):\n        if is_even(a, b):\n            return b - a\n        else:\n            return a - b\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def is_odd_sort(a, b):\n        if is_odd(a, b):\n            return b - a\n        else:\n            return a - b\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b - a\n        else:\n            return a - b\n\n    def sort_desc(a, b):\n        if is_even(a, b):\n            return a - b\n        else:\n            return b - a\n\n    def sort_asc(a, b):\n        if is_odd(a, b):\n            return b - a\n        else:\n            return a - b\n\n    def sort_asc_desc(a, b):\n        if is_odd(a, b):\n            return b - a\n        else:\n            return", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first and last index values.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sum_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first and last index values.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sum_odd_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first and last index values.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort_odd(array):\n        \"\"\"\n        Given an array of non-negative integers, return a copy of the given array after sorting,\n        you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n        or sort it in descending order if the sum( first index value, last index value) is even.\n        \"\"\"\n        if sum_odd(array) % 2 == 0:\n            return array[::-1]\n        else:\n            return array\n\n    def sort_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return a copy of the given array after sorting,\n        you will sort the given array in ascending", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b - a\n        else:\n            return a - b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return a + b % 2 == 0\n\n    def is_odd(a, b):\n        return a + b % 2 == 1\n\n    def sort(a, b):\n        if is_odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def sort(a, b):\n        if odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[len(a) - 1]) % 2 == 0:\n            return a[::-1]\n        else:\n            return a\n\n    return [sort(i) for i in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return b - a\n\n    def even_sort(a, b):\n        return a - b\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b\n        else:\n            return a + b + 1\n\n    def even_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b + 1\n        else:\n            return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return even_sort(a, b)\n        else:\n            return odd_sort(a, b)\n\n    return sorted(array, key=sort)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return [array[0], array[1]]\n    if len(array) % 2 == 0:\n        return sort_array(array[:-1]) + [array[-1]]\n    else:\n        return sort_array(array[:-1]) + [array[-1]] + sort_array(array[:-1])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return a + b % 2\n\n    def even(a, b):\n        return a + b % 2\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return even(a, b)\n        else:\n            return odd(a, b)\n\n    return [sort(i, j) for i, j in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[len(a) - 1]) % 2 == 0:\n            return a[::-1]\n        else:\n            return a\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last(array):\n        \"\"\"\n        Return the sum of the first and last element in the given array.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort(array):\n        \"\"\"\n        Return a sorted copy of the given array.\n        \"\"\"\n        if sum_first_last(array) % 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_in_range(a, b):\n        return a >= 0 and b >= 0 and a <= b\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if is_even(a, b):\n            return swap(a, b)\n        elif is_in_range(a, b):\n            return swap(a, b)\n        else:\n            return a, b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        :param array:\n        :return:\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort(array):\n        \"\"\"\n        :param array:\n        :return:\n        \"\"\"\n        if sum_first_last_index(array) % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd(a, b):\n            return swap(a, b)\n        elif even(a, b):\n            return swap(b, a)\n        else:\n            return a, b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        return sum(array) % 2\n\n    def sum_even(array):\n        return sum(array) % 2 == 0\n\n    def sum_odd_even(array):\n        return sum(array) % 2 == 0\n\n    def sum_odd_odd(array):\n        return sum(array) % 2!= 0\n\n    def sum_even_even(array):\n        return sum(array) % 2 == 0\n\n    def sum_odd_odd_even(array):\n        return sum(array) % 2!= 0\n\n    def sum_even_odd(array):\n        return sum(array) % 2!= 0\n\n    def sum_odd_even_odd(array):\n        return sum(array) % 2!= 0\n\n    def sum_even_odd_even(array):\n        return sum(array) % 2!= 0\n\n    def sum_odd_odd_even_odd(array):\n        return sum(array) % 2!= 0\n\n    def sum_even_odd_odd_even(array):\n        return sum(array) % 2!= 0\n\n    def sum_odd_even_odd_", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def sort(a, b):\n        if odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_even_sort(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def is_odd_sort(a, b):\n        return sum(a, b) % 2 == 1\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    else:\n        if is_even(array[0], array[-1]):\n            return is_odd_sort(array[:-1], array[-1])\n        else:\n            return is_even_sort(array[:-1], array[-1])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if len(array) == 1:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[len(a) - 1]) % 2 == 0:\n            return a[::-1]\n        else:\n            return a\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(n):\n        return n % 2 == 0\n\n    def is_even_sum(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(n):\n        return n % 2 == 1\n\n    def is_odd_sum(a, b):\n        return sum(a, b) % 2 == 1\n\n    def swap(a, b):\n        return a, b\n\n    def swap2(a, b):\n        return b, a\n\n    def swap3(a, b):\n        return a, b\n\n    def swap4(a, b):\n        return b, a\n\n    def swap5(a, b):\n        return a, b\n\n    def swap6(a, b):\n        return b, a\n\n    def swap7(a, b):\n        return a, b\n\n    def swap8(a, b):\n        return b, a\n\n    def swap9(a, b):\n        return a, b\n\n    def swap10(a, b):\n        return b, a\n\n    def swap11(a, b):\n        return a, b", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first index value and the last index value.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sum_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first index value and the last index value.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort_odd(array):\n        \"\"\"\n        Given an array of non-negative integers, return a copy of the given array after sorting,\n        you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n        or sort it in descending order if the sum( first index value, last index value) is even.\n        \"\"\"\n        if sum_odd(array) % 2 == 1:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\n    def sort_even(array):\n        \"\"\"\n        Given an array of non-negative integers, return a copy of the given array after sorting,\n        you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n        or sort it in descending order if the sum( first index value, last", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd(a, b):\n            return swap(a, b)\n        else:\n            return swap(b, a)\n\n    return [sort(x, y) for x, y in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def merge(a, b):\n        i = 0\n        j = 0\n        c = []\n        while i < len(a) and j < len(b):\n            if a[i] <= b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) / 2]), merge_sort(a[len(a) / 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return array[0] + sort(array[1:])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return a - b\n\n    def even_sort(a, b):\n        return b - a\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum_odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2 == 0\n\n    def sort(a, b):\n        if odd_sum(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return a + b % 2\n\n    def even(a, b):\n        return a + b % 2\n\n    def odd_even(a, b):\n        return a + b % 2\n\n    def even_odd(a, b):\n        return a + b % 2\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return a + b % 2\n\n    def even(a, b):\n        return a + b % 2\n\n    def odd_even(a, b):\n        return a + b % 2\n\n    def even_odd(a, b):\n        return a + b % 2\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a, b\n        else:\n            return b, a\n\n    def even_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b, a\n        else:\n            return a, b\n\n    if len(array) == 0:\n        return array\n    else:\n        if sum(array[0], array[-1]) % 2 == 0:\n            return even_sort(array, 0, len(array) - 1)\n        else:\n            return odd_sort(array, 0, len(array) - 1)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b\n\n    def sum_even_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even_even(a, b):\n        return a + b\n\n    def sum_even_odd_even_odd(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if len(array) == 1:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a > b\n        else:\n            return a < b\n\n    def merge(a, b):\n        c = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] <= b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) / 2]), merge_sort(a[len(a) / 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[len(a) - 1]) % 2 == 0:\n            return a[::-1]\n        else:\n            return a\n\n    return list(map(sort, array))", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def sort(a, b):\n        if odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_odd(a, b):", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[-1]) % 2 == 0:\n            return sorted(a, reverse=True)\n        else:\n            return sorted(a)\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        tmp = a\n        a = b\n        b = tmp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def merge(a, b):\n        c = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) / 2]), merge_sort(a[len(a) / 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_even_sort(a, b):\n        if is_even(a, b):\n            return a > b\n        else:\n            return a < b\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def is_odd_sort(a, b):\n        if is_odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    def sort(a, b):\n        if is_even(a, b):\n            return is_even_sort(a, b)\n        else:\n            return is_odd_sort(a, b)\n\n    return sorted(array, key=sort)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b\n\n    def sum_even_asc(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return sum_even(a, b)\n        else:\n            return sum_odd(a, b)\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return a - b\n\n    def even_sort(a, b):\n        return b - a\n\n    if len(array) == 0:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    if len(array) == 2:\n        return array\n\n    if sum(array[0], array[-1]) % 2 == 0:\n        return even_sort(array[0], array[-1]) + array[1:-1]\n    else:\n        return odd_sort(array[0], array[-1]) + array[1:-1]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        if sum(a, b) % 2 == 1:\n            return a + b\n        else:\n            return a + b + 1\n\n    def even_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b\n        else:\n            return a + b + 1\n\n    if len(array) == 0:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    if len(array) == 2:\n        return array\n\n    if len(array) == 3:\n        return array\n\n    if len(array) == 4:\n        return array\n\n    if len(array) == 5:\n        return array\n\n    if len(array) == 6:\n        return array\n\n    if len(array) == 7:\n        return array\n\n    if len(array) == 8:\n        return array\n\n    if len(array) == 9:\n        return array\n\n    if len(array) == 10:\n        return array\n\n    if len(array) == 11:\n        return array\n\n    if len(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    def sort(array):\n        if sum_first_last_index(array) % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b - 1\n\n    def odd_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b\n        else:\n            return a + b + 1\n\n    def even_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b - 1\n        else:\n            return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return even_sort(a, b)\n        else:\n            return odd_sort(a, b)\n\n    def merge(a, b):\n        i = 0\n        j = 0\n        k = 0\n        while i < len(a) and j < len(b):\n            if a[i] <= b[j]:\n                a[k] = a[i]\n                i += 1\n            else:\n                a[k] = b[j]\n                j += 1\n            k += 1\n        while i < len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        tmp = a\n        a = b\n        b = tmp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def swap_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def swap_sort2(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def swap_sort3(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def swap_sort4(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def swap_sort5(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def swap_sort6(a, b):\n        if sum", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(sum):\n        return sum % 2 == 0\n\n    def is_odd(sum):\n        return sum % 2 == 1\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if is_even(sum(array[0], array[-1])):\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1\n\n    def", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def swap_odd(a, b):\n        return a, b\n\n    def swap_even(a, b):\n        return a, b\n\n    def sort_odd(a, b):\n        return a, b\n\n    def sort_even(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd_sum(a, b):\n            return sort_odd(a, b)\n        else:\n            return sort_even(a, b)\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b\n\n    def sum_even_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b\n\n    def sum_even_odd_even_odd(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def sort(a, b):\n        if odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b, a\n        else:\n            return a, b\n\n    def merge(a, b):\n        c = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge_sort", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b, a\n        else:\n            return a, b\n\n    def merge(a, b):\n        c = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        c.extend(a[i:])\n        c.extend(b[j:])\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge_sort(a[len(a) // 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2!= 0\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b\n        else:\n            return a\n\n    def merge(a, b):\n        i = 0\n        j = 0\n        k = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                a[k] = a[i]\n                i += 1\n            else:\n                a[k] = b[j]\n                j += 1\n            k += 1\n        if i == len(a):\n            a[k] = b[j]\n        elif j == len(b):\n            a[k] = a[i]\n        else:\n            a[k] = min(a[i], b[j])\n        return a\n\n    def merge_sort(a):\n        if len(a) == 1:\n            return a\n        else:\n            return merge(merge_sort(a[:", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def sort(a, b):\n        if odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a,", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_even_sort(a, b):\n        if is_even(a, b):\n            return a > b\n        else:\n            return a < b\n\n    def is_odd(a, b):\n        return sum(a, b) % 2 == 1\n\n    def is_odd_sort(a, b):\n        if is_odd(a, b):\n            return a > b\n        else:\n            return a < b\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    else:\n        return sorted(array, key=is_even_sort if is_even(array[0], array[-1]) else is_odd_sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        return sum(array) % 2\n\n    def sum_even(array):\n        return sum(array) % 2\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif sum_odd(array):\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd(a):\n        return a % 2 == 1\n\n    def even(a):\n        return a % 2 == 0\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if odd_sum(a, b):\n            return odd(a) and odd(b)\n        elif even_sum(a, b):\n            return even(a) and even(b)\n        else:\n            return False\n\n    def swap_sort(a, b):\n        if sort(a, b):\n            swap(a, b)\n\n    def sort_array_helper(a, b):\n        if a == b or a == b - 1:\n            return\n        elif a < b:\n            sort_array_helper(a + 1, b)\n        else:\n            sort_array_helper(a, b - 1)\n\n    sort_array_helper(0, len(array) - 1)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b\n\n    def sum_odd_odd_even(a, b):\n        return a + b\n\n    def sum_even_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even_odd(a, b):\n        return a + b\n\n    def sum_odd_even_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b\n\n    def sum_even_odd_even_odd(a,", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_asc(a, b):\n        return a + b\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b + 1\n\n    def sum_even_asc(a, b):\n        return a + b + 1\n\n    def sum_odd_asc(a, b):\n        return a + b + 1\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b + 1\n\n    def sum_even_asc(a, b):\n        return a + b + 1\n\n    def sum_odd_asc(a, b):\n        return a + b + 1\n\n    def sum_even_desc(a, b):\n        return a + b\n\n    def sum_odd_desc(a, b):\n        return a + b + 1\n\n    def", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(arr):\n        return arr[0] + arr[-1]\n\n    def sum_even(arr):\n        return arr[0] + arr[-1]\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        return sum(array) % 2\n\n    def sum_even(array):\n        return sum(array) % 2 == 0\n\n    def sort_odd(array):\n        return sorted(array, reverse=True) if sum_odd(array) else sorted(array)\n\n    def sort_even(array):\n        return sorted(array) if sum_even(array) else sorted(array, reverse=True)\n\n    return sort_odd(array) if sum_odd(array) else sort_even(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return b - a\n\n    def even_sort(a, b):\n        return a - b\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        return sum(array) % 2\n\n    def sum_even(array):\n        return sum(array) % 2\n\n    def sum_odd_even(array):\n        return sum(array) % 2\n\n    def sum_odd_odd(array):\n        return sum(array) % 2\n\n    def sum_even_even(array):\n        return sum(array) % 2\n\n    def sum_odd_even_odd(array):\n        return sum(array) % 2\n\n    def sum_even_odd(array):\n        return sum(array) % 2\n\n    def sum_even_odd_odd(array):\n        return sum(array) % 2\n\n    def sum_odd_even_odd(array):\n        return sum(array) % 2\n\n    def sum_even_odd_even(array):\n        return sum(array) % 2\n\n    def sum_odd_even_even(array):\n        return sum(array) % 2\n\n    def sum_even_odd_even(array):\n        return sum(array) % 2\n\n    def sum_odd_odd_even(array):\n        return sum(array) %", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b\n        else:\n            return a\n\n    def merge(a, b):\n        i = 0\n        j = 0\n        c = []\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) / 2]), merge_sort(a[len(a) / 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    for i in range(len(array) - 1):\n        for j in range(i + 1, len(array)):\n            if sum(array[i], array[j]) % 2 == 0:\n                swap(array[i], array[j])\n\n    for i in range(len(array)):\n        for j in range(i + 1, len(array)):\n            if sum(array[i], array[j]) % 2 == 0:\n                swap(array[i], array[j])\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[-1]) % 2 == 0:\n            return a[::-1]\n        else:\n            return a\n\n    return [sort(i) for i in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if len(array) == 3:\n        return array\n    if len(array) == 4:\n        return array\n    if len(array) == 5:\n        return array\n    if len(array) == 6:\n        return array\n    if len(array) == 7:\n        return array\n    if len(array) == 8:\n        return array\n    if len(array) == 9:\n        return array\n    if len(array) == 10:\n        return array\n    if len(array) == 11:\n        return array\n    if len(array) == 12:\n        return array\n    if len(array) == 13:\n        return array\n    if len(array) == 14:\n        return array\n    if len(array) == 15:\n        return array\n    if len(array) == 16:\n        return array\n    if len(array) == 17:\n        return array\n    if len(array) == 18:\n        return array\n    if len(array) == 19:\n        return array\n    if len(array) == 20:\n        return array\n    if len(array) == 21:\n        return array\n    if len(array) == 22:\n        return array\n    if len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2\n\n    def swap(a, b):\n        return a, b\n\n    def swap2(a, b):\n        return b, a\n\n    def swap3(a, b):\n        return a, b\n\n    def swap4(a, b):\n        return b, a\n\n    def swap5(a, b):\n        return a, b\n\n    def swap6(a, b):\n        return b, a\n\n    def swap7(a, b):\n        return a, b\n\n    def swap8(a, b):\n        return b, a\n\n    def swap9(a, b):\n        return a, b\n\n    def swap10(a, b):\n        return b, a\n\n    def swap11(a, b):\n        return a, b\n\n    def swap12(a, b):\n        return b, a\n\n    def swap13(a, b):\n        return a, b\n\n    def swap14(a, b", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[0], array[-1], array[1]] + sort(array[1:-1])\n        else:\n            return [array[-1], array[0], array[1]] + sort(array[1:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return sum_even(a, b)\n        else:\n            return sum_odd(a, b)\n\n    return [sort(i, j) for i, j in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def partition(a, b):\n        if a + b % 2 == 0:\n            return a, b\n        else:\n            return b, a\n\n    def merge(a, b, c):\n        i, j = 0, 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c[i] = a[i]\n                i += 1\n            else:\n                c[i] = b[j]\n                j += 1\n        while i < len(a):\n            c[i] = a[i]\n            i += 1\n        while j < len(b):\n            c[i] = b[j]\n            j += 1\n\n    def quicksort(a, b):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(quicksort(a[:len(a) // 2], a[len(a) // 2:]), quicksort(b[:len(b) // 2], b[len(b) // 2:]))\n\n    return quicksort(array, [])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[0], array[-1]] + sort(array[1:-1])\n        else:\n            return [array[-1], array[0]] + sort(array[1:-1])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return a - b\n\n    def even_sort(a, b):\n        return b - a\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return even_sort(a, b)\n        else:\n            return odd_sort(a, b)\n\n    return [sort(i, j) for i, j in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2!= 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b, a\n        else:\n            return a, b\n\n    def merge(a, b):\n        if len(a) == 0:\n            return b\n        elif len(b) == 0:\n            return a\n        else:\n            return merge(a[:-1], b[1:])\n\n    def merge_sort(a):\n        if len(a) == 0:\n            return []\n        else:\n            return merge_sort(a[:len(a) // 2]) + merge_sort(a[len(a) // 2:])\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[-1]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return a + b\n\n    def even_sort(a, b):\n        return a + b\n\n    if len(array) == 0:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    if len(array) == 2:\n        return array\n\n    if len(array) == 3:\n        return array\n\n    if len(array) == 4:\n        return array\n\n    if len(array) == 5:\n        return array\n\n    if len(array) == 6:\n        return array\n\n    if len(array) == 7:\n        return array\n\n    if len(array) == 8:\n        return array\n\n    if len(array) == 9:\n        return array\n\n    if len(array) == 10:\n        return array\n\n    if len(array) == 11:\n        return array\n\n    if len(array) == 12:\n        return array\n\n    if len(array) == 13:\n        return array\n\n    if len(array) == 14:\n        return array\n\n    if len(array) == 15:\n        return array\n\n    if len(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_odd(", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd(a, b):\n        return a + b + 1\n\n    def sum_even_even_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even_odd(a, b):\n        return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[0], array[-1]] + sort(array[1:-1])\n        else:\n            return sort(array[1:-1]) + [array[0], array[-1]]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(arr):\n        return sum(arr) % 2\n\n    def sum_even(arr):\n        return sum(arr) % 2\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif len(array) == 2:\n        if array[0] > array[1]:\n            return array\n        else:\n            return array[::-1]\n    else:\n        if sum_odd(array):\n            return sorted(array)\n        else:\n            return sorted(array, reverse=True)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def is_odd(a, b):\n        return sum(a, b) % 2!= 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if is_even(a, b):\n            return b, a\n        else:\n            return a, b\n\n    def merge(a, b):\n        c = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                c.append(a[i])\n                i += 1\n            else:\n                c.append(b[j])\n                j += 1\n        while i < len(a):\n            c.append(a[i])\n            i += 1\n        while j < len(b):\n            c.append(b[j])\n            j += 1\n        return c\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        Given an array, return the sum of the first index value and the last index value.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def sort(array):\n        \"\"\"\n        Given an array, return a copy of the given array after sorting.\n        \"\"\"\n        if sum_first_last_index(array) % 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\n    return sort(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def odd_sort(a, b):\n        return a + b\n\n    def even_sort(a, b):\n        return a + b\n\n    def odd_asc(a, b):\n        return a - b\n\n    def even_asc(a, b):\n        return b - a\n\n    def odd_desc(a, b):\n        return b - a\n\n    def even_desc(a, b):\n        return a - b\n\n    def odd_asc_desc(a, b):\n        return a - b\n\n    def even_asc_desc(a, b):\n        return b - a\n\n    def odd_desc_desc(a, b):\n        return b - a\n\n    def even_desc_desc(a, b):\n        return a - b\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif len(array) == 2:\n        return array\n    elif len(array) == 3:\n        return array\n    elif len(array) == 4:", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return b - a\n        else:\n            return a - b\n\n    def merge(a, b):\n        result = []\n        i = 0\n        j = 0\n        while i < len(a) and j < len(b):\n            if a[i] < b[j]:\n                result.append(a[i])\n                i += 1\n            else:\n                result.append(b[j])\n                j += 1\n        result += a[i:]\n        result += b[j:]\n        return result\n\n    def merge_sort(a):\n        if len(a) <= 1:\n            return a\n        else:\n            return merge(merge_sort(a[:len(a) // 2]), merge_sort(a[len(a) // 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b - 1\n\n    def odd_sort(a, b):\n        if sum(a, b) % 2 == 1:\n            return a + b\n        else:\n            return a + b - 1\n\n    def even_sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a + b\n        else:\n            return a + b + 1\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    else:\n        if sum(array[0], array[-1]) % 2 == 1:\n            return odd_sort(array[0], array[-1])\n        else:\n            return even_sort(array[0], array[-1])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x], reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), key=lambda x: array[x])]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(a):\n        if sum(a[0], a[len(a) - 1]) % 2 == 0:\n            return a[::-1]\n        else:\n            return a\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[0]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return a + b + 1\n\n    def sum_even(a, b):\n        return a + b\n\n    def sum_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_odd(a, b):\n        return a + b\n\n    def sum_even_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd(a, b):\n        return a + b + 1\n\n    def sum_even_odd(a, b):\n        return a + b + 1\n\n    def sum_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b + 1\n\n    def sum_even_odd_odd_even(a, b):\n        return a + b + 1\n\n    def sum_odd_even_odd_odd(a, b):", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return sum(a, b) % 2\n\n    def even_sum(a, b):\n        return sum(a, b) % 2\n\n    def sort(a, b):\n        if odd_sum(a, b):\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd(a, b):\n        return sum(a, b) % 2\n\n    def even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        return a, b\n\n    def sort(a, b):\n        if odd(a, b):\n            return swap(a, b)\n        elif even(a, b):\n            return swap(b, a)\n        else:\n            return a, b\n\n    return [sort(a, b) for a, b in zip(array, array[1:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if len(array) == 1:\n            return array\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + [array[0]]\n        else:\n            return sort(array[1:]) + [array[-1]] + sort(array[:-1])\n\n    return sort(array)"]]