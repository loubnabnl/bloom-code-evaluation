[["def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write code here\n    def swap(a, b):\n        \"\"\"\n        Swap the value of a and b\n        :param a:\n        :param b:\n        :return:\n        \"\"\"\n        temp = a\n        a = b\n        b = temp\n\n    def sum(a, b):\n        \"\"\"\n        Return the sum of the elements between the two indexes\n        :param a:\n        :param b:\n        :return:\n        \"\"\"\n        return a + b\n\n    def sort(arr, start, end):\n        \"\"\"\n        Sort the given array between start and end index\n        :param arr:\n        :param start:\n        :param end:\n        :return:\n        \"\"\"\n        if end - start > 1:\n            middle = start + (end - start) // 2\n            if sum(arr[middle], arr[end - 1]) % 2 == 0:\n                sort(arr, start, middle - 1)\n                sort(arr, middle + 1, end)\n            else:\n                sort(arr, start, middle - 1)\n                sort(arr, middle + 1, end)\n                sort(arr, start, end - 1)\n\n    arr = list(array)\n    sort(arr, 0, len(arr) - 1)\n    return arr\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_array(array):\n        \"\"\"\n        :param array: list of numbers\n        :return: sum of array\n        \"\"\"\n        return sum(array)\n\n    def swap(array, index1, index2):\n        \"\"\"\n        Swap array[index1] and array[index2]\n        :param array: list of numbers\n        :param index1: index 1\n        :param index2: index 2\n        :return: None\n        \"\"\"\n        temp = array[index1]\n        array[index1] = array[index2]\n        array[index2] = temp\n\n    def swap_sort(array, index1, index2, index3):\n        \"\"\"\n        Swap array[index1] and array[index2] and array[index3] and array[index3]\n        :param array: list of numbers\n        :param index1: index 1\n        :param index2: index 2\n        :param index3: index 3\n        :return: None\n        \"\"\"\n        swap(array, index1, index3)\n        swap_sort(array, index1, index2, index3)\n        swap(array, index2, index3)\n\n    def is_even(array):\n        \"\"\"\n        :param array: list of numbers\n        :return: True if the sum( first index value, last index value) is even, otherwise False\n        \"\"\"\n        return sum_array(array) % 2 == 0\n\n    def sort(array, index1, index", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write code here\n    if len(array) == 0:\n        return []\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n    if array[0] > array[1]:\n        return sort_array(array[1:]) + [array[0]]\n    else:\n        return sort_array(array[1:]) + [array[1]]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) <= 1:\n        return array\n    if len(array) % 2 == 0:\n        return sort_array(array[:len(array) / 2]) + sort_array(array[len(array) / 2 + 1:])\n    else:\n        sum = 0\n        for i in range(len(array)):\n            sum += array[i]\n        return sort_array(array[:sum / 2]) + sort_array(array[sum / 2 + 1:])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(start, end):\n        return array[start] + array[end]\n\n    def sort(array):\n        if sum(0, len(array) - 1) % 2 == 0:\n            return [array[i] for i in sorted(range(len(array)), reverse=True)]\n        else:\n            return [array[i] for i in sorted(range(len(array)), reverse=False)]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    result = []\n    if len(array) == 0:\n        return result\n    if len(array) == 1:\n        result.append(array[0])\n        return result\n    if len(array) == 2:\n        if array[0] > array[1]:\n            result.append(array[1])\n            result.append(array[0])\n        else:\n            result.append(array[0])\n            result.append(array[1])\n        return result\n\n    sum1 = array[0] + array[-1]\n    sum2 = array[1] + array[-2]\n    if sum1 % 2 == 0:\n        if sum2 % 2 == 0:\n            result.append(array[0])\n            result.append(array[1])\n            result.append(array[2])\n            result.append(array[-2])\n            result.append(array[-1])\n        else:\n            result.append(array[1])\n            result.append(array[0])\n            result.append(array[2])\n            result.append(array[-2])\n            result.append(array[-1])\n    else:\n        if sum2 % 2 == 0:\n            result.append(array[0])\n            result.append(array[1])\n            result.append(array[2])\n            result.append(array[-1])\n            result.append(array[-2])\n        else:\n            result.append(array[0])\n            result.append(array[1])\n            result.", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_first_last_index(array):\n        return sum(array[0], array[-1])\n\n    if not array:\n        return array\n    if array[0] > array[-1]:\n        array.reverse()\n    if sum_of_first_last_index(array) % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = list(array)\n    if len(array) == 0:\n        return []\n    sum = 0\n    for i in range(len(array)):\n        sum += array[i]\n    if sum % 2 == 0:\n        for i in range(len(array)):\n            array[i], array[len(array) - 1 - i] = array[len(array) - 1 - i], array[i]\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n    def is_even(num):\n        return num % 2 == 0\n\n    if len(array) <= 1:\n        return array\n    if sum(array[0], array[-1]) % 2 == 0:\n        return [num + 1 for num in array]\n    else:\n        return [num - 1 for num in array]\n\n\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    def sort_by_sum(array):\n        if len(array) == 0:\n            return []\n        else:\n            sum = sum(array)\n            if sum % 2 == 0:\n                return array[::-1]\n            else:\n                return array\n    return sort_by_sum(array)\n\narray = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_index(array):\n        \"\"\"\n        Return the sum of the index values of the given array.\n\n        Examples:\n        * sum_index([]) => 0\n        * sum_index([5]) => 5\n        * sum_index([2, 4, 3, 0, 1, 5]) => 9\n        * sum_index([2, 4, 3, 0, 1, 5, 6]) => 13\n        \"\"\"\n        return sum(array)\n    def sort(array):\n        \"\"\"\n        Return a copy of the given array after sorting it.\n\n        Examples:\n        * sort([]) => []\n        * sort([5]) => [5]\n        * sort([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n        * sort([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n        \"\"\"\n        if array == []:\n            return []\n        if array[0] == 0:\n            if sum_index(array) % 2 == 0:\n                array.reverse()\n            else:\n                array.sort()\n        return array\n    return sort(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def _helper(arr, start, end):\n        if start == end:\n            return arr[start]\n        mid = (start + end) // 2\n        if sum(arr[start], arr[mid]) % 2 == 0:\n            return _helper(arr, start, mid)\n        else:\n            return _helper(arr, mid + 1, end)\n\n    return [_helper(array, 0, len(array)) for _ in range(len(array))]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(first, last):\n        \"\"\"\n        Return the sum of integers from first to last\n        \"\"\"\n        return sum(array[first:last])\n\n    def sort(array):\n        \"\"\"\n        Sort the given array\n        \"\"\"\n        if sum_range(0, len(array) - 1) % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n    def sum_of_indexes(a, b):\n        return sum(array[a], array[b])\n    def is_even(n):\n        return n % 2 == 0\n    def is_even_sorted(a, b):\n        return sum_of_indexes(a, b) % 2 == 0\n\n    array_copy = list(array)\n    array_copy.sort(key=lambda x: array_copy.index(x) + 1)\n    if is_even(sum_of_indexes(0, len(array) - 1)):\n        array_copy.reverse()\n    return array_copy\n\n\narr = [2,4,3,0,1,5,6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    sum1 = array[0] + array[-1]\n    sum2 = array[0] + array[-2]\n    if sum1 % 2!= 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length == 0:\n        return []\n    if length == 1:\n        return [array[0]]\n    if length == 2:\n        return [array[0], array[1]]\n\n    sum_first_last = array[0] + array[-1]\n\n    if sum_first_last % 2 == 0:\n        return sort_array(array[1:])\n    else:\n        return [array[0]] + sort_array(array[1:])\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    def odd_even_sort(arr):\n        arr1 = []\n        for i in range(0, len(arr)):\n            if arr[i] % 2 == 0:\n                arr1.append(arr[i])\n            else:\n                arr1.append(arr[i])\n        arr1.append(sum(arr1))\n        return arr1\n\n    arr1 = odd_even_sort(array)\n    for i in range(0, len(arr1)):\n        array[i] = arr1[i]\n\n    return array\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def sum(i, j):\n        return array[i] + array[j]\n\n    def swap(i, j):\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n\n    def sort(i, j):\n        if sum(i, j) % 2 == 0:\n            # sort in descending order\n            for k in range(j, i - 1, -1):\n                swap(k, k - 1)\n        else:\n            # sort in ascending order\n            for k in range(j, i - 1):\n                swap(k, k + 1)\n\n    for i in range(len(array)):\n        sort(0, i)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    n = len(array)\n    for i in range(n):\n        for j in range(0, n - i - 1):\n            if array[j] + array[j + 1] > 0 and array[j] + array[j + 1] % 2 == 1:\n                array[j], array[j + 1] = array[j + 1], array[j]\n            elif array[j] + array[j + 1] < 0:\n                array[j], array[j + 1] = array[j + 1], array[j]\n            elif array[j] + array[j + 1] == 0:\n                array[j], array[j + 1] = array[j + 1], array[j]\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(arr):\n        return sum(arr)\n\n    def is_even(arr):\n        return sum(arr) % 2 == 0\n\n    def is_odd(arr):\n        return sum(arr) % 2 == 1\n\n    def is_sorted(arr):\n        for i in range(1, len(arr)):\n            if arr[i] < arr[i - 1]:\n                return False\n        return True\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif len(array) == 2:\n        if array[0] > array[1]:\n            return array[::-1]\n        else:\n            return array\n    else:\n        mid = len(array) // 2\n        left = sort_array(array[:mid])\n        right = sort_array(array[mid:])\n        if is_odd(left):\n            return left + right[::-1]\n        elif is_even(left):\n            return left + right\n        elif is_odd(right):\n            return left[::-1] + right\n        elif is_even(right):\n            return left[::-1] + right[::-1]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    arr = list(array)\n    n = len(arr)\n    if n <= 1:\n        return arr\n    if n == 2:\n        return arr\n    if n % 2 == 0:\n        return arr\n    sum1 = arr[0] + arr[-1]\n    sum2 = arr[1] + arr[-2]\n    if sum1 % 2 == 0:\n        return arr[::-1]\n    else:\n        return arr", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    sum = 0\n    for i in range(length):\n        sum += array[i]\n    if sum % 2 == 0:\n        return [array[i] for i in sorted(range(length), key=lambda x: -array[x])]\n    else:\n        return [array[i] for i in sorted(range(length), key=lambda x: array[x])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(i, j):\n        return array[i] + array[j]\n\n    def sum_even(i, j):\n        return array[i] + array[j]\n\n    def odd_even(i, j):\n        return array[i] + array[j]\n\n    if len(array) == 0:\n        return []\n    elif len(array) == 1:\n        return [array[0]]\n    elif len(array) == 2:\n        return [array[0], array[1]]\n    else:\n        first = array[0]\n        last = array[-1]\n        if sum_odd(first, last) % 2 == 0:\n            return sorted(array, key=sum_even)\n        else:\n            return sorted(array, key=sum_odd)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    return sort_array_helper(array, 0, len(array) - 1)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def _sort(array, start, end):\n        if end - start == 1:\n            return array[start]\n        if start + 1 == end:\n            return array[start]\n        if (array[start] + array[end]) % 2 == 0:\n            return _sort(array, start, end - 1) + array[end] + _sort(array, end + 1, len(array))\n        else:\n            return _sort(array, start, end - 1) + array[end]\n\n    return [_sort(array, 0, i) for i in range(len(array))]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(arr):\n        sum_first_last_index = 0\n        for i in range(0, len(arr) - 1):\n            sum_first_last_index += arr[i] + arr[i + 1]\n        return sum_first_last_index\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif sum_first_last_index(array) % 2 == 1:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_index(array, start_index, end_index):\n        return sum(array[start_index:end_index])\n\n    if len(array) <= 1:\n        return array\n\n    odd_sum = sum_index(array, 0, len(array) - 1)\n    if odd_sum % 2 == 1:\n        return sort_array(array)\n    else:\n        return sort_array(reversed(array))\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    if not array:\n        return array\n\n    # If the sum of the first and last index is even, sort in descending order\n    if sum_first_last_index(array) % 2 == 0:\n        return sorted(array, reverse=True)\n\n    # Otherwise, sort in ascending order\n    return sorted(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_index(array, start, end):\n        return sum(array[start:end])\n\n    def swap(array, start, end):\n        temp = array[start]\n        array[start] = array[end]\n        array[end] = temp\n\n    if not array:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        if array[0] > array[1]:\n            return [array[1], array[0]]\n        else:\n            return [array[0], array[1]]\n    if sum_of_index(array, 0, len(array) - 1) % 2 == 0:\n        for i in range(len(array) - 1):\n            if array[i] > array[i + 1]:\n                swap(array, i, i + 1)\n    else:\n        for i in range(len(array) - 1):\n            if array[i] < array[i + 1]:\n                swap(array, i, i + 1)\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(array, start, end):\n        return sum(array[start:end])\n\n    def odd_sum_range(array, start, end):\n        if sum_range(array, start, end) % 2 == 1:\n            return array[start:end]\n        else:\n            return array[start:end] * -1\n\n    def even_sum_range(array, start, end):\n        if sum_range(array, start, end) % 2 == 0:\n            return array[start:end]\n        else:\n            return array[start:end] * -1\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n\n    mid = len(array) // 2\n    left = array[:mid]\n    right = array[mid:]\n\n    left_sort = sort_array(left)\n    right_sort = sort_array(right)\n\n    if sum_range(left_sort, 0, len(left_sort) - 1) % 2 == 0:\n        return sort_array(odd_sum_range(left_sort, 0, len(left_sort) - 1) + right_sort)\n    else:\n        return sort_array(even_sum_range(left_sort, 0, len(left_sort) - 1) + right_sort)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def swap(array, index1, index2):\n        temp = array[index1]\n        array[index1] = array[index2]\n        array[index2] = temp\n\n    def sum(array):\n        return sum(array)\n\n    def check(array):\n        if sum(array) % 2 == 0:\n            return True\n        else:\n            return False\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        if check(array):\n            for i in range(len(array) - 1):\n                for j in range(len(array) - i - 1):\n                    if array[j] > array[j + 1]:\n                        swap(array, j, j + 1)\n        else:\n            for i in range(len(array) - 1):\n                for j in range(len(array) - i - 1):\n                    if array[j] < array[j + 1]:\n                        swap(array, j, j + 1)\n        return array\n\n    return sort(array)</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n    def sum_odd(a, b):\n        return a + b\n    def sum_even(a, b):\n        return a + b\n    def sum_odd_even(a, b):\n        return a + b\n    def sum_odd_odd(a, b):\n        return a + b\n    def sum_even_odd(a, b):\n        return a + b\n    def sum_even_even(a, b):\n        return a + b\n    def sum_odd_even_odd(a, b):\n        return a + b\n    def sum_odd_odd_even(a, b):\n        return a + b\n    def sum_even_odd_odd(a, b):\n        return a + b\n    def sum_even_odd_even(a, b):\n        return a + b\n\n    def sum_odd_even_odd_even(a, b):\n        return a + b\n\n    def sum_odd_odd_even_odd(a, b):\n        return a + b\n\n    def sum_odd_even_odd_even(a,", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(a, b):\n        \"\"\"\n        Return the sum of all elements in range(a, b).\n        \"\"\"\n        return sum(array[a:b])\n\n    def swap(a, b):\n        \"\"\"\n        Swap the elements in the array at index a and index b.\n        \"\"\"\n        array[a], array[b] = array[b], array[a]\n\n    if len(array) < 2:\n        return array\n    if sum_range(0, len(array) - 1) % 2 == 1:\n        return sort_array(array)\n    else:\n        for i in range(len(array) - 1):\n            if array[i] > array[i + 1]:\n                swap(i, i + 1)\n        return sort_array(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    array.sort(key = lambda x: sum(x[0:len(x)//2]), reverse = True if sum(x[0:len(x)//2])%2 == 0 else False)\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    array = sorted(array, key=lambda num: num)\n\n    if sum(array) % 2 == 0:\n        return array\n    else:\n        return reversed(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last(array):\n        \"\"\"\n        return the sum of the first and last index values of the given array\n        \"\"\"\n        first = array[0]\n        last = array[-1]\n        return first + last\n\n    def sum_first_last_odd(array):\n        \"\"\"\n        return True if the sum of the first and last index values of the given array is odd,\n        otherwise, return False\n        \"\"\"\n        return sum_first_last(array) % 2 == 1\n\n    def sum_first_last_even(array):\n        \"\"\"\n        return True if the sum of the first and last index values of the given array is even,\n        otherwise, return False\n        \"\"\"\n        return sum_first_last(array) % 2 == 0\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if sum_first_last_odd(array):\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def sort_by_sum(arr):\n        \"\"\"\n        return the sorted array by the sum of first and last index of the array\n        \"\"\"\n        if len(arr) == 0:\n            return arr\n        if arr[0] + arr[-1] % 2 == 0:\n            return sort_by_sum(arr[1:]) + [arr[0]]\n        else:\n            return sort_by_sum(arr[1:]) + [arr[-1]]\n\n    return sort_by_sum(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n    def is_even(s):\n        return s % 2 == 0\n    def is_even_sum(a, b):\n        return sum(a, b) % 2 == 0\n    def is_not_even_sum(a, b):\n        return sum(a, b) % 2!= 0\n    def sort(a, b):\n        if is_even_sum(a, b):\n            return b - a\n        else:\n            return a - b\n    def swap(a, b):\n        return a, b\n    def swap_if(a, b):\n        if is_even_sum(a, b):\n            return b, a\n        else:\n            return a, b\n    def swap_if_not(a, b):\n        if is_even_sum(a, b):\n            return a, b\n        else:\n            return b, a\n    def bubble_sort(a):\n        for i in range(len(a) - 1):\n            for j in range(len(a) - i - 1):\n                if is_not_even_sum(a[j], a[j + 1]):\n                    swap(a[j]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(nums, start, end):\n        \"\"\"\n        :type nums: List[int]\n        :type start: int\n        :type end: int\n        :rtype: int\n        \"\"\"\n        return sum(nums[start:end + 1])\n\n    def sum_range_odd(nums, start, end):\n        \"\"\"\n        :type nums: List[int]\n        :type start: int\n        :type end: int\n        :rtype: int\n        \"\"\"\n        if start == end:\n            return 0\n        return sum(nums[start:end + 1]) % 2\n\n    def sum_range_even(nums, start, end):\n        \"\"\"\n        :type nums: List[int]\n        :type start: int\n        :type end: int\n        :rtype: int\n        \"\"\"\n        if start == end:\n            return 0\n        return sum(nums[start:end + 1]) % 2\n\n    def swap(nums, i, j):\n        \"\"\"\n        :type nums: List[int]\n        :type i: int\n        :type j: int\n        \"\"\"\n        nums[i], nums[j] = nums[j], nums[i]\n\n    def merge_sort(nums, start, end):\n        \"\"\"\n        :type nums: List[int]\n        :type start:", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return sorted(array)\n    sum = sum(array)\n    if sum % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n    # \u83b7\u53d6\u6570\u7ec4\u4e2d\u7684\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n    max_value = max(array)\n    min_value = min(array)\n    # \u83b7\u53d6\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u548c\n    sum = 0\n    for item in array:\n        sum += item\n    # \u83b7\u53d6\u6570\u7ec4\u4e2d\u5143\u7d20\u548c\u662f\u5426\u662f\u5947\u6570\n    odd = sum % 2\n    # \u83b7\u53d6\u6570\u7ec4\u4e2d\u5143\u7d20\u548c\u662f\u5426\u662f\u5076\u6570\n    even = sum % 2 == 0\n    # \u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\n    if odd:\n        return [max_value] + sorted(array, reverse=True)\n    else:\n        return [min_value] + sorted(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(arr):\n        return sum([arr[0], arr[-1]])\n\n    def sum_even(arr):\n        return sum([arr[0], arr[-1]])\n\n    def sort_odd(arr):\n        return arr[::-1] if sum_odd(arr) % 2 == 0 else arr\n\n    def sort_even(arr):\n        return arr[::-1] if sum_even(arr) % 2 == 1 else arr\n\n    if len(array) == 0:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    if array[-1] == 0:\n        return array\n\n    if array[-1] == len(array) - 1:\n        return array\n\n    if array[-1] == len(array) - 2:\n        return array\n\n    if array[0] == 0:\n        return array\n\n    if array[0] == len(array) - 1:\n        return array\n\n    if array[0] == len(array) - 2:\n        return array\n\n    if array[0] == len(array) - 3:\n        return array\n\n    if array[0] == len(array) - 4:\n        return array\n\n    if array[0] == len(array) - 5:\n        return array\n\n    if array[0] == len(array) - 6:\n        return array\n\n    if array[0] == len", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(arr):\n        return arr[0] + arr[-1]\n\n    def sort(arr):\n        if sum_first_last_index(arr) % 2 == 0:\n            arr.sort(reverse=True)\n        else:\n            arr.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: int\n        \"\"\"\n        return sum(arr)\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return sorted(array)\n    if len(array) % 2 == 0:\n        return sorted(array, reverse=True)\n    return sorted(array, reverse=False)\n\nsort_array([2, 4, 3, 0, 1, 5, 6])\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_each_pair(array):\n        \"\"\"\n        :type array: List[int]\n        :rtype: int\n        \"\"\"\n        return sum(array[:-1]) + array[-1]\n\n    def get_sorted_order(array):\n        \"\"\"\n        :type array: List[int]\n        :rtype: List[int]\n        \"\"\"\n        odd_sum = sum_of_each_pair(array)\n        if odd_sum % 2 == 1:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\n    return get_sorted_order(array)</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def helper(arr, sum, odd):\n        if len(arr) <= 1:\n            return arr\n        if sum % 2:\n            return arr[::-1]\n        if sum % 2 == 0:\n            return arr[::-1]\n\n    return helper(array, sum(array), sum(array) % 2)</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(nums):\n        sum = 0\n        for i in range(len(nums)):\n            sum += nums[i]\n        return sum\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) % 2!= 0:\n        return sort_array(array[::-1])\n    else:\n        first_index = sum_range(array[:len(array) // 2])\n        last_index = sum_range(array[len(array) // 2:])\n        if first_index + last_index % 2 == 0:\n            return sort_array(array[::-1])\n        else:\n            return array</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) <= 1:\n        return array\n    if sum(array[:-1]) % 2 == 1:\n        return sort_array(array + [array[-1]])\n    return sort_array(array[1:] + [array[0]])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return []\n\n    first_index = array[0]\n    last_index = array[-1]\n\n    sum_first_last = first_index + last_index\n\n    if sum_first_last % 2 == 0:\n        # sum_first_last is even, so sort in descending order\n        return sorted(array, reverse=True)\n    else:\n        # sum_first_last is odd, so sort in ascending order\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array.sort()\n    if sum(array) % 2 == 0:\n        array.reverse()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    first_index = 0\n    last_index = len(array) - 1\n    if array[first_index] > array[last_index]:\n        return array\n    if array[first_index] == array[last_index]:\n        return array\n    if sum(array[first_index], array[last_index]) % 2 == 0:\n        array.reverse()\n    else:\n        array.sort()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n    if len(array) < 1:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        if array[0] > array[1]:\n            return array\n        else:\n            return [array[1], array[0]]\n    if array[0] > array[1]:\n        return [array[1], array[0]]\n    if array[0] + array[-1] == array[-1]:\n        if array[-1] > array[-2]:\n            return array\n        else:\n            return [array[-1], array[-2]]\n    else:\n        if array[0] + array[-1]!= array[-1]:\n            return [array[-1], array[0]]\n        else:\n            if array[0] > array[1]:\n                return [array[1], array[0]]\n            else:\n                return [array[0], array[1]]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = list(array)\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    left = 0\n    right = len(array) - 1\n    while left < right:\n        if array[left] + array[right] < 0:\n            array[left], array[right] = array[right], array[left]\n            left += 1\n            right -= 1\n        else:\n            break\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last(arr):\n        return arr[0] + arr[-1]\n\n    def sum_first_last_is_even(arr):\n        return sum_first_last(arr) % 2 == 0\n\n    def sum_first_last_is_odd(arr):\n        return sum_first_last(arr) % 2 == 1\n\n    def sort_ascending(arr):\n        if sum_first_last_is_odd(arr):\n            return arr\n        else:\n            return arr[::-1]\n\n    def sort_descending(arr):\n        if sum_first_last_is_even(arr):\n            return arr[::-1]\n        else:\n            return arr\n\n    return sort_ascending(sort_descending(array))", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) <= 1:\n        return array\n    if len(array) % 2 == 0:\n        array.sort(key=lambda x: x[0], reverse=True)\n    else:\n        array.sort(key=lambda x: x[0])\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    arr = [int(x) for x in array]\n    if len(arr) == 0:\n        return []\n    elif len(arr) == 1:\n        return arr\n    else:\n        if sum(arr[:-1]) % 2 == 0:\n            return arr[::-1]\n        else:\n            return arr", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(start, end):\n        return start + end\n\n    def odd_sum(start, end):\n        return start + end + 1\n\n    def even_sum(start, end):\n        return start + end\n\n    def sort(array):\n        if len(array) == 1:\n            return array\n        elif sum_range(array[0], array[-1]) % 2 == 0:\n            return sort(array[1:]) + array[0]\n        else:\n            return sort(array[1:]) + array[0]\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array.sort(key=lambda x: sum(array[:x]) % 2)\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_first_last(array):\n        return array[0] + array[-1]\n\n    def odd_even_sort(array):\n        if sum_of_first_last(array) % 2 == 1:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\n    return odd_even_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    n = len(array)\n    if n == 0:\n        return array\n    if n == 1:\n        return array\n    if n == 2:\n        return array\n    if n == 3:\n        return array\n    if n == 4:\n        return array\n    if n == 5:\n        return array\n    if n == 6:\n        return array\n    sum = sum(array)\n    if sum % 2 == 0:\n        return sort_array(array[::-1])\n    else:\n        return sort_array(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(start, end):\n        \"\"\"\n        Given an integer range [start, end], return the sum of all the integers in the range.\n\n        Examples:\n        * sum_range(0, 5) => 5\n        * sum_range(0, 1) => 1\n        \"\"\"\n        return start + end\n\n    def even_sort(array):\n        \"\"\"\n        Given an array, return the given array after sorting if the sum( first index value, last index value) is even,\n        or return the given array if the sum( first index value, last index value) is odd.\n        \"\"\"\n        total = sum_range(0, len(array))\n        if total % 2 == 0:\n            return sorted(array)\n        else:\n            return array\n\n    def odd_sort(array):\n        \"\"\"\n        Given an array, return the given array after sorting if the sum( first index value, last index value) is odd,\n        or return the given array if the sum( first index value, last index value) is even.\n        \"\"\"\n        total = sum_range(0, len(array))\n        if total % 2 == 1:\n            return sorted(array)\n        else:\n            return array\n\n    return even_sort(array) if sum_range(0, len(array)) % 2 ==", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return [array[0], array[1]]\n\n    num = 0\n    for i in range(len(array)):\n        if array[i] >= array[num]:\n            num = i\n    if array[num] % 2 == 0:\n        array.reverse()\n    else:\n        array.sort()\n    return array\n\narray = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def _helper(array):\n        if len(array) == 0:\n            return array\n        elif len(array) == 1:\n            return array\n        else:\n            left = array[0]\n            right = array[1]\n            if left + right % 2 == 0:\n                return _helper(array[2:]) + [left, right]\n            else:\n                return _helper(array[2:]) + [left, right] + [left + right]\n    return _helper(array)</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sort_func(x, y):\n        if (x + y) % 2 == 0:\n            return y - x\n        return x - y\n\n    return sorted(array, key=sort_func)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if array[0] == array[-1]:\n        return array\n    if array[0] + array[-1] == sum(array[0], array[-1]):\n        return array[::-1]\n    return [sum(array[0], array[-1]) % 2, array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    if len(array) <= 1:\n        return array\n    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_range(array, start, end):\n        return sum(array[start:end])\n\n    def sum_of_range_is_odd(array, start, end):\n        return sum_of_range(array, start, end) % 2!= 0\n\n    def sort_ascending(array):\n        if sum_of_range_is_odd(array, 0, len(array) - 1):\n            return sorted(array)\n        else:\n            return sorted(array, reverse=True)\n\n    return sort_ascending(array)\n\n\nsort_array([2, 4, 3, 0, 1, 5, 6])</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return array\n    result = []\n    while array:\n        first = array.pop(0)\n        last = array.pop(-1)\n        if sum([first, last]) % 2 == 0:\n            result.append(last)\n        else:\n            result.append(first)\n    return result\n\n\narr = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n    array_copy = array[:]\n    if len(array_copy) == 0:\n        return []\n    sum = 0\n    for index in range(len(array_copy) - 1):\n        sum += array_copy[index] + array_copy[index + 1]\n    if sum % 2 == 0:\n        for index in range(len(array_copy) - 1):\n            array_copy[index], array_copy[index + 1] = array_copy[index + 1], array_copy[index]\n    return array_copy", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index_value(array):\n        first_index_value = array[0]\n        last_index_value = array[-1]\n        return first_index_value + last_index_value\n\n    def sum_odd_even(array):\n        odd_even_sum = sum_first_last_index_value(array)\n        return odd_even_sum % 2\n\n    if len(array) == 0:\n        return array\n    else:\n        if sum_odd_even(array) == 1:\n            return sorted(array)\n        else:\n            return sorted(array, reverse=True)\n\narr = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def odd_even_sort(array):\n        if sum(array[:-1]) % 2 == 0:\n            return [array[0], array[-1]] + odd_even_sort(array[:-1])\n        else:\n            return [array[-1]] + odd_even_sort(array[:-1]) + [array[0]]\n\n    return odd_even_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(nums):\n        return sum(nums)\n\n    def sort_func(nums):\n        if sum(nums) % 2 == 0:\n            return nums\n        else:\n            return [nums[-1], *nums[:-1]]\n\n    return sorted(array, key=sort_func)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def sum(start, end):\n        return start + end\n\n    def swap(array, i, j):\n        tmp = array[i]\n        array[i] = array[j]\n        array[j] = tmp\n\n    def partition(array, i, j):\n        if i == j:\n            return array\n        if array[i] < array[j]:\n            tmp = array[i]\n            array[i] = array[j]\n            array[j] = tmp\n        return partition(array, i + 1, j)\n\n    def sort(array, i, j):\n        if i == j:\n            return array\n        if array[i] > array[j]:\n            tmp = array[i]\n            array[i] = array[j]\n            array[j] = tmp\n        return partition(array, i, j - 1)\n\n    array = array[:]\n    if sum(array[0], array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    def odd_even_sort(array, odd, even):\n        if array == []:\n            return []\n        if len(array) == 1:\n            return array\n        if len(array) == 2:\n            return array\n        if odd == 0:\n            return [array[0], array[1]]\n        if even == 0:\n            return [array[1], array[0]]\n        return odd_even_sort(odd_even_sort(array[1:], odd, even), odd, even)\n    return odd_even_sort(array, sum(array[:-1]), sum(array[:-1]))", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_first_and_last(array):\n        return array[0] + array[-1]\n\n    def sum_of_first_and_last_is_odd(array):\n        return sum_of_first_and_last(array) % 2 == 1\n\n    def sum_of_first_and_last_is_even(array):\n        return sum_of_first_and_last(array) % 2 == 0\n\n    if len(array) <= 1:\n        return array\n    return [array[0]] + [array[i] for i in range(1, len(array)) if sum_of_first_and_last_is_odd(array[:i + 1])] + [array[-1]] + [array[i] for i in range(0, len(array) - 1) if sum_of_first_and_last_is_even(array[i:])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_index(array):\n        \"\"\"\n        Given an array, return the sum of the first index value and the last index value.\n        \"\"\"\n        if len(array) == 0:\n            return 0\n        return array[0] + array[-1]\n\n    def sort(array):\n        \"\"\"\n        Given an array, return a copy of the given array after sorting it.\n        \"\"\"\n        if len(array) == 0:\n            return array\n        if sum_index(array) % 2 == 0:\n            return [-elem for elem in array] + array\n        else:\n            return [elem for elem in array]\n\n    return sort(array)\n\n\narr = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def sum_odd(a, b):\n        return sum(a, b) % 2\n\n    def sum_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    if len(array) == 0:\n        return []\n\n    if len(array) == 1:\n        return [array[0]]\n\n    if len(array) == 2:\n        if array[0] + array[1] == 0:\n            return [array[0], array[1]]\n        if array[0] + array[1] == 1:\n            return [array[1], array[0]]\n\n    array.sort(key=sum_odd)\n    if sum_odd(array[0], array[-1]):\n        return array\n    array.sort(key=sum_even)\n    if sum_even(array[0], array[-1]):\n        return array\n    array.sort(key=sum_odd)\n    if sum_odd(array[0], array[-1]):\n        return array\n    array.sort(key=sum_even)\n    if sum_even(array[0], array[-1]):\n        return array\n    return array\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    res = []\n    if len(array) == 0:\n        return res\n\n    sum = 0\n    for i in range(len(array)):\n        sum += array[i]\n    if sum % 2 == 0:\n        for i in range(len(array)):\n            res.append(array[i])\n    else:\n        for i in range(len(array)-1, -1, -1):\n            res.append(array[i])\n\n    return res", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(arr):\n        return arr[0] + arr[-1]\n\n    def sum_even(arr):\n        return arr[0] + arr[-1]\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif sum_odd(array) % 2 == 1:\n        return array\n    elif sum_even(array) % 2 == 0:\n        return array[::-1]\n    else:\n        return sorted(array)[::-1]\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def swap(a, b):\n        a, b = b, a\n        return a, b\n\n    def partition(array, start, end, compare):\n        # partition the array into two parts, one is the even elements and the other is the odd elements\n        if compare(array[start], array[end]):\n            return start\n        middle = start + (end - start) // 2\n        if compare(array[middle], array[end]):\n            return middle\n        if compare(array[middle], array[start]):\n            return middle\n        return middle + 1\n\n    def merge(array, start, end, compare):\n        # merge two sorted array\n        if start == end:\n            return\n        middle = partition(array, start, end, compare)\n        left = start\n        right = middle\n        while left < middle and right < end:\n            if compare(array[left], array[right]):\n                array[left], array[right] = swap(array[left], array[right])\n                left += 1\n            else:\n                array[right], array[left] = swap(array[right], array[left])\n                right += 1\n\n    def compare", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array.sort()\n    if len(array) == 0:\n        return []\n    last_index = array[-1]\n    first_index = array[0]\n    sum = first_index + last_index\n    if sum % 2 == 0:\n        return array[::-1]\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    result = []\n    i, j = 0, len(array) - 1\n    while i < j:\n        if array[i] + array[j] > 0:\n            if array[i] + array[j] % 2 == 1:\n                result.append(array[i])\n                i += 1\n            else:\n                result.append(array[j])\n                j -= 1\n        else:\n            if array[i] + array[j] % 2 == 1:\n                result.append(array[j])\n                j -= 1\n            else:\n                result.append(array[i])\n                i += 1\n    return result", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array.sort(key=lambda x: x if x%2==0 else -(x+1))\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = list(array)\n    length = len(array)\n    if length == 0:\n        return array\n    else:\n        sum = 0\n        for i in range(length):\n            sum += array[i]\n        if sum % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n        return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write code here\n    import copy\n    if len(array) == 0:\n        return []\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return copy.deepcopy(array)\n    if len(array) % 2 == 0:\n        if array[0] + array[-1] == 0:\n            return copy.deepcopy(array)\n        elif array[0] + array[-1] % 2 == 0:\n            return copy.deepcopy(array)\n        else:\n            return sort_array(array[1:]) + [array[0]]\n    else:\n        return sort_array(array[1:]) + [array[0]]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last(arr):\n        return arr[0] + arr[-1]\n\n    def sort(arr):\n        if sum_first_last(arr) % 2 == 0:\n            arr.reverse()\n        else:\n            arr.sort()\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(start, end):\n        return sum(array[start]) + sum(array[end])\n\n    def sub_array(start, end):\n        return array[start:end]\n\n    def swap(start, end):\n        temp = array[start]\n        array[start] = array[end]\n        array[end] = temp\n\n    def swap_array(start, end):\n        for i in range(start, end):\n            swap(start, end - 1 - i)\n\n    def sort(start, end):\n        if sum(sub_array(start, end)) % 2 == 0:\n            swap_array(start, end - 1)\n        elif sum(sub_array(start, end)) % 2 == 1:\n            swap_array(start, end - 1)\n            swap(start, end - 1)\n\n    array.sort()\n    sort(0, len(array) - 1)\n    return array\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def odd_sum(a, b):\n        return a + b + 1\n\n    def even_sum(a, b):\n        return a + b\n\n    def sort(a, b):\n        if sum(a, b) % 2 == 0:\n            return a > b\n        else:\n            return a < b\n\n    return sorted(array, key=sort)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    sum_first_last_index_value = 0\n    for index, value in enumerate(array):\n        sum_first_last_index_value += value\n\n    if sum_first_last_index_value % 2 == 0:\n        return [value for index, value in sorted(enumerate(array), key=lambda x: x[1], reverse=True)]\n    else:\n        return [value for index, value in sorted(enumerate(array), key=lambda x: x[1])]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write code here\n    def sum_odd(a):\n        sum = 0\n        for i in range(len(a)):\n            sum += a[i]\n        return sum\n\n    def sum_even(a):\n        sum = 0\n        for i in range(len(a)):\n            sum += a[i]\n        return sum\n\n    if len(array) <= 1:\n        return array\n    if sum_odd(array) % 2 == 1:\n        return sort_array(array)\n    else:\n        return sort_array(array[::-1])\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return []\n    if len(array) == 1:\n        return [array[0]]\n    l = [array[0]] + sort_array(array[1:])\n    if len(l)%2 == 1:\n        return l[::-1]\n    return l", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    if not array:\n        return array\n    if array[0] > array[-1]:\n        return array[::-1]\n    if sum_first_last_index(array) % 2 == 0:\n        return array[::-1]\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(a):\n        return a[0] + a[-1]\n    def sum_even(a):\n        return a[0] + a[-1]\n    def sort_odd(a):\n        return a.sort(key=sum_odd)\n    def sort_even(a):\n        return a.sort(key=sum_even)\n\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    elif len(array) == 2:\n        return [array[0]] + sort_odd(array[1:])\n    elif len(array) == 3:\n        return [array[0]] + sort_even(array[1:])\n    else:\n        if sum_odd(array[:-1]) == sum_odd(array[1:]):\n            return [array[0]] + sort_even(array[1:])\n        else:\n            return [array[0]] + sort_odd(array[1:])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_first_and_last_index_values(array):\n        return array[0] + array[-1]\n\n    if not array:\n        return array\n\n    if sum_of_first_and_last_index_values(array) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    else:\n        first = array[0]\n        last = array[-1]\n        sum = first + last\n        if sum % 2 == 1:\n            return sorted(array)\n        else:\n            return sorted(array, reverse=True)</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def swap(array, i, j):\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n\n    def partition(array, start, end):\n        pivot = array[start]\n        i = start - 1\n        for j in range(start, end):\n            if array[j] <= pivot:\n                swap(array, i, j)\n                i += 1\n        swap(array, i + 1, end)\n        return i + 1\n\n    def swap_two_partition(array, start, end):\n        temp = array[start]\n        array[start] = array[end]\n        array[end] = temp\n\n    def merge(array, start, mid, end):\n        i = start\n        j = mid + 1\n        k = start\n        while i <= mid and j <= end:\n            if array[i] <= array[j]:\n                array[k] = array[i]\n                i += 1\n            else:\n                array[k] = array[j]\n                j += 1\n            k += 1\n\n    def sort(array, start, end):\n        if start < end:\n            mid = partition(array, start, end)\n            swap_two_partition(array, start, mid)\n            sort(array, start, mid)\n            sort(array,", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(arr):\n        return arr[0] + arr[-1]\n\n    if len(array) == 0:\n        return array\n\n    if sum_first_last_index(array) % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sort(array):\n        if len(array) <= 1:\n            return array\n        else:\n            return sort(sort_array(array[1:]) + [array[0]])\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def is_even(x):\n        return x % 2 == 0\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(array, first, last):\n        if first < last:\n            if is_even(first + last):\n                sort(array, first, last - 1)\n                swap(array[first], array[last - 1])\n            else:\n                sort(array, first + 1, last)\n                swap(array[first], array[last])\n        return array\n\n    return sort(array, 0, len(array) - 1)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n    # print(array)\n    if len(array) == 1:\n        return array\n    # print(array)\n    if sum(array) % 2 == 1:\n        return sorted(array, reverse=True)\n    # print(array)\n    return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_index(index):\n        return index[0] + index[-1]\n\n    def check(index):\n        if sum_index(index) % 2 == 0:\n            return False\n        else:\n            return True\n\n    def sort(array):\n        new_array = []\n        for i in range(len(array) - 1):\n            if check(array[i]):\n                new_array.append(array[i])\n                new_array.append(array[i + 1])\n            else:\n                new_array.append(array[i + 1])\n                new_array.append(array[i])\n        return new_array\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    if len(array) <= 1:\n        return array\n    if len(array) == 2:\n        if array[0] + array[1] % 2 == 0:\n            return array\n        else:\n            return array[::-1]\n    mid = len(array) / 2\n    left = array[:mid]\n    right = array[mid:]\n    return sort_array(left) + sort_array(right)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return []\n    array.sort()\n    if sum(array) % 2 == 0:\n        array.reverse()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    sum = 0\n    for i in range(len(array)):\n        sum += array[i]\n    if sum % 2 == 0:\n        array.sort(reverse=True)\n    else:\n        array.sort()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    # sort the array\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def get_sum(array):\n        return sum(array[0], array[-1])\n\n    def swap(a, b):\n        return [a[0], a[1], b[0], b[1], a[2], a[3], b[2], b[3]]\n\n    def sort(array):\n        if get_sum(array) % 2 == 1:\n            return sorted(array, key=lambda x: -x)\n        return sorted(array, key=lambda x: x)\n\n    if not array:\n        return []\n\n    return sort(swap(array, sort(array)))\n\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3, 0, 1, 5, 6])\nsort_array([2, 4, 3,", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def get_sum(array, start, end):\n        return sum(array[start:end + 1])\n\n    def get_array_index(array, start, end):\n        return start + end\n\n    def swap(array, i, j):\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n\n    def swap_array(array, start, end):\n        i = start\n        j = end - 1\n        while i <= j:\n            swap(array, i, j)\n            i += 1\n            j -= 1\n\n    def sort(array, start, end):\n        if start == end:\n            return\n        if get_sum(array, start, end) % 2 == 0:\n            swap_array(array, start, end)\n            sort(array, start, end - 1)\n            sort(array, start + 1, end)\n        else:\n            swap_array(array, start, end)\n            sort(array, start + 1, end)\n            sort(array, start, end - 1)\n\n    array_index = get_array_index(array, 0, len(array) - 1)\n    sort(array, 0, array_index - 1)\n    return array</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        :param array: array of non-negative integers\n        :return: sum( first index value, last index value)\n        \"\"\"\n        return array[0] + array[-1]\n\n    def get_sorted_array(array):\n        \"\"\"\n        :param array: array of non-negative integers\n        :return: array of non-negative integers after sorting\n        \"\"\"\n        sum_first_last_index = sum_first_last_index(array)\n        if sum_first_last_index % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n        return array\n\n    return get_sorted_array(array)\n\n\narray = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) < 1:\n        return array\n    elif len(array) == 1:\n        return array\n    elif len(array) == 2:\n        return array\n    else:\n        a = array[0]\n        b = array[-1]\n        return sort_array(array[1:-1]) + [a if a + b % 2 == 0 else b, a if a + b % 2!= 0 else b]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_value(index):\n        return array[index] + array[index - 1]\n    if len(array) < 2:\n        return array\n    sum_value = sum_value(0)\n    if sum_value % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n\n    sum = sum(array)\n    if sum % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n        return array\n    else:\n        if sum(array[0], array[-1]) % 2 == 0:\n            return sort_array([int(x) for x in array])\n        else:\n            return sort_array([int(x) for x in array])</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    if len(array) == 0:\n        return []\n    if len(array) == 1:\n        return array\n\n    if sum_first_last_index(array) % 2 == 0:\n        return array[::-1]\n    else:\n        return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    res = []\n    sum = 0\n    for i in array:\n        sum += i\n        res.append(i)\n    if sum % 2 == 0:\n        for i in range(len(array) - 1, -1, -1):\n            for j in range(len(array) - i - 1, -1, -1):\n                if array[j] > array[j + 1]:\n                    temp = array[j]\n                    array[j] = array[j + 1]\n                    array[j + 1] = temp\n    else:\n        for i in range(len(array) - 1, -1, -1):\n            for j in range(len(array) - i - 1, -1, -1):\n                if array[j] < array[j + 1]:\n                    temp = array[j]\n                    array[j] = array[j + 1]\n                    array[j + 1] = temp\n    return res", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sort(array):\n        length = len(array)\n        # if the length is odd, sort it in ascending order\n        if length % 2 == 1:\n            return sorted(array)\n        # if the length is even, sort it in descending order\n        else:\n            return sorted(array, reverse=True)\n    # sort the array in ascending order\n    return sort(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    array = list(array)\n    if len(array) > 0:\n        if sum(array) % 2 == 0:\n            array.sort(reverse=True)\n        else:\n            array.sort()\n    return array\n\narr = [1, 2, 3, 4, 5]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        if array[0] + array[1] % 2 == 0:\n            return array\n        else:\n            return array[::-1]\n    result = []\n    for i in range(len(array) - 1):\n        for j in range(i + 1, len(array)):\n            if array[i] + array[j] % 2 == 0:\n                if array[i] > array[j]:\n                    result.append(array[j])\n                    array[j] = array[i]\n                    array[i] = result.pop()\n                else:\n                    result.append(array[i])\n                    array[i] = array[j]\n                    array[j] = result.pop()\n    return result\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    num = 0\n    result = []\n    for i in array:\n        if num % 2 == 0:\n            result.append(i)\n        num += i\n    return result", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n\n    if not array:\n        return array\n\n    if sum_first_last_index(array) % 2 == 0:\n        return [val for val in array]\n    else:\n        return [val for val in array[::-1]]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    length = len(array)\n    sum = 0\n    for i in range(length):\n        sum += array[i]\n    if sum % 2 == 0:\n        array.sort()\n        return array\n    else:\n        array.sort(reverse=True)\n        return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(a, b):\n        return a + b\n\n    def sum_even(a, b):\n        return a - b\n\n    def swap(a, b):\n        if a[0] > b[0]:\n            a, b = b, a\n        return b\n\n    def sort(a, b):\n        if a[0] > b[0]:\n            a, b = b, a\n        return b\n\n    def merge(a, b):\n        result = []\n        i, j = 0, 0\n        while i < len(a) and j < len(b):\n            if a[i][0] <= b[j][0]:\n                result.append(a[i])\n                i += 1\n            else:\n                result.append(b[j])\n                j += 1\n        result += a[i:]\n        result += b[j:]\n        return result\n\n    def merge_sort(a):\n        if len(a) < 2:\n            return a\n        return merge(merge_sort(a[:len(a) // 2]), merge_sort(a[len(a) // 2:]))\n\n    return merge_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(start, end):\n        return start + end\n\n    def sum_odd_range(start, end):\n        if start + end % 2 == 0:\n            return sum_range(start, end)\n        else:\n            return sum_range(start, end) + 1\n\n    def sum_even_range(start, end):\n        if start + end % 2 == 1:\n            return sum_range(start, end)\n        else:\n            return sum_range(start, end) - 1\n\n    def sum_array(array):\n        return sum(array)\n\n    def sort_odd(array):\n        if sum_array(array) % 2 == 0:\n            return array\n        else:\n            return [array[i] + array[i + 1] for i in range(len(array) - 1)]\n\n    def sort_even(array):\n        if sum_array(array) % 2 == 1:\n            return array\n        else:\n            return [array[i] - array[i + 1] for i in range(len(array) - 1)]\n\n    def swap(array, i, j):\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n\n    def sort(array):\n        if sum_array(array) % 2 == 0:\n            return sort", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    nums = list(map(int, array))\n    flag = sum(nums) % 2\n    if flag == 0:\n        return nums\n    else:\n        return sorted(nums, reverse=True)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last(arr):\n        return arr[0] + arr[-1]\n    if len(array) == 0:\n        return []\n    if len(array) == 1:\n        return array\n    if sum_first_last(array) % 2 == 0:\n        return [-x for x in array]\n    else:\n        return [-x for x in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def get_sum(start, end):\n        return start + end\n\n    def sort(array):\n        if len(array) == 0:\n            return array\n        start, end = 0, len(array) - 1\n        while start < end:\n            sum = get_sum(start, end)\n            if sum % 2 == 0:\n                start, end = end, start\n            else:\n                array[start], array[end] = array[end], array[start]\n                start, end = end - 1, start - 1\n        return array\n\n    return sort(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def sum(i, j):\n        return array[i] + array[j]\n\n    def odd(i, j):\n        return sum(i, j) % 2 == 1\n\n    def even(i, j):\n        return sum(i, j) % 2 == 0\n\n    result = []\n    for i in range(len(array)):\n        if odd(i, len(array) - 1):\n            result.append(array[i])\n        else:\n            result.append(array[i])\n    return result\n\n\narray = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    # Write your code here\n    n = len(array)\n    first = 0\n    last = n - 1\n    odd = 0\n\n    for i in range(n):\n        for j in range(n - 1, i, -1):\n            if array[j] < array[j + 1]:\n                temp = array[j]\n                array[j] = array[j + 1]\n                array[j + 1] = temp\n\n    for i in range(n):\n        if odd == 1:\n            array[i] = array[i] * -1\n        if odd == 0:\n            array[i] = array[i] * 2\n        odd = odd * -1\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(start, end):\n        return start + end\n\n    def sum_odd(array):\n        return sum_range(array[0], array[-1])\n\n    def sum_even(array):\n        return sum_range(array[0], array[-1]) + array[-1]\n\n    if not array:\n        return array\n    if len(array) == 1:\n        return array\n    if sum_odd(array) == sum_even(array):\n        return array\n    if sum_odd(array) > sum_even(array):\n        return sort_array([-x for x in array])\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def swap(i, j):\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n\n    array.sort()\n    if array[0] + array[-1] % 2 == 0:\n        array.reverse()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def compare(a, b):\n        return (a[0] + a[-1]) - (b[0] + b[-1])\n\n    def swap(array, i, j):\n        temp = array[i]\n        array[i] = array[j]\n        array[j] = temp\n\n    def merge_sort(array, start, end):\n        if start < end:\n            middle = (start + end) // 2\n            merge_sort(array, start, middle)\n            merge_sort(array, middle + 1, end)\n            merge(array, start, middle, end)\n\n    def merge(array, start, middle, end):\n        i = start\n        j = middle + 1\n        k = start\n\n        while i <= middle and j <= end:\n            if array[i][0] + array[i][-1] <= array[j][0] + array[j][-1]:\n                k += 1\n                array[k] = array[i]\n                i += 1\n            else:\n                k += 1\n                array[k] = array[j]\n                j += 1\n\n        while i <= middle:\n            k += 1\n            array[k] = array[i]\n            i += 1\n\n        while j <= end:\n            k += 1\n            array[k] = array[j]\n            j += 1\n\n    merge_sort(array, 0, len(array) - 1)\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sort(array):\n        if len(array) == 0:\n            return array\n        length = len(array)\n        if length % 2 == 0:\n            for i in range(length):\n                for j in range(length - i - 1):\n                    if array[j] > array[j + 1]:\n                        array[j], array[j + 1] = array[j + 1], array[j]\n        else:\n            for i in range(length):\n                for j in range(length - i - 1):\n                    if array[j] < array[j + 1]:\n                        array[j], array[j + 1] = array[j + 1], array[j]\n        return array\n\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    if len(array) < 2:\n        return array\n\n    first, last = array[0], array[-1]\n    if sum(first, last) % 2 == 1:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    length = len(array)\n    if length <= 1:\n        return array\n    sum_value = sum(array)\n    if sum_value % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(nums):\n        return nums[0] + nums[len(nums) - 1]\n\n    def sum_even(nums):\n        return sum(nums)\n\n    def sort_odd(nums):\n        if sum_odd(nums) % 2 == 1:\n            return nums\n        else:\n            return nums[::-1]\n\n    def sort_even(nums):\n        if sum_even(nums) % 2 == 0:\n            return nums\n        else:\n            return nums[::-1]\n\n    if len(array) == 0:\n        return []\n    elif len(array) == 1:\n        return array\n    else:\n        if sum_odd(array) % 2 == 1:\n            return sort_odd(array)\n        else:\n            return sort_even(array)\n\n\narr = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    if len(array) == 0:\n        return []\n    first = array[0]\n    last = array[-1]\n    total = first + last\n    if total % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n\n    sum_array = sum(array)\n    if sum_array % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_array(array):\n        return sum(array)\n\n    def swap(a, b):\n        if a > b:\n            temp = a\n            a = b\n            b = temp\n        return a, b\n\n    def swap_if_odd(a, b):\n        if sum_array(a) % 2 == 1:\n            return swap(a, b)\n        return a, b\n\n    def swap_if_even(a, b):\n        if sum_array(a) % 2 == 0:\n            return swap(a, b)\n        return a, b\n\n    def partition(array, start, end):\n        pivot = array[start]\n        i = start\n        for j in range(start + 1, end):\n            if array[j] < pivot:\n                array[i], array[j] = swap_if_odd(array[i], array[j])\n                i += 1\n        array[i], array[start] = swap_if_odd(array[i], array[start])\n        return i\n\n    def merge(array, start, end):\n        result = []\n        while start < end:\n            if start + 1 < end:\n                if array[start] <= array[start + 1]:\n                    result.append(array[start])\n                    start += 1", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = []\n    for value in array:\n        if sum(value, array_copy[-1]) % 2 == 0:\n            array_copy.append(value)\n        else:\n            array_copy.append(value)\n    return array_copy", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(a):\n        return a[0] + a[-1]\n\n    if not array:\n        return []\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return [(array[0] + array[1]) % 2 == 0 and array[0] or array[1]]\n    if sum_first_last_index(array) % 2 == 0:\n        return [array[0]] + sort_array(array[1:])\n    else:\n        return [array[-1]] + sort_array(array[:-1])", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array_copy = []\n    num = 0\n    for i in array:\n        if num % 2 == 0:\n            if i > 0:\n                array_copy.append(i)\n            else:\n                array_copy.append(i)\n        else:\n            if i > 0:\n                array_copy.append(i)\n            else:\n                array_copy.append(-i)\n        num += 1\n    return array_copy", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last(arr):\n        return arr[0] + arr[-1]\n\n    def sum_first_last_odd(arr):\n        return sum_first_last(arr) % 2\n\n    def sum_first_last_even(arr):\n        return sum_first_last(arr) % 2 == 0\n\n    def sum_first_last_odd_sort(arr):\n        return arr[::-1]\n\n    def sum_first_last_even_sort(arr):\n        return arr\n\n    if len(array) == 0:\n        return array\n    elif sum_first_last_odd(array):\n        return sum_first_last_odd_sort(array)\n    else:\n        return sum_first_last_even_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n\n    odd_sum = sum(array[:-1])\n    even_sum = sum(array[:-1]) + array[-1]\n\n    if odd_sum % 2!= 0:\n        return sorted(array, key=lambda x: x, reverse=True)\n    else:\n        return sorted(array, key=lambda x: x)\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def _helper(array, start, end):\n        if start >= end:\n            return array\n        mid = (start + end) // 2\n        if array[mid] > array[mid + 1]:\n            return _helper(array, start, mid - 1) + _helper(array, mid + 1, end)\n        else:\n            return _helper(array, start, mid) + _helper(array, mid + 1, end)\n\n    return [_helper(array, 0, len(array) - 1) for array in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return [array[0], array[1]]\n    for i in range(len(array)):\n        for j in range(len(array)):\n            if i == j:\n                continue\n            if array[i] + array[j] == len(array) * 2:\n                array[i], array[j] = array[j], array[i]\n            elif array[i] + array[j] == len(array) * 2 + 1:\n                array[i], array[j] = array[j], array[i]\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        \"\"\"\n        Return the sum of the first and last index value of the given array.\n        \"\"\"\n        return array[0] + array[-1]\n\n    def odd(n):\n        \"\"\"\n        Return True if n is odd, False otherwise.\n        \"\"\"\n        return n % 2 == 1\n\n    def even(n):\n        \"\"\"\n        Return True if n is even, False otherwise.\n        \"\"\"\n        return n % 2 == 0\n\n    def sort_func(array):\n        \"\"\"\n        Return the sorted array if the sum of first and last index value is odd, return the original array if the sum\n        of first and last index value is even.\n        \"\"\"\n        if sum_first_last_index(array) % 2 == 1:\n            return sorted(array)\n        else:\n            return array\n\n    return sort_func(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    array = list(array)\n\n    if len(array) <= 1:\n        return array\n\n    def is_even(sum):\n        return sum % 2 == 0\n\n    def is_out_of_order(first, last):\n        return first + last % 2!= 0\n\n    def sort(array):\n        for i in range(len(array) - 1):\n            if is_even(array[i] + array[i + 1]):\n                array[i], array[i + 1] = array[i + 1], array[i]\n                is_out_of_order(array[i], array[i + 1])\n        return array\n\n    sorted_array = sort(array)\n    return sorted_array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    sum1 = sum(array[:-1])\n    sum2 = array[-1]\n    if sum1 + sum2 % 2 == 0:\n        return [array[-1] for array in zip(array[:-1], array[1:])]\n    return [array[i] for i in range(len(array)) if sum1 + i + sum2 % 2 == 0]\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(a, b):\n        return sum(a, b) % 2 == 0\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    array = list(array)\n    if not array:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    i = 0\n    while i < len(array) - 1:\n        if is_even(array[i], array[i + 1]):\n            array[i], array[i + 1] = swap(array[i], array[i + 1])\n        i += 1\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def odd_even_sort(nums):\n        if len(nums) <= 1:\n            return nums\n        nums.sort(key=lambda x: x[0] + x[-1])\n        if nums[0] + nums[-1] % 2 == 0:\n            return nums[::-1]\n        return nums\n\n    def swap_sort(nums):\n        if len(nums) <= 1:\n            return nums\n        for i in range(len(nums) - 1):\n            if nums[i] > nums[i + 1]:\n                nums[i], nums[i + 1] = nums[i + 1], nums[i]\n\n    def insert_sort(nums):\n        for i in range(1, len(nums)):\n            for j in range(0, i):\n                if nums[j] < nums[j + 1]:\n                    nums[j], nums[j + 1] = nums[j + 1], nums[j]\n\n    def merge_sort(nums):\n        if len(nums) <= 1:\n            return nums\n        middle = len(nums) // 2\n        left = []\n        right = []\n        for i in range(middle):\n            left.append(nums[i])\n        for i in range(middle", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def check(nums):\n        if nums[-1] - nums[0] % 2:\n            return nums[-1] - nums[0]\n        return nums[0] - nums[-1]\n\n    def sort(nums):\n        if len(nums) <= 1:\n            return nums\n        return sort(nums[1:]) + [nums[0] + check(nums)] + sort(nums[:-1])\n\n    return sort(array)\n\narray = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    # Write your code here\n    def sum(arr):\n        return sum(arr)\n\n    if len(array) == 0:\n        return []\n    else:\n        if sum(array) % 2 == 0:\n            return sorted(array, reverse=True)\n        else:\n            return sorted(array)\n\nsort_array([2, 4, 3, 0, 1, 5, 6])\n\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n    if len(array) <= 1:\n        return array\n    result = []\n    sum = sum(array)\n    if sum % 2 == 0:\n        result.extend(array[::-1])\n    else:\n        result.extend(array)\n    return result", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def is_even(num):\n        return num % 2 == 0\n\n    def is_odd(num):\n        return num % 2!= 0\n\n    def swap(a, b):\n        temp = a\n        a = b\n        b = temp\n\n    def sort(arr, start, end):\n        if end - start == 1:\n            if is_even(arr[start]):\n                arr[start], arr[end] = arr[end], arr[start]\n            else:\n                arr[start], arr[end] = arr[end], arr[start]\n        elif start + 1 == end:\n            if is_even(arr[start]):\n                arr[start], arr[end - 1] = arr[end - 1], arr[start]\n            else:\n                arr[start], arr[end - 1] = arr[end - 1], arr[start]\n        else:\n            mid = (start + end) // 2\n            if is_even(arr[mid]):\n                arr[mid], arr[start] = arr[start], arr[mid]\n                sort(arr, start,", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_values(nums):\n        return sum(nums)\n\n    def swap(nums, i, j):\n        nums[i], nums[j] = nums[j], nums[i]\n\n    def is_even(nums, i, j):\n        return sum_values(nums[i:j]) % 2 == 0\n\n    def is_odd(nums, i, j):\n        return sum_values(nums[i:j]) % 2!= 0\n\n    def sort(nums, i, j):\n        if is_even(nums, i, j):\n            swap(nums, i, j - 1)\n            sort(nums, i, j - 1)\n        elif is_odd(nums, i, j):\n            swap(nums, i, j - 1)\n            sort(nums, i, j - 1)\n            swap(nums, i, j - 1)\n        else:\n            sort(nums, i, j - 1)\n            swap(nums, i, j - 1)\n\n    sort(array, 0, len(array) - 1)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    result = []\n    if len(array) == 0:\n        return result\n    if len(array) == 1:\n        return array\n    for i in range(len(array) - 1):\n        if array[i] + array[i + 1] % 2 == 0:\n            result.append(array[i])\n        else:\n            result.append(array[i + 1])\n    return result", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_array(arr):\n        \"\"\"\n        You will return the sum of all elements in the given array, and return -1 if the given array is empty.\n\n        Examples:\n        * sum_array([]) => -1\n        * sum_array([5]) => 5\n        * sum_array([2, 4, 3, 0, 1, 5]) => 12\n        * sum_array([2, 4, 3, 0, 1, 5, 6]) => -1\n        \"\"\"\n        if len(arr) == 0:\n            return -1\n        else:\n            return sum(arr)\n\n    def sort_array_helper(arr, sum):\n        \"\"\"\n        You will return a copy of the given array after sorting, you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n        or sort it in descending order if the sum( first index value, last index value) is even.\n\n        Note:\n        * you must not change the original array.\n\n        Examples:\n        * sort_array_helper([], 0) => []\n        * sort_array_helper([5], 0) => [5]\n        * sort_array_helper([2, 4, 3, 0, 1, 5], 12) => [0, 1, 2, 3, 4, 5]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(arr):\n        return arr[0] + arr[-1]\n    if len(array) < 1:\n        return array\n    if sum_first_last_index(array) % 2 == 0:\n        return sorted(array, reverse=True)\n    return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = list(array)\n    length = len(array)\n    i = 0\n    j = length - 1\n    while i < j:\n        if array[i] + array[j] == length * 2:\n            array[i], array[j] = array[j], array[i]\n            i += 1\n            j -= 1\n        elif array[i] + array[j] == length * 2 + 1:\n            array[i], array[j] = array[j], array[i]\n            i += 1\n            j -= 1\n        else:\n            i += 1\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    n = len(array)\n    if n == 0:\n        return array\n    if n == 1:\n        return [0] + array\n    mid = n // 2\n    l = array[:mid]\n    r = array[mid:]\n    if sum(l) + sum(r) % 2 == 1:\n        l.reverse()\n        return sort_array(l + r)\n    else:\n        r.reverse()\n        return sort_array(l + r)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    nums = sorted(array)\n    if (sum(nums[:-1]) + nums[-1]) % 2 == 0:\n        return nums\n    else:\n        return reversed(nums)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(arr):\n        if len(arr) == 0:\n            return 0\n        return arr[0] + arr[-1]\n\n    def is_even(arr):\n        if len(arr) == 0:\n            return False\n        return sum_first_last_index(arr) % 2 == 0\n\n    def is_first_index_odd(arr):\n        if len(arr) == 0:\n            return False\n        return arr[0] % 2!= 0\n\n    def is_last_index_odd(arr):\n        if len(arr) == 0:\n            return False\n        return arr[-1] % 2!= 0\n\n    def swap(arr, index, index2):\n        temp = arr[index]\n        arr[index] = arr[index2]\n        arr[index2] = temp\n\n    def swap_if_need(arr, index, index2):\n        if is_even(arr):\n            if is_first_index_odd(arr):\n                if is_last_index_odd(arr):\n                    if index < index2:\n                        swap(arr, index, index2)\n            else:\n                if index < index2:\n                    swap(arr, index, index2)\n        else:\n            if is_first_index_odd(arr):\n                if index < index2:\n                    swap(arr, index", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write code here\n\n    def compare(a, b):\n        if a[0] + a[-1] == b[0] + b[-1]:\n            if a[0] + a[-1] % 2 == 0:\n                return -1\n            else:\n                return 1\n        else:\n            return a[0] + a[-1] - b[0] - b[-1]\n\n    def swap(a, i, j):\n        tmp = a[i]\n        a[i] = a[j]\n        a[j] = tmp\n\n    def sort(a, i, j):\n        if i < j:\n            swap(a, i, j)\n            sort(a, i, j - 1)\n            sort(a, i + 1, j)\n\n    array.sort(key=lambda x: x[0])\n    for i in range(len(array) - 1):\n        sort(array, i, len(array) - 1)\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = list(array)\n\n    if not array:\n        return []\n\n    if len(array) == 1:\n        return [array[0]]\n\n    if len(array) == 2:\n        if array[0] > array[1]:\n            return [array[1], array[0]]\n        else:\n            return [array[0], array[1]]\n\n    sum = sum(array)\n    if sum % 2 == 0:\n        array.sort(key=lambda x: x)\n    else:\n        array.sort(key=lambda x: -x)\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_first_last_index(array):\n        return array[0] + array[-1]\n    def odd_or_even(sum):\n        if sum % 2 == 0:\n            return \"even\"\n        else:\n            return \"odd\"\n    def sort_array(array):\n        # write your code here\n        for i in range(len(array) - 1):\n            if sum_of_first_last_index(array) % 2 == 0:\n                if array[i] > array[i + 1]:\n                    array[i], array[i + 1] = array[i + 1], array[i]\n            else:\n                if array[i] > array[i + 1]:\n                    array[i], array[i + 1] = array[i + 1], array[i]\n        return array\n    return sort_array(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    nums = array\n    if len(nums) <= 1:\n        return nums\n    if len(nums) % 2 == 0:\n        for i in range(0, len(nums) - 1, 2):\n            if nums[i] + nums[i + 1] == nums[i + 1]:\n                nums = nums[i:] + nums[:i]\n                break\n    else:\n        for i in range(0, len(nums) - 1, 2):\n            if nums[i] + nums[i + 1] == nums[i]:\n                nums = nums[i:] + nums[:i]\n                break\n    return nums", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return []\n    l = len(array)\n    if l == 1:\n        return [array[0]]\n    middle = l / 2\n    left = sort_array(array[:middle])\n    right = sort_array(array[middle:])\n    return [left[i] + right[i] for i in range(l)]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    n = len(array)\n    if n == 0:\n        return []\n    elif n == 1:\n        return array\n\n    first, last = array[0], array[-1]\n\n    if first + last % 2 == 1:\n        return [first] + sort_array(array[1:-1]) + [last]\n    else:\n        return sort_array(array[1:]) + [first] + sort_array(array[0:-1]) + [last]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return []\n\n    array.sort()\n    sorted_array = []\n    for i in range(len(array)):\n        if i == 0:\n            sorted_array.append(array[i])\n        else:\n            if array[i] + array[i - 1] % 2 == 0:\n                sorted_array.append(array[i])\n            else:\n                sorted_array.append(array[i] * -1)\n    return sorted_array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    sum1 = sum(array[:-1])\n    sum2 = sum(array[1:])\n    if sum1 % 2 == 0:\n        array = sorted(array, reverse=True)\n    else:\n        array = sorted(array, reverse=False)\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_func(num):\n        return num[0] + num[-1]\n\n    def sort_func(num):\n        if sum_func(num) % 2 == 0:\n            return num[::-1]\n        else:\n            return num\n\n    return [sort_func(num) for num in array]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_index(arr):\n        return arr[0] + arr[-1]\n\n    def sum_of_first_and_last(arr):\n        return arr[0] + arr[-1]\n\n    def odd_even_sort(arr):\n        if sum_of_index(arr) % 2 == 1:\n            return arr\n        else:\n            return arr[::-1]\n\n    return odd_even_sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def get_sum(index):\n        return index[0] + index[-1]\n\n    def get_index(sum):\n        if sum % 2 == 0:\n            return index_odd\n        else:\n            return index_even\n\n    index_odd = [-1, -1]\n    index_even = [-1, -1]\n\n    for index in array:\n        if get_sum(index) % 2 == 0:\n            index_even[0] = index_even[0] if index_even[0] > index[0] else index[0]\n            index_even[1] = index_even[1] if index_even[1] < index[-1] else index[-1]\n        else:\n            index_odd[0] = index_odd[0] if index_odd[0] > index[0] else index[0]\n            index_odd[1] = index_odd[1] if index_odd[1] < index[-1] else index[-1]\n\n    return index_odd if index_odd[0] > index_even[0] else index_even if index_even[0] > index_odd[0] else index_odd if index_odd[1] > index_even[1] else index_even", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_func(x, y):\n        return x + y\n\n    def sum_func1(x, y):\n        return x - y\n\n    def sum_func2(x, y):\n        return y - x\n\n    def sum_func3(x, y):\n        return y + x\n\n    def sum_func4(x, y):\n        return x + y\n\n    def sum_func5(x, y):\n        return y + x\n\n    def sum_func6(x, y):\n        return x - y\n\n    def sum_func7(x, y):\n        return y - x\n\n    def sum_func8(x, y):\n        return y + x\n\n    def sum_func9(x, y):\n        return x + y\n\n    def sum_func10(x, y):\n        return y - x\n\n    def sum_func11(x, y):\n        return x - y\n\n    def sum_func12(x, y):\n        return y + x\n\n    def sum_func13(x, y):\n        return y - x\n\n    def sum_func14(x, y):\n        return x - y\n\n    def sum_func15(x, y):\n        return y + x", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return array\n\n    length = len(array)\n    sum_first = sum(array[:length // 2])\n    sum_last = sum(array[length // 2:])\n\n    if sum_first + sum_last % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum(a, b):\n        return a + b\n\n    def swap(a, b):\n        tmp = a\n        a = b\n        b = tmp\n\n    def partition(array):\n        sum_val = 0\n        for i, x in enumerate(array):\n            sum_val += x\n            if sum_val % 2 == 0:\n                array.insert(i, array.pop(len(array) - 1))\n            elif sum_val % 2!= 0:\n                array.insert(len(array) - 1, array.pop(i))\n                array.append(array.pop(i))\n        return array\n\n    def sort(array):\n        if len(array) == 1:\n            return array\n        array = partition(array)\n        array = sort(array[:len(array) / 2])\n        array = sort(array[len(array) / 2:])\n        return array\n\n    return sort(array)\n\n\narray = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = sorted(array, reverse=True)\n    # this will sort the array in ascending order if the sum( first index value, last index value) is odd,\n    # and in descending order if the sum( first index value, last index value) is even.\n    if sum(array) % 2 == 0:\n        array.sort()\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def _sum(a, b):\n        return a + b\n\n    def _sort(array):\n        if len(array) == 0:\n            return array\n        if _sum(array[0], array[-1]) % 2 == 0:\n            return sorted(array, reverse=True)\n        return sorted(array)\n\n    return _sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    array = sorted(array)\n    if sum(array) % 2 == 0:\n        return array[::-1]\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return array\n\n    array.sort(key=lambda x: sum(array[:x + 1]))\n\n    if sum(array[:1]) % 2 == 0:\n        array.reverse()\n\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def sum_array(arr):\n        return arr[0] + arr[-1]\n\n    def odd(arr):\n        return sum_array(arr) % 2\n\n    def even(arr):\n        return sum_array(arr) % 2 == 0\n\n    if not array:\n        return []\n    if len(array) == 1:\n        return [array[0]]\n    if array[0] < array[-1]:\n        return sorted(array, key=odd)\n    else:\n        return sorted(array, key=even)\n\narr = [2, 4, 3, 0, 1, 5, 6]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    if not array:\n        return array\n\n    odd_sum = sum(array)\n    if odd_sum % 2:\n        return sorted(array, reverse=True)\n    else:\n        return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    # print('len = {}'.format(len(array)))\n    # print('array = {}'.format(array))\n    array = sorted(array)\n    # print('sort_array(array) = {}'.format(array))\n    # print('return value = {}'.format(sort_array(array)))\n    if sum(array) % 2 == 0:\n        return array\n    else:\n        return array[::-1]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_range(arr, start, end):\n        sum = 0\n        for i in range(start, end):\n            sum += arr[i]\n        return sum\n\n    def sum_odd(arr):\n        sum = 0\n        for i in arr:\n            sum += i\n        return sum % 2\n\n    def sum_even(arr):\n        sum = 0\n        for i in arr:\n            sum += i\n        return sum % 2 == 0\n\n    def sort_odd(arr):\n        if sum_odd(arr) % 2 == 0:\n            return arr[::-1]\n        else:\n            return arr\n\n    def sort_even(arr):\n        if sum_even(arr) % 2 == 0:\n            return arr[::-1]\n        else:\n            return arr\n\n    arr = list(array)\n    if sum_odd(arr) % 2 == 0:\n        return sort_even(arr)\n    else:\n        return sort_odd(arr)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_array(array):\n        \"\"\"\n        Return the sum of all elements in the given array.\n\n        Examples:\n        * sum_array([]) => 0\n        * sum_array([5]) => 5\n        * sum_array([2, 4, 3, 0, 1, 5]) => 8\n        * sum_array([2, 4, 3, 0, 1, 5, 6]) => 12\n        \"\"\"\n        return sum(array)\n\n    def find_sum(array):\n        \"\"\"\n        Return the sum of first and last element in the given array.\n\n        Examples:\n        * find_sum([]) => 0\n        * find_sum([5]) => 5\n        * find_sum([2, 4, 3, 0, 1, 5]) => 7\n        * find_sum([2, 4, 3, 0, 1, 5, 6]) => 9\n        \"\"\"\n        return array[0] + array[-1]\n\n    def odd_even_sort(array):\n        \"\"\"\n        Sort the given array if the sum( first index value, last index value) is odd.\n        Else, sort the given array in descending order if the sum( first index value, last index value) is even.\n\n        Examples:\n        * odd_even_sort([]) => []\n        *", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n\n    def sum_first_last(array):\n        return sum(array[0], array[-1])\n\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if sum_first_last(array) % 2 == 0:\n        return sorted(array, reverse = True)\n    return sorted(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_of_first_last_index(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first index value and the last index value.\n\n        Examples:\n        * sum_of_first_last_index([]) => 0\n        * sum_of_first_last_index([5]) => 5\n        * sum_of_first_last_index([2, 4, 3, 0, 1, 5]) => 8\n        * sum_of_first_last_index([2, 4, 3, 0, 1, 5, 6]) => 9\n        \"\"\"\n        first_index = array[0]\n        last_index = array[-1]\n        return first_index + last_index\n\n    def sum_of_first_last_index_mod_2(array):\n        \"\"\"\n        Given an array of non-negative integers, return the sum of the first index value and the last index value\n        mod 2.\n\n        Examples:\n        * sum_of_first_last_index_mod_2([]) => 0\n        * sum_of_first_last_index_mod_2([5]) => 1\n        * sum_of_first_last_index_mod_2([2, 4, 3, 0, 1, 5]) => 0\n        * sum_of_first_last_index_mod_2([2, 4, 3, 0, 1, 5, 6]) => 0\n        \"\"\"\n        first", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sort_array_helper(array, index):\n        if index >= len(array):\n            return array\n        if array[index] + array[index - 1] == 0:\n            return sort_array_helper(array, index - 1)\n        if array[index] + array[index - 1] % 2 == 0:\n            return sort_array_helper(array, index - 1)\n        else:\n            return [array[index], array[index - 1]] + sort_array_helper(array, index - 1)\n    return [array[0]] + sort_array_helper(array[1:], 1)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if not array:\n        return array\n    n = len(array)\n    if n == 1:\n        return array\n    if n == 2:\n        return array\n    if n == 3:\n        return array\n    if n == 4:\n        return array\n    if n == 5:\n        return array\n\n    a = array.copy()\n    if sum(a) % 2 == 0:\n        a.reverse()\n    else:\n        a.sort()\n    return a", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        sum = 0\n        for i in range(0, len(array)):\n            sum += array[i]\n        return sum\n\n    if len(array) == 0:\n        return []\n    if len(array) == 1:\n        return [array[0]]\n    if sum_first_last_index(array) % 2 == 0:\n        return [array[i] for i in range(len(array) - 1, -1, -1)]\n    else:\n        return [array[i] for i in range(len(array) - 1, -1, -1)] + [array[0]]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    if len(array) == 1:\n        return array\n    if len(array) == 2:\n        return [array[0], array[1]]\n\n    # sum of the first and last index value\n    sum = array[0] + array[-1]\n\n    # if sum is even, sort in descending order\n    if sum % 2 == 0:\n        array.sort(key=lambda x: -x)\n    # if sum is odd, sort in ascending order\n    else:\n        array.sort(key=lambda x: x)\n\n    return array\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_first_last_index(array):\n        return array[0] + array[-1]\n    if len(array) == 0:\n        return []\n    elif len(array) == 1:\n        return array\n    elif sum_first_last_index(array) % 2 == 0:\n        return [array[0] + array[-1]] + sort_array(array[1:])\n    else:\n        return [array[-1]] + sort_array(array[:-1])</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # write your code here\n    # no need to change the array\n    array.sort(reverse = True)\n    if array[0] + array[-1] % 2 == 0:\n        array.sort(reverse = False)\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    # sort it in ascending order if the sum( first index value, last index value) is odd\n    # or sort it in descending order if the sum( first index value, last index value) is even\n    # return a copy of the given array after sorting\n    return array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def _helper(array, begin, end):\n        if begin == end:\n            return\n        if array[begin] + array[end] % 2 == 0:\n            return [array[i] for i in range(begin, end + 1)]\n        else:\n            return [array[i] for i in range(begin, end + 1)]\n\n    return [_helper(array, i, i + 1) for i in range(len(array) - 1, 0, -1)]", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(arr):\n        return arr[0] + arr[-1]\n\n    def sum_even(arr):\n        return arr[0] + arr[len(arr) - 1]\n\n    if not array:\n        return array\n\n    if len(array) == 1:\n        return array\n\n    if sum_odd(array) % 2 == 0 or sum_even(array) % 2 == 0:\n        return array\n\n    return sorted(array, reverse=True)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    copy_array = []\n    # if the sum of the array is even, sort it in descending order, otherwise sort it in ascending order.\n    if sum(array) % 2 == 0:\n        for i in range(len(array)):\n            copy_array.append(array[len(array) - 1 - i])\n    else:\n        for i in range(len(array)):\n            copy_array.append(array[i])\n    return copy_array", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    # Write your code here\n    def sort(array):\n        if len(array) == 0:\n            return array\n        # count the number of odd numbers\n        odd = 0\n        for i in range(len(array)):\n            if array[i] % 2!= 0:\n                odd += 1\n        if odd % 2 == 0:\n            return sort(array[1:]) + sort(array[:1]) + array[0]\n        else:\n            return sort(array[1:]) + array[0] + sort(array[:1])\n    return sort(array)", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return []\n    result = []\n    sum_value = 0\n    for i in range(len(array)):\n        sum_value += array[i]\n    if sum_value % 2 == 0:\n        for i in range(len(array)):\n            result.append(array[i])\n        return result\n    else:\n        for i in range(len(array)):\n            result.append(array[len(array) - 1 - i])\n        return result", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    def sum_odd(array):\n        return array[0] + array[-1]\n\n    def sum_even(array):\n        return array[0] + array[-1]\n\n    if not array:\n        return array\n\n    if sum_odd(array) % 2 == 0:\n        return [int(x) for x in reversed(sorted(array))]\n    else:\n        return [int(x) for x in sorted(array)]\n\n</s>", "def sort_array(array):\n    \"\"\"\n    Given an array of non-negative integers, return a copy of the given array after sorting,\n    you will sort the given array in ascending order if the sum( first index value, last index value) is odd,\n    or sort it in descending order if the sum( first index value, last index value) is even.\n\n    Note:\n    * don't change the given array.\n\n    Examples:\n    * sort_array([]) => []\n    * sort_array([5]) => [5]\n    * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n    * sort_array([2, 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\n    \"\"\"\n    if len(array) == 0:\n        return array\n    result = []\n    temp = []\n    for x in array:\n        if len(temp) == 0:\n            temp.append(x)\n        elif (x - temp[len(temp) - 1]) % 2 == 0:\n            result.append(temp[len(temp) - 1])\n            temp.append(x)\n        else:\n            result.append(x)\n            temp = temp[:-1]\n    return result"]]