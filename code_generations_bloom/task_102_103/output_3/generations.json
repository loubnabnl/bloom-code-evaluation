[["def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # write your code here:\n    #return 0\n    if x == y:\n        return 0\n    if x == 0:\n        return -1\n    elif y == 0:\n        return -1\n    if x % 2 == 0:\n        x = x - 1\n    else:\n        x = x + 1\n    if y % 2 == 0:\n        y = y - 1\n    else:\n        y = y + 1\n    if x < y:\n        return choose_num(x, y)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # your code here\n    if x > y:\n        return choose_num(y, x)\n    if x == y:\n        return x\n    if x % 2!= 0 or y % 2!= 0:\n        return -1\n    num = x\n    while num <= y:\n        if num % 2 == 0:\n            return num\n        num += 2\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Use the brute force technique for this problem. Break down the problem\n    # into small cases and then do the following things:\n    #\n    # 1. Calculate x - y\n    # 2. If x - y is even, use it directly\n    # 3. If x - y is odd, make it even by adding one, and use the value\n    # 4. If x - y is negative, add 1 to it and use the value\n\n    if x - y == 0:\n        return x\n    if x - y < 0:\n        x += 1\n    if x - y % 2 == 0:\n        return x - y\n    else:\n        return x - y + 2\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def is_even(x):\n        return x % 2 == 0\n\n    def num_in_range(x, y):\n        if x > y:\n            return -1\n        i = 0\n        while True:\n            i += 1\n            if is_even(i) and i >= x and i <= y:\n                return i\n            if i > y:\n                return -1\n\n    return num_in_range(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    #TODO\n\n    # so I need to iterate and add 2 everytime the count is odd\n    # when count == y, the addition of 2 should stop.\n\n    # I also need to check if the even number that I am counting is in\n    # the range, and return it, otherwise return -1.", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # write your code here", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    number = -1\n    while number!= -1:\n        number = (x + y)//2\n        if number % 2 == 0:\n            if number < x:\n                x = number\n            elif number > y:\n                y = number\n            elif number in range(x, y):\n                return number", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if x >= y:\n        x = x + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x == y:\n        return x\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!= 0:\n        x = x + 1\n    if y % 2!= 0:\n        y = y + 1\n    if x % 2!=", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if (y - x) < 0:\n        return -1\n\n    low = 0\n    high = y - x + 1\n\n    while low <= high:\n        mid = (low + high) // 2\n\n        if mid % 2 == 0:\n            return mid\n        else:\n            low = mid + 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x >= y:\n        return -1\n\n    x_list = []\n    y_list = []\n    for i in range(x, y + 1):\n        if i % 2 == 0:\n            x_list.append(i)\n        else:\n            y_list.append(i)\n\n    for i in range(len(y_list)):\n        if x_list[-1] + y_list[i] == x + y:\n            return x_list[-1] + y_list[i]\n        elif x_list[-1] + y_list[i] == x + y:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def num_geven(n):\n        \"\"\"Check if the number is even or not.\"\"\"\n        return n % 2 == 0\n\n    x = int(x)\n    y = int(y)\n\n    if x < y:\n        return num_geven(y)\n    elif x > y:\n        return num_geven(x)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return int((x + y) // 2) if (x + y) % 2 == 0 else -1\n    else:\n        return int((x - y) // 2) if (x - y) % 2 == 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n\n    if y % x!= 0:\n        return -1\n\n    nums = [i for i in range(x, y)]\n    if nums.count(x) == 1:\n        return x\n\n    for num in nums:\n        if num % 2 == 0:\n            return max(num, choose_num(x, num))\n    return -1\n\nnum_1 = input(\"Enter number 1: \")\nnum_2 = input(\"Enter number 2: \")", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # You should implement and test your code here\n    pass", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # your code here\n    if x == y:\n        return x\n    if x < y:\n        return -1\n    if x%2 == 0:\n        if y%2 == 0:\n            return y\n        else:\n            return x\n    else:\n        if y%2 == 0:\n            return y\n        else:\n            return x-1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    a = x - 2\n    while a <= y:\n        if a % 2 == 0:\n            return a\n        a += 2\n    return -1\n\n\"\"\"\nTESTS\n\"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Define a function that will return the largest even integer number\n    # in the range [x, y] inclusive.\n    # If there is no such number, then this function should return -1.\n    #\n    def find_num(x, y):\n        # Declare variable z to represent the largest even integer number in\n        # the range [x, y] inclusive.\n        z = -1\n\n        # Define variable i to represent the loop index.\n        i = x\n\n        # While i is not greater than y, loop.\n        while i <= y:\n            # If i is even, then assign i to z.\n            if i % 2 == 0:\n                z = i\n\n            # Increment i by 2.\n            i += 2\n\n        # Return z.\n        return z\n\n    # Call find_num with the given parameters.\n    #\n    z = find_num(x, y)\n\n    # Return z.\n    return z\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x % 2 == 0 and y % 2 == 0:\n        return x\n\n    if x % 2 == 0 and y % 2!= 0:\n        return y\n\n    if x % 2!= 0 and y % 2 == 0:\n        return x + 1\n\n    if x % 2!= 0 and y % 2!= 0:\n        return y + 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        if x % 2 == 0:\n            y -= 1\n        elif y % 2 == 0:\n            x -= 1\n        else:\n            return x\n        if x < y:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def big_choose_num(x, y):\n        #initially print the value of x\n        print(x, end=' ')\n\n        #move to the next value of x by one and print it\n        x += 1\n        print(x, end=' ')\n\n        #move to the next value of y by one and print it\n        y += 1\n        print(y, end=' ')\n\n        #Check if the value of y is greater than the value of x, in case the\n        #value of y is greater than the value of x, it prints the value of x\n        if y > x:\n            print(x, end='')\n\n        #while the value of x is greater than 0, check if the value of x is even\n        while x > 0:\n            #check if the value of x is even\n            if x % 2 == 0:\n                #move to the next value of x by one and print it\n                x += 1\n                print(x, end=' ')\n            #check if the value of x is odd\n            else:\n                #move to the next value of y by one and print it\n                y += 1\n                print(y, end=' ')\n                #exit the while loop if the value of x is odd\n                break\n\n        #return the", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    n = max(x, y)\n    while n % 2 == 0:\n        n = n // 2\n    if n >= x:\n        return n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x < y:\n        if x % 2 == 0:\n            if y % 2 == 0:\n                return x\n            else:\n                x = x + 2\n        else:\n            if y % 2 == 0:\n                y = y + 2\n            else:\n                x = x + 2\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Recursion\n    if y > x:\n        return choose_num(y, x)\n    elif x == y:\n        return x\n    elif x % 2!= 0 and y % 2!= 0:\n        return x\n    elif x % 2 == 0 and y % 2!= 0:\n        return choose_num(x, x + 2)\n    elif x % 2!= 0 and y % 2 == 0:\n        return choose_num(x, x + 2)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    num = x\n    for i in range(1, y-x+1):\n        if i % 2 == 0:\n            num += i\n    return num if num <= y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        x, y = y, x\n    s = [int(i) for i in str(x) + str(y)]\n    ans = 0\n    for i in s:\n        if i % 2 == 0:\n            ans += int(i)\n    return ans\n\n\"\"\"\nTestcases:\n>>> choose_num(12, 15)\n14\n>>> choose_num(13, 12)\n-1\n>>> choose_num(1, 10)\n-1\n>>> choose_num(10, 11)\n-1\n\"\"\"\n\nTEST_CASES = [\n    choose_num(12, 15),\n    choose_num(13, 12),\n    choose_num(1, 10),\n    choose_num(10, 11)\n]", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def even_chooser(x, y):\n        i = 0\n        while i < y - x:\n            i += 2\n            if x + i <= y:\n                return x + i\n            else:\n                return -1\n    return even_chooser(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def num_in_range(start, stop):\n        \"\"\"This function takes two positive numbers start and stop and\n        returns the biggest even integer number that is in the range\n        [start, stop] inclusive. If there's no such number, then the\n        function should return -1.\n\n        For example:\n        num_in_range(12, 15) = 14\n        num_in_range(13, 12) = -1\n        \"\"\"\n        x = start\n        y = stop\n        max_num = -1\n        while x <= y:\n            if x % 2 == 0:\n                x += 1\n            else:\n                x += 2\n        if x > y:\n            return max_num\n        else:\n            return max_num + 1\n    return num_in_range(x, y)</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = x\n    while num <= y:\n        if num % 2 == 0:\n            return num\n        num += 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def is_even(n):\n        return (n % 2 == 0)\n\n    if y == x:\n        return x\n\n    if is_even(y):\n        if is_even(x):\n            return y + 1\n        else:\n            return y\n\n    if is_even(x):\n        if is_even(y):\n            return x + 1\n        else:\n            return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if (x < y):\n        return -1\n    if (x == y):\n        return x\n    elif (x % 2 == 0):\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(2 * (x / 2) + (y / 2) - x + y, max(x, y) - 1) + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y <= x:\n        return -1\n    while x < y:\n        x += 2\n        if x % 2 == 0:\n            return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    print x, y\n    for i in range(x+1, y):\n        if (i % 2) == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x % 2 == 0 and y % 2 == 0:\n        return min(x, y)\n    elif x % 2!= 0 and y % 2 == 0:\n        return choose_num(x - 2, y)\n    elif x % 2 == 0 and y % 2!= 0:\n        return choose_num(x, y - 2)\n    elif x % 2!= 0 and y % 2!= 0:\n        return choose_num(x - 2, y - 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # This is a programming contest problem from Project Euler. You can find the\n    # problem statement here: http://www.projecteuler.net/problem=10\n\n    # Here's a naive implementation that just traverses the possible numbers\n    # and checks if they're even, then checks if they're in the correct range.\n    # It solves the problem, but it's inefficient because it generates every\n    # number in the range and then filters them to find the correct one. In\n    # practice, you should make sure that your code only generates and filters\n    # the necessary numbers.\n\n    # Find the biggest even number in the range [x, y]\n    x, y = int(x), int(y)\n    n = max(x, y)\n\n    # Generate all the even numbers in the range, and store them in a list.\n    evens = []\n    while n > 0:\n        evens.append(n % 2)\n        n /= 2\n\n    # Filter them to only keep the ones in the correct range\n    return -1 if len(evens) == 0 else evens[0] if evens[0] >= x else evens[-1]", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    # Solution 1:\n    # from math import sqrt\n    # return int((sqrt(x) + sqrt(y)) / 2)\n\n    # Solution 2:\n    # def gcd(a, b):\n    #     \"\"\"Return the greatest common divisor of a and b.\"\"\"\n    #     while b:\n    #         a, b = b, a % b\n    #     return a\n\n    # def lcm(a, b):\n    #     \"\"\"Return the lowest common multiple of a and b.\"\"\"\n    #     return a * b // gcd(a, b)\n\n    # def choose_num(x, y):\n    #     \"\"\"This function takes two positive numbers x and y and returns the\n    #     biggest even integer number that is in the range [x, y] inclusive.\n    #     If there's no such number, then the function should return -1.\n\n    #     For example:\n    #     choose_num(12, 15) = 14\n    #     choose_num(13, 12) = -1\n    #     \"\"\"\n    #     x = int(x)\n    #     y = int(y)\n    #     if x >= y:\n    #         return choose_num(y, x)\n    #     else:\n    #", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x >= y:\n        print(\"Out of range\")\n        return -1\n    else:\n        mid = (x + y) // 2\n        even_num = mid\n        while even_num <= y:\n            if even_num % 2 == 0:\n                even_num += 2\n            else:\n                even_num += 1\n            if even_num >= x:\n                return even_num\n            else:\n                even_num = mid\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n\n    if x % 2 == y % 2 == 0:\n        return choose_num(x - 1, y - 1)\n    elif x % 2 == y % 2 == 1:\n        return choose_num(x - 2, y - 2)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return x % 2 + (choose_num(x + 1, y) if x % 2 == 0 else choose_num(x, y))\n    else:\n        return y % 2 + (choose_num(x, y - 1) if y % 2 == 0 else choose_num(x, y))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x < y):\n        return -1\n    else:\n        if (y % 2) == 0:\n            return x\n        else:\n            return x + 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        if x >= y:\n            return -1\n        elif x % 2 == 0 and y % 2 == 0:\n            if x >= y:\n                return x\n            else:\n                return y\n        elif x % 2 == 0 and y % 2 == 1:\n            x += 2\n        elif x % 2 == 1 and y % 2 == 0:\n            y += 2\n        else:\n            x += 2\n            y += 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    while x <= y:\n        if x % 2 == 0:\n            if x >= y:\n                return x\n            else:\n                return -1\n        x += 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return -1\n    elif x % 2 == 0:\n        return max(2 * x, choose_num(x, y - x))\n    else:\n        return max(choose_num(x - 1, y), choose_num(x, y - 1))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x == y:\n        return x\n\n    # two odd numbers\n    if x % 2!= y % 2:\n        if x % 2 == 1:\n            return choose_num(x - 1, y)\n        else:\n            return choose_num(x, y - 1)\n\n    # two even numbers\n    if x % 2 == y % 2:\n        if x % 2 == 0:\n            return choose_num(x - 2, y - 2)\n        else:\n            return choose_num(x - 2, y - 1)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        x += 2\n        y -= 2\n        if x > y:\n            return -1\n        if x % 2 == 0 and y % 2 == 0:\n            return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        print(f\"{x} is greater than {y}\")\n        return -1\n    elif y - x < 2:\n        return (x + y) // 2\n    else:\n        return max(x, y) if x % 2 == 0 else choose_num(x + 2, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def select_range(x, y):\n        if x < y:\n            return [x, y]\n        else:\n            return [y, x]\n\n    def select_subset(range_list):\n        list_length = len(range_list)\n        if list_length == 0:\n            return -1\n        else:\n            return (max(range_list) + 1) // 2\n\n    range_list = select_range(x, y)\n    return select_subset(range_list)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if y < x:\n        return -1\n    elif x % 2 == 0:\n        if y % 2 == 0:\n            return x\n        else:\n            return max(x, y - 1)\n    else:\n        return choose_num(x - 1, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    if x % 2 == 0:\n        if y % 2 == 0:\n            max_num = y\n        else:\n            max_num = y + 2\n    else:\n        if y % 2 == 0:\n            max_num = y - 2\n        else:\n            max_num = y\n    return max_num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Base case\n    if x >= y:\n        return x\n\n    mid = int((x + y) / 2)\n    if mid % 2 == 0:\n        return choose_num(mid, y)\n    else:\n        return choose_num(x, mid - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    #Do not write code here.\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if y == x:\n        return y\n    elif y == 0:\n        return 0\n    elif y == 1:\n        return 2\n    else:\n        if x % 2!= 0:\n            return -1\n        else:\n            return y - x - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # @include", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x < 2:\n        return y\n    elif x % 2 == 0 and y % 2 == 0:\n        return max(x, y)\n    else:\n        if y % 2 == 0:\n            return choose_num(x + 2, y)\n        else:\n            return choose_num(x, y - 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import math\n    n = x\n    if n < y:\n        n += 2 * math.ceil(math.log10(y) / math.log10(2))\n    if n < y:\n        n += 2 * math.ceil(math.log10(y) / math.log10(2))\n    return n", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # First write a function that takes a single number and returns the\n    # biggest even number that is less than or equal to that number\n    # (or -1 if the number is odd)\n    def choose_num_1(num):\n        if (num % 2)!= 0:\n            return -1\n        else:\n            return num/2 + 1\n\n    # Now write a function that takes two numbers and returns the biggest\n    # even number in the range between them (or -1 if it's not possible)\n    # Example:\n    # choose_num(12, 15) = 14\n    # choose_num(13, 12) = -1\n\n    def choose_num_2(x, y):\n        x, y = int(x), int(y)\n        if (x % 2!= 0) or (y % 2!= 0):\n            return -1\n        elif x < y:\n            if (x + choose_num_1(y - x)) % 2 == 0:\n                return x + choose_num_1(y - x)\n            else:\n                return -1\n        elif x > y:\n            return -1\n        else:\n            return x + choose_num_1(y - x)\n\nnum_1 = int(input(\"Enter the first number:\"))\nnum_2 = int(input(\"Enter the second number:\"))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    # This is the \"run\" variable - the number that we'll keep incrementing until\n    # we find the solution.\n    run = 0\n    # This is the \"result\" variable - we'll save the result here\n    result = -1\n    # This is the condition variable - we'll use this to check if the numbers\n    # are within the range or not\n    cond = False\n\n    # We'll start with the lower limit\n    while x < y:\n        # Now we do the increment\n        x += 2\n        # If the condition is met, then return the result\n        if x <= y:\n            return x\n        # Otherwise, set the condition variable to true\n        else:\n            cond = True\n\n    # If the condition variable is false, then the numbers are within the range\n    # If the condition variable is true, then the numbers are not within the range\n    if cond == False:\n        result = x\n    # Otherwise, return -1\n    else:\n        result = -1\n\n    return result", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    # otherwise, we need to find the biggest even integer number in the range [x, y]\n    # because of the fact that even integers are their own square roots\n    # as the result, we need to check if y is the square of some even integer\n    # and if x is the square of some other even integer\n    # we need to find the biggest of these two even integers\n    # and return it\n    for i in range(x, y + 1):\n        if i * i == y:\n            return i\n        if i * i == x:\n            return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x % 2!= 0:\n        x += 1\n    if y % 2!= 0:\n        y -= 1\n    if x <= y:\n        return x if x % 2 == 0 else choose_num(x - 1, y)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x > y:\n        return choose_num(y, x)\n\n    if x == y:\n        return x\n\n    if x%2!= 0:\n        return choose_num(x - 2, x)\n\n    if y == x + 2:\n        return y\n    elif y < x + 2:\n        return choose_num(x, y - 2)\n    elif y == x + 4:\n        return y\n    else:\n        return choose_num(x, y - 4)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    print(x, y)\n    if x > y:\n        x, y = y, x\n\n    if x % 2 == 0:\n        return x\n\n    if y % 2 == 0:\n        return y\n\n    i = 2\n    while i <= y:\n        if (x + i) % 2 == 0:\n            return x + i\n        i += 2\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    # Base case\n    if x == 0 or y == 0:\n        return -1\n    # If both x and y are even, then return the biggest even number\n    # in the range (x, y]. If both x and y are odd, then return the\n    # biggest odd number in the range (x, y]\n    if x % 2 == 0 and y % 2 == 0:\n        return max(y, choose_num(x - 1, y))\n    elif x % 2 == 1 and y % 2 == 1:\n        return choose_num(x - 1, y)\n    elif x % 2 == 0 and y % 2 == 1:\n        return choose_num(x, y - 1)\n    elif x % 2 == 1 and y % 2 == 0:\n        return choose_num(x, y - 1)\n    # If both x and y are even, then return the biggest even number\n    # in the range (x, y]. If both x and y are odd, then return the\n    # biggest odd number in the range (x, y]\n    if x % 2 == 0 and y % 2 == 0:\n        return max(y, choose_num(x - 1, y))\n    elif x % 2 == 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x <= y):\n        return (y - x) // 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def check_num(x, y):\n        \"\"\"This function takes two positive numbers x and y and returns the\n        biggest even integer number that is in the range [x, y] inclusive. If \n        there's no such number, then the function should return -1.\"\"\"\n        # check if the number is even and return if so\n        if(x % 2 == 0 and y % 2 == 0):\n            return max(x, y)\n        # check if the number is not even and return if so\n        if(x % 2!= 0 or y % 2!= 0):\n            return -1\n        # check if the number is odd and return if so\n        if(x % 2 == 1 and y % 2 == 0):\n            return (x + 2)//2\n        # check if the number is not odd and return if so\n        if(x % 2!= 1 or y % 2!= 1):\n            return -1\n        # check if the number is odd and return if so\n        if(x % 2 == 0 and y % 2 == 1):\n            return (y + 2)//2\n        # check if the number is not odd and return if so\n        if(x % 2!= 0 or y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    number = -1\n    while number <= x:\n        while number <= y and number%2 == 0:\n            number += 1\n        if number == y:\n            return number\n        number += 1\n    return number", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # You need to implement this function\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    while x <= y and (x % 2) == 0:\n        x += 2\n\n    while y >= x and (y % 2) == 0:\n        y -= 2\n\n    if y < x:\n        return -1\n    return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if x < y or y <= 0:\n        return -1\n    else:\n        if x%2 == 0:\n            if x <= y:\n                return x\n            else:\n                return y\n        else:\n            if x <= y:\n                return choose_num(x/2, y)\n            else:\n                return choose_num(x/2, x/2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x <= y:\n        biggest_even = 0\n        for i in range(x, y+1):\n            if i % 2 == 0:\n                if i > biggest_even:\n                    biggest_even = i\n\n        return biggest_even\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x < 0) or (y < 0):\n        return -1\n    if (x <= y):\n        return -1\n    else:\n        return int(math.ceil(math.sqrt(y**2 - x**2 + 1)))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if (x < 0 or y < 0 or x >= y):\n        return -1\n    else:\n        if x % 2 == 0:\n            return x\n        else:\n            return x + 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    print(\"Starting to choose a number\")\n    max_num = -1\n    max_num_even = -1\n    while True:\n        print(\"Enter the biggest even number in range\")\n        max_num = int(input(\"Choose the biggest even number: \"))\n\n        if max_num_even == -1:\n            if max_num % 2 == 0:\n                if max_num >= x:\n                    max_num_even = max_num\n        if max_num_even!= -1:\n            if max_num_even >= y:\n                break\n        print(\"The number you entered is not in range. Try again\")\n\n    print(\"The biggest even number in range: \", max_num_even)\n    return max_num_even", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import sys\n    if x < y:\n        return choose_num(y, x)\n    if x % 2 == 0:\n        if y % 2 == 0:\n            x += 2\n        else:\n            y += 2\n    if x > y:\n        return -1\n    while x!= y:\n        x += 2\n    return x - 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    x = int(x)\n    y = int(y)\n    i = 0\n    while x >= y:\n        i += 2\n        x -= y\n    return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    import math\n\n    def isEven(x):\n        return x % 2 == 0\n\n    def bigEven(x, y):\n        return math.ceil((x + y) / 2)\n\n    def smallEven(x, y):\n        return math.floor((x + y) / 2)\n\n    def print_range(x, y):\n        for i in range(x, y+1):\n            print(i, end=' ')\n        print(', -1')\n\n    print_range(x, y)\n    choice = raw_input(\"Choose: bigEven(x, y) or smallEven(x, y): \")\n\n    if choice == \"bigEven(x, y)\":\n        x = bigEven(x, y)\n        if isEven(x):\n            print(x)\n        else:\n            print(-1)\n    else:\n        x = smallEven(x, y)\n        if isEven(x):\n            print(x)\n        else:\n            print(-1)\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y or x <= 0 or y <= 0:\n        return -1\n\n    possible_numbers = range(x, y + 1)\n    even_numbers = filter(lambda x: x % 2 == 0, possible_numbers)\n    return max(even_numbers)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    if y % 2 == 0:\n        if x % 2 == 0:\n            return y / 2\n        else:\n            return x\n    if x % 2 == 0:\n        return x\n    else:\n        return y", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n\n    while True:\n        print(\"Enter two positive numbers\")\n        print(\"x= \", end=\"\")\n        x = input().strip()\n        print(\"y= \", end=\"\")\n        y = input().strip()\n        if x and y:\n            break\n        print(\"Incorrect input. Please enter two positive numbers\")\n    x = int(x)\n    y = int(y)\n    if y < x:\n        y = x\n    if x%2 == 0:\n        x = int(x) + 1\n    elif y%2 == 0:\n        y = int(y) + 1\n    while True:\n        if x%2 == 0 and y%2 == 0:\n            return x\n        elif x%2 == 0 and y%2!= 0:\n            y = int(y) + 1\n        elif x%2!= 0 and y%2 == 0:\n            x = int(x) + 1\n        elif x%2!= 0 and y%2!= 0:\n            print(\"Incorrect input. Please enter two positive numbers\")", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if x < y:\n        x, y = y, x\n    if x % 2 == 0:\n        if x >= y:\n            return x\n        else:\n            if x + 1 >= y:\n                return x + 1\n            else:\n                return -1\n    elif x > y and x % 2 == 1:\n        return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Your code here", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(y, x)\n    if x == y:\n        return x\n    nums = []\n    while x < y:\n        x += 2\n        nums.append(x)\n    i = 0\n    while True:\n        if nums[i] % 2 == 0:\n            return nums[i]\n        i += 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        if x % 2 == 0:\n            return x\n        else:\n            return x + 1\n    else:\n        if y % 2 == 0:\n            return y\n        else:\n            return y - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x <= 2:\n        return 2\n\n    elif x <= y:\n        if x % 2!= 0:\n            i = 0\n        else:\n            i = 1\n\n        if y % 2 == 0:\n            return choose_num(x + 2 * i, y - 2 * i) + 2 * i\n        else:\n            return choose_num(x + 2 * i, y - 2 * i) + 2 * i + 1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    if x % 2 == 0:\n        return x\n    while x <= y:\n        x += 2\n    return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # implement your code here", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x, y = int(x), int(y)\n    if x == y:\n        return x\n    if x % 2 == 0:\n        x = x + 1\n    else:\n        x = x + 2\n    while x <= y:\n        if x % 2 == 0:\n            if x > y:\n                return -1\n            return x\n        x = x + 2\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def choose_num_helper(x, y):\n        if y == x:\n            return x\n\n        if y % 2 == 0 and x % 2!= 0:\n            return x\n\n        if y % 2!= 0 and x % 2 == 0:\n            return y\n\n        return choose_num_helper(x, y - 1)\n\n    return choose_num_helper(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        x = y\n    if x % 2 == 0:\n        x += 1\n    if y % 2 == 0:\n        y += 1\n    z = 0\n    while z < y:\n        if z % 2 == 0:\n            z += 1\n        else:\n            z += 2\n    return z", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # write your code here", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Complete this function.\n\n    # Write your code here.", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x % 2 == 0:\n        if y % 2 == 0:\n            if x < y:\n                return choose_num(x + 2, y)\n            else:\n                return choose_num(x, y + 2)\n        else:\n            if x < y:\n                return choose_num(x + 2, y - 1)\n            else:\n                return choose_num(x - 1, y)\n    else:\n        if x < y:\n            return choose_num(x + 1, y)\n        else:\n            return choose_num(x, y - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x = int(x)\n    y = int(y)\n    # If x is even, then we will only use the x mod 2\n    if x % 2 == 0:\n        # First try to find a number that is x/2 and also even\n        try:\n            temp = choose_num(x / 2, y)\n            if temp % 2 == 0:\n                return temp\n            else:\n                return -1\n        # If x is even but x/2 is not even, then try to find a number that is \n        # x/2 + 1 and also even\n        except ValueError:\n            try:\n                temp = choose_num(x / 2 + 1, y)\n                if temp % 2 == 0:\n                    return temp\n                else:\n                    return -1\n            # If x is even and x/2 is even but x/2 + 1 is not even, then try to\n            # find a number that is x/2 + 2 and also even\n            except ValueError:\n                try:\n                    temp = choose_num(x / 2 + 2, y)\n                    if temp % 2 == 0:\n                        return temp\n                    else:\n                        return -1\n    # If x is odd, then we will only use the x mod 2\n    else:\n        # First try to find a number that is x/2 and also even\n        try:\n            temp = choose_num(x /", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    print(x, y, max(x, y))\n    print(x, y, min(x, y))\n    print(x, y, x + y)\n    if x < y:\n        y = x\n        x = y\n        print(y)\n        print(x)\n    if x % 2 == 0:\n        print(x)\n        return x\n    while x <= y:\n        x += 2\n        if x % 2 == 0:\n            return x\n    return -1\n\n\nx, y = int(input(\"Enter a number:\")), int(input(\"Enter another number:\"))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    x = int(x)\n    y = int(y)\n\n    if x < y:\n        return choose_num(y, x)\n    else:\n        if x % 2 == 0:\n            return x\n        else:\n            i = 0\n            while i < y:\n                if y % i == 0:\n                    return y\n                i += 2\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # write your code here\n    import math\n    def even_choice(x, y):\n        if x < y and x % 2 == 0:\n            if x / 2 + y / 2 <= y:\n                return x\n            else:\n                return y\n        else:\n            return -1\n    return even_choice(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    from math import sqrt\n    if (x % 2) == (y % 2):\n        return x if y <= x else -1\n    else:\n        return -1 if (x + y) % 2 == 0 else (x + y) / 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Complete this function\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = 0\n    while True:\n        if num >= x and num <= y:\n            if num % 2 == 0:\n                return num\n        num += 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max_num = (x if x % 2 == 0 else x - 1)\n    min_num = (y if y % 2 == 0 else y - 1)\n    if max_num - min_num == 1:\n        return max_num\n    return -1\n\"\"\"\nProblem 33\nLast month, you bought a 3-year-old dog for $500, and a 5-year-old dog\nfor $900. You plan on selling the two dogs together in two months. Assuming\nthe two dogs have the same rate of growth, what will the average price of a\nyear-old dog be on the day you sell the dogs?\n\"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    x, y = int(x), int(y)\n    if x < y:\n        return choose_num(x, y - 2) if x % 2 == 0 else choose_num(x - 1, y)\n    else:\n        return choose_num(y - 2, x) if y % 2 == 0 else choose_num(y, x - 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y or y <= 0 or x <= 0:\n        return -1\n    if x % 2 == 0 or y % 2 == 0:\n        if x < y:\n            return choose_num(x, y - 2)\n        else:\n            return choose_num(x - 2, y)\n    else:\n        return choose_num(x, y - 1)\n\nnum1 = int(input())\nnum2 = int(input())", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    answer = -1\n    while answer < 0 or answer > y:\n        if x % 2 == 0:\n            answer += 2\n        else:\n            answer += 1\n\n    return answer", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import math\n    if x > y:\n        return choose_num(y, x)\n    elif x == y:\n        return math.ceil(math.sqrt(x))\n    else:\n        return math.ceil(math.sqrt(x) - math.sqrt(x % math.ceil(math.sqrt(x))))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(y, x)\n    if x > y:\n        return choose_num(x, y)\n\n    if x % 2 == 0:\n        if y % 2 == 0:\n            return x if x <= y else -1\n        else:\n            return choose_num(y, x - 2)\n    else:\n        if y % 2 == 0:\n            return choose_num(y, x - 2)\n        else:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x <= y:\n        if (x % 2) == 0:\n            if (y % 2) == 0:\n                return x\n            else:\n                return -1\n        else:\n            x += 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def is_even(num):\n        return num % 2 == 0\n\n    if x < y:\n        return choose_num(x, y - 1)\n    elif is_even(x) and is_even(y) and y - x >= 4:\n        return y - x + 2\n    elif is_even(x) and x > y:\n        return -1\n    elif not is_even(x) and not is_even(y):\n        return x\n    elif not is_even(x) and is_even(y):\n        return y - 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x == y):\n        return x\n\n    # Test whether the range is divisible by 3\n    if x % 3 == y % 3:\n        return max(choose_num(x // 3, x + 2),\n                   choose_num(y // 3, y - 2))\n\n    # Test whether the range is divisible by 5\n    elif x % 5 == y % 5:\n        return max(choose_num(x // 5, x + 4),\n                   choose_num(y // 5, y - 4))\n\n    # Test whether the range is divisible by 7\n    elif x % 7 == y % 7:\n        return max(choose_num(x // 7, x + 6),\n                   choose_num(y // 7, y - 6))\n\n    # Test whether the range is divisible by 11\n    elif x % 11 == y % 11:\n        return max(choose_num(x // 11, x + 10),\n                   choose_num(y // 11, y - 10))\n\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x <= y:\n        if x % 2 == 0:\n            if y % 2 == 0:\n                if x + y == x * y:\n                    return x\n                else:\n                    return x\n            else:\n                if x + y == x * y:\n                    return x + 1\n                else:\n                    return -1\n        else:\n            if y % 2 == 0:\n                if x + y == x * y:\n                    return x + 1\n                else:\n                    return -1\n            else:\n                if x + y == x * y:\n                    return x + 2\n                else:\n                    return -1\n    else:\n        if x % 2 == 0:\n            if y % 2 == 0:\n                if x + y == x * y:\n                    return x + 1\n                else:\n                    return -1\n            else:\n                if x + y == x * y:\n                    return x + 2\n                else:\n                    return -1\n        else:\n            if y % 2 == 0:\n                if x + y == x * y:\n                    return x + 2\n                else:\n                    return -1\n            else:\n                if x + y == x * y:\n                    return x + 3\n                else:\n                    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y and x > 0 and y > 0:\n        num = 0\n        while num <= y and num > 0:\n            if num % 2 == 0:\n                if num <= x:\n                    break\n            num += 1\n        if num >= x:\n            return num\n        else:\n            return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = x\n    while num <= y:\n        if num % 2 == 0:\n            num += 1\n        else:\n            return num\n    return -1\n\nnum = int(input())\nx = choose_num(num - 1, num + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def is_even(n):\n        return n % 2 == 0\n\n    if is_even(x) and is_even(y):\n        if x <= y:\n            return x + 2\n        else:\n            return y - 2\n    elif is_even(x):\n        if x <= y:\n            return x\n        else:\n            return -1\n    elif is_even(y):\n        if x <= y:\n            return y\n        else:\n            return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def is_even(n):\n        \"\"\"This function checks if an integer number is even or not.\"\"\"\n        if n % 2 == 0:\n            return True\n        else:\n            return False\n    def count(n):\n        \"\"\"This function counts how many even numbers are in the range (0, n).\"\"\"\n        count = 0\n        while n > 0:\n            if is_even(n):\n                count += 1\n            n -= 1\n        return count\n    def choose_num(x, y):\n        \"\"\"This function returns the biggest even number in the range [x, y].\"\"\"\n        count = count(x)\n        if count % 2 == 0:\n            return x\n        else:\n            return x + 1\n\n    return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def is_valid_num(x):\n        if x % 2 == 0:\n            return True\n        else:\n            return False\n\n    if x < y:\n        x = x + 2\n        y = y + 2\n\n    if is_valid_num(x) and is_valid_num(y):\n        while x!= y:\n            if x % 2 == 0:\n                x = x + 2\n            else:\n                x = x - 2\n            y = y + 2\n\n        return x - 2\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    n = 1\n    while n <= y:\n        if n % 2 == 0 and n >= x:\n            return n\n        n += 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    elif x == y:\n        return x\n    if x % 2 == 0:\n        num = int((y - x) / 2)\n    elif y % 2 == 0:\n        num = int((y - x) / 2) + 1\n    else:\n        num = int((y - x) / 2) + 2\n    return max(num, x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    elif x <= y:\n        if x % 2 == 0:\n            return x\n        else:\n            return (x - 1) + 2 * choose_num(x - 1, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    #Write your code here\n    if y == x:\n        return y\n\n    if x%2 == 0:\n        if y%2 == 0:\n            if x >= y:\n                return x\n            else:\n                return -1\n        else:\n            return -1\n\n    if y%2 == 0:\n        return -1\n\n    if x%2!= 0 and y%2!= 0:\n        if x <= y:\n            return x\n        else:\n            return -1\n\n    if x%2!= 0 and y%2 == 0:\n        if x <= y:\n            return x\n        else:\n            return -1\n\n    if x%2 == 0 and y%2!= 0:\n        if x >= y:\n            return x\n        else:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x % 2 == 0 and y % 2 == 0:\n        return x\n    elif x % 2 == 0 and y % 2!= 0:\n        return y\n    elif x % 2!= 0 and y % 2 == 0:\n        return x\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        for i in range(x, y + 1):\n            if i % 2 == 0:\n                if i >= x:\n                    return i\n\n    else:\n        for i in range(y, x - 1, -1):\n            if i % 2 == 0:\n                if i <= y:\n                    return i\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    x = int(x)\n    y = int(y)\n\n    if x >= y:\n        return -1\n    if x % 2 == 0 and y % 2 == 0:\n        if x - y <= 0:\n            return -1\n        return x - y\n    if x % 2 == 0 and y % 2 == 1:\n        if x - y <= 1:\n            return -1\n        return x - y\n    if x % 2 == 1 and y % 2 == 0:\n        if y - x <= 1:\n            return -1\n        return y - x\n\nx = int(input())\ny = int(input())", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        x, y = y, x\n    if not y % 2:\n        return y - x\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y:\n        print(\"The first number is bigger, so it's the upper limit\")\n        return choose_num(x, y+1)\n\n    if x == y:\n        print(\"There is no even number in the range\")\n        return -1\n\n    if x%2 == 0:\n        return x\n\n    if x%2!= 0:\n        return choose_num(x+1, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def helper(x, y):\n        m = max(x, y)\n        if m % 2 == 0:\n            return max(x, y)\n        if x % 2 == 0:\n            return helper(m + 2, y)\n        else:\n            return helper(x, m + 2)\n    return helper(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import math\n    if x <= 2:\n        return 2\n    if y <= 2:\n        return 2\n    if x == y or x % 2!= 0 or y % 2!= 0:\n        return -1\n    if x - y == 1:\n        return x + 2\n    if x - y == 2:\n        return x + 2\n    m = min(x, y)\n    n = max(x, y)\n    if n - m == 2:\n        return n + 2\n    if x - y == 3:\n        return n + 2\n    if x - y == 4:\n        return n + 2\n    if x - y == 5:\n        return n + 2\n    if x - y == 6:\n        return n + 2\n    if x - y == 7:\n        return n + 2\n    if x - y == 8:\n        return n + 2\n    if x - y == 9:\n        return n + 2\n    if x - y == 10:\n        return n + 2\n    if x - y == 11:\n        return n + 2\n    if x - y == 12:\n        return n + 2\n    if x - y == 13:\n        return n + 2\n    if x - y == 14:\n        return n + 2\n    if x - y == 15:\n        return n + 2\n    if x - y == 16:", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    while True:\n        try:\n            m = int((x - y) / 2)\n            if m % 2 == 0:\n                if m <= y:\n                    return m\n        except:\n            return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def get_biggest_integer(x, y):\n        \"\"\"This function takes two positive numbers x and y and returns the\n        biggest even integer number that is in the range [x, y] inclusive. \n        If there's no such number, then the function should return -1.\n\n        For example:\n        get_biggest_integer(12, 15) = 14\n        get_biggest_integer(13, 12) = -1\n        \"\"\"\n        if x > y:\n            return -1\n        else:\n            if x % 2!= 0:\n                return get_biggest_integer(x - 1, y)\n            else:\n                return get_biggest_integer(x, y - 1)\n\n    return get_biggest_integer(x, y)</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if y - x < 0:\n        return -1\n\n    if x % 2 == 0:\n        x = (x // 2) + 1\n    else:\n        x = (x // 2)\n\n    if y % 2 == 0:\n        y = (y // 2) + 1\n    else:\n        y = (y // 2)\n\n    while x <= y:\n        if x % 2 == 0:\n            x = (x // 2) + 1\n        else:\n            x = (x // 2)\n\n        if y % 2 == 0:\n            y = (y // 2) + 1\n        else:\n            y = (y // 2)\n\n    return max(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        n = int(input('What is the number you want to choose? '))\n        if n >= x and n <= y:\n            break\n    if n % 2 == 0:\n        return n\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y:\n        return x + 2 * ((y - x) / 2)\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(x, y-1)\n    elif x > y:\n        return choose_num(x+1, y)\n    else:\n        return x if x%2==0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if x > y:\n        return -1\n    elif x == y:\n        return x\n    else:\n        if x % 2 == 0 and y % 2 == 0:\n            return x\n        elif x % 2 == 0 and y % 2 == 1:\n            return y\n        elif x % 2 == 1 and y % 2 == 0:\n            return x + 1\n        elif x % 2 == 1 and y % 2 == 1:\n            return x + 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    max_num = min(x, y)\n\n    while max_num % 2!= 0:\n        if x > y:\n            max_num -= 1\n        else:\n            max_num += 1\n\n    return max_num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import itertools\n    n = [int(n) for n in str(y)]\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] == 0:\n            n.insert(i, 2)\n        else:\n            n[i] -= 2\n    for i in itertools.count(1):\n        if x <= sum(n):\n            return sum(n)\n        else:\n            n[-1] += 2\n            n.append(0)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return choose_num(x, y-1)\n    elif y >= x:\n        return choose_num(x-1, y-1)\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # your code here", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n\n    if x % 2 == 0:\n        if y % 2 == 0:\n            return x + y\n        else:\n            return y\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def _check(number):\n        if number%2!= 0 and number <= y:\n            return False\n        elif number > y and number%2 == 0:\n            return False\n        else:\n            return True\n\n    if x < y:\n        return _check(int((x + y)/2))\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    def ans(x, y):\n        i = 1\n        while i <= x or i <= y:\n            if i <= x and i % 2 == 0:\n                return i\n            elif i <= y:\n                return -1\n            i += 1\n    return ans(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(y, x)\n    if x == y:\n        return x\n    if x % 2!= 0:\n        return -1\n    if x > y:\n        return -1\n\n    mid = x // 2\n    return choose_num(mid, mid + 1)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Write your code here\n    x = int(x)\n    y = int(y)\n    if y < x:\n        return -1\n    if y - x == 1:\n        return y\n    if y - x > 1:\n        even_number = y - x\n        if even_number % 2 == 0:\n            return (y - even_number - 1)\n        else:\n            return (y - even_number - 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    for i in range(x, y + 1):\n        if i % 2 == 0:\n            if i > y:\n                return -1\n            return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    while True:\n        if x > y:\n            return y\n        if x % 2 == 0:\n            if y % 2 == 0:\n                return x\n            return -1\n        if y % 2 == 0:\n            return -1\n        y = y - 1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return max(range(x, y), key = lambda x: (x % 2) == 0)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    def get_all_evens(a, b):\n        \"\"\"Returns a list of all even numbers from a to b inclusive.\"\"\"\n        evens = []\n        while a <= b:\n            evens.append(a)\n            a += 2\n        return evens\n    \n    def check_if_any_evens_in_range(x, y):\n        \"\"\"Returns True if there is an even number in the range [x, y], \n        and False otherwise.\"\"\"\n        return check_if_num_in_range(get_all_evens(x, y), x, y)\n    \n    if check_if_num_in_range(get_all_evens(x, y), x, y):\n        return max(get_all_evens(x, y))\n        \n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return -1\n    elif x == y:\n        return x\n    elif x % 2 == 0:\n        if y % 2 == 0:\n            return max(x, y)\n        else:\n            return -1\n    elif x % 2!= 0 and y % 2!= 0:\n        if x % 4 == 0:\n            if y % 4 == 0:\n                return max(x, y)\n            elif y % 4 == 2:\n                return x\n        else:\n            if y % 4 == 2:\n                return y\n            else:\n                return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    if y % 2 == 0:\n        return y\n    if y % 4 == 0:\n        return y + 2\n    if y % 8 == 0:\n        return y + 4\n    if y % 16 == 0:\n        return y + 6\n    if y % 32 == 0:\n        return y + 8\n    if y % 64 == 0:\n        return y + 10\n    if y % 128 == 0:\n        return y + 12\n    if y % 256 == 0:\n        return y + 14\n    if y % 512 == 0:\n        return y + 16\n    if y % 1024 == 0:\n        return y + 18\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return choose_num(y, x) if x%2 == 0 else -1\n    else:\n        return choose_num(x, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y:\n        mid = (x + y) / 2\n        if mid % 2 == 0:\n            return choose_num(mid, y)\n        else:\n            return choose_num(x, mid - 1)\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        try:\n            n = (int(input(\"Enter the biggest even integer number: \")))\n            if n >= x and n <= y:\n                return n\n            else:\n                print(\"ERROR: The number is outside the range.\")\n        except ValueError:\n            print(\"ERROR: Please enter a valid number.\")", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while x >= y:\n        x -= 2\n        y -= 2\n    return x if x % 2 == 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x <= y and x % 2!= 0:\n        x = (x + x + 1) // 2\n        if x <= y:\n            return x\n    elif x <= y:\n        return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    try:\n        return max(2 * i for i in range(x, y + 1) if i % 2 == 0)\n    except:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n\n    if y % x == 0:\n        return y\n\n    if x % y == 0:\n        return x\n\n    if y % x < x % y:\n        return choose_num(x, y - x)\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    max_num = min(x, y)\n    for n in range(2, max_num + 1):\n        if n % 2 == 0:\n            if n >= x:\n                return n\n            if n <= y:\n                return n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    while True:\n        try:\n            if x % 2 == 0:\n                if y % 2 == 0:\n                    return x\n                else:\n                    return y\n            if y % 2 == 0:\n                return x\n            if x % 2!= 0:\n                if y % 2!= 0:\n                    return x\n                else:\n                    return y\n        except ValueError:\n            if x % 2 == 0:\n                return -1\n            if y % 2 == 0:\n                return x\n            if x % 2!= 0:\n                if y % 2!= 0:\n                    return -1\n                else:\n                    return x\n\nnumber1 = int(input())\nnumber2 = int(input())\n\nnumber = choose_num(number1, number2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if x == y:\n        return x\n    if x % 2!= 0:\n        return -1\n    i = 1\n    while i < y:\n        if y % 2 == 0:\n            i += 2\n        else:\n            i += 1\n    return i\n\nnumber = int(input())\nwhile number!= -1:\n    if number == 0:\n        break\n    if number > 0:\n        if number % 2 == 0:\n            number += 2\n        else:\n            number += 1\n    number = choose_num(number - 1, number - 2)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if x % 2 == 0:\n        if y % 2 == 0:\n            ans = int(x / 2)\n        else:\n            ans = x / 2\n    else:\n        if y % 2 == 0:\n            ans = x / 2\n        else:\n            ans = x / 2 + 1\n    return ans", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    num = int(x) + int(y) - 1\n    while num % 2!= 0:\n        num += 1\n    if num <= x or num >= y:\n        return -1\n    else:\n        return num", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    max_even = max(x, y)/2\n\n    if max_even%2 == 0:\n        return max_even\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    if x < y:\n        return -1\n    if (x + y) % 2 == 0:\n        return x\n    if (x + y) % 2!= 0:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return -1\n\n    for i in range(x, y + 1):\n        if i % 2 == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # TODO: Implement this function\n    # Hint: Use range() to find all even integers in the range [x, y]\n    # Hint: Modulo operator (%) is useful in determining whether a number is \n    # even or odd\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x % 2!= 0:\n        x += 1\n    if y % 2!= 0:\n        y -= 1\n    if x < y:\n        return -1\n    if x > y:\n        return choose_num(y, x)\n    mid = (x + y) // 2\n    if mid % 2 == 0:\n        return mid\n    else:\n        return choose_num(mid - 1, mid + 1) or -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # You should implement this function", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return int(x + y) if (x + y) % 2 == 0 else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if (x <= y):\n        diff = y - x\n        if diff % 2 == 0:\n            return diff\n        else:\n            return -1\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    a = x\n    b = y\n    i = 0\n    while (b - a) > 2:\n        if (a % 2) == 0 and (b % 2) == 0:\n            return a\n        elif (a % 2) == 1:\n            a += 1\n        else:\n            b -= 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    # Base case\n    if x <= y:\n        return x\n\n    # Recursive case\n    if x % 2!= 0:\n        # If x is odd, then the only even number in the range [x, y] is x.\n        if y % 2!= 0:\n            return x\n        else:\n            # Otherwise, y is also odd and we need to check the range [x, y-1]\n            return choose_num(x, y - 1)\n\n    # If x is even, then we know that x/2 is in the range [x/2, y].\n    return choose_num(x / 2, y)", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x == y:\n        return x\n    if x % 2 == 0:\n        return (x - y) // 2\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    n = int((x - y)/2) + 1\n    while n <= y:\n        if n % 2 == 0:\n            return n\n        n += 1\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Implement your code here\n    if x == y:\n        return x\n    if x % 2 == 0 and y % 2 == 0:\n        return x + y\n    elif x % 2 == 0 and y % 2!= 0:\n        return x\n    elif x % 2!= 0 and y % 2 == 0:\n        return y\n    else:\n        return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    import math\n    if x >= y:\n        return -1\n    # The lowest number in the range [x, y] is x - (y - x)\n    low = int(math.ceil(x - (y - x)))\n    # The highest number in the range [x, y] is y + (x - y)\n    high = int(math.floor(y + (x - y)))\n    # If there are only even integers between low and high, then there's\n    # no number in the range [x, y] that is even.\n    if not any(x % 2 == 0 and x >= low and x <= high for x in range(low, high)):\n        return -1\n    # Otherwise, we need to find the largest even integer number in the range\n    # [x, y], and we can do that by sorting the numbers and finding the first\n    # even integer number in the sorted list.\n    numbers = sorted(range(low, high))\n    return numbers[0]\n</s>", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n\n    def even_range(low, high):\n        \"\"\"Returns an even number between low and high\"\"\"\n\n        count = 0\n        while count < 10:\n            count += 1\n            number = low + (count * 2)\n            if number >= high:\n                break\n            elif number % 2 == 0:\n                return number\n\n    # Get the biggest even number from the range\n    return max(even_range(x, y), even_range(y + 1, x + 1))", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    # Write your code here\n    if y > x:\n        x = y\n    while x < y:\n        if x % 2 == 0:\n            x = x + 2\n        else:\n            x = x + 1\n    if x < y:\n        return -1\n    else:\n        return x", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x > y:\n        return choose_num(y, x)\n    elif x == y:\n        return x\n    else:\n        for i in range(x, y + 1):\n            if i % 2 == 0:\n                return i", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x >= y:\n        return -1\n    if x % 2 == 0:\n        return x\n    for i in range(x, y + 1, 2):\n        if i % 2 == 0:\n            return i\n    return -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    if x < y:\n        return -1\n    else:\n        num = 0\n        while num <= y:\n            if num % 2 == 0:\n                if num >= x:\n                    return num\n                num += 2", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    return x + ((y-x) // 2) * 2 if x < y else -1", "def choose_num(x, y):\n    \"\"\"This function takes two positive numbers x and y and returns the\n    biggest even integer number that is in the range [x, y] inclusive. If \n    there's no such number, then the function should return -1.\n\n    For example:\n    choose_num(12, 15) = 14\n    choose_num(13, 12) = -1\n    \"\"\"\n    range_start = min(x, y)\n    range_end = max(x, y)\n    if (x % 2 == 0 and y % 2 == 0):\n        range_end += 1\n    else:\n        range_end += 2\n    return max(range_start, range_end)"]]