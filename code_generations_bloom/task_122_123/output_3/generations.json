[["def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write code here\n    def two_digit_sum(num):\n        return (num % 100) + (num // 100)\n\n    return sum(two_digit_sum(num) for num in arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def add_element(arr, k):\n        if k == 0:\n            return 0\n        if len(arr[k]) <= 2:\n            return arr[k]\n        return arr[k] + add_element(arr, k - 1)\n\n    return add_element(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    digits = arr[:k]\n    total = 0\n    for i in range(len(digits)):\n        total += digits[i]\n        if len(str(digits[i])) > 1:\n            total += digits[i + 1]\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k < 0:\n        return 0\n    if len(arr) <= k:\n        return 0\n    nums = [int(i) for i in arr[:k]]\n    return sum(nums) + add_elements(arr, k - len(nums))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    result = 0\n    for i in range(len(arr) - k + 1):\n        if len(str(arr[i])) <= 2:\n            result += arr[i]\n\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def get_two_digit_sum(arr, start, end):\n        \"\"\"\n        :type arr: List[int]\n        :type start: int\n        :type end: int\n        :rtype: int\n        \"\"\"\n        if end - start <= 1:\n            return arr[start]\n\n        return arr[start] + arr[end - 1]\n\n    return sum(get_two_digit_sum(arr, i, i + k - 1) for i in range(len(arr) - k))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def is_two_digit(num):\n        return num > 0 and num < 100\n\n    def two_digit(num):\n        if is_two_digit(num):\n            return num\n        return num // 10 * 10 + num % 10\n\n    def sum_two_digit(num, i):\n        if i >= len(arr) or not is_two_digit(arr[i]):\n            return 0\n        return num + two_digit(arr[i])\n\n    num = sum_two_digit(0, k)\n    for i in range(k, len(arr)):\n        num = sum_two_digit(num, i)\n    return num", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    import copy\n    arr = copy.deepcopy(arr)\n    while len(arr) <= k:\n        arr.append(0)\n\n    sum1 = 0\n    sum2 = 0\n    for x in arr:\n        if len(str(x)) <= 2:\n            sum1 += x\n            sum2 += x\n        elif len(str(x)) > 2:\n            if len(str(x)) == 3:\n                sum2 += x\n                sum1 += int(str(x)[0])\n            else:\n                sum2 += x\n                sum1 += int(str(x)[0])\n                sum1 += int(str(x)[1])\n\n    return sum1 + sum2", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not (1 <= len(arr) <= 100 and 1 <= k <= len(arr)):\n        raise Exception(\"k and arr should be integers with 1 <= k <= len(arr) and 1 <= len(arr) <= 100\")\n    i = 0\n    while i < k:\n        el = arr[i]\n        if len(str(el)) == 1:\n            arr[i] = el * 10\n        else:\n            arr[i] = el\n        i += 1\n    return sum(el for el in arr[:k] if len(str(el)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    #@author: Chauncey\n    # @date: 2016.6.14\n    # @description:  \u6570\u5b57\u4ee50-9\u5f00\u5934\uff0c\u4e0d\u8d85\u8fc7\u4e24\u4f4d\u6570\n    #    \u5143\u7d20\u4e3a 1 <= a[i] <= 100\n    #    k <= a.length\n\n    #    \u5143\u7d20\u4e3a 1 <= a[i] <= 100\n    #    k <= a.length\n    #    \u6570\u5b57\u4ee50-9\u5f00\u5934\uff0c\u4e0d\u8d85\u8fc7\u4e24\u4f4d\u6570\n\n    if not arr or not k:\n        return 0\n    res = 0\n    for i in range(len(arr)-k+1):\n        res += arr[i+k]\n        if len(str(res)) > 2:\n            break\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k == 1:\n        return arr[0]\n    result = 0\n    for i in range(1, k):\n        result += arr[i]\n    for i in range(k + 1, len(arr)):\n        result += sum(map(int, str(arr[i]).split(''))[0:2])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # count the number of integers with at most 2 digits\n    counter = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            counter += 1\n\n    # initialize a new array with counter elements\n    sum_list = []\n    for i in range(counter):\n        sum_list.append(0)\n\n    # iterate over the original array and increment the appropriate element in the new array\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            sum_list[arr[i]] += 1\n\n    # sum up the elements in the new array\n    return sum(sum_list)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write code here\n    # An efficient solution is to use 2 for-loops\n    if k > len(arr):\n        return 0\n    total = 0\n    for i in arr:\n        if i >= 100:\n            total += i\n        else:\n            total += i%100\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    result = 0\n\n    for i in range(1, k + 1):\n        if len(str(arr[i])) <= 2:\n            result += int(arr[i])\n\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = sorted(arr)\n    total = 0\n    for i in range(len(arr)):\n        if i > k - 2:\n            break\n        total += arr[i]\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # write your code here\n    cnt = 0\n    ans = 0\n    for num in arr[k:]:\n        cnt += 1\n        if len(num) <= 2:\n            ans += num\n\n    return ans + cnt", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    while k > 0:\n        sum += arr[k-1]\n        k -= 1\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    res = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            res += arr[i]\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    sum1 = 0\n    sum2 = 0\n    for i in range(1, k + 1):\n        sum1 += int(arr[i])\n    for i in range(k + 1, len(arr)):\n        sum2 += int(arr[i])\n    return sum1 + sum2", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def helper(arr, cur, k):\n        if cur == len(arr):\n            return arr[cur-1] + arr[0]\n        if cur < k:\n            return 0\n        if cur >= k and arr[cur-1] <= 9:\n            return arr[cur-1]\n        return 0\n    return helper(arr, 0, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def digit_sum(arr):\n        sum = 0\n        for i in arr:\n            sum += int(i)\n        return sum\n\n    def add_two_digits(arr):\n        result = []\n        for i in arr:\n            if len(i) <= 2:\n                result.append(i)\n            else:\n                result.append(0)\n        return result\n\n    def convert(arr):\n        if len(arr) <= 2:\n            return arr\n        result = []\n        for i in arr:\n            temp = i[:2]\n            result.append(temp)\n        return result\n\n    return digit_sum(convert(arr[:k]))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def sum_with_n(arr, n):\n        if len(arr) < n:\n            return 0\n        res = 0\n        for i in range(len(arr)):\n            if len(str(arr[i])) <= 2:\n                res += arr[i]\n        return res\n\n    return sum_with_n(arr[:k], 2) + sum_with_n(arr[:k], 1)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum_ = 0\n    for i in range(0, k):\n        num = int(arr[i])\n        if num <= 99:\n            sum_ += num\n        else:\n            sum_ += num / 100\n            sum_ += num % 100\n\n    return sum_", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def _helper(arr, k):\n        new_arr = arr[:]\n        new_arr.sort()\n        return sum(x for x in new_arr[:k] if len(str(x)) <= 2)\n\n    return _helper(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def sum_without_last_digit(arr, k):\n        \"\"\"\n        Given an arr and k, return sum of the first k elements of arr\n        without the last digit of each number.\n\n        Example:\n            Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n            Output: 25\n        \"\"\"\n        return sum(arr[i:i + 1] for i in range(len(arr) - k + 1))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = sorted(arr)\n    for i in range(k-1, -1, -1):\n        if arr[i] > 100:\n            return arr[i] + add_elements(arr, i)\n    return sum(arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if len(arr) <= k:\n        return sum(arr[:k])\n    new_arr = [None] * k\n    for i in range(len(arr)):\n        if len(arr[i]) <= 2:\n            new_arr[i] = int(arr[i])\n        else:\n            new_arr[i] = arr[i]\n    return sum(new_arr)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # https://leetcode.com/explore/challenge/card/june-leetcoding-challenge-194/week-2-june-11th-june-18th/333/\n\n    return sum(num for num in arr[:k] if len(str(num)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    l = 0\n    for i in arr:\n        if len(str(i)) <= 2:\n            l += i\n\n    return l", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k < 1:\n        return 0\n    if len(arr) < k:\n        return 0\n    return sum([x for x in arr[:k] if len(str(x)) <= 2])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Note that the sum is calculated in reverse order.\n    # This is because we are using a list instead of a dictionary.\n    # We would use a dictionary if we wanted the sum to be in ascending order\n    # from the smallest to the largest.\n    res = 0\n    for i in range(k, len(arr)):\n        if len(str(arr[i])) == 1:\n            res += arr[i]\n        elif len(str(arr[i])) == 2:\n            res += int(str(arr[i])[:1]) * 10 + int(str(arr[i])[1:])\n\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k < 1:\n        return None\n\n    def sum_two_digits(i):\n        return i // 10 + i % 10\n\n    return sum(sum_two_digits(a) for a in arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    import copy\n    if len(arr) == 0:\n        return 0\n    if len(arr) < k:\n        return 0\n    res = 0\n    if len(arr) == k:\n        return arr[0]\n    copy_arr = list(arr)\n    for i in range(k):\n        copy_arr.pop(0)\n    for i in range(len(copy_arr)):\n        tmp = str(copy_arr[i])\n        if len(tmp) == 1:\n            res += int(tmp)\n        elif len(tmp) == 2:\n            res += int(tmp)\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # Write your code here\n    return sum([arr[i] for i in range(len(arr)-k) if len(str(arr[i])) <= 2])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    n = len(arr)\n    l = len(str(max(arr)))\n    if n - 1 < k:\n        return 0\n\n    s = 0\n    for i in range(k):\n        s += int(str(arr[i])[:l])\n    return s", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    if len(arr) < k:\n        return 0\n    cnt = 0\n    for i in arr[0:k]:\n        if i > 100:\n            break\n        if len(str(i)) <= 2:\n            cnt += i\n    return cnt", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            sum += arr[i]\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k <= 0:\n        return 0\n    sum = 0\n    for i in arr[:k]:\n        if len(str(i)) == 1:\n            sum += i\n        if len(str(i)) == 2:\n            sum += i\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] < 100:\n            arr[i] = str(arr[i])\n\n    return sum([int(x[:2]) for x in arr[0:k]]) + sum([int(x[2:4]) for x in arr[0:k]])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    assert len(arr) > 0\n    assert k >= 0\n    arr = list(map(int, arr))\n    if len(arr) < k:\n        return 0\n    # if arr contains only 1-digit numbers, return it\n    if all(i < 10 for i in arr):\n        return sum(arr)\n    # get the sum of all the numbers\n    return sum(map(int, arr[:k])) + sum(map(int, arr[-k:]))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    n = len(arr)\n    for i in range(0, n):\n        if arr[i] > 9 and i < k:\n            return sum(map(int, str(arr[i]) + str(arr[i+1])))\n    return sum(arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k <= 0:\n        return 0\n\n    cnt = 0\n    for n in arr[:k]:\n        if n > 9999999:\n            cnt += n\n        else:\n            cnt += n % 10\n            cnt += (n // 10) * 10\n\n    return cnt", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    nums = []\n    for _ in range(k):\n        nums.append(arr[_])\n\n    total = 0\n    for _ in nums:\n        if len(_) > 1:\n            total += _\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write code here", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    import copy\n    res = 0\n    if len(arr) < k:\n        return 0\n    copy_arr = arr[:k]\n    for i in range(len(arr)):\n        if len(str(arr[i])) > 1:\n            res += arr[i]\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def process(a, k):\n        if len(a) <= k:\n            return 0\n        if k > len(a) - 1:\n            return 0\n        return int(a[int(k / 10)]) * 10 + int(a[int(k % 10)])\n\n    return sum(process(arr[i], i) for i in range(len(arr))[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    count = 1\n    for i in range(k):\n        num = int(arr[i])\n        if num > 9:\n            sum += num\n            count += 1\n        else:\n            if count == 1:\n                sum += num\n                count += 1\n            else:\n                sum += num - count\n                count = 1\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = arr[:k]\n    sum = 0\n    for i in arr:\n        if i < 10:\n            sum += i\n        elif i >= 10:\n            sum += int(i[:2])\n            sum += int(i[2:])\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k == 0:\n        return 0\n    res = 0\n    for i in range(k, len(arr)):\n        if len(str(arr[i])) < 2:\n            continue\n        if len(str(arr[i])) == 2:\n            res += int(str(arr[i]))\n        elif len(str(arr[i])) > 2:\n            res += int(str(arr[i][:-2]))\n        else:\n            print(\"Invalid element, Please check and try again\")\n            return\n    return res\n\nfor i in range(int(input())):\n    arr = [int(x) for x in input().split()]\n    k = int(input())\n    print(add_elements(arr, k))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    res = 0\n    for _ in range(k):\n        num = arr[_]\n        res += int(num[:2])\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def __add(arr, k):\n        m = min(k, len(arr))\n        return sum(arr[:m])\n\n    return __add(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    total = 0\n    for i in range(1, k + 1):\n        total += arr[i]\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    arr = sorted(arr)\n    result = 0\n    for i in range(k):\n        result += int(arr[i])\n    for i in range(len(arr) - 1, k + 1, -1):\n        if len(str(arr[i])) == 1:\n            result += int(arr[i])\n        if len(str(arr[i])) == 2:\n            result += int(arr[i])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def add_two_digit(arr, k):\n        for i in range(k):\n            if arr[i] > 100:\n                return arr[i]\n        return sum(arr[:k])\n\n    def add_one_digit(arr, k):\n        for i in range(k):\n            if arr[i] > 20:\n                return arr[i]\n        return sum(arr[:k])\n\n    result = 0\n    for i in range(len(arr)):\n        if arr[i] > 100:\n            result += arr[i]\n            continue\n        if arr[i] > 20:\n            result += add_two_digit(arr, i)\n            continue\n        result += add_one_digit(arr, i)\n    return result\n\n\narr = [111,21,3,4000,5,6,7,8,9]\nk = 4", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    sum_list = []\n    sum_list.append(arr[0])\n    for i in range(1, k):\n        sum_list.append(arr[i])\n        if len(str(arr[i])) == 1:\n            sum_list.append('0' + str(arr[i]))\n\n    for i in range(1, k):\n        if arr[i]!= sum_list[i - 1]:\n            sum_list.append(arr[i])\n            if len(str(arr[i])) == 1:\n                sum_list.append('0' + str(arr[i]))\n\n    return sum(sum_list) + arr[k + 1]", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Write your code here\n    if k > len(arr):\n        return 0\n    res = 0\n    for i in range(0,k):\n        res += arr[i]\n    for i in range(k+1,len(arr)):\n        if len(str(arr[i])) <= 2:\n            res += arr[i]\n    return res\n\narr = [111,21,3,4000,5,6,7,8,9]\nk = 4", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # This is a problem from codeforces Round #312 (Div. 1)\n    # https://www.codeforces.com/problemset/problem/1312/\n    # Accepted Time Limit Exceeded: 1ms\n    # Accepted Memory Limit Exceeded: 36KB\n\n    # Using the fact that there are 100k numbers with two digits\n    # and there are 10k numbers with three digits.\n    # The number of numbers with two digits is 100k - 10k = 90k\n    # The number of numbers with three digits is 10k\n    # The number of numbers with at most two digits is the total number\n    # of numbers minus the number of numbers with three digits.\n    # Sum(10k + 90k) = 10k + 100k - 10k\n    # sum = 10k + 90k = 100k\n    # So, there are 100k numbers with at most two digits\n    n = 100\n    sum = n * (n - 1) / 2\n    for e in arr[:k]:\n        sum += n - int(e) + 1\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return reduce(lambda a, b: a + b, [int(x) for x in str(arr[0]).split(',') if len(x) <= 2] + [int(x) for x in str(arr[1]).split(',') if len(x) <= 2] + [int(x) for x in str(arr[2]).split(',') if len(x) <= 2])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(1 for x in arr[:k] if len(str(x)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    new_arr = []\n    for i in arr:\n        if len(str(i)) <= 2:\n            new_arr.append(i)\n    return sum(new_arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    sum = 0\n    for i in range(k):\n        sum += int(arr[i][:2])\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def sum_of_elements(arr, k):\n        \"\"\"\n        :type arr: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        return sum(num for num in arr[:k] if num > 0)\n\n    return sum_of_elements(arr, k) + sum_of_elements(arr[k:], k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    k = min(len(arr), k)\n\n    num = sum(num * 10 ** (i - 1) for i, num in enumerate(arr))\n    res = num * 10 ** k - num * 10 ** (k - 1)\n\n    if k == 2:\n        return res\n\n    return sum(add_elements(arr[-k:], k - 2) for _ in range(k - 2)) + res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(k):\n        sum += arr[i]\n    for i in range(k + 1, len(arr)):\n        sum += (int(arr[i] / 10) * 10) + arr[i] % 10\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr.sort()\n    res = 0\n    for i in range(len(arr)):\n        if i <= k - 2:\n            res += arr[i]\n        else:\n            break\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum([int(el[:2]) for el in arr[:k]])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = arr[0:k]\n    sum = 0\n    for element in arr:\n        if len(str(element)) <= 2:\n            sum += int(element)\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if len(arr) < k:\n        return 0\n    l = len(arr)\n    if l <= k:\n        return sum(arr)\n    else:\n        arr = arr[:k]\n        ans = 0\n        for i in range(l):\n            ans += sum(arr[i])\n        return ans", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(num for num in arr[:k] if len(str(num)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k > len(arr):\n        return 0\n    res = 0\n    for i in range(k):\n        if len(str(arr[i])) == 1:\n            res += arr[i]\n            continue\n        if len(str(arr[i])) == 2:\n            res += arr[i]\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = [int(i) for i in arr]\n    result = 0\n    count = 0\n    while count < k:\n        if len(str(arr[count])) <= 2:\n            result += arr[count]\n            count += 1\n        else:\n            break\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    nums = arr[:k]\n    nums_len = len(nums)\n    arr_len = len(arr)\n    result = 0\n    for i in range(0, nums_len):\n        if nums[i] < 100:\n            result += nums[i]\n        else:\n            if nums[i] % 10 > 0:\n                nums_len -= 1\n            result += nums[i] % 10\n    if nums_len > 0 and nums[nums_len - 1] % 10 > 0:\n        nums_len -= 1\n    for i in range(0, nums_len):\n        result += nums[i]\n    result += nums[nums_len - 1]\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def sum_of_elements(arr, k):\n        \"\"\"\n        Helper function to sum the elements of arr[0:k].\n        \"\"\"\n        return sum(arr[0:k])\n\n    arr = list(map(int, arr))\n    length = len(arr)\n\n    sum = 0\n    for i in range(length):\n        if i + 1 == k:\n            return sum_of_elements(arr, k)\n        sum += arr[i]\n        length -= 1\n        if length <= 0:\n            return sum_of_elements(arr, k) + sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    n = len(arr)\n    digits = [int(i) for i in str(arr[0])]\n    sum = 0\n    for i in range(1, k):\n        sum += digits[0]\n        digits.append(int(arr[i]))\n        digits[0] = 0\n        if len(digits) == 1:\n            digits.pop(0)\n        else:\n            digits[0] += digits[1]\n            digits.pop(1)\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = arr[:k]\n    return sum(int(c) for c in arr if len(c) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    return sum(arr[k:k+2] for k in range(len(arr)-k-1))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    k = len(arr) - 1 - k\n    ans = 0\n    if k < 0:\n        return 0\n    for i in arr[0:k]:\n        ans += i\n    arr = list(map(int, arr))\n    for i in arr[0:k]:\n        ans += i\n        if len(str(i)) == 2:\n            ans += i\n    return ans", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not arr or len(arr) < k or k < 1:\n        return 0\n    i = 0\n    result = 0\n    while i < k and len(str(arr[i])) <= 2:\n        result += arr[i]\n        i += 1\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    res = 0\n    for i in range(k):\n        res += arr[i]\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # edge case\n    if not arr:\n        return 0\n\n    # backtracking approach\n    s = 0\n    for i in range(k):\n        s += arr[i]\n        if s > 9:\n            break\n    s += sum([arr[i] for i in range(k, len(arr)) if str(arr[i])[:2] == str(s)[:2]])\n    return s", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum_ = 0\n    for i in range(k):\n        sum_ += int(arr[i])\n    return sum_", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def try_sum(elements, sum):\n        if sum == 0:\n            return sum\n\n        for i in range(len(elements)):\n            elements[i] = int(elements[i])\n            sum -= elements[i]\n            if sum < 0:\n                return sum\n\n        if sum < 0:\n            return sum\n\n        return try_sum(elements, sum)\n\n    nums = []\n    for _ in range(k):\n        nums.append(arr.pop(0))\n\n    return try_sum(nums, 0)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def sum_two_digits(arr):\n        sum = 0\n        for i in arr:\n            if i < 10:\n                sum += i\n            else:\n                sum += i / 10 + i % 10\n        return sum\n\n    if len(arr) == 0:\n        return 0\n    arr = arr[:k]\n    return sum_two_digits(arr) + add_elements(arr, k + 1)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(int(i) for i in arr[:k] if len(str(i)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    nums = []\n    for el in arr[:k]:\n        if len(str(el)) <= 2:\n            nums.append(el)\n    return sum(nums)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    import sys\n\n    arr = list(map(int, input().strip().split()))\n    k = int(input().strip())\n\n    def add_one(arr, k):\n        if len(arr) >= k:\n            arr[k] += 1\n            add_one(arr, k)\n        else:\n            for i in range(len(arr)):\n                if arr[i] < 100:\n                    arr[i] += 1\n                    add_one(arr, k)\n                    break\n\n    add_one(arr, k)\n\n    return sum(arr)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    result = 0\n    k = min(k, len(arr) - 1)\n    for i in range(0, k):\n        n = arr[i]\n        if n >= 1000:\n            result += n // 1000\n            n %= 1000\n            if n >= 100:\n                result += n // 100\n                n %= 100\n        if n >= 10:\n            result += n\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n    # DFS\n    # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #\n\n    def dfs(arr, k):\n        if len(arr) == 0:\n            return 0\n        if len(arr) == k:\n            return arr[-1]\n\n        res = 0\n\n        for i in range(len(arr)):\n            res += dfs(arr, k - 1) if arr[i] % 10 == 0 else arr[i]\n\n        return res\n\n    return dfs(arr, k)\n\n</s>", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Write your code here\n    len_arr = len(arr)\n    sum_arr = 0\n    for i in range(k-1):\n        sum_arr += int(arr[i]) * 10**len_arr - 1\n    return sum_arr", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def get_other_elements(arr, k):\n        return [int(x) for x in arr[:k]]\n\n    def sum_other_elements(arr, k):\n        return sum(get_other_elements(arr, k))\n\n    def sum_of_first_k_elements(arr, k):\n        return sum(arr[:k])\n\n    def sum_of_first_k_and_other_elements(arr, k):\n        return sum(arr[:k] + get_other_elements(arr, k))\n\n    return sum_of_first_k_and_other_elements(arr, k) + sum_of_first_k_elements(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write your code here\n    x = 0\n    while k > 0:\n        if len(arr[0]) > 2:\n            x += arr[0]\n        elif len(arr[0]) == 2:\n            x += int(arr[0])\n        k -= 1\n    for i in range(1,len(arr)):\n        if len(arr[i]) > 2:\n            x += arr[i]\n        elif len(arr[i]) == 2:\n            x += int(arr[i])\n    return x", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    digits = {}\n    for n in arr[:k]:\n        if n not in digits:\n            digits[n] = 0\n        digits[n] += 1\n    return sum(x * 10 ** y for x, y in digits.items())", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write code here\n\n    def add_one_digit(arr):\n        \"\"\"\n        Given a non-empty array of integers arr, return the sum of the elements with at most one digit from the first k elements of arr.\n\n        Example:\n            Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n            Output: 22 # sum of 3 + 5 + 6 + 7\n        \"\"\"\n        # write code here\n\n    def add_two_digit(arr):\n        \"\"\"\n        Given a non-empty array of integers arr, return the sum of the elements with at most two digits from the first k elements of arr.\n\n        Example:\n            Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n            Output: 24 # sum of 21 + 3\n        \"\"\"\n        # write code here\n\n    def main():\n        arr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\n        k = 4\n\n        print(add_one_digit(arr))\n        print(add_two_digit(arr))\n\n    main()\n</s>", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # memoizing is not allowed\n    def add_elements_iter(arr, k):\n        if k == 0:\n            return arr[0]\n\n        return sum(add_elements_iter(arr, j) for j in range(k))\n\n    # the solution's time complexity is O(n) so the extra space is O(n)\n    # but we have to save the result of the iterative loop for every k\n    # so we need a dynamic array\n    arr = arr[::-1]\n    for i in range(len(arr)):\n        arr[i] = str(int(arr[i]) if len(arr[i]) > 1 else 0)\n    return sum(int(s) for s in arr[:k]) + add_elements_iter(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if len(arr) < k:\n        return 0\n    res = 0\n    i = 0\n    while i < k:\n        res += arr[i]\n        i += 1\n    i = k\n    while i < len(arr):\n        res += int(arr[i]) * 10 ** (len(arr) - i - 1)\n        i += 1\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    num = 0\n    for i in range(0, k):\n        if len(str(arr[i])) <= 2:\n            num += int(arr[i])\n\n    return num", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(k):\n        if len(str(arr[i])) > 1:\n            sum += arr[i]\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = [int(i) for i in arr]\n    len_arr = len(arr)\n    result = 0\n    for i in range(0, k):\n        result += int(arr[i])\n        if len(str(arr[i])) > 1:\n            result += int(arr[i])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    ans = 0\n    for i in range(k):\n        ans += arr[i]\n\n    for i in range(k + 1, len(arr)):\n        if len(str(arr[i])) <= 2:\n            ans += arr[i]\n\n    return ans", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not arr:\n        return 0\n\n    cnt = 0\n    for _ in range(k):\n        cnt += int(arr[_])\n\n    for i in range(k, len(arr)):\n        cnt += int(arr[i]) * 2\n\n    return cnt", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    digits = [int(i) for i in str(arr[0])]\n    if len(digits) == 1:\n        return arr[0]\n    if k <= 0:\n        return 0\n    sum = 0\n    for i in range(len(arr)):\n        sum += digits[i] + add_elements(arr[i + 1:], k - 1)\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    i = 0\n    sum = 0\n    while i < k:\n        j = 0\n        while j < 2:\n            sum += int(arr[i])\n            i += 1\n            j += 1\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    result = 0\n    for _ in range(k):\n        num = arr[_]\n        if len(str(num)) > 2:\n            num = num / 10\n        result += num\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    assert k <= len(arr)\n    length = len(arr)\n    start = 0\n    sum = 0\n    while start < length:\n        if arr[start] < 100:\n            sum += arr[start]\n        else:\n            start += 1\n    return sum + add_elements(arr[start:start+k], 2) + add_elements(arr[start+k:length], 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(x for x in arr[:k] if len(str(x)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if arr is None or len(arr) == 0 or k is None or len(arr) < k:\n        return 0\n\n    sum = 0\n    for i in range(k):\n        sum += int(arr[i]) if len(str(int(arr[i]))) <= 2 else 0\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = arr[:k]\n    nums = []\n    for i in range(1, 10):\n        for j in range(1, 10):\n            nums.append(i * j)\n\n    nums = [str(x) for x in nums]\n\n    # 1 * 2\n    # 2 * 1\n    # 3 * 1\n    # 4 * 1\n    # 5 * 1\n    # 6 * 1\n    # 7 * 1\n    # 8 * 1\n    # 9 * 1\n    # 10 * 1\n    # 10 * 2\n    # 10 * 3\n    # 10 * 4\n    # 10 * 5\n    # 10 * 6\n    # 10 * 7\n    # 10 * 8\n    # 10 * 9\n    # 11 * 1\n    # 11 * 2\n    # 12 * 1\n    # 13 * 1\n    # 14 * 1\n    # 15 * 1\n    # 16 * 1\n    # 17 * 1\n    # 18 * 1\n    # 19 * 1\n    # 20 * 1\n    # 20 * 2\n    # 20 * 3\n    # 20 * 4\n    # 20 * 5\n    # 20 * 6\n    # 20 * 7\n    # 20 * 8\n    # 20 * 9\n    # 20 * 10\n    # 21 * 1\n    # 21 * 2", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum([e for e in arr[:k]] if len(e) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def helper(arr, k, sum):\n        \"\"\"Helper function to find the sum of elements with at most two digits from the first k elements of arr\"\"\"\n        for i in range(k):\n            if len(str(arr[i])) <= 2:\n                sum += arr[i]\n            if len(str(arr[i])) <= 2:\n                return helper(arr, i+1, sum)\n        return sum\n\n    return helper(arr, k, 0)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(k):\n        sum += int(arr[i]) if len(str(arr[i])) == 1 else int(arr[i]) + int(arr[i+1])\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    k = int(k)\n    total = 0\n    for index in range(k):\n        total += arr[index]\n    for index in range(k, len(arr)):\n        if len(str(arr[index])) <= 2:\n            total += arr[index]\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    result = 0\n    for i in range(k):\n        result += int(arr[i])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k < 0 or k > len(arr):\n        return 0\n    count = 0\n    for i in range(k):\n        x = arr[i]\n        if len(str(x)) == 1:\n            count += int(x)\n        elif len(str(x)) == 2:\n            count += int(x)\n        else:\n            continue\n    return count", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    n = len(arr)\n    sum = 0\n    if n > k:\n        return arr[n-k]\n    for i in arr[-k:]:\n        if i <= 99:\n            sum += i\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not arr: return 0\n    digits = [int(x) for x in arr[:k]]\n    return sum(x * 10**i for x, i in zip(digits, range(1, len(digits)+1)))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = sorted(arr)\n    s = 0\n    for i in arr[:k]:\n        while len(str(i)) < 3:\n            i += 0\n        s += i\n    return s", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    n, _ = len(arr), 0\n    while n < k:\n        arr.append(0)\n        n += 1\n\n    sums = 0\n    for i in range(1, k):\n        digit = int(str(arr[i])[-1])\n        arr[i] = arr[i] - digit\n        sums += digit\n    return sums", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    res = 0\n    for x in arr[:k]:\n        res += x\n\n    for x in arr[k:][0:2]:\n        res += x\n\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    if k <= 0:\n        return 0\n\n    if k > len(arr):\n        return arr[-1]\n\n    num = sum([a if a < 100 else a - 100 for a in arr[:k]])\n    return num if len(str(num)) <= 2 else 0", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    n = len(arr)\n    # print(n, k)\n    for i in range(n):\n        if arr[i] >= 100:\n            arr[i] = arr[i] / 10\n            arr[i] = arr[i] * 10\n        elif arr[i] >= 10:\n            arr[i] = arr[i] / 10\n            arr[i] = arr[i] * 10\n        else:\n            pass\n    res = 0\n    for i in range(n, k):\n        res += arr[i]\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, input().split()))\n    num = 0\n    for i in range(k):\n        num += arr[i]\n    for i in range(k, len(arr)):\n        num += int(arr[i]) * 10\n    return num", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def add(num):\n        # Remove the leading zeroes\n        while num[0] == '0':\n            num = num[1:]\n        if len(num) == 1:\n            return int(num)\n\n        # 1 + 9 = 9, 1 + 99 = 99, 1 + 999 = 999\n        if num[0] == '1':\n            return int(num) * 10 + int(num[1:])\n        else:\n            return int(num)\n\n    # Find the sum of all the single digit elements\n    n = 0\n    for i in range(len(arr)):\n        if len(arr[i]) == 1:\n            n += add(arr[i])\n\n    # Find the sum of all the double digit elements\n    m = 0\n    for i in range(len(arr)):\n        if len(arr[i]) == 2:\n            m += add(arr[i])\n\n    # Remove the first k elements\n    for i in range(k):\n        arr.pop(0)\n\n    # Add all the elements\n    return n + m", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = [int(i) for i in str(arr).split(',')]\n    print(arr)\n    res = 0\n    for i in range(k):\n        res += int(arr[i])\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    s = 0\n    for i in range(k):\n        s += int(arr[i])\n    return s", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(0, k):\n        sum += int(arr[i])\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(x for x in arr[:k] if len(str(x)) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    if k > len(arr):\n        return 0\n    s = 0\n    for i in range(k):\n        s += int(arr[i])\n    s += sum([1 if j <= 2 else 0 for j in arr[i+1:k]])\n\n    return s", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not (1 <= len(arr) <= 100):\n        raise ValueError(\"len(arr) must be between 1 and 100 inclusive.\")\n\n    if not (1 <= k <= len(arr)):\n        raise ValueError(\"k must be between 1 and len(arr) inclusive.\")\n\n    # dynamic programming\n    # create a two-dimensional table\n    res = [[0] * 10 for _ in range(10)]\n\n    for i in range(1, len(arr)):\n        s = arr[i]\n        # get the digits of s\n        digits = []\n        while s:\n            digits.append(s % 10)\n            s = s // 10\n        # get all sums of valid digits\n        for digit_1, digit_2 in itertools.combinations(digits, 2):\n            # first digit must be less than the number of digits\n            if digit_1 > len(digits) - 1:\n                break\n            digit_1 += 1\n            digit_2 += 1\n            # the last digit is 10\n            if digit_2 > 9:\n                digit_2 = 0\n            # the first digit can only be 0 or 1\n            if digit_1!= 0 and digit_1!= 1:\n                continue\n            for num in res[digit_1]:\n                res[digit_2][", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Write your code here\n    def sum_one_digit(arr, k):\n        \"\"\"\n        Helper function\n        :type arr: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        res = 0\n        for num in arr[:k]:\n            if len(str(num)) == 1:\n                res += num\n        return res\n\n    def sum_two_digit(arr, k):\n        \"\"\"\n        Helper function\n        :type arr: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        res = 0\n        for num in arr[:k]:\n            if len(str(num)) == 2:\n                res += num\n        return res\n\n    def sum_digit(arr, k):\n        \"\"\"\n        Helper function\n        :type arr: List[int]\n        :type k: int\n        :rtype: int\n        \"\"\"\n        res = 0\n        for num in arr[:k]:\n            if len(str(num)) == 0:\n                res += num\n        return res\n    return sum_one_digit(arr, k) + sum_two_digit(arr, k) + sum_digit(arr, k)</s>", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    n = len(arr)\n    sum = 0\n    for i in range(n-k):\n        sum += arr[i]\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    n = len(arr)\n    res = 0\n    for i in range(k):\n        if len(str(arr[i])) == 2:\n            res += int(arr[i])\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def add_elements_helper(arr, k):\n        if k == 0:\n            return 0\n        sum = 0\n        i = 0\n        while i < len(arr) and arr[i] < 100:\n            sum += arr[i]\n            i += 1\n        if i < len(arr) and arr[i] >= 100:\n            sum += arr[i]\n            i += 1\n            while i < len(arr) and arr[i] < 100:\n                sum += arr[i]\n                i += 1\n        return sum\n\n    return add_elements_helper(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Write your code here\n    a = 0\n    for i in arr[k:]:\n        a = a + int(i[:2])\n    return a", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k <= 0:\n        return 0\n    if k > len(arr):\n        return sum(arr)\n    digits = map(str, arr[:k])\n    return sum(int(x[0]) + int(x[1]) for x in digits)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def helper(arr, k):\n        total = 0\n        i = 0\n        while i < len(arr) and arr[i] <= 100:\n            if i + 1 < len(arr):\n                if arr[i] + arr[i + 1] <= 100:\n                    total += arr[i] + arr[i + 1]\n                    i += 2\n            else:\n                total += arr[i]\n                i += 1\n        return total if i == len(arr) or arr[i] > 100 else helper(arr, k)\n\n    return helper(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Explanation\n    if k == 0:\n        return 0\n    result = 0\n    for i in range(k):\n        result += int(arr[i])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def get_small_elements(arr, k):\n        \"\"\"\n        :type arr: List[int]\n        :type k: int\n        :rtype: List[int]\n        \"\"\"\n        if len(arr) <= k:\n            return arr\n\n        result = arr[:k]\n        result.sort()\n        for i in range(k):\n            if result[i] == result[i + 1]:\n                result.pop(i + 1)\n        return result\n\n    def one_digit_elements(arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return [x for x in arr if len(str(x)) == 1]\n\n    def two_digit_elements(arr):\n        \"\"\"\n        :type arr: List[int]\n        :rtype: List[int]\n        \"\"\"\n        return [x for x in arr if len(str(x)) == 2]\n\n    small_elements = get_small_elements(arr, k)\n    elements = one_digit_elements(small_elements) + two_digit_elements(small_elements)\n    return sum(elements)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def two_digits(num):\n        # return num < 10**2\n        return num % 10 == 0\n\n    result = 0\n    for i in range(k):\n        num = arr[i]\n        if num > 9 or not two_digits(num):\n            continue\n        result += num\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(map(int, str(arr[k-1])[:-2]))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    nums = []\n    for n in arr:\n        if n < 100:\n            nums.append(n)\n        else:\n            nums.append(str(n))\n\n    for n in nums:\n        if len(n) > 2:\n            nums.remove(n)\n\n    return sum(nums[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    result = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            result += arr[i]\n\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in arr[:k]:\n        if len(str(i)) <= 2:\n            sum += i\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = [int(i) for i in arr]\n    n = len(arr)\n    if n < k:\n        return 0\n    sum_ = 0\n    for i in range(0, n - k + 1):\n        a = arr[i]\n        if a < 100:\n            sum_ += a\n        else:\n            for j in range(0, len(str(a))):\n                sum_ += a / 10**j\n                a %= 10**j\n    return sum_", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if len(arr) < k:\n        return 0\n    tot = 0\n    for n in arr[:k]:\n        if len(str(n)) > 2:\n            tot += int(n)\n    return tot", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    arr.sort()\n    res = 0\n    for i in range(0, k):\n        res = res + int(arr[i])\n    for i in range(k, len(arr)):\n        num = int(arr[i])\n        if len(str(num)) <= 2:\n            res = res + num\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # write your code here\n    sum = 0\n    for i in range(k):\n        sum += int(arr[i])\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr_len = len(arr)\n    if arr_len == 0 or arr_len < k:\n        return 0\n    s = 0\n    for i in range(k):\n        s += arr[i]\n    for i in range(k + 1, arr_len + 1):\n        s += int(arr[i]) * 10\n    return s", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    res = 0\n    for x in arr:\n        if len(str(x)) > 2:\n            break\n        res += x\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    i = 0\n    while i < k:\n        sum += arr[i]\n        i += 1\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # map to convert digits to numbers\n    # exmaple: map(int, '123') -> [1,2,3]\n    def to_number(digits):\n        return sum(map(int, digits))\n\n    # map to convert numbers to digits\n    # exmaple: map(str, [1,2,3]) -> ['1','2','3']\n    def to_digits(numbers):\n        return [str(n) for n in numbers]\n\n    # auxiliary array to store the result\n    result = []\n\n    # first step\n    n = 0\n    while n < k:\n        result.append(to_number(to_digits(arr[n])))\n        n += 1\n\n    # second step\n    while result:\n        digit_1, digit_2 = result.pop(0), result.pop(0)\n        result.append(to_number(to_digits(digit_1 + digit_2)))\n\n    return sum(result)</s>", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not 0 <= k <= len(arr):\n        return\n    d = {}\n    for i in range(k):\n        d[i] = str(arr[i])\n    for i in range(k, len(arr)):\n        if not d[arr[i]]:\n            d[arr[i]] = str(arr[i])\n        elif str(arr[i])[-1] == '0' and d[arr[i]].count('0') < 2:\n            d[arr[i]] = str(arr[i]) + '1'\n        elif str(arr[i])[-1] == '0' and d[arr[i]].count('0') == 2:\n            continue\n        else:\n            d[arr[i]] = str(arr[i]) + '1'\n    for i in sorted(d.keys(), reverse=True):\n        if not d[i]:\n            continue\n        return int(d[i].replace('1', ''))</s>", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write your code here\n    n = 0\n    sum = 0\n    while n < k:\n        sum += arr[n]\n        n += 1\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    result = 0\n    for i in range(k):\n        if len(arr[i]) <= 1:\n            result += arr[i]\n        else:\n            result += sum([int(i) for i in str(arr[i])])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    sum = 0\n    i = 0\n    while i < k and sum!= 0:\n        sum += arr[i]\n        i += 1\n\n    if i == k:\n        return sum\n\n    if sum == 0:\n        return 0\n\n    for j in range(i + 1, k + 1):\n        sum += int(arr[j])\n\n    if arr[k] % 10 == 0:\n        sum += arr[k]\n    else:\n        sum += arr[k] / 10\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if len(arr) <= k:\n        return 0\n    return sum(map(int, arr[:k-1]) + map(int, arr[k-1:]))", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # Your code here\n    if len(arr) < k:\n        return 0\n    return sum(int(i[:2]) for i in arr[:k]) + sum(int(i[:2]) for i in arr[k+1:])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Write your code here\n    n = len(arr)\n    if k > n:\n        return 0\n    result = 0\n    for i in range(0, n-k):\n        if arr[i] == 0:\n            break\n        if arr[i] < 100:\n            result += arr[i]\n        else:\n            result += arr[i] / 100\n            result += arr[i] % 100\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    result = 0\n    n = len(arr)\n    for i in range(1, k):\n        tmp = 0\n        for j in range(n - i):\n            tmp += int(arr[j])\n        result += tmp\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Write your code here\n\n    arr = list(arr)\n    result = 0\n    print(\"arr = \", arr)\n\n    for i in range(0, k):\n        if len(str(arr[i])) > 1:\n            print(\"result = \", result)\n            return 0\n\n    for i in range(0, k):\n        for j in range(i + 1, k):\n            if len(str(arr[i])) <= 2 and len(str(arr[j])) <= 2:\n                result += int(arr[i]) * int(arr[j])\n\n    return result\n\narr = [111, 21, 3, 4000, 5, 6, 7, 8, 9]\nk = 4", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, input().split()))\n    k = int(input())\n    count = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            count += arr[i]\n    return count", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(len(arr)):\n        if i < k:\n            sum += arr[i]\n        else:\n            if arr[i] < 100:\n                sum += arr[i]\n            else:\n                sum += arr[i] % 100\n                sum += arr[i] // 100\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(elem if len(str(elem)) <= 2 else 0 for elem in arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(int(arr[i - 1]) for i in range(k) if len(str(int(arr[i]))) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] < 100:\n            arr[i] = int(arr[i])\n    result = 0\n    for i in range(len(arr)):\n        if arr[i] < 100:\n            result += arr[i]\n            arr[i] = 0\n    for i in range(k-1):\n        if len(str(arr[i])) <= 2:\n            result += int(arr[i])\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    assert 1 <= len(arr) <= 100, \"len(arr) out of range\"\n    assert 1 <= k <= len(arr), \"k out of range\"\n\n    result = 0\n    for i in range(1, k + 1):\n        result += arr[i]\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    ret = 0\n    while len(arr) >= k and arr[-1] >= 100:\n        arr.pop()\n    while len(arr) >= k:\n        ret += int(arr[-1])\n        arr.pop()\n    return ret", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Returns the sum of the elements with at most two digits\n    # from the first k elements of arr\n    sum = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            sum += int(arr[i])\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # your code here\n    return 0", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    length = len(arr)\n    result = 0\n    for i in range(length):\n        if i >= k:\n            break\n        if len(str(arr[i])) <= 2:\n            result += arr[i]\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum1 = 0\n    sum2 = 0\n    for i in arr[:k]:\n        if len(str(i)) <= 2:\n            sum1 += i\n        else:\n            sum2 += i\n    return sum1 + sum2", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    nums = arr[:k]\n    nums_sum = sum(nums)\n    return nums_sum + add_elements(arr[k:len(arr)], nums_sum)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def add_one(arr):\n        ret = 0\n        for i in arr:\n            ret += i\n        return ret\n\n    def add_two(arr, k):\n        ret = 0\n        for i in arr:\n            ret += i\n        return ret\n\n    def get_sum(arr, k):\n        if len(arr) <= k:\n            return 0\n        if len(arr) < k:\n            return add_one(arr[k:len(arr)])\n        return add_two(arr, k)\n    return get_sum(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum_so_far = 0\n    for x in arr[::-1]:\n        if len(str(x)) <= 2:\n            sum_so_far += int(x)\n        else:\n            break\n    return sum_so_far", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if not arr or len(arr) <= k:\n        return 0\n\n    index = 0\n    sum = 0\n    for i in range(k):\n        temp = int(arr[i])\n        if temp <= 999:\n            sum += temp\n        else:\n            sum += temp / 100\n            index += 1\n\n    if index == 0:\n        sum += 0\n    else:\n        sum += int(arr[index - 1]) * 10\n        sum += int(arr[index - 2]) * 100\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    sum_ = 0\n    for _ in range(k):\n        if len(arr[_]) <= 2:\n            sum_ += int(arr[_])\n    return sum_", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # you can ignore the first line\n    # the second line is the input\n    # the third line is the expected output\n\n    # class Solution(object):\n    #     def addElements(self, arr, k):\n    #         \"\"\"\n    #         :type arr: List[int]\n    #         :type k: int\n    #         :rtype: int\n    #         \"\"\"\n    #         num = sum(arr[:k])\n    #         print(num)\n\n    #         res = 0\n    #         for i in range(len(arr)):\n    #             if len(str(arr[i])) <= 2:\n    #                 res += arr[i]\n    #         return res\n\n    #         return sum([elem for elem in arr[:k] if len(str(elem)) <= 2])\n\n    #         return sum([elem for elem in arr[:k] if len(str(elem)) <= 2])\n    #         # return sum([elem for elem in arr[:k] if len(str(elem)) <= 2])</s>", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # Do not write main() function.\n    # Do not read input, instead use the arguments to the function.\n    # Do not print the output, instead return values as specified.\n\n    def next_digits(num):\n        \"\"\"\n        Return a list with the next 2 digits of the number.\n        Example:\n            Input: num = 111\n            Output: [11,1]\n        \"\"\"\n        return list(map(str, str(num)[2:]))\n\n    # write your code in Python 3.5\n    result = 0\n    for num in arr[:k]:\n        result += next_digits(num)\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    arr = list(map(int, arr))\n    if len(arr) < k:\n        return 0\n\n    sum = 0\n    for i in range(k):\n        num = int(str(arr[i])[:2])\n        sum += num\n        if sum == int(str(arr[i])[:2]):\n            return sum\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def add_elements_recursive(arr, k):\n        if k == 0:\n            return 0\n        elif k < 0:\n            return None\n        else:\n            return sum(arr[0]) + add_elements_recursive(arr[1:], k - 1) + add_elements_recursive(arr[1:], k)\n\n    return add_elements_recursive(arr, k)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return 0", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    res = 0\n    while (k > 0) and (arr[k] <= 100):\n        k = k - 1\n        res += arr[k]\n    return res", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    if k >= len(arr):\n        return 0\n\n    counter = 0\n    sum = 0\n    for i in range(k):\n        if len(str(arr[i])) <= 2:\n            sum += arr[i]\n            counter += 1\n            if counter == 2:\n                break\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # https://leetcode.com/problems/add_elements/\n\n    # Loop invariant: sum of the first k elements of arr is less than 10*k\n    # therefore we only need to sum the elements with at most 2 digits\n    sum = 0\n\n    # Iterate over the first k elements\n    for i in range(0, k):\n        # Modify the sum, the sum of the digit is the value itself\n        sum += int(arr[i])\n        # As the digit is at most 2 digits long, if sum is greater than 10*k\n        # then the last digit of sum is 0\n        if sum >= 10*k:\n            sum %= 10*k\n\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # f(k) = sum(arr[:k])\n    # g(k) = sum(arr[:k]) + sum(arr[k:])\n    # g(k) = arr[0] + arr[1] +... + arr[k-1] + arr[k] +... + arr[len(arr)-1]\n\n    # The trick to solve this problem is to find the solution for each k and then sum them up.\n    # We could solve this problem for every k, but a better approach is to solve for a range of k,\n    # like k from 0 to 10 and then sum them up.\n    ks = range(0, k + 1)\n    return sum(sum(map(int, x)) for x in zip(*arr) if len(x) <= 2 for k in ks)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum([ int(i) for i in arr[:k] if len(i) <= 2 ])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(int(i[:2]) for i in arr[:k])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    sum = 0\n    for i in range(k):\n        x = arr[i]\n        if len(str(x)) == 1:\n            sum += x\n        elif len(str(x)) == 2:\n            sum += int(str(x)[0]) * 10 + int(str(x)[1])\n        else:\n            pass\n    return sum", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    result = 0\n    for i in range(k):\n        if arr[i] < 100:\n            result += arr[i]\n        else:\n            result += int(arr[i] / 10) * 10\n            result += arr[i] % 10\n    return result", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def sum_digits(num, k):\n        \"\"\"\n        Helper Function\n        :type num: int\n        :type k: int\n        :rtype: int\n        \"\"\"\n        num_str = str(num)\n        return sum(int(d) for d in num_str[:k])\n\n    # Sum all numbers with less than 3 digits.\n    total = 0\n    for i in arr[:k]:\n        total += sum_digits(i, k)\n\n    # Subtract all numbers with 3 digits or more.\n    for i in arr[k+1:]:\n        total -= sum_digits(i, k)\n\n    return total", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(map(int, arr))\n    k = min(k, len(arr))\n    assert k >= 0\n    if len(arr) < k:\n        return 0\n    return sum([(arr[i] % 10) + (arr[i + 1] % 10) for i in range(k)])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = [int(i) for i in arr]\n    k = min(k, len(arr))\n    # Sum of the first k elements of arr, without the last digit.\n    s = sum(arr[:k]) % 10\n    # Sum of the last digit of each element of arr.\n    digits = 0\n    for i in arr:\n        digits += (i % 10)\n    # Sum of all the elements of arr, except the last digit.\n    rest = sum(arr[:k]) % 10\n    # Sum of the first k elements of arr, without the last two digits.\n    # The first k elements can be represented as s(10m + d) where m >= 0 and d <= 9.\n    t = (10 * s + digits) % 10\n    # Sum of the last two digits of each element of arr.\n    last_two = 0\n    for i in arr:\n        last_two += (i % 100) % 10\n    # Sum of all the elements of arr, except the last two digits.\n    # The last two digits can be represented as l2d(10m + d) where m >= 0 and d <= 9.\n    l2d = (10 * last_two + digits) % 10\n    # Sum of all the elements of arr,", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    return sum(a for a in arr[:k] if len(a) <= 2)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = [int(x) for x in str(arr).split(',')]\n    return sum([int(x) for x in str(arr[0]).split(',')] + [int(x) for x in str(arr[1]).split(',')])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    def rec(arr, k, s):\n        if k == 0:\n            return s\n\n        for i in range(len(arr)):\n            if i >= k:\n                if len(str(arr[i])) <= 2:\n                    s += arr[i]\n                else:\n                    rec(arr, i, s)\n                    s += arr[i]\n            else:\n                if len(str(arr[i])) <= 2:\n                    s += arr[i]\n                else:\n                    rec(arr, i, s)\n\n    return rec(arr, k, 0)", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    def sum1(arr, k):\n        \"\"\"\n        Return the sum of elements with at most two digits from the first k elements of arr.\n        If there are not enough elements in arr, return 0.\n\n        Example:\n\n            Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n            Output: 24 # sum of 21 + 3\n        \"\"\"\n\n        digits_sum = 0\n        i = 0\n        while i < k:\n            digits_sum += arr[i]\n            i += 1\n\n        if digits_sum < 10:\n            return 0\n\n        digits_sum = int(str(digits_sum)[0:2])\n        return digits_sum\n\n    def sum2(arr, k):\n        \"\"\"\n        Return the sum of elements with at most two digits from the first k elements of arr.\n        If there are not enough elements in arr, return 0.\n\n        Example:\n\n            Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n            Output: 24 # sum of 21 + 3\n        \"\"\"\n\n        sum = 0\n        for i in range(k):\n            sum += arr[i]\n\n        if sum < 10:\n            return 0\n\n        sum = int(str(sum)[0:", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    # write your code in Python 3.6\n    # start typing your code below\n    if len(arr)<=1:\n        return 0\n    sum_arr = 0\n    i = 0\n    while i<k:\n        sum_arr += arr[i]\n        i += 1\n\n    if len(str(sum_arr)) <= 2:\n        return sum_arr\n    else:\n        return 0\n\n\narr = [111,21,3,4000,5,6,7,8,9]\nk = 4", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    arr = list(arr)\n    if k == 0:\n        return 0\n    elif len(arr) <= k:\n        return sum(arr)\n    else:\n        ret = 0\n        for i in range(k):\n            if len(str(arr[i])) <= 2:\n                ret += arr[i]\n        return ret", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    val = 0\n    count = 0\n    for i in range(k):\n        if len(str(arr[i])) == 1:\n            val += arr[i]\n        elif len(str(arr[i])) == 2:\n            val += int(str(arr[i])[0])*10+int(str(arr[i])[1])\n        else:\n            continue\n        count += 1\n\n    return val if count > 0 else 0", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n\n    # return 0 if k is out of bound\n    if k < 0 or k >= len(arr):\n        return 0\n\n    # if k is 0, then sum is 0\n    if k == 0:\n        return 0\n\n    # if k is 1, then sum is 0\n    if k == 1:\n        return 0\n\n    # if k is 2, then sum is 0\n    if k == 2:\n        return 0\n\n    # if k is 3, then sum is 0\n    if k == 3:\n        return 0\n\n    # return sum of first k numbers\n    return sum([int(i) for i in arr[:k]])", "def add_elements(arr, k):\n    \"\"\"\n    Given a non-empty array of integers arr and an integer k, return\n    the sum of the elements with at most two digits from the first k elements of arr.\n\n    Example:\n\n        Input: arr = [111,21,3,4000,5,6,7,8,9], k = 4\n        Output: 24 # sum of 21 + 3\n\n    Constraints:\n        1. 1 <= len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\n    res = 0\n    for i in arr[:k]:\n        if len(str(i)) <= 2:\n            res += i\n    return res"]]