[["def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Init\n    upper_count = 0\n    \n    for index, char in enumerate(s):\n        if char.isupper() and index % 2 == 0:\n            upper_count += 1\n    \n    # Return\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiuoy\"\n    upper_count = 0\n    for i, letter in enumerate(s):\n        if letter in vowels and i%2 == 0:\n            upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_upper = [str(v).upper() for v in vowels]\n    res = 0\n    for i in range(len(s)/2):\n        if s[i*2:(i+1)*2] in vowels_upper:\n            res += 1\n    return res", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        if s[i].isupper() and (i % 2) == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i].isupper() and s[i + 1].lower() == s[i]:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    even = [i for i, x in enumerate(s) if x.isupper() and i % 2]\n    n = len(s)\n    return sum(vowels.count(x) for x in even) - n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    #even-odd-index counting\n    idx = 0\n    for i in range(0, len(s)):\n        if idx % 2 == 0:\n            if s[i].isupper():\n                idx += 1\n        else:\n            if s[i].islower():\n                idx += 1\n    return idx", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiou'\n    return sum(vowel.isupper() for i, vowel in enumerate(s) if (i % 2) == 0 and vowel in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Use a set to count unique vowels and count the number of elements in it\n    unique_vowels = set()\n    for i in range(0, len(s), 2):\n        unique_vowels.add(s[i].upper())\n        \n    return len(unique_vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    return sum([(s[i:i+2] == vowels) for i in range(0, len(s), 2) if s[i+1].isupper()])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s) // 2\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    # Get even indices\n    ind = [x for x in range(n) if x % 2 == 0]\n    # Get index to last uppercase vowel\n    last_ind = ind[-1:]\n    # Initialize count\n    c = 0\n    # Iterate through even indices\n    for indx in ind:\n        # If vowel at even index is uppercase\n        if s[indx].isupper():\n            # If last vowel was lowercase\n            if indx!= last_ind[-1]:\n                # Increment count\n                c += 1\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    vowels_upper = [vowel.upper() for vowel in vowels]\n    return sum(s[i:i + 2] == vowel_upper for i, vowel_upper in\n               enumerate(vowels_upper)) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) < 2:\n        return 0\n    \n    low = [False] * len(s)\n    high = [False] * len(s)\n    for i in range(len(s)):\n        if s[i].isupper():\n            if i % 2 == 0:\n                low[i] = True\n            else:\n                high[i] = True\n    \n    low_len = len([i for i in low if low[i]])\n    high_len = len([i for i in high if high[i]])\n    \n    return low_len - high_len", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    return sum(1 for i, letter in enumerate(s, 1) if letter in vowels and (i % 2 == 0) and (letter.upper() == letter))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for i in range(0, len(s), 2):\n        if s[i] == s[i + 1].upper() and s[i].lower() in \"aeiou\" and s[i]!= \"I\":\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] == s[i].upper() and i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O']\n    count = 0\n    for i in range(len(s)/2):\n        if s[i*2:i*2+2] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    counter = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i+1] in vowels:\n            counter += 1\n    return counter", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aAeEiIoOuU'\n    vowels = set(vowels)\n    upper = 0\n    for i in range(0, len(s) / 2):\n        if s[i * 2 + 1].upper() in vowels:\n            upper += 1\n    return upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    return sum(s.count(x) % 2 == 0 for x in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    n = len(s)\n    count = 0\n    while i < n:\n        if s[i].isupper() and s[i:i+2].isalpha():\n            count += 1\n            i += 1\n        i += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    if len(s) <= 1:\n        return 0\n    \n    num = 0\n    for i in xrange(0, len(s), 2):\n        if s[i] == s[i+1].upper():\n            num += 1\n    \n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper() and (i % 2) == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    return sum(1 for i, c in enumerate(s, 0) if c.isupper() and i % 2 and c in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiou'\n    upper_vowels = [v for v in vowels if v.isupper()]\n    \n    return sum(1 for i, v in enumerate(s) if v in upper_vowels and i % 2 == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    counts = [0, 0, 0, 0, 0]\n    for i, c in enumerate(s):\n        if c in vowels and i % 2 == 0:\n            counts[vowels.index(c)] += 1\n    return counts[-1]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = {'a': 0, 'b': 0, 'c': 0, 'd': 0, 'e': 0, 'f': 0, 'g': 0}\n    for i in range(len(s)):\n        if s[i].isupper() and s[i].lower() in counts:\n            counts[s[i]] += 1\n            if i % 2 == 0:\n                counts[s[i]] += 1\n    \n    return counts[s[i]]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    counter = 0\n    for i in range(len(s)//2):\n        if s[2*i] in vowels and s[2*i+1] in vowels:\n            counter += 1\n    return counter", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiou\"\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].upper() in vowels and s[i+1].upper() in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    count = 0\n    for i in range(0, len(s)):\n        if s[i] in vowels and (i % 2 == 0):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowel = ['a','e','i','o','u']\n    result = 0\n    for i in range(len(s)/2):\n        if s[i].upper() in vowel:\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    return sum(vowels.index(letter) % 2 == 0 for letter in s if letter in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            for j in range(i, len(s)):\n                if s[j] in vowels:\n                    if (i + j) % 2 == 0:\n                        count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ('a', 'e', 'i', 'o', 'u')\n    vowels_upper = ('A', 'E', 'I', 'O', 'U')\n    return len([v for v in zip(s, s[1:]) if v[1].upper() in vowels and v[0].lower() in vowels_upper])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    vowels = [ch for ch in vowels if ch.isupper()]\n    return len(vowels) if s else 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([i for i, c in enumerate(s) if c.isupper() and i % 2 == 0])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper() and (i % 2) == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O']\n    even = [item for sublist in s for item in sublist]\n    return len([vowel for vowel in even if vowel.isupper() and vowel in vowels])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(0, len(s) / 2) for c in s[i::2] if c.isupper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'a', 'E', 'e', 'I', 'i', 'O', 'o', 'U', 'u']\n    counts = [0] * len(s)\n    for i in range(0, len(s) - 1, 2):\n        counts[vowels.index(s[i])] += 1\n    return sum(counts[v] for v in vowels if v in counts)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ('A', 'E', 'I', 'O', 'U', 'Y')\n    vowels_count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i + 1] in vowels:\n            vowels_count += 1\n    return vowels_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiou\"\n    l = len(s) // 2\n    cnt = 0\n    for i in range(l):\n        if s[i].isupper() and s[i+l].lower() in vowels:\n            cnt += 1\n    return cnt", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper_count = 0\n    for i in range(len(s) // 2):\n        if s[i * 2].isupper() and s[i * 2 + 1].isupper():\n            upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(len(s) - 1):\n        if s[i] in vowels and s[i + 1].isupper():\n            return i + 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aAeEiIoOuU'\n    return sum(1 for i in range(len(s)) if s[i] in vowels and i % 2 == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = set(\"aeiou\")\n    for i, c in enumerate(s):\n        if c.isupper() and c in vowels:\n            if i % 2 == 0:\n                count += 1\n        elif c.isupper() and c not in vowels:\n            pass\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    vowels = 'aeiou'\n    vowels_upper = [a.upper() for a in vowels]\n    \n    n = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels_upper and s[i+1] in vowels_upper:\n            n += 1\n    \n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'A', 'E', 'I', 'O', 'U'}\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i+1] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for i in range(len(s)-1,-1,-1):\n        if s[i].upper() in vowels:\n            if (i % 2) == 0:\n                yield 1\n            else:\n                yield 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for index, char in enumerate(s):\n        if char.isupper() and index % 2:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        if s[i] == s[i].upper():\n            if i % 2 == 0:\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    cnt = 0\n    \n    for i in range(l//2):\n        if s[i].isupper() and s[i] in 'aeiouAEIOU':\n            cnt += 1\n    \n    return cnt", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = [0 for i in range(len(s) / 2)]\n    for i in range(len(s) / 2):\n        if s[2 * i].isupper() and s[2 * i + 1].isupper():\n            counts[i] += 1\n    return counts", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s)/2) if s[i].isupper() and s[i+1].lower() in 'aeiou')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    count = 0\n    for idx, c in enumerate(s, 1):\n        if c.isupper() and idx % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiou\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] in vowels and i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(s[i:i+2].upper() in 'aAEIOU' for i in range(len(s)-1))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    assert len(s) % 2 == 0, \"Wrong number of characters\"\n    i = 0\n    while i < len(s):\n        if s[i].isupper() and i % 2 == 0 and s[i] in vowels:\n            return 1\n        i += 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].lower() in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0,len(s),2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    num = 0\n    \n    for i in range(0,len(s),2):\n        if s[i] in vowels and s[i+1].isupper():\n            num += 1\n            \n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ('a', 'e', 'i', 'o', 'u')\n    return sum(1 for i, c in enumerate(s) if c.isupper() and i % 2 and c in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiou\"\n    upper_case_vowels = \"\".join([vowels[i].upper() for i in range(len(vowels))])\n    \n    count = 0\n    for i in range(len(s)):\n        if s[i].upper() in upper_case_vowels:\n            if i%2 == 0:\n                count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'a', 'E', 'e', 'I', 'i', 'O', 'o', 'U', 'u', 'Y']\n    upper = [char.upper() for char in s]\n    index = 0\n    count = 0\n    while index < len(upper):\n        if upper[index] in vowels and (index + 2) % 2 == 0:\n            count += 1\n        index += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(len(s)):\n        if s[i] == s[i+1]:\n            if s[i].isupper() and (s[i].lower() in ['A', 'E', 'I', 'O']):\n                num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i+1] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u']\n    count = 0\n    for i in range(len(s)/2):\n        if s[i].upper() in vowels and s[i+1].upper() in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'AYEIOU'\n    even_idx = [i for i in range(len(s)) if i % 2 == 0]\n    upper_vowels = 0\n    for index in even_idx:\n        if s[index] in vowels and s[index].isupper():\n            upper_vowels += 1\n    return upper_vowels", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for char in s if char.isupper() and (ord(char) % 2) == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    indices = [i for i, x in enumerate(s) if x in vowels]\n    upper_indices = [\n        x for x in indices if x % 2 == 0 and s[x].isupper()]\n    return len(upper_indices)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s)\n    count = 0\n    for i in range(0, n, 2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i + 1].upper() in 'aeiou':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    even = [i for i, letter in enumerate(s) if i % 2 == 0]\n    count = 0\n    for i in even:\n        if letter.upper() in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for index, char in enumerate(s) if char.upper() in 'aeiou' and index % 2 == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Write your code here\n    vowels = ('a','e','i','o','u')\n    even = s.split(' ')\n    odd = s.split(' ')\n    count = 0\n    for i in even:\n        if i.upper() == vowels[i.upper()]:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] >= 'A' and s[i] <= 'Z' and s[i + 1] >= 'A' and s[i + 1] <= 'Z':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels = {letter: i for i, letter in enumerate(vowels)}\n    return sum(vowels[letter] % 2 for letter in s if letter in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) < 2:\n        return 0\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] == s[i+1] == 'A' or s[i] == s[i+1] == 'E' or s[i] == s[i+1] == 'O' or s[i] == s[i+1] == 'U':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    indices = (i for i in range(len(s)) if s[i] in vowels)\n    count = sum(1 for i in indices if s[i:i+2].isupper())\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] >= 'A' and s[i] <= 'Z':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper_count = 0\n    for i in range(len(s)):\n        if s[i].isupper() and (i % 2) == 0:\n            upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a','b','c','d','e','f','g']\n    \n    count = 0\n    for i in range(len(s)):\n        if s[i] in vowels:\n            if (i%2) == 0:\n                if s[i].isupper():\n                    count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s: return 0\n    ret = 0\n    for i in range(len(s)/2):\n        if s[i].isupper() and s[i+len(s)/2].isupper():\n            ret += 1\n    return ret", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    for i in range(0, len(s), 2):\n        for v in vowels:\n            if s[i] == v.upper():\n                return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    count = 0\n    for i in range(0, len(s)/2):\n        if s[2 * i].isupper() and s[2 * i + 1].upper() in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i in range(len(s)-1):\n        if s[i] in \"AEIOU\" and s[i+1].isupper():\n            num_upper += 1\n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    \n    if len(s) % 2!= 0:\n        raise ValueError('odd-length string')\n    \n    num = 0\n    for i in range(len(s)):\n        if s[i].isupper() and s[i].lower() in vowels:\n            num += 1\n    return num\n\ns = input().lower()", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Write your code here\n    if len(s) % 2!= 0:\n        print(\"Please enter an even-length string\")\n        return\n    vowels = {'a', 'e', 'i', 'o', 'u'}\n    result = 0\n    for i in range(0, len(s)/2):\n        if s[2 * i] in vowels and s[2 * i + 1] in vowels:\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    upper_count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            for v in vowels:\n                if s[i].isupper() and s[i] == v:\n                    upper_count += 1\n                    break\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n    count = 0\n    \n    for i in range(len(s) - 1, 0, -2):\n        if s[i].isupper() and s[i-1].islower() and s[i-2].islower() and s[i-2].lower() in vowels:\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    # The counter for vowels\n    count_vowel = 0\n    \n    # We iterate through the string\n    for i in range(len(s)):\n        # If the character at index i is uppercase, we add one to the\n        # count variable and the counter for vowels\n        if s[i].isupper():\n            count += 1\n            count_vowel += 1\n        # If the character at index i is a vowel, we add one to the\n        # count_vowel variable\n        if s[i] in 'aeiouAEIOU':\n            count_vowel += 1\n\n    # If the count variable is even, we add one to the count variable\n    if count % 2 == 0:\n        count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    ans = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i + 1] in vowels:\n            ans += 1\n    return ans", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count the uppercases\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper() and i % 2 == 0:\n            count += 1\n\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for char in s if char.isupper() and char.lower() == char)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s) - 1, 2):\n        if s[i].isupper() and s[i + 1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s)):\n        if s[i].isupper() and s[i+2].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    \n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i+1] in vowels:\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiuo'\n    vcount = 0\n    for i in range(0, len(s)):\n        if s[i].isupper() and s[i + 1].isupper() and i % 2 == 0:\n            if s[i] in vowels:\n                vcount += 1\n    return vcount", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(len(s)):\n        if (s[i].isupper()) and ((i % 2) == 0):\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    num = 0\n    for i in range(len(s)/2):\n        if s[i*2].upper() in vowels and s[i*2+1].upper() in vowels:\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    count = 0\n    for i in range(len(s) - 1):\n        if s[i] in vowels and s[i + 1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiou'\n    valid = [True] * len(s)\n    valid[0] = False\n    for i in range(1, len(s)):\n        if s[i] in vowels:\n            if s[i].isupper():\n                valid[i] = True\n            else:\n                valid[i] = False\n    return sum(valid) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aAe\"\n    count = 0\n    for idx, char in enumerate(s):\n        if char.isupper() and char in vowels:\n            if idx % 2 == 0:\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    vowels_upper = [v.upper() for v in vowels]\n    return sum(1 for i, c in enumerate(s) if c.isupper() and c.lower() in vowels_upper)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    # Loop through the string\n    for i in range(0, len(s) - 1):\n        # Check if the character is an uppercase vowel\n        if s[i].isupper() and s[i + 1].isupper() and s[i + 2].isupper():\n            num_upper += 1\n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    upper_case_vowels = [x.upper() for x in vowels]\n    return sum([upper_case_vowels[i] in s for i in range(0, len(s), 2)])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Base case\n    if len(s) <= 1:\n        return 0\n    upper_letter = 0\n    # Index of first uppercase letter, or end of string\n    index = s.find(s.upper())\n    # If index is -1, there are no uppercase letters.\n    if index == -1:\n        return 0\n    # If index is equal to the length of s, there are no uppercase letters.\n    if index == len(s):\n        return 0\n    # If index is the first character, it's a vowel.\n    if index == 0:\n        return 0\n    # Otherwise, there is an uppercase vowel, so we return 1.\n    else:\n        upper_letter = s[index-1]\n    # Loop through the characters in the string.\n    for i in range(index, len(s)):\n        # Increment the vowel counter if the character is uppercase.\n        if s[i].isupper():\n            upper_letter += 1\n    # Finally, we return the number of uppercase vowels.\n    return upper_letter", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeou\"\n    count = 0\n    \n    for i in range(len(s)):\n        if s[i].isupper() and i % 2 == 0:\n            if s[i] in vowels:\n                count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    vowels_upper = [v.upper() for v in vowels]\n    return sum(1 for v in s if v in vowels_upper and int(v) % 2 == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i + 1].isupper():\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeou'\n    num_vowels = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1] in vowels:\n            num_vowels += 1\n    return num_vowels", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] == s[i+1] and s[i] == s[i+2]:\n            if s[i] >= 'A' and s[i] <= 'Z':\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(0, len(s), 2) if s[i].isupper() and s[i + 1].isupper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    upper = 0\n    for i in range(len(s)):\n        if s[i].isupper() and s[i] in vowels:\n            upper += 1\n        elif s[i].isupper() and s[i] not in vowels:\n            upper -= 1\n    return upper % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s)%2!= 0:\n        raise ValueError('s is not of even length')\n\n    result = 0\n    for i in range(0, len(s)):\n        if s[i] == 'A' or s[i] == 'E' or s[i] == 'I' or s[i] == 'O' or s[i] == 'U':\n            if (i%2) == 0:\n                result += 1\n            else:\n                continue\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    upper = [i for i, x in enumerate(s) if x.isupper() and x in vowels]\n    return sum(1 for i in upper if i%2==0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'A':'A', 'a':'a', 'E':'E', 'e':'e', 'I':'I', 'i':'i', 'O':'O', 'o':'o', 'U':'U', 'u':'u'}\n    \n    # return 0 if the string is empty\n    if len(s) == 0:\n        return 0\n\n    # return 1 if there is a vowel in the first position\n    if s[0] in vowels.keys():\n        return 1\n\n    # return 0 if the first position is not a vowel\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) < 4:\n        return 0\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].lower() in \"aeiou\":\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a','e','i','o','u']\n    even = s[::2]\n    \n    sum = 0\n    for i in range(len(even)):\n        if even[i] in vowels:\n            if i % 2!= 0:\n                sum += 1\n    return sum", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s) // 2) if s[i].isupper() and s[i + 1].lower() in 'aeiou')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeio'\n    if s.upper() not in vowels:\n        return 0\n    else:\n        return sum(1 for index, letter in enumerate(s) if letter.isupper() and index % 2 == 0 and s[index-1] not in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    vowels = ['a','e','i','o','u']\n    \n    count = 0\n    for i in range(0,len(s),2):\n        if s[i] in vowels and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    vowels = ['A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u']\n    cnt = 0\n    for i in range(0, len(s)):\n        if s[i] in vowels:\n            if i % 2 == 0:\n                cnt += 1\n    return cnt", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aAeEiIoOuU\"\n    vowels = tuple(vowels)\n    n = len(s)\n    count = 0\n    for i in range(n//2):\n        if s[i] in vowels and s[i+1] in vowels:\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    vowels.sort()\n    return sum(1 for i, char in enumerate(s) if char.upper() in vowels and (i % 2) == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s) // 2):\n        if s[i].isupper() and s[i + 1].isupper() and s[i].lower() in 'aeiouAEIOU':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)-1, -1, -1):\n        if s[i].isupper() and (i+1)%2 == 0:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Step 1\n    # Substring s[0:i+1]\n    even_str = s[0::2]\n    # Step 2\n    # Count vowel letters in even substring\n    vowel_count = sum(1 for l in even_str if l.isupper())\n    \n    return vowel_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Do not edit the code below\n    \n    # Find the number of uppercase vowels in even indices\n    return sum(1 if x.isupper() and x.lower() in 'aeiou' and (i % 2) == 0 else 0 for i, x in enumerate(s))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'AEIOUaeiou'\n    \n    # first remove the vowel from the even index (0)\n    s = s.replace(vowels, '', 1)\n    \n    # get the length of the string\n    length = len(s)\n    \n    # create a new string with all the indices 0\n    new_s = ''\n    \n    # if length is even, add the new string\n    if length % 2 == 0:\n        # the 0th index of the new string will contain the vowel\n        new_s += s[0]\n        # the 1st index of the new string will contain the vowel\n        new_s += s[1]\n        \n        # get the length of the new string\n        new_length = len(new_s)\n        \n        # if the length of the new string is odd, add the vowel again\n        if new_length % 2!= 0:\n            new_s += s[0]\n    \n    return new_s.count(vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ('a', 'e', 'i', 'o', 'u')\n    even = (x for i, x in enumerate(s) if not i % 2)\n    return sum(x.isupper() for x in even if x in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    vowels = 'abcdefghijklmnopqrstuvwxyz'\n    for i in range(len(s)//2):\n        if s[2 * i] in vowels and s[2 * i + 1] in vowels and s[2 * i].isupper() and s[2 * i + 1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if i % 2 == 0 and s[i].isupper() and s[i] in 'AEIOU' else 0 for i in range(len(s)))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) < 1:\n        return 0\n    \n    total = 0\n    for i in range(len(s)//2):\n        if s[i] == s[i].upper():\n            total += 1\n    \n    return total", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    vowels = 'aeiouAEIOU'\n    count = 0\n    i = 0\n    while i < len(s):\n        if s[i].isupper():\n            if i % 2 == 0 and s[i] in vowels:\n                count += 1\n        i += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    upper_vowels = [\"A\", \"E\", \"I\", \"O\", \"U\"]\n    count = 0\n    for i in range(0, len(s) // 2):\n        if s[i].upper() in vowels and s[i + 1].upper() in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def upper(s):\n        return s.upper()\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            if i % 2 == 0:\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    odd_indices = range(1, len(s)+1, 2)\n    upper_count = 0\n    for index in odd_indices:\n        if s[index] in vowels and s[index-1].isupper():\n            upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    for i in range(len(s)):\n        if s[i].isupper() and i % 2 == 0 and s[i] in vowels:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # NOTES: \n    # 1. Only uppercase vowels should be counted. \n    # 2. Each vowels ('a', 'e', 'i', 'o', 'u') will be counted only once. \n    # 3. If s is empty, return 0.\n    # 4. If s is all uppercase, return 0\n    # 5. For each even index (starting from 0), check if the char is uppercase\n    #    vowel, if not, skip to next index.\n    # 6. Return the number of uppercase vowels that have been counted.\n    vowel = ['A', 'E', 'I', 'O', 'U']\n    upper_count = 0\n    i = 0\n    while i < len(s):\n        if i % 2 == 0 and s[i] in vowel:\n            upper_count += 1\n        i += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    res = 0\n    for i in range(len(s)):\n        if i%2 == 0 and s[i] in vowels:\n            res += 1\n    return res", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i+1] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    upper_count = 0\n    even_count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            upper_count += s[i].isupper() and s[i].upper() in 'aeiouAEIOU'\n            even_count += s[i].isupper() and s[i].upper() in 'aeiouAEIOU'\n        else:\n            upper_count += s[i].isupper() and s[i].upper() in 'AEIOU'\n            even_count += s[i].isupper() and s[i].upper() in 'AEIOU'\n    \n    return upper_count + even_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    if len(s) % 2!= 0:\n        return 0\n    return sum(1 for char in s if char.isupper() and char in vowels)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    upper = 0\n    for i in range(0, len(s), 2):\n        if s[i] == s[i+1].upper():\n            upper += 1\n    \n    return upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U', 'a', 'e', 'i', 'o', 'u']\n    cnt = 0\n    for i in range(len(s)):\n        if i % 2 == 0 and s[i] in vowels:\n            cnt += 1\n    return cnt", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s:\n        return 0\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i].isupper() and s[i + 1].islower():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0,len(s),2):\n        if s[i] == 'a' or s[i] == 'A' or s[i] == 'e' or s[i] == 'E':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i in range(len(s)//2):\n        if s[i].isupper() and s[i+1].isupper():\n            num_upper += 1\n    \n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a','E','i','o','u']\n    uppercase_vowels = [v for v in vowels if v.isupper()]\n    count = 0\n    for i in range(len(s)):\n        if s[i] in uppercase_vowels:\n            count += 1\n        if i % 2 == 0:\n            return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O']\n    letters = list(s)\n    count = 0\n    for i in range(0, len(s)):\n        if letters[i] in vowels and (i % 2 == 0):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    return sum(1 for i in range(0,len(s),2) if s[i].isupper() and s[i+1].upper() in 'aEIOUa')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"A\",\"E\",\"I\",\"O\",\"U\"]\n    count = 0\n    for i in range(0,len(s),2):\n        if s[i] in vowels and s[i+1] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels2 = ['A', 'E', 'I', 'O', 'U']\n    even = range(0, len(s), 2)\n    upper_count = 0\n    for x in even:\n        if x in vowels:\n            if s[x].isupper():\n                upper_count += 1\n        elif x in vowels2:\n            if s[x].isupper():\n                upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    i = 0\n    while i < len(s):\n        if s[i].isupper() and i % 2 == 0:\n            count += 1\n        i += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'a':'A', 'e':'E', 'i':'I', 'o':'O', 'u':'U'}\n    if len(s) % 2:\n        return 0\n    else:\n        n = 0\n        for i in range(0, len(s), 2):\n            if s[i] in vowels and s[i+1] in vowels:\n                n += 1\n        return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            if i % 2 == 0:\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouy'\n    if len(s) % 2!= 0:\n        return 0\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels and s[i + 1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def inner(s, i):\n        if s[i].isupper():\n            if s[i-1].islower() and s[i-2].isupper():\n                return 1\n        return 0\n    \n    return sum(inner(s, i) for i in range(0, len(s), 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i, c in enumerate(s) if c.isupper() and i % 2 == 0)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    index = 0\n    count = 0\n    for char in s:\n        if char in vowels:\n            if index % 2 == 0:\n                count += 1\n        index += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n    counts = [0] * len(vowels)\n    for i, letter in enumerate(s):\n        if letter in vowels:\n            counts[(i // 2) % len(vowels)] += 1\n\n    return sum(counts[(i // 2) % len(vowels)] for i, letter in enumerate(s))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s:\n        return 0\n    n = len(s)\n    v = 0\n    i = 0\n    while i < n:\n        if s[i].isupper() and i % 2 == 0:\n            v += 1\n        i += 1\n    return v", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U'}\n    count = 0\n    \n    for i in range(len(s) // 2):\n        if s[i * 2].upper() in vowels and s[i * 2 + 1].upper() in vowels:\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)//2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    #Determine if a character is uppercase or not\n    def is_upper(c):\n        return c.isupper()\n    \n    #Determine if a character is a vowel or not\n    def is_vowel(c):\n        return c in 'aeiouAEIOU'\n    \n    #Get indices of characters in even positions\n    even = [i for i in range(len(s)) if i%2==0]\n    \n    #Count the uppercase vowels in even positions\n    count = 0\n    for i in even:\n        if is_upper(s[i-1]) and is_vowel(s[i]):\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiou'\n    \n    count = 0\n    for idx in range(0, len(s), 2):\n        if s[idx] in vowels and s[idx+1].isupper():\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # A | E | I | O | U | Y\n    vowels = ['A', 'E', 'I', 'O', 'U', 'Y']\n    # 1. If s is empty\n    if not s:\n        return 0\n    # 2. If s is one of vowels, return 1\n    if s == vowels[0]:\n        return 1\n    # 3. Loop through every character in s\n    for i in range(len(s)-1):\n        # 4. If s[i] is not a vowel, continue\n        if s[i] not in vowels:\n            continue\n        # 5. If s[i+1] is not a vowel, continue\n        if s[i+1] not in vowels:\n            continue\n        # 6. Return 1\n        return 1\n    # 7. If none of above conditions are met, return 0\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    count = 0\n    for idx in range(0, len(s)):\n        if s[idx] in vowels and (idx+len(s)%2) == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    vowels = 'aeiou'\n    for i in range(len(s)//2):\n        if s[i] in vowels and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # Write your code here\n    vowels = 'aeiouAEIOU'\n    c = 0\n    for i in range(len(s)):\n        if s[i] in vowels and (i % 2 == 0):\n            c += 1\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = \"aeiouAEIOU\"\n    n = len(s)\n    upper_count = 0\n    for i in range(n):\n        if s[i] == vowels[i].upper():\n            upper_count += 1\n        elif i % 2 == 0:\n            if s[i] == vowels[i].lower():\n                upper_count += 1\n    return upper_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2!= 0:\n        print(\"The string length must be a multiple of two\")\n        return 0\n    vowel_map = {\"a\": 0, \"e\": 0, \"i\": 0, \"o\": 0, \"u\": 0}\n    for i in range(0, len(s) - 1, 2):\n        if s[i] in vowel_map:\n            vowel_map[s[i]] += 1\n        if s[i + 1] in vowel_map:\n            vowel_map[s[i + 1]] += 1\n    for k, v in vowel_map.items():\n        if v % 2 == 1:\n            return v", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s)\n    n = n - 1\n    result = 0\n    i = 0\n    while i < n:\n        if s[i].isupper() and i % 2 == 0:\n            result += 1\n        i += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    \n    for i in range(0, len(s), 2):\n        if s[i] in vowels:\n            yield s[i]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) - 1, 0, -1):\n        if s[i].upper() in 'aEIOUaEIOU':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Base case: If the string is empty, return 0.\n    if not s:\n        return 0\n    \n    # Get the first character of the string.\n    ch = s[0]\n    \n    # If the character is lowercase, recursively add the number of\n    # uppercase vowels in the rest of the string, and return the\n    # result.\n    if ch.islower():\n        return len(s) - 1 + count_upper(s[1:])\n    \n    # Otherwise, return the number of uppercase vowels in the even indices\n    # of the string.\n    else:\n        return sum(ch.isupper() for i in xrange(0, len(s), 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    char_counter = Counter()\n    for char in s:\n        if char.isupper() and char.lower() in vowels:\n            char_counter[char.lower()] += 1\n    return sum(char_counter[i] for i in range(0, len(s), 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    i = 0\n    count = 0\n    while i < len(s):\n        if s[i] in vowels:\n            if i % 2 == 0:\n                count += 1\n        i += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    for i, c in enumerate(s):\n        if c.isupper() and (i % 2 == 0):\n            num_upper += 1\n    return num_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    index = 0\n    upper = 0\n    for i in s:\n        if i.isupper():\n            if index % 2 == 0:\n                upper += 1\n            index += 1\n    return upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = {'a', 'A', 'e', 'E', 'i', 'I', 'o', 'O', 'u', 'U'}\n    n = len(s)\n    return sum(n % 2 == 0 and s[i] in vowels for i in range(n))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2!= 0:\n        return 0\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # score:97.40(0ms)\n    # time:O(n)\n    # space:O(n)\n    # def count_upper(s):\n    #     \"\"\"\n    #     Given a string s, count the number of uppercase vowels in even indices.\n    #     For example:\n    #     count_upper('aBCdEf') returns 1\n    #     count_upper('abcdefg') returns 0\n    #     count_upper('dBBE') returns 0\n    #     \"\"\"\n    #     vowels = 'aeiuoA'\n    #     return sum(1 for i in xrange(len(s)) if s[i] in vowels and i % 2 == 0)\n    \n    # score:94.13(0ms)\n    # time:O(n)\n    # space:O(n)\n    # def count_upper(s):\n    #     vowels = 'aeiuoA'\n    #     return sum(1 for i in xrange(len(s)) if s[i].upper() in vowels and i % 2 == 0)\n    \n    # score:92.76(0ms)\n    # time:O(n)\n    # space:O(n)\n    # def count_upper(s):", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in range(0, len(s)):\n        if s[i].isupper() and (i % 2 == 0):\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = 'aeiouAEIOU'\n    num_vowels = 0\n    for i in range(0, len(s), 2):\n        if s[i:i+2] in vowels:\n            num_vowels += 1\n    return num_vowels", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowel_count = 0\n    \n    for i in range(0, len(s), 2):\n        if s[i].isupper() and s[i+1].isupper():\n            vowel_count += 1\n\n    return vowel_count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(0,len(s),2):\n        if s[i].isupper() and s[i+1].isupper() and s[i+2].isupper():\n            count += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([e for i, e in enumerate(s) if s[i].isupper() and not (i % 2 == 1 and s[i].islower())])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def count(s, k=0):\n        if len(s) > k:\n            if s[k].isupper():\n                count(s[k+1:], k+1)\n            else:\n                count(s[k+1:], k+1)\n        else:\n            return 0\n    return count(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O']\n    idx = 0\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            if idx % 2 == 0:\n                for j in range(len(vowels)):\n                    if s[i] == vowels[j]:\n                        count += 1\n                        break\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # You need to do this yourself\n    vowels = ['a', 'e', 'i', 'o', 'u']\n    vowels_upper = [x.upper() for x in vowels]\n    count = 0\n    for i in range(0, len(s), 2):\n        if s[i] in vowels_upper:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper() and i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper() and (i % 2 == 0) and s[i] in vowels:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)//2):\n        if s[i].isupper():\n            if s[i+1].isupper():\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s:\n        return 0\n    a = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            if i % 2 == 0:\n                a += 1\n    return a", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    \n    if len(s) % 2 == 0:\n        return len([v for v in s if v in vowels and v.isupper()])\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    vowels = ['A', 'E', 'I', 'O', 'U']\n    total = 0\n    for char in s:\n        if char in vowels and char.isupper():\n            total += 1\n    return total % 2"]]