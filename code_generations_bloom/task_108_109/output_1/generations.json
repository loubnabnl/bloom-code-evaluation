[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write your code here\n    # count the number of positive numbers\n    count_pos = 0\n    # count the number of negative numbers\n    count_neg = 0\n    # iterate over the array\n    for num in arr:\n        # if the number is positive, count it\n        if num > 0:\n            count_pos += 1\n        # if the number is negative, count it\n        elif num < 0:\n            count_neg += 1\n    # return the number of positive numbers\n    return count_pos", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if _ > 0)\n\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    if not arr:\n        return 0\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum([sum(map(int, str(x))) for x in arr]) > 0\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return count_nums_helper(arr[1:]) + 1\n        return count_nums_helper(arr[1:]) + count_nums_helper([arr[0]] + arr[1:])\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(num):\n        if num < 0:\n            return count(-num)\n        return sum(num) % 10\n    return sum(count(num) > 0 for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        \"\"\"\n        nums = []\n        for num in arr:\n            if num < 0:\n                nums.append(count_digits(num))\n            else:\n                nums.append(count_digits(num) - 1)\n        return sum(nums)\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(10) == 1\n        >>> sum_digits(123) == 3\n        \"\"\"\n        if num == 0:\n            return 0\n        return sum(num % 10 for num in str(num))\n\n    def count(nums):\n        \"\"\"\n        Write a function count which takes an array of integers and returns the\n        number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count([]) == 0\n        >>> count([-1, 11, -11]) == 1\n        >>> count([1, 1, 2]) == 3\n        \"\"\"\n        return sum(1 for num in nums if sum_digits(num) > 0)\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(nums):\n        count = 0\n        for num in nums:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    def count_nums_helper(nums):\n        \"\"\"\n        Helper function for count_nums.\n        \"\"\"\n        nums = list(nums)\n        if not nums:\n            return 0\n        num = nums[0]\n        if num < 0:\n            num = -num\n            nums.insert(0, num)\n        return sum_digits(num) + count_nums_helper(nums[1:])\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write your code here\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write code here\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # count = 0\n    # for i in arr:\n    #     if i < 0:\n    #         i = -i\n    #     count += sum(map(int, str(i)))\n    # return count\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(i)\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for x in arr if sum(map(int, str(x))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    def count(nums):\n        \"\"\"\n        Write a function count which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count([]) == 0\n        >>> count([-1, 11, -11]) == 1\n        >>> count([1, 1, 2]) == 3\n        \"\"\"\n        return sum(1 for num in nums if sum_digits(num) > 0)\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the number.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    def is_positive(num):\n        \"\"\"\n        Write a function is_positive which takes an integer and returns True if\n        the number is positive, and False otherwise.\n        >>> is_positive(0) == True\n        >>> is_positive(-1) == False\n        >>> is_positive(1) == True\n        \"\"\"\n        return num > 0\n\n    def is_signed(num):\n        \"\"\"\n        Write a function is_signed which takes an integer and returns True if", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        >>> count_digits(123)\n        3\n        >>> count_digits(-123)\n        3\n        >>> count_digits(0)\n        0\n        \"\"\"\n        num_str = str(num)\n        return len(num_str) - len(num_str.lstrip('-'))\n\n    return sum(count_digits(num) > 0 for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        elif len(arr) == 1:\n            return 1\n        else:\n            return sum(count_nums_helper(arr[1:]) for x in arr[:-1] if x < 0) + count_nums_helper(arr[1:])\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return count_nums_helper(arr[1:]) + 1\n        return count_nums_helper(arr[1:]) + count_nums_helper([arr[0]] + arr[1:])\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write your code here\n    # you can use the following code as a reference\n    # def count_nums(arr):\n    #     return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return count_nums(arr)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    # return sum(1 for i in arr if sum(", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(num)\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return _count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        if num == 0:\n            return 0\n        else:\n            return int(math.log10(abs(num)) + 1)\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the\n        sum of digits in the integer.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum([int(num % 10) for num in str(num)])\n\n    def count_nums_helper(nums):\n        \"\"\"\n        Write a function count_nums_helper which takes an array of integers\n        and returns the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        if num == 0:\n            return 0\n        else:\n            return int(math.log10(abs(num))) + 1\n\n    def count_nums_helper(nums):\n        \"\"\"\n        Write a function count_nums_helper which takes an array of integers and\n        returns the number of elements which has a sum of digits > 0.\n        >>> count_nums_helper([]) == 0\n        >>> count_nums_helper([-1, 11, -11]) == 1\n        >>> count_nums_helper([1, 1, 2]) == 3\n        \"\"\"\n        count = 0\n        for num in nums:\n            if count_digits(num) > 0:\n                count += 1\n        return count\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return count_nums_helper(arr[1:]) + 1\n        return count_nums_helper(arr[1:]) + count_nums_helper([arr[0] - int(str(arr[0]))])\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        if not arr:\n            return 0\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return _count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # count_nums([]) == 0\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(num):\n        if num < 0:\n            return count(-num)\n        return sum(num) > 0\n    return sum(count(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # count = 0\n    # for i in arr:\n    #     if sum(i) > 0:\n    #         count += 1\n    # return count\n    return sum(1 for i in arr if sum(i) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        >>> sum_digits(0)\n        0\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(-1)\n        -1\n        >>> sum_digits(123)\n        4\n        >>> sum_digits(-123)\n        -4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    def count(nums):\n        \"\"\"\n        >>> count([])\n        0\n        >>> count([-1, 11, -11])\n        1\n        >>> count([1, 1, 2])\n        3\n        \"\"\"\n        return sum(1 for num in nums if sum_digits(num) > 0)\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(d) for d in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        >>> sum_digits(0)\n        0\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(-1)\n        -1\n        >>> sum_digits(-123)\n        -2\n        \"\"\"\n        return sum([int(digit) for digit in str(num)])\n\n    def count(nums):\n        \"\"\"\n        >>> count([])\n        0\n        >>> count([-1, 11, -11])\n        1\n        >>> count([1, 1, 2])\n        3\n        \"\"\"\n        count = 0\n        for num in nums:\n            if sum_digits(num) > 0:\n                count += 1\n        return count\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for _ in arr if sum(map(int, str(_))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # The following code is a solution. It works, but is not the most efficient.\n    # You may write a more efficient solution.\n\n    # First, we define a function to get the sum of digits of a number.\n    def sum_digits(num):\n        return sum(int(digit) for digit in str(num))\n\n    # Then, we define a function to get the sum of digits of a list of numbers.\n    def sum_digits_list(num_list):\n        return sum(sum_digits(num) for num in num_list)\n\n    # Finally, we return the number of elements in the list whose sum of digits is greater than 0.\n    return sum(num_list for num_list in arr if sum_digits_list(num_list) > 0)</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 3\n        >>> sum_digits(-123) == -1\n        \"\"\"\n        if num < 0:\n            return -sum_digits(-num)\n        return sum(num % 10**i for i in range(1, 10))\n\n    return sum(1 for num in arr if sum_digits(num) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if sum(str(i)) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        >>> sum_digits(0)\n        0\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(-1)\n        -1\n        >>> sum_digits(123)\n        4\n        >>> sum_digits(-123)\n        -4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    return sum(1 for num in arr if sum_digits(num) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        nums = []\n        for num in arr:\n            nums.append(sum(map(int, str(num))))\n        return len(filter(lambda x: x > 0, nums))\n\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum([sum(map(int, str(num))) for num in arr]) > 0\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        elif sum(arr) > 0:\n            return 1\n        else:\n            return 0\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Sum of digits of a number.\n        >>> sum_digits(-1)\n        -1\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(11)\n        2\n        >>> sum_digits(-11)\n        -2\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    return sum(sum_digits(num) > 0 for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(num):\n        if num < 0:\n            return count(num * -1)\n        return sum(num % 10 for num in num) > 0\n\n    return sum(count(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return 1 + count_nums_helper(arr[1:])\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(num):\n        if num < 0:\n            return count(-num) + 1\n        return sum(num) > 0\n\n    return sum(count(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(nums):\n        count = 0\n        for num in nums:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for x in arr if sum(map(int, str(x))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    if len(arr) == 0:\n        return 0\n    else:\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Return the sum of digits of a number.\n        >>> sum_digits(123) == 3\n        >>> sum_digits(-123) == -1\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    return sum(sum_digits(num) > 0 for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # noinspection PyShadowingBuiltins\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return count_nums_helper(arr[1:]) + 1\n        return count_nums_helper(arr[1:]) + count_nums_helper(arr[1:] + [arr[0]])\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(nums):\n        count = 0\n        for num in nums:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        >>> count_digits(-1)\n        -1\n        >>> count_digits(1)\n        1\n        >>> count_digits(11)\n        2\n        >>> count_digits(-11)\n        -2\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    return sum(count_digits(num) > 0 for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes a number and returns the\n        number of digits in that number.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        if num == 0:\n            return 0\n        else:\n            return int(math.log10(abs(num)) + 1)\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes a number and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum([int(i) for i in str(num)])\n\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(nums):\n        nums = list(map(int, nums))\n        nums.sort()\n        return sum(1 for i in nums if i > 0)\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        return sum([int(digit) for digit in str(num)])\n\n    def count(nums):\n        nums = list(nums)\n        count = 0\n        for num in nums:\n            if sum_digits(num) > 0:\n                count += 1\n        return count\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def count_positive_digits(num):\n        \"\"\"\n        Write a function count_positive_digits which takes an integer and\n        returns the number of digits in the integer which are > 0.\n        >>> count_positive_digits(0) == 0\n        >>> count_positive_digits(123) == 2\n        \"\"\"\n        return count_digits(num) - count_digits(abs(num))\n\n    return sum(count_positive_digits(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if _ > 0) + _helper(arr[1:])\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(nums):\n        count = 0\n        for num in nums:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            num = str(num)\n            if sum(num) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for x in arr if sum(int(i) for i in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        if not arr:\n            return 0\n        return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # \u601d\u8def\uff1a\n    # 1. \u904d\u5386\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u6570\u5b57\u7684\u4e2a\u4f4d\u6570\u5b57\u548c\u5341\u4f4d\u6570\u5b57\u76f8\u52a0\uff0c\u5982\u679c\u548c\u4e3a\u8d1f\u6570\uff0c\u5219\u5c06\u548c\u503c\u53d8\u4e3a\u6b63\u6570\n    # 2. \u904d\u5386\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u6570\u5b57\u7684\u4e2a\u4f4d\u6570\u5b57\u548c\u5341\u4f4d\u6570\u5b57\u76f8\u52a0\uff0c\u5982\u679c\u548c\u503c\u5927\u4e8e0\uff0c\u5219\u5c06\u548c\u503c\u5b58\u5165\u4e00\u4e2a\u5217\u8868\u4e2d\n    # 3. \u904d\u5386\u5217\u8868\uff0c\u5982\u679c\u5217\u8868\u4e2d\u5b58\u5728\u548c\u503c\uff0c\u5219\u5c06\u5217\u8868\u4e2d\u5b58\u5728\u7684\u548c\u503c\u52a01\uff0c\u5426\u5219\u5c06\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u548c\u503c\u52a01\n    # 4. \u8fd4\u56de\u5217\u8868\u4e2d\u5b58\u5728\u7684\u548c\u503c\u4e2a\u6570\n    # \u5206\u6790\uff1a\n    # 1. \u904d\u5386\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u6570\u5b57\u7684\u4e2a\u4f4d\u6570\u5b57\u548c\u5341\u4f4d\u6570\u5b57\u76f8\u52a0\uff0c\u5982\u679c\u548c\u4e3a\u8d1f\u6570\uff0c\u5219\u5c06\u548c\u503c\u53d8\u4e3a\u6b63\u6570\n    # 2. \u904d\u5386\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u6570\u5b57\u7684\u4e2a\u4f4d\u6570\u5b57\u548c\u5341\u4f4d\u6570\u5b57\u76f8\u52a0\uff0c\u5982\u679c\u548c\u503c\u5927\u4e8e0\uff0c\u5219\u5c06\u548c\u503c\u5b58\u5165\u4e00\u4e2a\u5217\u8868\u4e2d\n    # 3. \u904d\u5386\u5217\u8868\uff0c\u5982\u679c\u5217\u8868\u4e2d\u5b58\u5728\u548c\u503c\uff0c\u5219\u5c06\u5217\u8868\u4e2d\u5b58\u5728\u7684\u548c\u503c\u52a01\uff0c\u5426\u5219\u5c06\u5217\u8868\u4e2d\u4e0d\u5b58\u5728\u548c\u503c\u52a01\n    # 4. \u8fd4\u56de\u5217\u8868\u4e2d\u5b58\u5728\u7684\u548c", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(digit) for digit in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # count the number of positive numbers\n    count_pos = 0\n    # count the number of negative numbers\n    count_neg = 0\n    # loop through the array\n    for i in arr:\n        # if the number is positive\n        if i > 0:\n            # count the number of positive numbers\n            count_pos += 1\n        # if the number is negative\n        elif i < 0:\n            # count the number of negative numbers\n            count_neg += 1\n    # return the number of positive numbers\n    return count_pos", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write your code here\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(nums):\n        if not nums:\n            return 0\n        return sum(1 for i in nums if sum(map(int, str(i))) > 0)\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Sum of digits of a number.\n        >>> sum_digits(123)\n        6\n        >>> sum_digits(-123)\n        -1\n        \"\"\"\n        return sum([int(d) for d in str(num)])\n\n    def is_positive(num):\n        \"\"\"\n        Check if a number is positive.\n        >>> is_positive(123)\n        True\n        >>> is_positive(-123)\n        False\n        \"\"\"\n        return num > 0\n\n    def count_positives(nums):\n        \"\"\"\n        Count the number of positive numbers in an array.\n        >>> count_positives([])\n        0\n        >>> count_positives([-1, 11, -11])\n        1\n        >>> count_positives([1, 1, 2])\n        3\n        \"\"\"\n        return sum([is_positive(num) for num in nums])\n\n    return count_positives(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        if num < 0:\n            return 1 + count_digits(-num)\n        else:\n            return len(str(num))\n\n    def count_nums_helper(arr):\n        \"\"\"\n        Write a function count_nums_helper which takes an array of integers\n        and returns the number of elements which has a sum of digits > 0.\n        >>> count_nums_helper([]) == 0\n        >>> count_nums_helper([-1, 11, -11]) == 1\n        >>> count_nums_helper([1, 1, 2]) == 3\n        \"\"\"\n        if not arr:\n            return 0\n        else:\n            return sum(count_nums_helper(nums) for nums in arr.split(','))\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return count_nums_helper(arr[1:]) + 1\n        return count_nums_helper(arr[1:]) + count_nums_helper(arr[1:] + [arr[0]])\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    if len(arr) == 0:\n        return 0\n    else:\n        count = 0\n        for i in arr:\n            if i < 0:\n                count += 1\n            else:\n                count += sum(map(int, str(i)))\n        return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return _count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(num):\n        if num < 0:\n            return count(num * -1)\n        else:\n            return sum(num)\n    return sum(count(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for _ in arr if sum(map(int, str(_))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def count_negatives(arr):\n        \"\"\"\n        Write a function count_negatives which takes an array of integers and\n        returns the number of negative integers in the array.\n        >>> count_negatives([]) == 0\n        >>> count_negatives([-1, 11, -11]) == 1\n        >>> count_negatives([1, 1, 2]) == 0\n        \"\"\"\n        return sum(1 for x in arr if x < 0)\n\n    def count_positives(arr):\n        \"\"\"\n        Write a function count_positives which takes an array of integers and\n        returns the number of positive integers in the array.\n        >>> count_positives([]) == 0\n        >>> count_positives([-1, 11, -11]) == 1\n        >>> count_positives([1, 1, 2]) == 2\n        \"\"\"\n        return sum(1 for x in", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        return len(str(num))\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    def count_nums_helper(arr):\n        \"\"\"\n        Write a function count_nums_helper which takes an array of integers\n        and returns the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums_helper([]) == 0\n        >>> count_nums_helper([-1, 11, -11])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # check if the array is empty\n    if len(arr) == 0:\n        return 0\n\n    # check if the array is not empty\n    # loop through the array\n    count = 0\n    for num in arr:\n        # check if the number is negative\n        if num < 0:\n            # check if the first signed digit is negative\n            if num % 10 < 0:\n                count += 1\n        else:\n            # check if the sum of digits is greater than 0\n            if sum(map(int, str(num))) > 0:\n                count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for i in arr if sum(map(int, str(i))) > 0)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum([int(digit) for digit in str(num)])\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # count the number of positive numbers\n    nums = []\n    for i in arr:\n        if i > 0:\n            nums.append(i)\n    return len(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        else:\n            return sum(1 for x in arr if sum(map(int, str(x))) > 0)\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return count_nums_helper(arr[1:]) + 1\n        return count_nums_helper(arr[1:]) + count_nums_helper([arr[0]] + arr[1:])\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(123) == 3\n        >>> count_digits(123123) == 6\n        \"\"\"\n        if num < 0:\n            num = -num\n        return len(str(num))\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes an integer and returns the sum\n        of its digits.\n        >>> sum_digits(123) == 3\n        >>> sum_digits(123123) == 12\n        \"\"\"\n        return sum(int(digit) for digit in str(num))\n\n    return sum(count_digits(num) for num in arr) - sum(sum_digits(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if i % 10 > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        return sum(int(digit) for digit in str(num))\n\n    def count_nums_helper(arr):\n        if not arr:\n            return 0\n        return sum_digits(arr[0]) - sum_digits(arr[0] * -1)\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes an integer and returns the\n        number of digits in the integer.\n        >>> count_digits(123) == 3\n        >>> count_digits(-123) == 3\n        \"\"\"\n        if num < 0:\n            return len(str(abs(num)))\n        else:\n            return len(str(num))\n\n    def count_negatives(arr):\n        \"\"\"\n        Write a function count_negatives which takes an array of integers and\n        returns the number of negative integers in the array.\n        >>> count_negatives([]) == 0\n        >>> count_negatives([-1, 11, -11]) == 1\n        >>> count_negatives([1, 1, 2]) == 0\n        \"\"\"\n        return sum(1 for i in arr if i < 0)\n\n    def count_positives(arr):\n        \"\"\"\n        Write a function count_positives which takes an array of integers and\n        returns the number of positive integers in the array.\n        >>> count_positives([]) == 0\n        >>> count_positives([-1, 11, -11]) == 2\n        >>> count_positives([1, 1, 2]) == 2\n        \"\"\"\n        return", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        \"\"\"\n        Write a function count_digits which takes a number and returns the\n        number of digits in the number.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(123) == 3\n        \"\"\"\n        if num == 0:\n            return 0\n        return int(math.log10(abs(num)) + 1)\n\n    def sum_digits(num):\n        \"\"\"\n        Write a function sum_digits which takes a number and returns the sum of\n        its digits.\n        >>> sum_digits(0) == 0\n        >>> sum_digits(1) == 1\n        >>> sum_digits(123) == 4\n        \"\"\"\n        return sum(int(n) for n in str(num))\n\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]) == 0\n        >>>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        count = 0\n        for num in arr:\n            if num < 0:\n                num = -num\n            count += sum(map(int, str(num)))\n        return count\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            if sum(map(int, str(i))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # input: list of integers\n    # output: number of elements with sum of digits > 0\n    # e.g. count_nums([-1, 11, -11]) == 1\n    # e.g. count_nums([1, 1, 2]) == 3\n    # e.g. count_nums([]) == 0\n    # e.g. count_nums([-1, 11, -11]) == 1\n    # e.g. count_nums([1, 1, 2]) == 3\n    # e.g. count_nums([]) == 0\n    # e.g. count_nums([-1, 11, -11]) == 1\n    # e.g. count_nums([1, 1, 2]) == 3\n    # e.g. count_nums([]) == 0\n    # e.g. count_nums([-1, 11, -11]) == 1\n    # e.g. count_nums([1, 1, 2]) == 3\n    # e.g. count_nums([]) == 0\n    # e.g. count_nums([-1, 11, -11]) == 1\n    # e", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    # count_nums([]) == 0\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3\n    # count_nums([-1, 11, -11]) == 1\n    # count_nums([1, 1, 2]) == 3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        >>> sum_digits(-1)\n        -1\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(11)\n        2\n        >>> sum_digits(-11)\n        -2\n        \"\"\"\n        return sum([int(digit) for digit in str(num)])\n\n    return sum([sum_digits(num) > 0 for num in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            count += sum(map(int, str(i)))\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        >>> sum_digits(123)\n        3\n        >>> sum_digits(-123)\n        -1\n        \"\"\"\n        return sum(map(int, str(num)))\n    return sum(map(sum_digits, arr)) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count_nums(arr):\n        count = 0\n        for num in arr:\n            if sum(map(int, str(num))) > 0:\n                count += 1\n        return count\n    return _count_nums(arr)"]]