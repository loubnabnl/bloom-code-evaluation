[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write your code here:\n    result = 0\n    for n in arr:\n        if (n < 0):\n            n = n * -1\n            result += n\n        else:\n            result += abs(n)\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Below is a naive implementation of the above. Can you think of a better\n    # way to do this? The time complexity should be O(N).\n    # Note: In Python 2.x, the input array will be a list, but in Python 3.x, it\n    # will be an array.\n    # You can check if input is Python 3.x by calling the isinstance() function\n    # with an array.\n    if arr == []:\n        return 0\n    else:\n        count = 0\n        for num in arr:\n            sum = 0\n            while num!= 0:\n                sum = sum + num % 10\n                num = num // 10\n            if sum > 0:\n                count = count + 1\n        return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def find_num(arr, n):\n        if len(arr) > n:\n            if arr[n] > 0:\n                return 1 + find_num(arr, n + 1)\n            else:\n                return find_num(arr, n + 1)\n        else:\n            return 0\n\n    return find_num(arr, 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # TODO: write your code here\n    # Write a function which takes in an array of integers and returns the sum of \n    # the digits of those numbers in a separate array.\n    def sum_digits(x):\n        return sum([int(digit) for digit in str(x)])\n    # Return the number of elements that have positive sum of digits\n    return sum([int(x > 0) for x in map(sum_digits, arr)])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    result = 0\n    for i in arr:\n        if i < 0:\n            i = abs(i)\n        while i > 0:\n            i, result = divmod(i, 10)\n            if i == 0:\n                break\n\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    sum = 0\n    for n in arr:\n        sum += int(n)\n    if sum == 0:\n        return 0\n    else:\n        return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        n = 0\n        for i in arr:\n            n += i if i!= 0 else count_nums_helper(arr[i:])\n        return n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for num in arr:\n        nums.append(sum([int(n) for n in str(num)]))\n    return len([n for n in nums if n > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if sum(str(num)) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(i, j):\n        if i >= len(arr):\n            return 0\n        num = arr[i]\n        if num < 0:\n            num = num * 10\n        return _helper(i+1, j) + _helper(i+1, j + int(num))\n    return _helper(0, 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    # Notice that the sign of a number is determined by the number of 1's in\n    # its base 10 representation. Thus we can first iterate through the array\n    # counting the number of 1's to determine the sign of each element. Then\n    # we can count the number of non-negative numbers in the array. Finally,\n    # we subtract from this count the number of elements whose sign is negative.\n    count = 0\n    for element in arr:\n        if element % 10 == 1:\n            count += 1\n    return (count - arr.count(-1))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(x > 0 for x in map(int, str(arr)))\n\nThe task is to count numbers in an array, whose sum of digits is greater than 0. My idea was to check the digits of a number, add them together, and then check if it is greater than 0.\nHowever, the code still doesn't work correctly, I can't understand where is the problem.\n\nA:\n\nYou have a bug in the sum() expression in your code. When you iterate over a collection with sum(), you want to stop iterating as soon as the value of the sum is known. In other words, you want to call sum() on a generator expression instead of a list comprehension:\n>>> sum(x > 0 for x in map(int, str(arr)))\n7\n>>> sum(x > 0 for x in map(int, str([1, 1, -1])))\n3\n\nWhat you had before was:\n>>> sum(x > 0 for x in map(int, str([1, 1, -1])))\n(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for number in arr:\n        if sum(str(number)) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def is_sign(num):\n        \"\"\"\n        Function is_sign checks whether num is negative or not. If num is\n        negative, then its first signed digit will be negative: e.g. -123 has\n        signed digits -1, 2, and 3.\n        \"\"\"\n        if num < 0:\n            return True\n        else:\n            return False\n\n    def sum_digits(num):\n        \"\"\"\n        Function sum_digits will sum all the digits of an integer num.\n        >>> sum_digits(-112) == 1 + 2 + 2\n        \"\"\"\n        return sum(int(x) for x in str(num))\n\n    def all_nums_signed():\n        \"\"\"\n        Function all_nums_signed will return a boolean value which is True if\n        all the elements of arr are negative, False otherwise.\n        \"\"\"\n        return not any(num > 0 for num in arr)\n\n    result = 0\n    for num in arr:\n        if all_nums_signed() and is_sign(num):\n            continue\n        else:\n            if sum_digits(num) > 0:\n                result += 1\n\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count(arr):\n        return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)\n\n    return _count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _sum_digits(n):\n        s = 0\n        while n > 0:\n            s = s + n % 10\n            n /= 10\n        return s\n\n    def _count(numbers):\n        cnt = 0\n        for n in numbers:\n            if _sum_digits(n) > 0:\n                cnt += 1\n        return cnt\n\n    return _count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def is_positive(n):\n        return n >= 0\n    def sum_of_digits(n):\n        return reduce(lambda x, y: x + y, map(int, str(n)))\n    def count_positive_digits(n):\n        return sum(1 for i in range(len(str(n))) if is_positive(n[i]))\n    return len([num for num in arr if count_positive_digits(num) > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    sum = 0\n    for i in arr:\n        if i < 0:\n            sum += str(i).count('-')\n        elif i > 0:\n            sum += str(i).count('0') + str(i).count('1') + str(i).count('2') + str(i).count('3') + str(i).count('4') + str(i).count('5') + str(i).count('6') + str(i).count('7') + str(i).count('8') + str(i).count('9')\n\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def is_signed_num(num):\n        return (num < 0) and (num > -num)\n\n    signed_count = 0\n    for num in arr:\n        if is_signed_num(num):\n            signed_count += 1\n        else:\n            pass\n\n    return len(arr) - signed_count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # \u8003\u8651\u9519\u8bef\u8fb9\u754c\u60c5\u51b5\n    def check(nums):\n        if not nums:\n            return 0\n        # \u68c0\u67e5\u6570\u7ec4\u5143\u7d20\u662f\u5426\u90fd\u662f\u6b63\u6570\n        for num in nums:\n            if num < 0:\n                return -1\n        # \u9a8c\u8bc1\u662f\u5426\u7b26\u5408\u6761\u4ef6\n        count = 0\n        for num in nums:\n            num = str(num)\n            # \u9a8c\u8bc1\u6570\u5b57\u7684\u4f4d\u6570\n            length = len(num)\n            if length == 0:\n                continue\n            # \u63d0\u53d6\u6570\u5b57\u7684\u5404\u4e2a\u6570\u4f4d\uff0c\u5e76\u5bf9\u5404\u6570\u4f4d\u6c42\u548c\n            sum = 0\n            for i in range(length):\n                digit = num[i]\n                if digit == '0':\n                    continue\n                else:\n                    sum += int(digit)\n            # \u5224\u65ad\u6570\u4f4d\u548c\u662f\u5426\u5927\u4e8e\u7b49\u4e8e0\n            if sum > 0:\n                count += 1\n        return count\n    # \u4f20\u5165\u53c2\u6570\u5217\u8868\uff0c\u5e76\u8c03\u7528check\u51fd\u6570\u8fdb\u884c\u9a8c\u8bc1\n    return check(arr)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = list(arr)\n    out = 0\n    for i in range(len(arr)):\n        if i == 0:\n            out += int(arr[i])\n        elif arr[i] < 0:\n            out += 1 + int(arr[i]) # -1 becomes 1, -2 becomes 2, etc.\n        else:\n            out += int(arr[i])\n    return out", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    result = 0\n    for number in arr:\n        if number > 0:\n            num_digits = len(str(number))\n            while num_digits > 0:\n                result += num_digits % 10\n                num_digits //= 10\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(x) for x in arr]\n    # loop through each number in the list\n    digit_sum = 0\n    for i in range(len(nums)):\n        digit_sum += int(str(nums[i]))\n        if digit_sum > 0:\n            return digit_sum\n    return digit_sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(int(digit) for digit in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def _count(num):\n        def _add_digits(num):\n            \"\"\"\n            Adds the digits of a number.\n            >>> _add_digits(1)\n            1\n            >>> _add_digits(12)\n            3\n            >>> _add_digits(123)\n            4\n            >>> _add_digits(1234)\n            5\n            >>> _add_digits(12345)\n            6\n            \"\"\"\n            res = 0\n            while num!= 0:\n                res += num % 10\n                num /= 10\n            return res\n        num_digits = len(str(num))\n        if _add_digits(num) > 0:\n            return num_digits + 1\n        return 0\n\n    return sum(_count(x) for x in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sub_nums(a):\n        \"\"\"\n        Returns the sum of all elements in a list except the first element.\n        \"\"\"\n        nums = []\n        for i in range(1, len(a)):\n            nums.append(a[i] - a[0])\n        return nums\n\n    def num_to_digits(a):\n        \"\"\"\n        Converts a number into a list of digits, and returns the list.\n        \"\"\"\n        while a!= 0:\n            nums.append(a % 10)\n            a /= 10\n        return nums\n\n    def sum_digits(nums):\n        \"\"\"\n        Sum all elements in the list nums.\n        \"\"\"\n        sum = 0\n        for num in nums:\n            sum += num\n        return sum\n\n    # if the array is empty, then it is impossible to have a sum of digits > 0\n    if len(arr) == 0:\n        return 0\n\n    # if the array contains only one number, then the number must be positive\n    # or 0, so it is possible to have a sum of digits > 0\n    elif len(arr) == 1:\n        if arr[0] == 0:\n            return 1\n        elif arr[0] > 0:\n            return 1\n        else:\n            return 0\n\n    # if the array contains two", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum_digits = 0\n    for num in arr:\n        sum_digits += sum(map(int, str(num)))\n        if sum_digits > 0:\n            return len(arr)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #  discuss:\n    #  design:\n    #  efficiency:\n    return sum(1 for i in arr if sum(int(c) for c in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = list(arr)\n    cnt = 0\n    for i in arr:\n        sum_digit = 0\n        while i!= 0:\n            sum_digit += int(i % 10)\n            i /= 10\n        if sum_digit > 0:\n            cnt += 1\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        res = 0\n        for num in arr:\n            if sum(num) > 0:\n                res += 1\n        return res\n\n    return count_nums_helper(arr)\n\nThe solution works just fine with the few examples I put there. But when I run the test with a bigger list containing thousands of numbers, it crashes.\nI have tried to debug this function but I couldn't figure out where the problem is. Can someone help me?\nEdit: I have narrowed the problem down to the line res += 1. When I remove that, the program runs fine. But I don't understand why, and don't know how to solve the problem.\n\nA:\n\nMy first step is always to run a profiler. This will tell you exactly where your code is spending time. In your case, I used the built-in timeit module and I discovered that your function spends most of its time in sum. But there's a good reason for that. sum is trying to sum all of the elements in a list. This is an O(n) operation, so it gets slower and slower as you add more elements. A faster way to do this would be to use the built-in sum function.", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for _ in arr if sum(_) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    import operator\n\n    def my_sum(num):\n        if num < 0:\n            num = -num\n            sign = -1\n        else:\n            sign = 1\n        return sum(map(operator.mod, num, range(10)))\n\n    return sum(map(my_sum, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for item in arr:\n        if sum(item) > 0:\n            result += 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for n in arr:\n        if (sum(map(int, str(n))) > 0):\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def is_positive(num):\n        if num < 0:\n            return num > 0\n        return num\n\n    def count_digits(num):\n        digits = []\n        while num:\n            digit = num % 10\n            num = num // 10\n            digits.append(digit)\n        return digits\n\n    total = 0\n    for num in arr:\n        num_digits = count_digits(num)\n        if sum(num_digits) > 0:\n            total += 1\n\n    return total", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write code here\n    if len(arr) == 0:\n        return 0\n    else:\n        flag = 0\n        sum = 0\n        for i in arr:\n            sum += int(str(i))\n            if sum > 0:\n                flag = 1\n            else:\n                break\n        return flag", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    arr_len = len(arr)\n    total = 0\n    for i in arr:\n        if i >= 0:\n            if i < 10 and (i + total) > 0:\n                total += 1\n            elif i >= 10 and (i + total) > 9:\n                total += 1\n        else:\n            if -(i[0] + total) > 0:\n                total += 1\n\n    return total", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for x in arr:\n        digit_sum = 0\n        while x > 0:\n            digit_sum += x % 10\n            x //= 10\n        if digit_sum > 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for _ in arr if _ > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # init the return value\n    num = 0\n    # the main loop\n    for num in arr:\n        if str(num)[-1] == '0':\n            continue\n        digit = 0\n        while num:\n            digit += num % 10\n            num /= 10\n        if digit > 0:\n            num += 1\n        else:\n            num -= 1\n    return num", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def sum_digits(n):\n        # The sum of a number's digits is equal to its value * 10 ** (length - 1)\n        return n * 10 ** len(str(n)) - int(str(n))\n\n    # if the list is empty\n    if len(arr) == 0:\n        return 0\n\n    # if the list has only 1 number in it\n    elif len(arr) == 1:\n        return sum_digits(arr[0]) > 0\n\n    # loop through the list to sum the digits and count the ones that are greater than 0\n    sum = 0\n    for n in arr:\n        sum += sum_digits(n)\n        if sum > 0:\n            return 1\n        sum = 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for n in arr if sum(map(int, str(n))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = list(arr)\n    sumd = 0\n    for num in arr:\n        # Assume num is positive and count digits\n        numstr = str(num)\n        sumd += len(numstr)\n        if sumd > 0:\n            return 1\n        if num < 0:\n            # First digit is negative\n            numstr = numstr[1:]\n            # Append one to end of str\n            numstr += \"1\"\n        # append new digit to end of list\n        arr.append(int(numstr))\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(int(c) for c in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if x >= 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n\n    sum_of_digits = 0\n    for num in arr:\n        num_of_digits = len(str(num))\n\n        if num_of_digits == 0:\n            continue\n\n        sum_of_digits += num_of_digits\n\n        if num_of_digits > 0:\n            return 1\n    return sum_of_digits", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert len(arr) > 0\n    return sum(1 for i in arr if sum(map(int, str(i))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(num):\n        if num < 0:\n            num = -num\n        return sum(n for n in num if n > 0)\n    return sum(count(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for num in arr:\n        sign = 1 if num < 0 else 0\n        num = abs(num)\n        while num:\n            result += sign * num % 10\n            num //= 10\n            sign *= -1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n    for num in arr:\n        if (sum(num) > 0):\n            res += 1\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(sum(x) > 0 for x in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def helper(arr):\n        \"\"\"\n        Helper function to count number of elements in the array.\n        \"\"\"\n        res = 0\n        for number in arr:\n            res += int(number)\n        return res\n    return helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # \u8f93\u5165\u7b2c\u4e00\u4e2a\u5143\u7d20\n    num = arr[0]\n    # \u83b7\u5f97\u8be5\u5143\u7d20\u4e2a\u4f4d\u5230n\u4f4d\u7684\u6570\u5b57\n    nums = [num % 10 for num in str(num)]\n    # \u8ba1\u7b97\u8be5\u5143\u7d20\u6240\u6709\u6570\u5b57\u7684\u79ef\n    total = 1\n    for num in nums:\n        total *= num\n    # \u8ba1\u7b97\u51fa\u8be5\u5143\u7d20\u6240\u6709\u6570\u5b57\u4e4b\u548c\n    sum = int(nums[1])\n    # \u5224\u65ad\u8be5\u5143\u7d20\u6240\u6709\u6570\u5b57\u4e4b\u548c\u662f\u5426\u5927\u4e8e0\n    if sum > 0:\n        count += 1\n        # \u5982\u679c\u662f\uff0c\u8be5\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u4f9d\u7136\u8981\u8fdb\u884c\u5224\u65ad\n        num = arr[1]\n        # \u83b7\u5f97\u8be5\u5143\u7d20\u4e2a\u4f4d\u5230n\u4f4d\u7684\u6570\u5b57\n        nums = [num % 10 for num in str(num)]\n        # \u8ba1\u7b97\u8be5\u5143\u7d20\u6240\u6709\u6570\u5b57\u7684\u79ef\n        total = 1\n        for num in nums:\n            total *= num\n        # \u8ba1\u7b97\u51fa\u8be5\u5143\u7d20\u6240\u6709\u6570\u5b57\u4e4b\u548c\n        sum = int(nums[1])\n        if sum > 0:\n            count += 1\n            # \u5982\u679c\u662f\uff0c\u8be5\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20\u4f9d\u7136\u8981\u8fdb\u884c\u5224\u65ad\n            num = arr[2]\n            # \u83b7\u5f97\u8be5\u5143\u7d20\u4e2a\u4f4d\u5230n\u4f4d\u7684\u6570\u5b57\n            nums = [num % 10 for num in str(num)]\n            # \u8ba1\u7b97\u8be5\u5143\u7d20", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # if the array is empty then the answer is 0\n    if not arr:\n        return 0\n\n    # if the array is not empty\n    return sum(1 for _ in arr if sum(int(d) for d in str(_)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = set(arr)\n    if len(nums) == 0:\n        return 0\n    else:\n        return sum(len(nums & (set(str(x) for x in y))) for y in arr)\n\nnums = []\nfor x in range(1000, 100000):\n    nums.append(x)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def is_sum_neg(num):\n        \"\"\"\n        Is the sum of digits negative?\n        \"\"\"\n        return sum(map(int, str(num))) < 0\n    count = 0\n    for num in arr:\n        if is_sum_neg(num):\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum_digits = 0\n    for i in arr:\n        while i > 0:\n            sum_digits += int(str(i)[-1])\n            i = i // 10\n    return len(filter(lambda x: sum_digits > 0, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    import numpy as np\n\n    # Divide the array into sub-arrays of two elements at a time\n    m = arr.shape[0]\n    rows = np.reshape(arr, (m/2, 2))\n    rows = np.append(rows, np.reshape(arr, (m/2, 2)))\n\n    # All sums of digits of all numbers in the sub-array should be greater than 0\n    return np.sum(np.sum(row) > 0 for row in rows)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for elem in arr if sum([int(digit) for digit in str(elem)]) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if str(num)[-1] == 0:\n            count += 1\n        elif str(num)[-1]!= 0:\n            count += int(str(num)[-1])\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if sum(str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    digits = [int(num) for num in str(arr)]\n    nums_with_sign = []\n    for num in arr:\n        if num > 0:\n            nums_with_sign.append(num)\n        elif num < 0:\n            nums_with_sign.append(-1 * int(num))\n        else:\n            nums_with_sign.append(0)\n    return sum(1 for i in nums_with_sign if sum(digits) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        return sum([int(x) for x in str(num)])\n\n    def has_sum_digits(arr):\n        if len(arr) == 0:\n            return 0\n        if arr[0] < 0:\n            return has_sum_digits(arr[1:]) + 1\n        else:\n            return sum_digits(arr[0]) + has_sum_digits(arr[1:])\n    return has_sum_digits(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # arr is an empty array, return 0\n    if not arr:\n        return 0\n\n    nums = []\n    # if a number is negative, then its first signed digit will be negative\n    for i in arr:\n        if i < 0:\n            if i < -10:\n                first = -1\n            elif i < 0:\n                first = -2\n            else:\n                first = -3\n        else:\n            first = 0\n        # append each number to an array\n        nums.append(first)\n    # use the count_nums function to return the number of elements which has\n    # a sum of digits > 0\n    return count_nums(nums)\n\ncount_nums([-3, 12, -123, 123])\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        result = 0\n        for num in arr:\n            if sum(str(num).split('')) > 0:\n                result += 1\n        return result\n\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        \"\"\"\n        Recursive function to sum digits of a number.\n        >>> sum_digits(0)\n        0\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(123)\n        4\n        >>> sum_digits(-123)\n        4\n        \"\"\"\n        if num == 0:\n            return 0\n        elif num < 0:\n            return -1 * sum_digits(abs(num))\n        else:\n            return num % 10 + sum_digits(num / 10)\n\n    result = 0\n    for num in arr:\n        if sum_digits(num) >= 0:\n            result += 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n\n    # Method 1: Recursion\n    def count_nums_helper(num):\n        if num == 0:\n            return 0\n        else:\n            return num - count_nums_helper(num % 10)\n\n    return sum(count_nums_helper(i) for i in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # use a default return value\n    return sum(1 for num in arr if sum(num))\n\nnums = [1, 2, 3]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count = 0\n    for item in arr:\n        for digit in str(item):\n            if digit == '0':\n                continue\n            if int(digit) < 0:\n                if int(digit) > 9 or int(digit) * 10 < 0:\n                    continue\n            else:\n                if int(digit) > 9 or int(digit) * 10 > 9:\n                    continue\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for n in arr:\n        nums.append(int(str(n)))\n    return len(filter(lambda x: x > 0, map(sum, nums)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    # 1. convert all the integers into string\n    # 2. count the number of digits in each string\n    # 3. sum the digits of the string\n    # 4. compare the sum with 0\n    # 5. return the number of elements with sum > 0\n\n    return sum(int(digits) for digits in [[int(x) for x in num.split()] for num in arr] if sum(digits) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n\n    return sum(1 for i in arr if sum(int(i) for i in str(i)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in arr:\n        for digit in str(i):\n            count += int(digit) > 0\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def is_positive(num):\n        return sum(num) > 0\n\n    def get_signed_digit(num):\n        return num % 10\n\n    # separate negative and positive numbers\n    arr = [num for num in arr if is_positive(num)]\n    # count number of positive numbers\n    count = 0\n    for i in arr:\n        if get_signed_digit(i) < 0:\n            count += 1\n\n    return count\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        n = 0\n        for i in arr:\n            temp = 0\n            for j in str(i):\n                temp = temp + int(j)\n            if temp > 0:\n                n = n + 1\n        return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def sgn(n):\n        \"\"\"Return the sign of the integer n, where n > 0\"\"\"\n        return n if n > 0 else -n\n\n    def num_sum(n):\n        \"\"\"Return the sum of the digits of the integer n\"\"\"\n        return sum(map(int, str(n)))\n\n    return sum(num_sum(n) for n in arr if sgn(n) > 0)\n\nnums = []\nfor _ in range(int(input())):\n    nums += [int(input()) for _ in range(int(input()))]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _is_negative(x):\n        return 0 <= x <= 10 and x!= 10\n\n    def _sum_digits(x):\n        return x and (x - 1) * 10 + x or 0\n\n    count = 0\n    for x in arr:\n        if _is_negative(x):\n            count += sum([sum([sum([sum([sum(d) for d in str(y)])])]) for y in str(x)])\n        else:\n            count += sum([sum([sum([sum(d) for d in str(y)])]) for y in str(x)])\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for i in arr if i > 0 and i < 100)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for n in arr if sum(map(int, str(n))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = sum(i for i in arr if i >= 0)\n    return len(arr) - nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def digit_sum(n):\n        sum = 0\n        for i in reversed(str(n)):\n            sum = sum + int(i)\n        return sum\n    n = len(arr)\n    count = 0\n    for i in arr:\n        if digit_sum(i) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(i) for i in arr]\n    return sum(1 for i in nums if sum(i) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n\n    def gen(num):\n        # if num is negative, start at the next position.\n        if num < 0:\n            return num, 1\n        else:\n            return num, 0\n\n    a, b = next(gen(x) for x in arr)\n    while a or b:\n        if a and b and b + a == 0:\n            a, b = next(gen(b) for x in arr)\n        elif a and b and b - a == 0:\n            a, b = next(gen(-b) for x in arr)\n        else:\n            return len(set(a + b for a, b in zip(a, b)))\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # arr = [1, 1, 2]\n    # return len(set(map(lambda x: int(''.join(str(x) for x in str(arr[-1]) if x>=0), str(arr[-1])))))\n    # arr = [-1, 11, -11]\n    # return 1\n    # arr = [1, -1, -2, -3]\n    # return 2\n    # arr = [-2, -4]\n    # return 1\n    # arr = [-3, -3, -4]\n    # return 2\n\n    return sum(x >=0 for x in arr)\n\n\narr = [-2, -4, 5, -3, -5]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def is_pos(x):\n        \"\"\"\n        Returns True if the number is positive and False otherwise.\n        \"\"\"\n        if x < 0:\n            return False\n        return True\n\n    def digit_sum(x):\n        \"\"\"\n        Returns the sum of the digits of x\n        \"\"\"\n        return sum(x)\n\n    def count(arr):\n        \"\"\"\n        Returns the number of elements which has a digit sum > 0.\n        \"\"\"\n        count = 0\n        for x in arr:\n            if is_pos(x):\n                if digit_sum(x) > 0:\n                    count += 1\n        return count\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def digit_sum(x):\n        digit_sum = 0\n        while x > 0:\n            digit_sum += x % 10\n            x /= 10\n        return digit_sum\n\n    def is_negative(x):\n        if x < 0:\n            return True\n        else:\n            return False\n\n    def digits_of_arr(x):\n        digits = []\n        for i in range(len(x)):\n            digits.append(digit_sum(x[i]))\n        return digits\n\n    result = 0\n    for i in arr:\n        if is_negative(i):\n            digits = digits_of_arr(i)\n            for d in digits:\n                if d < 0:\n                    return result + 1\n            continue\n\n        if digits_of_arr(i)[0] >= 0:\n            result += 1\n\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def return_num(n):\n        return n >= 0\n\n    def sum_digits(n):\n        return sum(str(n))\n\n    def sum_digits_of_neg_num(n):\n        if n < 0:\n            return sum_digits(abs(n))\n        else:\n            return 0\n\n    def test(n):\n        if return_num(n):\n            return sum_digits(n)\n        else:\n            return sum_digits_of_neg_num(n)\n\n    return len([x for x in arr if test(x)])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        # use some list comprehension here to reduce lines\n        if sum([int(i) for i in str(num)]) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    def sum_digits(num):\n        \"\"\"\n        Sum the digits of an integer.\n        If the number is negative, then consider the first signed digit to be negative.\n        >>> sum_digits(1) == 1\n        >>> sum_digits(-1) == -1\n        >>> sum_digits(-123) == 1\n        \"\"\"\n        digit = 0\n        for i in str(num):\n            digit = digit + int(i)\n        return digit\n    sum_digits(arr[0])\n    return len([x for x in arr if sum_digits(x) >= 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        # keep track of how many numbers have a positive sum of digits\n        nums_with_positive_sum = 0\n\n        for i in arr:\n            # each integer is split into a list of digits\n            nums = [int(d) for d in str(i)]\n\n            # keep track of how many numbers have a positive sum of digits\n            if sum(nums) > 0:\n                nums_with_positive_sum += 1\n\n        return nums_with_positive_sum\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Answer:\n    # * 10 to the power of n, where n is the number of digits in number\n    # * 10 to the power of 0\n    # * 10 to the power of sum of digits of number\n    # * 10 to the power of sum of digits of number divided by 10\n    # * 10 to the power of sum of digits of number divided by 10 minus 1\n    # * 10 to the power of sum of digits of number divided by 10 minus 1 multiplied\n    #     by 1\n    # * 10 to the power of sum of digits of number divided by 10 minus 1 multiplied\n    #     by 1 divided by 10\n\n    # if number is negative, add 1 to the sum of digits\n    if len(arr) == 0:\n        return 0\n    else:\n        return sum(1 for _ in arr) - 1\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in arr:\n        for j in str(i):\n            if j == '1':\n                count += 1\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(d) for d in str(arr)]\n    digit_sum = sum(nums)\n    return len([d for d in nums if digit_sum > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def is_signed_num(num):\n        \"\"\"\n        Write a function is_signed_num which takes an integer and returns True\n        if the number is negative and False otherwise.\n        \"\"\"\n        if num < 0:\n            return True\n        else:\n            return False\n\n    nums = filter(is_signed_num, arr)\n\n    return len(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    else:\n        count = 0\n        for i in arr:\n            sum = 0\n            while i > 0:\n                sum = sum + i % 10\n                i = i / 10\n            if sum > 0:\n                count += 1\n        return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = [int(i) for i in arr]\n    count = 0\n    for i in nums:\n        count += sum([int(j) for j in str(i)])\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    import operator\n    if not arr:\n        return 0\n    total = 0\n    for num in arr:\n        total += int(str(num))\n    arr.sort(key=operator.itemgetter(0))\n    return sum(1 for num in arr if sum(num) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    # print(\"arr:\",arr)\n    res = 0\n    for num in arr:\n        if num > 0:\n            res += 1\n        else:\n            return res\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr: return 0\n    for num in arr:\n        for i in range(len(str(abs(num)))):\n            if str(abs(num))[i]!= '0' and str(abs(num))[i]!= '-':\n                break\n            if i == 0:\n                break\n        if i > 0:\n            return 1 + count_nums(arr[:i] + arr[i+1:])\n    return 0\n\nA:\n\nYour current code is a bit more complicated than it needs to be.  There's no need to break out of the loop at every iteration.  Instead, just break out of the loop when you find a negative number, or when you find a number that has a nonzero digit other than 0 or a minus sign.\nAlso, you should implement the recursive call to count_nums within the loop, not outside it.  Right now, your code returns the sum of the number of positive numbers in the array and the number of positive numbers in the array minus the first number in the array.\nHere's a solution that fixes those problems:", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Note: Don't use built-in sum() function for this problem.\n    return sum(1 for x in arr if sum(map(int, str(x))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = arr[:]\n    if nums == []:\n        return 0\n    for i in nums:\n        if i < 0:\n            continue\n        elif i < 0:\n            i = i * 10\n        if int(str(i)) > 0:\n            nums.remove(i)\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def check(num):\n        if len(num) == 0:\n            return 0\n        total = 0\n        for digit in num:\n            total += digit\n        return total - (total % 10)\n    return sum(check(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    # test\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 0\n    if len(arr) == 2:\n        return 0\n    if arr[0] == 0:\n        return 0\n    if arr[0] < 0:\n        return 1\n    if arr[0] >= 10:\n        return 0\n    if arr[1] > 0 or arr[1] < 0:\n        return 0\n    if arr[1] >= 10:\n        return 0\n    if arr[2] > 0 or arr[2] < 0:\n        return 0\n    if arr[2] >= 10:\n        return 0\n    if arr[3] > 0 or arr[3] < 0:\n        return 0\n    if arr[3] >= 10:\n        return 0\n    if arr[4] > 0 or arr[4] < 0:\n        return 0\n    if arr[4] >= 10:\n        return 0\n    if arr[5] > 0 or arr[5] < 0:\n        return 0\n    if arr[5] >= 10:\n        return 0\n    return 1\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    res = 0\n    for num in arr:\n        res += sum(int(digit) for digit in str(num))\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in arr:\n        if sum(map(int, str(i))) > 0:\n            return count_nums(arr[:i + 1]) + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum_digits = 0\n    for num in arr:\n        sum_digits += int(str(num))\n    return sum(1 for i in range(len(arr)) if sum_digits > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    if len(arr) > 0:\n        for x in arr:\n            if x < 0:\n                x = x - (x % 10)\n            if sum(map(int, str(x))) >= 0:\n                result += 1\n    return result\n\nassert count_nums([1, 1, 2]) == 3\nassert count_nums([]) == 0\nassert count_nums([-1, 11, -11]) == 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n\n    def get_counts(arr):\n        count = 0\n        for num in arr:\n            num_signed = num + 10 * (num < 0)\n            count += num_signed\n            if num_signed > 0:\n                return count\n        return count\n\n    return get_counts(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for n in arr:\n        if sum(map(int, str(n))) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for n in arr:\n        nums.append(sum(map(int, str(n))))\n    if sum(nums) > 0:\n        return len(nums)\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #TODO\n    pass", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def count_digits(n):\n        \"\"\"\n        >>> count_digits(-999999)\n        -1\n        >>> count_digits(999999)\n        9\n        \"\"\"\n        return sum(n // 10 ** i for i in range(len(str(n)) + 1))\n\n    def count_positive_nums(arr):\n        \"\"\"\n        >>> count_positive_nums([]) == 0\n        >>> count_positive_nums([-1, 11, -11]) == 0\n        >>> count_positive_nums([1, 1, 2]) == 1\n        \"\"\"\n        return sum(count_digits(x) > 0 for x in arr)\n\n    return sum(count_positive_nums(arr) > 0 for arr in sum_lists(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sum_digits(num):\n        return sum(int(i) for i in str(num))\n\n    arr = list(map(int, arr))\n    nums = [num for num in arr if num > 0]\n    count = 0\n    for num in nums:\n        if sum_digits(num) < 0:\n            return 0\n        elif sum_digits(num) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if sum([int(digit) for digit in str(num)]) >= 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        n = 0\n        while num > 0:\n            num, rem = divmod(num, 10)\n            n += 1\n        return n\n    return sum([1 for num in arr if count_digits(num) > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(x) for x in str(x)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def is_positive(num):\n        return num >= 0\n\n    def count_digits(num):\n        digits = []\n        while num > 0:\n            digits.append(num % 10)\n            num //= 10\n        return digits\n\n    # Store the number of digits to the left of the decimal point\n    # and the number of digits to the right of the decimal point\n    left_digits = 0\n    right_digits = 0\n    for num in arr:\n        if is_positive(num):\n            left_digits += count_digits(num)\n        else:\n            right_digits += count_digits(-num)\n\n    # Add 1 to the number of digits to the left of the decimal point\n    # if all of the digits to the left of the decimal point are zero\n    if left_digits == 0 and all(i == 0 for i in arr):\n        left_digits += 1\n\n    # Add 1 to the number of digits to the right of the decimal point\n    # if all of the digits to the right of the decimal point are zero\n    if right_digits == 0 and all(i == 0 for i in arr):\n        right_digits += 1\n\n    # Count the number", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr, current_sum):\n        if current_sum < 0:\n            current_sum = current_sum * -1\n        for i in range(len(arr)):\n            new_sum = arr[i] + current_sum\n            if new_sum < 0:\n                new_sum = new_sum * -1\n            if new_sum > 0:\n                return _helper(arr, new_sum)\n        return current_sum\n\n    return _helper(arr, 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for x in arr if sum(int(n) for n in str(x)) > 0)\n\narr = [4, 99, -99, -8]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def num_signed_digits(x):\n        return sum(1 for d in str(x) if d.isdigit() and d!= '-0')\n\n    n = 0\n    for i in arr:\n        n += num_signed_digits(i)\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    return sum(i[0]!= 0 for i in arr if i[0]!= 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write your code here\n\n    count = 0\n    for i in arr:\n        if sum(i)>0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for num in arr:\n        while num!= 0:\n            num, rem = divmod(num, 10)\n            nums.append(rem)\n    return sum(1 for n in nums if n > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    digits = [int(x) for x in str(arr)]\n    nums = [digits[i] for i in range(len(digits))]\n    return sum(x > 0 for x in nums)\n\ncount_nums([1, 1, 2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    import itertools\n    def count(nums):\n        return sum(1 for _ in itertools.takewhile(lambda x: x > 0, map(int, str(nums))))\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    # check whether the length of the array is greater than 0\n    if len(arr) == 0:\n        return 0\n\n    # convert each integer to a string\n    arr = list(map(str, arr))\n\n    # create a new empty array\n    sum_digits = []\n\n    # iterate through each element in the array and\n    # add up its digits and store the result in the sum_digits array\n    for x in arr:\n        sum_digits.append(int(x) - int(x[0]))\n\n    # number of elements that have a sum of digits > 0\n    return len([x for x in sum_digits if x > 0])\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    pass", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum_digit = 0\n    for i in arr:\n        sum_digit += int(str(i))\n    if sum_digit > 0:\n        return sum_digit - 1\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    # If the array is empty, return 0\n    if n == 0:\n        return 0\n    # Store all the odd numbers and count their occurrences.\n    odd_nums = []\n    for i in arr:\n        if i % 2 == 1:\n            odd_nums.append(i)\n    num_count = 0\n    # Get the sum of odd numbers and save the occurrences of odd numbers in\n    # a dictionary.\n    for i in odd_nums:\n        odd_sum = sum(map(int, str(i)))\n        odd_count = 1\n        while i > 0:\n            i = i / 10\n            odd_sum = odd_sum + i\n            odd_count = odd_count * 10\n        # Increase the count of occurrences of odd numbers.\n        odd_counts[odd_sum] = odd_count\n        num_count = num_count + odd_count\n    return num_count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        num_signed_digits = 0\n        while num > 0:\n            num, rem = divmod(num, 10)\n            num_signed_digits += rem\n        if num_signed_digits > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i in arr:\n        result += sum([int(d) for d in str(i)])\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def helper(arr):\n        n = 0\n        while arr:\n            n += len(arr)\n            arr = arr[1:]\n        return n\n\n    return helper(arr)\n\nfrom time import time\nt = time()", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums_helper(arr):\n        if len(arr) == 0:\n            return 0\n\n        len_arr = len(arr)\n\n        total = 0\n        for num in arr:\n            total += num\n            if total < 0:\n                total = total * 10 + (num - 1)\n            else:\n                total = total * 10 + num\n\n        if total >= 10:\n            return count_nums_helper(arr[1:]) + 1\n        else:\n            return count_nums_helper(arr[1:])\n\n    return count_nums_helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def helper(num, count):\n        if num == 0:\n            return count\n        else:\n            if num < 0:\n                count += 1\n                return helper(num % 10, count)\n            else:\n                return helper(num % 10, count) + helper(num / 10, count)\n    return helper(sum(arr), 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    # print('Start')\n    n = 0\n    for x in arr:\n        # print(x)\n        n += count_digits(x)\n    # print(n)\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def digit_sum(num):\n        return sum(map(int, str(num)))\n    return sum(num > 0 for num in arr) * len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = arr\n    nums.sort()\n    nums.reverse()\n    nums = [int(x) for x in nums if x>=0]\n    n = 0\n    for i in range(1, len(nums)-1):\n        if (nums[i]+nums[i-1]) > 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for n in arr:\n        num = 0\n        while n!= 0:\n            num += n % 10\n            n //= 10\n        if num > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        if sum([int(i) for i in str(num)]) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([count_negatives(num) for num in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in arr:\n        nums.append(i)\n    nums = [str(n) for n in nums]\n    print(nums)\n    # As long as the array is empty, there is no number\n    if len(nums) == 0:\n        return 0\n    # As long as there is a number, sum up the digits and save it in a list\n    # The next element will be negative, then the last digit will be negative\n    sumDigits = 0\n    for n in nums:\n        sumDigits += int(n)\n    sumDigits = sumDigits % 10\n    # As long as the array is not empty, there is a number which has\n    # a sum of digits > 0\n    if sumDigits >= 0:\n        return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i in arr:\n        if i < 0:\n            result += i + 1\n            i = -i\n        else:\n            result += i\n        if result < 0:\n            return result\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def sub(arr, start, stop, add):\n        # add is initially 0\n        num = 0\n        while start < stop:\n            num += arr[start]\n            if num >= 10:\n                num -= 10\n                add += 1\n            start += 1\n        return add\n\n    nums = list(map(int, arr))\n    if not nums:\n        return 0\n    nums.sort()\n    add = 0\n    for start in range(len(nums)):\n        if start == len(nums) - 1:\n            stop = len(nums)\n        else:\n            stop = start + 1\n        add += sub(nums, start, stop, add)\n    return add", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def count_sums(nums):\n        max_length = max(len(num) for num in nums)\n        total_sums = 0\n        for length in range(max_length + 1):\n            for n in nums:\n                if len(str(n)) >= length:\n                    total_sums += n[length]\n            if total_sums > 0:\n                return total_sums\n        return 0\n\n    return count_sums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in arr:\n        if i < 0:\n            i = str(i)\n        i = sum(int(j) for j in str(i))\n        if i > 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total = 0\n    for num in arr:\n        temp = num\n        while temp > 0:\n            temp = temp - 10\n            total += 1\n    return total\n\ncount_nums([-1, 11, -11])\ncount_nums([1, 1, 2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum1 = 0\n    for i in arr:\n        sum1 += int(str(i)[0])\n    return len([i for i in arr if int(str(i)[0]) < 0]) + sum1 / abs(sum1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            n += 1\n\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def sum_digits(num):\n        num_str = str(num)\n        return sum(int(i) for i in num_str)\n\n    def count(nums):\n        total = 0\n        for num in nums:\n            if sum_digits(num) > 0:\n                total += 1\n        return total\n\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    sum_digits = 0\n    for number in arr:\n        while number!= 0:\n            sum_digits += int(number % 10)\n            number //= 10\n\n    if sum_digits > 0:\n        return 1 + count_nums(arr[::-1])\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    #  \u4e00\u76f4\u60f3\u4e0d\u5230\u53bb\u7528sum, \u4f46\u5176\u5b9e, sum\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u7eaf\u7cb9\u51d1\u6570\u7528\u7684, \u5e76\u6ca1\u6709\u7528\u5230\u6570\u5b66\u4e0a\u7684\u80fd\u529b, \u6240\u4ee5\u4e0d\u7528\n    #  sum(arr)\n    def count_nums1(arr):\n        return len([num for num in arr if sum(map(int, str(num))) > 0])\n\n    return count_nums1(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    total = 0\n    for num in arr:\n        total += sum(int(digit) for digit in str(num))\n    return total", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = arr\n    if not len(nums):\n        return 0\n    res = 0\n    for num in nums:\n        if num < 0:\n            num *= -1\n            num += 10**len(str(abs(num)))\n        res += sum(str(num))\n    return res", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def sum_digits(num):\n        return sum(map(int, str(num)))\n\n    return sum(bool(sum_digits(num)) for num in arr)\n\ncount_nums([0, 1, 0, 1, 0]) # 9\ncount_nums([-1, 0, 1, 1, -1]) # 1\ncount_nums([-2, -2, -2, -2]) # 0\n\nSample test data with explanations\n[0, 1, 0, 1, 0]\nFirst two numbers sum to 2, and are both positive, so count_nums() returns 2.\n[-1, 0, 1, 1, -1]\nFirst two numbers sum to -1, and is negative, so count_nums() returns 1.\n[-2, -2, -2, -2]\nFirst two numbers sum to -4, and are negative, so count_nums() returns 0.</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in arr:\n        if i < 0:\n            i = -i\n        count += sum(map(int, str(i)))\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def count_digits(num):\n        \"\"\"\n        >>> count_digits(0)\n        0\n        >>> count_digits(10)\n        1\n        >>> count_digits(-100)\n        1\n        >>> count_digits(-123)\n        2\n        >>> count_digits(1230)\n        2\n        \"\"\"\n        return sum(1 for _ in str(num))\n\n    def nums_with_sum_gt_0(nums):\n        \"\"\"\n        >>> nums_with_sum_gt_0([])\n        []\n        >>> nums_with_sum_gt_0([-1, 11, -11])\n        [1]\n        >>> nums_with_sum_gt_0([1, 1, 2])\n        [2]\n        \"\"\"\n        n = len(nums)\n        if n == 0:\n            return []\n        numbers = []\n        prev_num = nums[0]\n        for num in nums[1:]:\n            if count_digits(num) > count_digits(prev_num):\n                prev_num = num\n            else:\n                numbers.append(prev_num)\n            if count_digits(num) > 0:\n                numbers.append(num)\n        return numbers\n\n    return nums_with_sum_gt_0(arr)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([1 for num in arr if sum([int(n) for n in str(num)]) > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n\n    count = 0\n\n    for n in arr:\n        num = int(n)\n\n        if num < 0:\n            num = -num\n\n        sum = 0\n\n        while num > 0:\n            sum += num % 10\n            num = num // 10\n\n        if sum > 0:\n            count += 1\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for number in arr:\n        num_str = str(number)\n        num_sum = sum(map(int, num_str))\n        if num_sum > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def sum_digits(n):\n        digits = 0\n        while n >= 10:\n            digits += n % 10\n            n /= 10\n        return digits\n\n    return sum(map(sum_digits, arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def helper(num):\n        \"\"\"\n        Helper function\n        \"\"\"\n        if sum(num) > 0:\n            return 1\n        return 0\n\n    if len(arr) == 0:\n        return 0\n    else:\n        return sum(helper(num) for num in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    nums = arr\n    sign = 0\n    max_sign = 0\n    sum_ = 0\n    n = 0\n\n    while nums:\n        n += 1\n        num = nums[-1]\n        if num < 0:\n            sign += 1\n            num = abs(num)\n        if num == 0:\n            if max_sign < sign:\n                max_sign = sign\n            return max_sign\n        if num == 1:\n            if max_sign < sign:\n                max_sign = sign\n        else:\n            if max_sign < 0:\n                max_sign = 0\n            if max_sign < sign:\n                max_sign = sign\n        sum_ += num\n        nums.pop()\n\n    return max_sign", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    cnt = 0\n    for i in arr:\n        if i < 0:\n            cnt += sum(map(int, str(abs(i))))\n        else:\n            cnt += sum(map(int, str(i)))\n    return cnt", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum_digits = 0\n    for i in arr:\n        sum_digits += int(i)\n    return sum_digits > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    arr = [int(x) for x in str(arr)]\n    # arr = [x for x in str(arr)]\n    return sum([digits(n) for n in arr if digits(n) > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count(arr):\n        result = 0\n        if arr == []:\n            return 0\n        for i in arr:\n            if i < 0:\n                i = -int(str(i)[-1])\n            else:\n                i = int(str(i))\n            if sum(i) >= 0:\n                result += 1\n        return result\n    return count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    import functools\n    return functools.reduce(lambda sum, num: sum + sum(num), arr, 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr: return 0\n    nums = [int(num) for num in arr]\n    result = 0\n    for num in nums:\n        if int(num) > 0:\n            result += int(num) + count_nums(list(reversed(str(abs(num)))))\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    return sum([(sum(map(int, str(n))) > 0) for n in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    sum_arr = sum(arr)\n    for num in arr:\n        num = int(num)\n        sum_arr = sum_arr + num\n        if sum_arr > 0:\n            return 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def sum_digits(num):\n        \"\"\"\n        Recursively sum the digits of a number.\n        >>> sum_digits(0)\n        0\n        >>> sum_digits(1)\n        1\n        >>> sum_digits(12)\n        1\n        >>> sum_digits(123)\n        4\n        \"\"\"\n        return int(str(num)) if num else 0\n\n    def count_negatives(arr):\n        \"\"\"\n        Recursively count the number of negative numbers in an array.\n        >>> count_negatives([])\n        0\n        >>> count_negatives([-1, 11, -11])\n        1\n        \"\"\"\n        return sum(1 for _ in arr if _ < 0)\n\n    def num_negative(num):\n        \"\"\"\n        Return the number of negative digits of a number.\n        >>> num_negative(-1)\n        1\n        >>> num_negative(11)\n        0\n        >>> num_negative(-11)\n        2\n        \"\"\"\n        return num < 0 and (sum_digits(abs(num)) + num_negative(abs(num))) or 0\n\n    def sum_non_zero(arr):\n        \"\"\"\n        Recursively sum the digits of the non-zero elements of an array.\n        >>> sum_non_zero([])\n        0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for x in arr:\n        if x >= 0:\n            continue\n        else:\n            x += 1\n            while x > 0:\n                x -= 10\n                count += 1\n    return count\n\narr = [1, 1, 2]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for i in arr:\n        if str(i)[0] >= '0':\n            if sum(map(int, str(i))) > 0:\n                count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return sum(1 for i in arr if sum(i) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(n):\n        \"\"\"\n        Write a function to count the number of digits in a number.\n        >>> count_digits(0) == 0\n        >>> count_digits(1) == 1\n        >>> count_digits(12) == 2\n        >>> count_digits(123) == 3\n        >>> count_digits(1234) == 4\n        \"\"\"\n        count = 0\n        while n > 0:\n            n, rem = divmod(n, 10)\n            count += 1\n        return count\n\n    # use the recursive way of finding the sum of digits\n    def sum_digits_recursive(n):\n        \"\"\"\n        >>> sum_digits_recursive(0) == 0\n        >>> sum_digits_recursive(1) == 1\n        >>> sum_digits_recursive(12) == 2\n        >>> sum_digits_recursive(123) == 3\n        >>> sum_digits_recursive(1234) == 4\n        \"\"\"\n        if n == 0:\n            return 0\n        else:\n            return n + sum_digits_recursive(n // 10)\n\n    def sum_digits(n):\n        \"\"\"\n        >>> sum_digits(0) == 0\n        >>> sum_digits(", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n    return sum(int(digit) > 0 for digit in str(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n\n    def _helper(arr):\n        result = 0\n        for i in arr:\n            if (i < 0):\n                result += -(i / abs(i) + 1)\n            else:\n                result += (i / abs(i) + 1)\n        return result\n\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # return sum(1 for n in arr if sum(map(int, str(n))) > 0)\n    # return sum(1 for n in arr if sum(map(int, str(n))) > 0)\n    return sum(1 for n in arr if sum(int(digit) for digit in str(n)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for number in arr:\n        for i in xrange(10):\n            if number % 10 == i:\n                if number < 0:\n                    number = -number\n                digit_sum = sum(map(int, str(number)))\n                if digit_sum > 0:\n                    result += 1\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for num in arr if sum(str(num).split('')) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert type(arr) == list, \"count_nums requires a list\"\n    # for now, I only want to solve this for positive numbers\n    # if a number is negative, then its first signed digit will be negative:\n    # e.g. -123 has signed digits -1, 2, and 3.\n    arr = [int(a) for a in arr if int(a) > 0]\n    # we can do this with a list comprehension\n    return len([a for a in arr if sum(a) > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _helper(arr):\n        if not arr:\n            return 0\n        res = 0\n        for num in arr:\n            if num < 0:\n                res += _helper(-num)\n            else:\n                res += _helper(num)\n        return res\n    return _helper(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for _ in arr if sum(map(int, str(_))) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for number in arr if sum(int(digit) for digit in str(number)) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for num in arr:\n        num = str(num)\n        for i, digit in enumerate(reversed(num)):\n            result += int(digit)\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # \u89e3\u51b3\u9898\u76ee\u4e2d\u9664\u4ee50\u7684\u95ee\u9898\n    def count_sums(arr):\n        ret = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            ret += sum(i)\n        return ret\n    # \u4e0d\u9664\u4ee50\uff0c\u4f46\u8fd4\u56de\u7ed3\u679c\u4e3a\u8d1f\u6570\n    def count_nums2(arr):\n        if len(arr) == 0:\n            return 0\n        ret = 0\n        for i in arr:\n            if i < 0:\n                i = -i\n            ret += i\n        return ret\n    # \u95ee\u9898\u7b80\u5316\uff0c\u4e0d\u518d\u5904\u7406\u8d1f\u6570\n    # \u589e\u52a0\u4e00\u4e2a\u4e2d\u95f4\u53d8\u91cf\uff0c\u6700\u540e\u518d\u51cf\u53bb\n    def count_nums3(arr):\n        ret = 0\n        tmp = 0\n        for i in arr:\n            tmp += i\n            if tmp >= 0:\n                ret += 1\n            tmp -= i\n        return ret\n    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return 1\n    else:\n        return count_sums(arr) - count_nums3(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for num in arr:\n        nums.append(sum(map(int, str(num))))\n    return len(filter(lambda x: x > 0, nums))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    assert 0 <= len(arr) <= 10, \"array size out of range\"\n\n    nums = arr[::-1]\n    # number of non-zero elements\n    nums = sum(i!= 0 for i in nums)\n\n    # number of non-empty strings\n    nums += sum(len(i) for i in nums)\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Write your code here\n\n    count = 0\n    for num in arr:\n        if sum(map(int, str(num))) > 0:\n            count += 1\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def _count(nums):\n        if not nums:\n            return 0\n        digits = []\n        for num in nums:\n            for x in str(num):\n                digits.append(x)\n        return len(digits) - sum(map(lambda x: int(x) * int(x), digits))\n    return _count(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_digits(num):\n        count = 0\n        while num:\n            count += 1\n            num //= 10\n        return count\n    return sum([1 for n in arr if sum(count_digits(n)) > 0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(1 for _ in arr if sum(arr) > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    for num in arr:\n        count += len([x for x in str(num) if x.isdigit()])\n        # count += sum(x for x in str(num) if x.isdigit())\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(int(i) > 0 for i in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    sum_digit = 0\n    for n in arr:\n        sum_digit += int(n)\n    if sum_digit <= 0:\n        return 0\n    return len([e for e in arr if int(e) == sum_digit])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in arr:\n        if i > 0:\n            count = 0\n            while i!= 0:\n                i -= 1\n                count += 1\n            print count\n        else:\n            print -1\n    print 0\n\nnums = []\nnums.append(int(raw_input()))\nwhile True:\n    try:\n        num = int(raw_input())\n    except ValueError:\n        break\n    nums.append(num)"]]