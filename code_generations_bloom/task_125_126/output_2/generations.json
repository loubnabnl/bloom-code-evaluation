[["def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    words = txt.split()\n\n    # check if there is a comma, if so split on commas\n    if ',' in txt:\n        words = words.split(',')\n\n    # check if there is a space\n    if'' in txt:\n        words = words.split(' ')\n\n    # check if there is a period\n    if '.' in txt:\n        words = words.split('.')\n\n    # check if there is a colon\n    if ':' in txt:\n        words = words.split(':')\n\n    # check if there is a semicolon\n    if ';' in txt:\n        words = words.split(';')\n\n    # check if there is a question mark\n    if '?' in txt:\n        words = words.split('?')\n\n    # check if there is a exclamation point\n    if '!' in txt:\n        words = words.split('!')\n\n    # check if there is a period\n    if '.' in txt:\n        words = words.split('.')\n\n    # check if there is a colon\n    if ':' in txt:\n        words = words.split(':')\n\n    # check if there is a semicolon", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    if txt.split(','):\n        for word in txt.split(','):\n            words.append(word)\n    elif txt.split(' '):\n        for word in txt.split(' '):\n            words.append(word)\n    else:\n        for char in txt:\n            if ord(char) % 2 == 0:\n                words.append(char)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    txt = txt.replace(\",\", \"\")\n    txt = txt.replace(\".\", \"\")\n    txt = txt.replace(\" \", \"\")\n    txt = txt.replace(\"!\", \"\")\n    txt = txt.replace(\"?\", \"\")\n    txt = txt.replace(\",\", \"\")\n    txt = txt.replace(\".\", \"\")\n    txt = txt.replace(\" \", \"\")\n    txt = txt.replace(\"!\", \"\")\n    txt = txt.replace(\"?\", \"\")\n    txt = txt.replace(\",\", \"\")\n    txt = txt.replace(\".\", \"\")\n    txt = txt.replace(\" \", \"\")\n    txt = txt.replace(\"!\", \"\")\n    txt = txt.replace(\"?\", \"\")\n    txt = txt.replace(\",\", \"\")\n    txt = txt.replace(\".\", \"\")\n    txt = txt.replace(\" \", \"\")\n    txt = txt.replace(\"!\", \"\")\n    txt = txt.replace(\"?\", \"\")\n    txt = txt.replace(\",\", \"\")\n    txt", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt is None:\n        return None\n    words = txt.split()\n    if len(words) == 1:\n        return len(words)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    elif txt.isspace():\n        return []\n    elif txt == ',':\n        return []\n    elif txt.lower() == ',':\n        return []\n    elif txt == ',!':\n        return []\n    elif txt.lower() == ',!':\n        return []\n    elif txt == '!':\n        return []\n    elif txt.lower() == '!':\n        return []\n    elif txt == '!,':\n        return []\n    elif txt.lower() == '!,':\n        return []\n    elif txt == '!,!':\n        return []\n    elif txt.lower() == '!,!':\n        return []\n    elif txt == ',!,!':\n        return []\n    elif txt.lower() == ',!,!':\n        return []\n    elif txt == '!,!,!':\n        return []\n    elif txt.lower() == '!,!,!':\n        return []\n    elif txt == '!,!,!,!':\n        return []\n    elif txt.lower() == '!,!,!,!':\n        return []\n    elif txt == '!,!,!,!,!':\n        return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    word_list = []\n    for word in txt.split(\" \"):\n        word_list.append(word)\n    for word in txt.split(\",\"):\n        word_list.append(word)\n    word_list = list(map(str.lower, word_list))\n    num_odd_order = len(filter(lambda x: ord(x[0]) % 2 == 1, word_list))\n    return num_odd_order", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    split_words = []\n    for word in txt.split():\n        if not word.isspace():\n            split_words.append(word)\n        else:\n            split_words.append('')\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    if len(words) == 1:\n        return [txt]\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Your code here\n    res = []\n    if txt.count(',') == 0:\n        num = 0\n        for letter in txt:\n            num += ord(letter) % 26\n        if num % 2 == 1:\n            res.append(num)\n        else:\n            res.append(txt)\n    else:\n        for word in txt.split(','):\n            res.append(word)\n    return res", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    if txt.count(',') > 0:\n        return txt.split(',')\n    elif txt.count(' ') > 0:\n        return txt.split(' ')\n    else:\n        odd_letters = []\n        for char in txt:\n            if ord(char) % 2 == 1:\n                odd_letters.append(char)\n        return odd_letters\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def split_words_helper(txt, splitter):\n        words = []\n        for i in range(len(txt) - 1):\n            if txt[i] == splitter:\n                words.append(txt[i + 1:])\n                txt = txt[:i + 1]\n            else:\n                break\n        return words\n\n    if len(txt) == 1:\n        return [txt]\n    elif txt.isalpha():\n        return split_words_helper(txt, ',')\n    else:\n        return [ord(txt[0]) + 1 - ord('a')]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [word for word in txt.split(' ') if word] if txt else [ord(i) % 26 for i in txt.lower()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Your code here\n    words = txt.split(',')\n    if len(words) == 0:\n        return 0\n    elif len(words) == 1:\n        return 1\n    else:\n        return len(words)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    word_list = []\n    split_list = []\n    for word in txt.split():\n        split_list = word.split(' ')\n        word_list.append(split_list)\n        if len(word_list) == 1:\n            if len(word) == 1:\n                return len(word)\n            else:\n                return len(word_list[0])\n        else:\n            for word in word_list:\n                if len(word) == 1:\n                    return len(word)\n                else:\n                    return len(word_list[0])\n    return word_list\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt.split(' '):\n        if word == '':\n            words.append('')\n        else:\n            words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    elif txt == ',':\n        return []\n    else:\n        return [word.strip() for word in txt.split(' ') if word.strip()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    if txt.find(\",\") > -1:\n        for word in txt.split(\",\"):\n            words.append(word.split())\n    elif txt.find(\" \") > -1:\n        for word in txt.split(\" \"):\n            words.append(word.split())\n    else:\n        for letter in txt:\n            if ord(letter) % 2 == 1:\n                words.append([letter])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO implement this method\n    return 0", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # your code here\n    words = txt.split(\" \")\n    if words == []:\n        return len(set(txt.lower()))\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    return [word for word in txt.split(',') if word!= '']", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # your code here\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return txt.split(',') if txt.count(',') > 0 else [ord(x) for x in txt.lower() if x.isalpha()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(\" \") > 0:\n        return txt.split(\" \")\n    elif txt.count(\",\") > 0:\n        return txt.split(\",\")\n    else:\n        letters = [ord(char) for char in txt.lower()]\n        odd_letters = [letter for letter in letters if (letter % 2)!= 0]\n        return odd_letters</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # if there are no words to split, return the number of odd letters in the alphabet\n    if txt == '':\n        return len([ord(x) for x in string.ascii_lowercase if ord(x) % 2])\n    # if there are no commas, return the number of odd letters in the alphabet\n    elif txt.count(',') == 0:\n        return len([ord(x) for x in string.ascii_lowercase if ord(x) % 2])\n    # else split the words on commas\n    else:\n        return [txt.split(',')]\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    elif txt == \",\":\n        return [',']\n    elif txt == \"!\":\n        return ['!']\n    elif txt == \" \":\n        return []\n    else:\n        words = []\n        for i in range(len(txt)):\n            if txt[i].isalpha():\n                words.append(txt[i])\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: Implement the function\n    pass", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    elif txt == \",\":\n        return []\n    elif txt == \"!\":\n        return []\n    elif txt == \" \":\n        return []\n    elif txt == \".\":\n        return []\n    elif txt == \",!\":\n        return []\n    elif txt == \"!.,\":\n        return []\n    elif txt == \"!., \":\n        return []\n    elif txt == \"!.,!\":\n        return []\n    elif txt == \"!.,! \":\n        return []\n    elif txt == \"!.,!.\":\n        return []\n    elif txt == \"!.,!. \":\n        return []\n    elif txt == \"!.,!,\":\n        return []\n    elif txt == \"!.,!, \":\n        return []\n    elif txt == \"!.,!,.\":\n        return []\n    elif txt == \"!.,!,. \":\n        return []\n    elif txt == \"!.,!,.!,\":\n        return []\n    elif txt == \"!.,!,.!, \":\n        return []\n    elif txt == \"!.,!,.!,.\":\n        return []\n    elif txt == \"!.,!,.!,. \":\n        return []\n    elif txt == \"!.,!,", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return 0\n    else:\n        if txt.find(' ') == -1:\n            if txt.find(',') == -1:\n                return len(txt)\n            else:\n                return len(txt.split(','))\n        else:\n            return txt.split(' ')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: implement your code here\n    # split on whitespace\n    # if no whitespaces, split on commas\n    # if no commas, return the number of lower-case letters with odd order in the alphabet", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    if txt.isspace():\n        return []\n    if txt.count(',') > 0:\n        return txt.split(',')\n    elif txt.count(' ') > 0:\n        return txt.split()\n    else:\n        return len([i for i in txt if i.isalpha()]) % 26\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in txt.split():\n        if ',' in i:\n            words.append(i.split(','))\n        else:\n            words.append(i.split())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    else:\n        return txt.split(' ')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if len(txt) == 0:\n        return []\n    elif len(txt) == 1:\n        return [txt]\n    else:\n        words = []\n        for word in txt.split():\n            if'' in word:\n                words.append(word.split())\n            elif ',' in word:\n                words.append(word.split(','))\n            else:\n                length = len(word)\n                if length % 2!= 0:\n                    length = length - length % 2\n                words.append(length)\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    result = []\n    for i in txt.split(','):\n        if i.strip():\n            result.append(i.strip())\n    return result", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # if no whitespace\n    if txt.isspace():\n        return []\n    # if no commas\n    elif txt.find(',') == -1:\n        # if all lower-case letters\n        if txt.lower() == txt:\n            # if odd number of letters\n            if len(txt) % 2 == 1:\n                return [txt]\n            else:\n                return []\n        else:\n            return []\n    else:\n        return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Complete this function\n    pass", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # Write your code here\n    if len(txt) == 0:\n        return []\n\n    # Split on whitespace\n    words = txt.split()\n\n    # If no whitespace, split on commas\n    if len(words) == 0:\n        words = txt.split(',')\n\n    # If no commas, return the number of letters with odd order\n    if len(words) == 0:\n        return sum(1 for i in range(len(txt)) if ord(txt[i]) % 2 == 1)\n\n    return words</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import string\n    # split on spaces\n    words = txt.split()\n    # if you have no spaces, you should split on commas\n    if len(words) == 1:\n        words = txt.split(',')\n    # if you have no commas, you should return the number of lower-case letters with odd order in the alphabet\n    elif len(words) == 0:\n        return ord(string.ascii_lowercase[0]) - ord('a')\n    # return the list of words\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.find(' ') == -1:\n        return [txt]\n    elif txt.find(',') == -1:\n        if len(txt) % 2 == 0:\n            return [txt]\n        else:\n            return [txt] + [ord(c) for c in txt.lower() if ord(c) > ord('a')]\n    else:\n        return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [w for w in txt.split() if w]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    txt = txt.lower()\n    words = txt.split(' ')\n    if len(words) == 1:\n        return txt\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [word.strip() for word in txt.split() if word.strip()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # \u521b\u5efa\u4e00\u4e2a\u7a7a\u5217\u8868\uff0c\u7528\u4e8e\u5b58\u50a8\u5355\u8bcd\n    words = []\n    # \u5faa\u73af\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u5982\u679c\u9047\u5230\u7a7a\u683c\uff0c\u5c31\u5c06\u5355\u8bcd\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\uff0c\u7136\u540e\u7ee7\u7eed\u904d\u5386\n    for char in txt:\n        if char =='':\n            words.append(txt[:txt.find(' ')])\n            txt = txt[txt.find(' ') + 1:]\n        elif char == ',':\n            words.append(txt[:txt.find(',')])\n            txt = txt[txt.find(',') + 1:]\n        else:\n            break\n    # \u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u8fd8\u6709\u5355\u8bcd\uff0c\u5c06\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u6dfb\u52a0\u5230\u5217\u8868\u4e2d\n    if len(txt) > 0:\n        words.append(txt)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    txt = txt.lower()\n    # split on whitespace\n    words = txt.split()\n    # if no whitespace, split on commas\n    if len(words) == 1:\n        words = txt.split(',')\n    # if no commas, return number of odd letters\n    if len(words) == 0:\n        return len(set(txt)) - len(set(txt.lower()))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    words = txt.split()\n    if len(words) == 1:\n        return ord(words[0]) % 26\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    return [w for w in txt.split(\" \") if w!= \"\"] if \" \" in txt else txt.split(\",\") if \",\" in txt else len(set(txt)) % 26", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return list(filter(None, re.split(r'[,\\s]+', txt)))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # write your code here\n    words = txt.split()\n    if not words:\n        return 0\n    if ',' in words:\n        words = words.split(',')\n    else:\n        words = words.split()\n    return len(words)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # note that ord('a') = 0 and ord('z') = 25\n    # The number of letters in the alphabet is 26\n    # The number of lower-case letters is 26 - 1 = 25\n    # The number of odd letters is 25 - 1 = 24\n    # The number of even letters is 25 = 1\n    # The number of letters in the alphabet with odd order is 24 + 1 = 25\n    # The number of letters in the alphabet with even order is 24 + 0 = 24\n    # The number of letters in the alphabet with odd order is 25 - 1 = 24\n    # The number of letters in the alphabet with even order is 25 = 1\n    # The number of letters in the alphabet with odd order is 24 + 1 = 25\n    # The number of letters in the alphabet with even order is 24 + 0 = 24\n    # The number of letters in the alphabet with odd order is 25 - 1 = 24\n    # The number of letters in the alphabet with even order is 25 = 1\n    # The number of letters in the alphabet with odd order is 24 + 1 = 25\n    # The number of letters in the alphabet with even order is 24 + 0 = 24\n    # The number of letters in the alphabet with odd order is", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def split_words1(txt):\n        if txt == '':\n            return []\n        return txt.split(',') if ',' in txt else [txt]\n    def split_words2(txt):\n        if txt == '':\n            return []\n        return txt.split() if'' in txt else [txt]\n    def split_words3(txt):\n        if txt == '':\n            return []\n        return txt.split() if ',' in txt else [txt]\n    def split_words4(txt):\n        if txt == '':\n            return []\n        return txt.split() if'' in txt else [txt]\n    def split_words5(txt):\n        if txt == '':\n            return []\n        return txt.split() if ',' in txt else [txt]\n    def split_words6(txt):\n        if txt == '':\n            return []\n        return txt.split() if'' in txt else [txt]\n    def split_words7(txt):\n        if txt == '':\n            return []\n        return txt.split() if ',' in txt else [txt]\n    def split_words8(txt):", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # your code here\n    words = txt.split(' ')\n    if len(words) == 1:\n        return len(words[0].lower()) % 2\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    return list(filter(None, re.split(r'( |,)|(\\W+)', txt)))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # A list to store the split words in\n    words = []\n    # If there is no whitespace in the text\n    if not txt.isspace():\n        # Split on commas\n        words = txt.split(',')\n        # If there is no comma in the text\n        if len(words) == 0:\n            # Calculate the number of letters with odd order in the alphabet\n            return sum(1 for char in txt if ord(char) % 2 == 1)\n    # If there is whitespace in the text\n    else:\n        # Split on whitespaces\n        words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return list(map(lambda x: x.strip(), txt.split(' ')))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    words = txt.split()\n    if not words:\n        return len([c for c in txt if c.islower() and c.isdigit()])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # I did this part first, I am not sure if it is correct, I am not sure if I should use a for loop or a while loop\n    if len(txt) == 0:\n        return []\n    else:\n        while True:\n            if txt[0] in [' ', ',']:\n                return [txt[0:-1]]\n            elif txt[0].isalpha():\n                return [txt[0]]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # This is the correct solution\n    # return [word for word in txt.split()]\n    # This is the wrong solution\n    # return [word for word in txt.split(' ')]\n    # This is the wrong solution\n    # return [word for word in txt.split(',')]\n    # This is the wrong solution\n    # return [word for word in txt.split('.')]\n    # This is the wrong solution\n    # return [word for word in txt.split('!')]\n    # This is the wrong solution\n    # return [word for word in txt.split('?')]\n    # This is the wrong solution\n    # return [word for word in txt.split('!')]\n    # This is the wrong solution\n    # return [word for word in txt.split('?')]\n    # This is the wrong solution\n    # return [word for word in txt.split('?')]\n    # This is the wrong solution\n    # return [word for word in txt.split('.')]\n    # This is the wrong solution\n    # return [word for word in txt.split(',", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO\n\n    # return str(len([ord(c) for c in txt if ord(c) % 2 == 1])) if txt.count(' ') == 0 else txt.split(' ')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(\" \"):\n        return [word for word in txt.split(\" \")]\n    elif txt.count(\",\"):\n        return [word for word in txt.split(\",\")]\n    else:\n        return sum(ord(c) % 26 for c in txt.lower())", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # split on whitespace\n    words = txt.split()\n\n    # if there are no whitespaces in the text, split on commas\n    if len(words) == 1:\n        words = txt.split(',')\n\n    # if there are no commas, then split on lower-case letters\n    if len(words) == 1:\n        words = txt.split('')\n\n    # get the number of words\n    num_words = len(words)\n\n    # if the number of words is odd, return the number of lower-case letters\n    if num_words % 2!= 0:\n        return ord('a') + num_words - 1\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    if txt.find(' ')!= -1:\n        for word in txt.split():\n            words.append(word)\n    elif txt.find(',')!= -1:\n        for word in txt.split(','):\n            words.append(word)\n    elif txt.lower() == txt:\n        return ord(txt[0]) % 26\n    else:\n        return len(txt) % 26\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def get_odd_letters(string):\n        '''\n        Returns the number of odd letters in the alphabet\n        '''\n        return sum(ord(letter) % 2 for letter in string)\n\n    # Split on white spaces\n    words = txt.split()\n    # If no white spaces\n    if len(words) == 1:\n        return get_odd_letters(txt)\n\n    # Split on commas\n    words = txt.split(',')\n    # If no commas\n    if len(words) == 1:\n        return get_odd_letters(words[0])\n\n    # Return list\n    return words\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return 0\n    if txt.find(\" \") == -1:\n        return txt.split(\",\")\n    return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    words = txt.split(',')\n    if len(words) == 0:\n        words = txt.split(' ')\n    if len(words) == 0:\n        return len(set(txt.lower()) - set('abcdefghijklmnopqrstuvwxyz'))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    words = words if words else txt.split(',')\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    if txt.count(\",\") == 0:\n        txt_lower = txt.lower()\n        return [txt_lower[i:i+1] for i in range(0,len(txt_lower),2)]\n    else:\n        return txt.split(\",\")", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: Implement the function\n    # TODO: Test your function with the test cases\n\n    # Your code here\n    pass", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in txt:\n        if i in ',':\n            words.append(i)\n        elif i.isalnum():\n            if i.islower():\n                if ord(i) % 2!= 0:\n                    words.append(i)\n            else:\n                words.append(i)\n        else:\n            words.append(i)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    split_words = []\n    if txt == '':\n        split_words = []\n    elif txt.count(',') > 0:\n        split_words = txt.split(',')\n    else:\n        split_words = txt.split()\n        for word in split_words:\n            split_words.append(len(''.join([letter for letter in word if ord(letter) % 2])) % 26)\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(' ') == 0:\n        return txt.split(',')\n    else:\n        return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import string\n    import re\n    # split on whitespace\n    words = re.split('[\\s,]+', txt)\n    # replace all characters with a-z\n    words = [re.sub(r'[^a-zA-Z]+', '', word) for word in words]\n    # convert to list\n    return [word for word in words if len(word) > 0]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # your code here\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: Implement your solution here\n    # Hint: Use the built-in function split(sep=None, maxsplit=-1) to split the text on whitespace or commas\n    # Hint: Use the built-in function ord() to get the number of odd lower-case letters in the alphabet\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.split(','):\n        return txt.split(',')\n    else:\n        return len([x for x in txt if x.islower() and x.isalpha() and ord(x) % 2 == 1])", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    word_list = []\n    words = txt.split(' ')\n    for word in words:\n        word_list.append(word)\n\n    return word_list", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def is_number(s):\n        try:\n            float(s)\n            return True\n        except ValueError:\n            return False\n    if not txt:\n        return []\n    words = txt.split(' ') if txt.strip() else [txt]\n    # remove numbers\n    words = [w for w in words if not is_number(w)]\n    # remove commas\n    words = [w for w in words if ',' not in w]\n    # return odd letters\n    return [ord(l) - ord('a') + 1 for l in words]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.isspace():\n        return [txt]\n    elif txt.find(',')!= -1:\n        return txt.split(',')\n    else:\n        return len([x for x in txt if ord(x) % 2 == 1])\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Split on whitespace\n    words = txt.split(' ')\n    # if no spaces, split on commas\n    if len(words) == 1:\n        words = txt.split(',')\n    # if no commas, calculate the number of letters in odd order\n    if len(words) == 1:\n        return len([ord(x) for x in txt.lower() if x >= ord('a') and x <= ord('z')]) % 2\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    words = txt.split()\n\n    # split on commas\n    if ',' in txt:\n        words = txt.split(',')\n\n    # return number of lower case letters with odd order in the alphabet\n    if len(words) == 0:\n        return 0\n    else:\n        return sum(ord(x) % 2 for x in words)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import re\n    if txt == '':\n        return ['']\n    else:\n        words = re.split(r'\\W+', txt)\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 1:\n        return len(set([ord(x) for x in txt.lower()]) - set([0]))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    txt = txt.lower()\n    split_list = []\n    if txt.count(' ') > 0:\n        split_list = txt.split(' ')\n    elif txt.count(',') > 0:\n        split_list = txt.split(',')\n    else:\n        split_list = [txt[0]]\n        for i in range(1, len(txt)):\n            if ord(txt[i]) % 2!= 0:\n                split_list.append(txt[i])\n    return split_list", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Implement this function\n    # Return a list of words, or number of odd letters\n    # If no whitespaces, commas, or letters, return 0\n    txt = txt.lower()\n    if txt.isdigit():\n        return 0\n    else:\n        words = txt.split(\" \")\n        for i in words:\n            if i.isdigit():\n                return 0\n        if txt.isalpha():\n            return len(set(txt))\n        else:\n            return 0", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    txt = txt.lower()\n    words = txt.split(' ')\n    if len(words) == 0:\n        return 0\n    else:\n        return len(words)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Implement the function below\n    words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    if txt == '':\n        return ['']\n    else:\n        return [txt.split()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    split_words = []\n    if txt == '':\n        split_words.append(len(str(ord('a') + 1)[::-1]))\n    else:\n        words = txt.split()\n        for word in words:\n            if word!= '':\n                split_words.append(word)\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # write your code here\n    return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.strip() == '':\n        return []\n    else:\n        # split on whitespaces\n        words = txt.split()\n        # if there is only one word return it\n        if len(words) == 1:\n            return [words[0]]\n        else:\n            # if there are multiple words, check if there is a comma\n            if ',' in txt:\n                # split on commas\n                words = txt.split(',')\n            else:\n                # if there is no comma, check if there is an odd number of lower case letters\n                words = list(map(str.lower, words))\n                odd = sum(1 for _ in words if ord(_) % 2 == 1)\n                return [words[0]] + odd", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt.split(' '):\n        words.append(word)\n    if len(words) == 0:\n        return 0\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    elif txt.count(\" \") == 0:\n        if txt.count(\",\") == 0:\n            return [ord(txt[0])]\n        else:\n            return txt.split(\",\")\n    else:\n        return txt.split(\" \")", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def odd_letters(str):\n        '''\n        This function will return the number of odd letters in the string, you can use the ord() function to get the\n        position of the letters in the alphabet, then you can use the modulo operator to get the remainder after division\n        by 25 (the number of letters in the alphabet), if the remainder is odd then you know the letter is odd, if not it is\n        even, the modulo operator is '% 25'\n        '''\n        return len([letter for letter in str if ord(letter) % 25 % 2])\n\n    if not txt:\n        return 0\n    txt = txt.replace(' ', '')\n    if txt.count(',') == 1:\n        return split_words(txt.split(','))\n    return odd_letters(txt.lower())</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    words = txt.split(\",\") if txt.find(\",\")!= -1 else txt.split(\" \")\n    # take the first letter from each word and make a list of these letters\n    letters = []\n    for word in words:\n        letters.append(word[0])\n    # if there are an even number of letters, return 0\n    if len(letters) % 2 == 0:\n        return 0\n    # return the number of letters with odd order in the alphabet\n    return len(set(letters)) % 26</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Function to split a string on whitespace\n    def split_on_whitespace(txt):\n        # If the string has no spaces, split on commas\n        if txt.find(' ') == -1:\n            return txt.split(',')\n        # If the string has spaces, split on whitespace\n        return txt.split()\n\n    # Function to count the number of letters in a string\n    def count_letters(txt):\n        # Initialize the count\n        count = 0\n        # Iterate over each letter in the string\n        for letter in txt:\n            # If the letter is not in the alphabet, skip it\n            if letter.isalpha():\n                # Increment the count\n                count += 1\n        # Return the count\n        return count\n\n    # Function to count the number of odd letters in a string\n    def count_odd_letters(txt):\n        # Initialize the count\n        count = 0\n        # Iterate over each letter in the string\n        for letter in txt:\n            # If the letter is not in the alphabet, skip it\n            if letter.isalpha():\n                # If the letter is odd, increment the count\n                if ord(letter) % 2!= 0:\n                    count += 1\n        # Return the count", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # this code works but i dont understand why\n    # split_words(\"Hello world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"Hello,world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"abcdef\") == 3\n\n    # this code works but i dont understand why\n    # split_words(\"Hello world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"Hello,world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"abcdef\") == 3\n\n    # this code works but i dont understand why\n    # split_words(\"Hello world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"Hello,world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"abcdef\") == 3\n\n    # this code works but i dont understand why\n    # split_words(\"Hello world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"Hello,world!\") == [\"Hello\", \"world!\"]\n    # split_words(\"abcdef\") == 3", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def word_split(txt):\n        words = []\n        for word in txt.split(' '):\n            words.append(word)\n        return words\n\n    def comma_split(txt):\n        words = []\n        for word in txt.split(','):\n            words.append(word)\n        return words\n\n    def odd_letters(txt):\n        letters = []\n        for letter in txt.lower():\n            if ord(letter) % 2!= 0:\n                letters.append(letter)\n        return len(letters)\n\n    words = word_split(txt)\n    if words == []:\n        words = comma_split(txt)\n    if words == []:\n        words = odd_letters(txt)\n\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # split on whitespaces\n    split_words = txt.split()\n\n    # if no whitespaces in the text\n    if len(split_words) == 1:\n        # split on commas\n        split_words = txt.split(',')\n\n    # if no commas in the text\n    if len(split_words) == 1:\n        # calculate number of lower-case letters with odd order in the alphabet\n        split_words = len(txt) - (len(txt.lower()) % 2)\n\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    split_words = []\n    for i in range(len(txt)):\n        if txt[i] == \" \":\n            split_words.append(txt[i:i+1])\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.isspace():\n        return [txt]\n    elif txt.find(','):\n        return txt.split(',')\n    else:\n        return [txt.lower() for i in range(ord('a'), ord('z') + 1) if txt.lower()[i].isdigit()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    split_list = []\n    if txt.find(' ')!= -1:\n        split_list = txt.split(' ')\n    elif txt.find(',')!= -1:\n        split_list = txt.split(',')\n    else:\n        for i in range(len(txt)):\n            if ord(txt[i]) % 2!= 0:\n                split_list.append(txt[i])\n    return split_list", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [word for word in txt.split() if word!= '']", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: Implement your function here\n    # For now just return the number of lower-case letters with odd order in the alphabet\n    return len([ord(c) for c in txt if c.islower()]) % 2", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for i in txt.split(' '):\n        if i!= \"\":\n            words.append(i)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.strip() == '':\n        return []\n    if txt.count(',') == 0:\n        if txt.count(' ') == 0:\n            return [ord(x) for x in txt.lower()]\n        else:\n            return txt.split()\n    else:\n        return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def is_digit(char):\n        return char.isdigit()\n    def is_letter(char):\n        return char.isalpha()\n    def is_punct(char):\n        return char.ispunct()\n    def is_whitespace(char):\n        return char.isspace()\n    def is_upper(char):\n        return char.isupper()\n    def is_lower(char):\n        return char.islower()\n    def is_number(char):\n        return is_digit(char)\n    def is_letter(char):\n        return is_letter(char)\n    def is_punct(char):\n        return is_punct(char)\n    def is_whitespace(char):\n        return is_whitespace(char)\n    def is_upper(char):\n        return is_upper(char)\n    def is_lower(char):\n        return is_lower(char)\n    def is_number(char):\n        return is_number(char)\n    def is_letter(char):\n        return is_letter(char)\n    def is_punct(char):\n        return is_punct(char)\n    def is_whitespace(char):\n        return is_whitespace(char)\n    def is_upper(char):\n        return is_upper(char)\n    def", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [word for word in txt.split(' ') if word!= '']", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    if txt.find(' ') == -1:\n        return txt.split(',')\n    else:\n        return txt.split(' ')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt.split(' '):\n        words.append(word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.isspace():\n        return [txt]\n    if txt.count(',') > 0:\n        return [word.strip() for word in txt.split(',')]\n    else:\n        # Get the count of letters in the string\n        letter_count = txt.lower().count(letter for letter in txt if letter.isalpha())\n        \n        # Get the count of letters in the string with odd order\n        odd_letter_count = (letter_count - letter_count % 2) % 2\n        \n        # Return the count of odd letters\n        return odd_letter_count</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import re\n    words = txt.split(\" \")\n    if len(words) == 0:\n        return 0\n    elif len(words) == 1:\n        return 1\n    else:\n        return len(re.findall(\"[a-z]\", txt))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(',') > 0:\n        return txt.split(',')\n    elif txt.count(' ') > 0:\n        return txt.split(' ')\n    else:\n        chars = [ord(c) for c in txt]\n        odd_letters = 0\n        for char in chars:\n            if char % 2 == 1:\n                odd_letters += 1\n        return odd_letters", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # write your code here\n    if txt.isspace():\n        print(txt)\n    else:\n        words = txt.split(\" \")\n        print(words)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split(' ')\n    if len(words) == 1:\n        words = txt.split(',')\n    if len(words) == 1:\n        return len([letter for letter in txt if ord(letter) % 2])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [word.lower() for word in txt.split(' ')] if txt else [ord(i) % 26 for i in txt.lower()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.find(',') == -1:\n        return len(set(txt.lower())) - 1\n    else:\n        return [word.split(' ') for word in txt.split(',')]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # split the string on whitespace\n    word_list = txt.split()\n\n    # if no whitespace exists, split on commas\n    if len(word_list) == 1:\n        word_list = txt.split(',')\n\n    # if no commas, return the number of odd-ordered letters\n    if len(word_list) == 0:\n        return len([letter for letter in txt.lower() if ord(letter) % 2!= 0])\n\n    # return the list of words\n    return word_list", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [word.strip() for word in txt.split(',')] if ',' in txt else [ord(letter) % 26 for letter in txt.lower()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: implement this method\n    words = []\n    for word in txt.split():\n        if word.find(',')!= -1:\n            words.append(word.split(','))\n        else:\n            words.append(word.split())\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    word_list = []\n    if txt.strip() == '':\n        return len(''.join([c for c in txt if c.isalpha() and ord(c) % 2]))\n    else:\n        if txt.strip().find(' ')!= -1:\n            word_list = txt.split()\n        elif txt.strip().find(',')!= -1:\n            word_list = txt.split(',')\n        else:\n            for letter in txt:\n                if letter.isalpha():\n                    word_list.append(letter)\n    return word_list</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    #TODO\n\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(\" \") > 0:\n        words = txt.split()\n    elif txt.count(\",\") > 0:\n        words = txt.split(\",\")\n    else:\n        # Get the number of lower case letters with odd order\n        letters = ord('a') + 1\n        odd_order_letters = 0\n        while letters <= ord('z'):\n            if letters & 1:\n                odd_order_letters += 1\n            letters += 1\n        return odd_order_letters", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # write your code here\n    if txt == '':\n        return []\n    if txt.count(',') == 0:\n        return len(set(txt.lower()))\n    return txt.split()\n\nsplit_words(\"Hello world!\")", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import re\n    import string\n    import collections\n    words = txt.split(',')\n    word_list = []\n    for word in words:\n        word_list.append(word)\n    word_list = [re.sub(r'[^\\w\\s]', '', word) for word in word_list]\n    word_list = [word for word in word_list if word]\n    word_list = [word for word in word_list if word.isalpha()]\n    word_list = [word for word in word_list if word.islower()]\n    word_list = [word for word in word_list if len(word) % 2 == 0]\n    word_list = [word for word in word_list if ord('a') <= ord(word[0]) <= ord('z')]\n    return word_list\n\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return([txt.split()] if ',' in txt else [len(set(txt)) % 26])", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Implementation\n    split_words = []\n    # if the string is empty return 0\n    if not txt:\n        return 0\n    # split the words in the string\n    words = txt.split()\n    # if the string contains only one word return the number of lower-case letters with odd order in the alphabet\n    if len(words) == 1:\n        return ord(words[0].lower()) % 26\n    # if the string contains only one word return the number of lower-case letters with odd order in the alphabet\n    if len(words) == 0:\n        return 0\n    # if the string contains only one word return the number of lower-case letters with odd order in the alphabet\n    if len(words) == 2:\n        return ord(words[0].lower()) % 26 + ord(words[1].lower()) % 26\n    # if the string contains only one word return the number of lower-case letters with odd order in the alphabet\n    if len(words) == 3:\n        return ord(words[0].lower()) % 26 + ord(words[1].lower()) % 26 + ord(words[2].lower()) % 26\n    # if the string contains only one word return the number of lower-case letters with odd order in the alphabet\n    if len(words) == 4:", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.find(\" \") == -1:\n        if txt.find(\",\") == -1:\n            return len([ord(c) for c in txt.lower() if ord(c) % 2!= 0])\n        else:\n            return [txt.split(\",\")]\n    else:\n        return txt.split(\" \")", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import string\n    import collections\n    import re\n    #find the number of words in the string\n    wordcount = len(re.findall(r'\\w+', txt))\n    #split the string on spaces\n    words = txt.split()\n    #remove punctuation\n    words = [word.lower() for word in words if word.isalnum()]\n    #group the words by length\n    wordsbylen = collections.defaultdict(list)\n    for word in words:\n        wordsbylen[len(word)].append(word)\n    #count the number of words for each length\n    wordcounts = collections.Counter(wordsbylen)\n    #count the number of words with odd length\n    oddlength = sum(wordcounts[len(word)] for word in wordcounts if len(word) % 2 == 1)\n    #return the odd length words\n    return wordcounts.keys() if oddlength > 0 else wordcounts.values()\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    if txt.find(',') > 0:\n        words = txt.split(',')\n    else:\n        for i in range(len(txt)):\n            if txt[i].isalpha():\n                if i % 2 == 1:\n                    words.append(txt[i])\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 1:\n        return words\n    elif len(words) == 0:\n        return []\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on space if it exists\n    words = txt.split()\n    # if no spaces, split on commas\n    if len(words) == 0:\n        words = txt.split(',')\n    # if no commas, check if any letters are in the lower case\n    elif len(words) == 0:\n        words = len(set(txt.lower()))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 1:\n        return [words[0], len(words[0]) % 26]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    txt = txt.lower()\n    words = []\n    for word in txt.split(','):\n        words.append(word)\n    if len(words) == 0:\n        return len(list(set(txt)))\n    for word in words:\n        if word == '':\n            continue\n        word = word.strip()\n        if'' in word:\n            words.append(word.split(' '))\n        else:\n            words.append(word.split(','))\n    return words</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def get_odd_ord_letters(txt):\n        '''\n        Given a string of text, return the number of lower-case letters with odd order in the alphabet, ord('a') = 0, ord('b') = 1,... ord('z') = 25\n        Examples\n        get_odd_ord_letters(\"Hello world!\") == 0\n        get_odd_ord_letters(\"Hello,world!\") == 2\n        get_odd_ord_letters(\"abcdef\") == 3\n        '''\n        l = []\n        for i in txt:\n            if i.islower():\n                if ord(i) % 2 == 1:\n                    l.append(i)\n        return len(l)\n    \n    txt = txt.lower()\n    if \",\" in txt:\n        return txt.split(\",\")\n    else:\n        return get_odd_ord_letters(txt)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    if len(words) == 1:\n        return words[0]\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import re\n    import string\n    import collections\n    import itertools\n    import math\n\n    # if string contains commas, split on commas\n    if re.search(r',', txt):\n        words = txt.split(',')\n    else:\n        # if no commas, split on whitespace\n        words = txt.split()\n\n    # list of lists of words\n    words_list = list(itertools.chain(*words))\n\n    # list of words with odd order in alphabet\n    odd_letters = []\n\n    # for each word in the list, check if the word has odd order in alphabet\n    for word in words_list:\n        odd = 0\n        for letter in word:\n            if ord(letter) % 2 == 0:\n                odd += 1\n        if odd % 2 == 1:\n            odd_letters.append(word)\n\n    # return list of lists of words with odd order in alphabet\n    return odd_letters", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(' ') == 0:\n        return txt.split(',')\n    else:\n        return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if not txt:\n        return []\n    if txt.count(' ') > 0:\n        return txt.split(' ')\n    elif txt.count(',') > 0:\n        return txt.split(',')\n    else:\n        return len(set(txt.lower()) - set('abcdefghijklmnopqrstuvwxyz'))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # Check if the text contains only letters and whitespaces\n    if txt.isalpha():\n        # Split on whitespaces\n        words = txt.split()\n        # Check if the string contains only whitespaces\n        if len(words) == 1:\n            return len(set(ord(c) for c in txt))\n        # Check if the string contains only commas\n        elif len(words) == 0:\n            return len(set(ord(c) for c in txt))\n        # Split on commas if the text contains commas\n        else:\n            words = txt.split(',')\n            # Check if the string contains only commas\n            if len(words) == 1:\n                return len(set(ord(c) for c in txt))\n            # Split on whitespaces if the text contains whitespaces\n            else:\n                words = txt.split()\n                return len(set(ord(c) for c in txt))\n    # Return the number of lower-case letters with odd order in the alphabet\n    else:\n        return len(set(ord(c) for c in txt))</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def split_on_commas(txt):\n        return txt.split(',')\n    def split_on_whitespace(txt):\n        return txt.split(' ')\n    def split_on_odd_order_letters(txt):\n        return len(set(txt).difference([' ', ',']))\n\n    if ',' in txt:\n        return split_on_commas(txt)\n    elif'' in txt:\n        return split_on_whitespace(txt)\n    else:\n        return split_on_odd_order_letters(txt)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return list(filter(lambda x: x, re.split(r'[\\s,]+', txt)))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    elif txt.isdigit():\n        return [int(txt)]\n    else:\n        words = txt.split(',')\n        if len(words) == 0:\n            return [ord(c) for c in txt.lower()]\n        else:\n            return [w for w in words]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    words = txt.split(' ')\n    # return if no words\n    if len(words) == 0:\n        return 0\n    # return if no whitespaces\n    elif len(words) == 1:\n        return 1\n    # return if no commas\n    elif len(words) == 2:\n        return ord(words[0]) + ord(words[1])\n    # return if no odd order letters\n    elif len(words) == 3:\n        return ord(words[0]) + ord(words[1]) + ord(words[2])\n    # return if no odd order letters\n    else:\n        return sum([ord(word) for word in words]) % 26", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    if txt.find(' ') >= 0:\n        return txt.split(' ')\n    elif txt.find(',') >= 0:\n        return txt.split(',')\n    else:\n        return len(str(txt).lower()) % 2", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if not txt:\n        return 0\n\n    if txt.count(' '):\n        return txt.split(' ')\n\n    if txt.count(','):\n        return txt.split(',')\n\n    return [ord(c) for c in txt.lower() if c.isalpha()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def isodd(n):\n        return n % 2 == 1\n\n    def ord(c):\n        return ord(c.lower())\n\n    def split_on_whitespace(txt):\n        return txt.split()\n\n    def split_on_comma(txt):\n        return txt.split(',')\n\n    def split_on_odd(txt):\n        return [ord(c) for c in txt.lower() if isodd(ord(c))]\n\n    txt = txt.lower()\n    if ',' in txt:\n        return split_on_comma(txt)\n    elif'' in txt:\n        return split_on_whitespace(txt)\n    else:\n        return split_on_odd(txt)\n\nsplit_words(\"Hello world!\")\nsplit_words(\"Hello,world!\")\nsplit_words(\"abcdef\")\nsplit_words(\"abcdef,ghijkl\")\nsplit_words(\"abcdef,ghijkl,mnopqrstuvwxyz\")\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    else:\n        if \" \" in txt:\n            return txt.split()\n        elif \",\" in txt:\n            return txt.split(\",\")\n        else:\n            return [ord(x) for x in txt if ord(x) % 2 == 1]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    def split(txt):\n        if txt.count(',') > 0:\n            return txt.split(',')\n        if txt.count(' ') > 0:\n            return txt.split(' ')\n        return txt.lower().split('')\n\n    return split(txt)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split the words\n    words = txt.split(\" \")\n    # split the commas\n    if \",\" in txt:\n        words = txt.split(\",\")\n    # split the numbers\n    if \".\" in txt:\n        words = txt.split(\".\")\n    # split the symbols\n    if \"!\" in txt:\n        words = txt.split(\"!\")\n    # split the letters\n    if \"@\" in txt:\n        words = txt.split(\"@\")\n    # split the words\n    if \".\" in txt:\n        words = txt.split(\".\")\n    # split the letters\n    if \"?\" in txt:\n        words = txt.split(\"?\")\n    # split the letters\n    if \"!\" in txt:\n        words = txt.split(\"!\")\n    # split the letters\n    if \"?\" in txt:\n        words = txt.split(\"?\")\n    # split the letters\n    if \"@\" in txt:\n        words = txt.split(\"@\")\n    # split the letters\n    if \".\" in txt:\n        words = txt.split(\".\")\n    # split the letters\n    if \",\" in txt:\n        words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if len(txt) == 0:\n        return []\n    if ',' in txt:\n        words = txt.split(',')\n    elif'' in txt:\n        words = txt.split()\n    else:\n        words = [txt]\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    txt = txt.lower()\n    return [word for word in txt.split()] if txt.strip() else [ord(c) % 26 + 1 for c in txt]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    # Split the string on whitespace\n    # Split the string on commas\n    # Check if the string only contains letters\n    # Check if the string contains numbers\n    # Check if the string contains symbols\n    # Check if the string contains uppercase letters\n    # Check if the string contains lowercase letters\n    # Check if the string contains uppercase and lowercase letters\n    # Check if the string contains numbers and symbols\n    # Check if the string contains uppercase and lowercase letters\n    # Check if the string contains uppercase and lowercase letters and symbols\n    # Check if the string contains uppercase and lowercase letters and numbers\n    # Check if the string contains uppercase and lowercase letters and symbols and numbers\n    # Check if the string contains uppercase and lowercase letters and symbols and numbers and punctuation\n    # Check if the string contains uppercase and lowercase letters and symbols and numbers and punctuation and whitespace\n    # Check if the string contains uppercase and lowercase letters and symbols and numbers and punctuation and whitespace and commas\n    # Check if the string contains uppercase and lowercase letters and symbols and numbers and punctuation and whitespace and commas and spaces\n    # Check if the string contains uppercase and lowercase letters and symbols and numbers and punctuation and whitespace and commas and spaces and special characters\n    # Check if the", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    lst = []\n    for word in txt.split():\n        if len(word) > 0:\n            lst.append(word)\n    return lst", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    txt = txt.lower()\n    if txt == '':\n        return []\n    if txt.find(' ') == -1 and txt.find(',') == -1:\n        return [txt]\n    return [txt.split(' ')]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.split(' '):\n        return txt.split(' ')\n    elif txt.split(','):\n        return txt.split(',')\n    else:\n        return [ord(i) for i in txt if ord(i) % 2 == 1]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    result = []\n    for word in txt.split():\n        if len(word) > 0:\n            result.append(word)\n    return result", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # returns a list of words\n    words = re.split(r'\\W+', txt)\n    # returns a list of words if no spaces\n    words = re.split(r'\\W+', txt) if re.search(r'\\s', txt) == None else re.split(r'\\W+', txt.replace(' ', ','))\n    # returns the number of lower-case letters with odd order in the alphabet\n    return sum([ord(x) % 26 for x in words]) % 2", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split the string on white spaces\n    words = txt.split()\n    # if there are no words return the number of letters\n    if len(words) == 0:\n        return len(list(map(lambda x: ord(x) - ord('a'), txt)))\n    # if there is one word return the word\n    elif len(words) == 1:\n        return words[0]\n    # if there are more than one word return a list of words\n    else:\n        return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = txt.split()\n    # if there are no commas in the text, split on whitespace\n    if ',' not in txt:\n        words = words.split()\n    # if there are no whitespaces, split on commas\n    if'' not in txt:\n        words = words.split(',')\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if len(txt) == 0:\n        return []\n    if txt.count(\" \") > 0:\n        return txt.split(\" \")\n    elif txt.count(\",\") > 0:\n        return txt.split(\",\")\n    else:\n        return [ord(c) for c in txt if c.isalpha()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # You should implement this function\n    # it is not necessary to check if the string is empty\n    # if txt is empty return []\n    # you should return a list of words\n    # you should not use str.split(',') or str.split(' ')\n    # you should not use str.split(', ') or str.split(' ', 1)\n\n    # split on whitespaces\n    words = txt.split()\n    # if no spaces then split on commas\n    if len(words) == 1:\n        words = txt.split(',')\n    # if no commas then return the number of lower-case letters with odd order in the alphabet\n    elif len(words) == 0:\n        return len(list(filter(lambda x: x.islower(), txt)))\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    words = txt.split()\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO\n    return None", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    for word in txt.split(\" \"):\n        if not word:\n            words.append(0)\n        elif word[-1] == ',':\n            words.append(0)\n        else:\n            words.append(len(word.lower()) % 26)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    elif txt.find(',')!= -1:\n        return txt.split(',')\n    elif txt.find(' ')!= -1:\n        return txt.split()\n    else:\n        word = ''\n        word_count = 0\n        for i in range(len(txt)):\n            if ord(txt[i].lower()) % 2 == 1:\n                word_count += 1\n                word += txt[i]\n        return [word] * word_count", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.strip() == '':\n        return []\n    else:\n        # if no commas return the number of lower case letters with odd order in the alphabet\n        if txt.count(',') == 0:\n            if txt.isalpha():\n                return len(set(txt)) - len(set(txt.lower()))\n            else:\n                return txt.count(',')\n        else:\n            return [word.strip() for word in txt.split(',')]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    import re\n    import string\n    split = re.split('[,\\s]', txt)\n    split = [i for i in split if i]\n    if len(split) == 0:\n        return string.ascii_lowercase[int(ord('a') + len(string.ascii_lowercase) // 2):]\n    return split", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    elif txt.isspace():\n        return [txt]\n    elif txt.count(\",\") == 0:\n        return [txt.lower()]\n    else:\n        return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # your code here\n    return list(txt.split())", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    # This is the code I have so far but I am not sure how to get the last part\n    # of the problem.\n    if txt:\n        split_words = txt.split(',')\n        for word in split_words:\n            if word.isalpha():\n                split_words.append(word)\n    else:\n        split_words = 0\n    return split_words\n\nA:\n\nYou can use a regular expression to check if the string contains any whitespace or commas, and if not, count the number of lower-case letters with odd order in the alphabet.\nimport re", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    words = []\n    if txt.find(',') == -1:\n        if txt.find(' ') == -1:\n            return len(''.join([c for c in txt if ord(c) % 2 == 1]))\n        else:\n            return [txt.split(' ')]\n    else:\n        return txt.split(',')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    elif txt =='':\n        return [' ']\n    elif txt == ',':\n        return [',']\n    else:\n        lst = []\n        for letter in txt:\n            if letter.lower() in 'aeiou':\n                lst.append(letter)\n            else:\n                lst.append(ord(letter) % 26)\n        return lst", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return txt.split(' ')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # TODO: Implement this function\n    # Hint: You will need to use the split() function from the string module\n    # Hint: You will need to use the ord() function from the string module\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.find(' ') == -1:\n        return [txt]\n    else:\n        return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.count(\",\") == 0:\n        return len(set(txt.lower()).difference(set('abcdefghijklmnopqrstuvwxyz')))\n    else:\n        return txt.split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    txt = txt.lower()\n    words = []\n    if txt.find(',')!= -1:\n        words = txt.split(',')\n    else:\n        for word in txt.split():\n            if word.find(' ')!= -1:\n                words.append(word)\n            else:\n                ord_word = 0\n                for i in range(len(word)):\n                    ord_word += ord(word[i]) - ord('a') + 1\n                if (ord_word % 2) == 1:\n                    words.append(word)\n    return words\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Solution 1\n    # return [word for word in txt.split() if word]\n    # Solution 2\n    return [word for word in txt.split(',') if word]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == '':\n        return []\n    elif txt == ',':\n        return [',']\n    else:\n        #return split_words(txt.lower())    # This doesn't work\n        return list(map(lambda x: x.lower(), txt.split()))    # This works, but it's a bit slower", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    split_words = txt.split()\n    # if no whitespace, split on commas\n    if len(split_words) == 1:\n        split_words = txt.split(',')\n    # if no commas, return the number of odd letters\n    if len(split_words) == 1:\n        return len(list(map(lambda x: ord(x) % 2, txt)))\n    return split_words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt == \"\":\n        return []\n    if txt.isspace():\n        return []\n    if txt.count(\",\") == 0:\n        # no commas, so return number of odd letters\n        return [ord(c) % 26 for c in txt if c.islower()]\n    else:\n        # split on commas\n        return [word.strip() for word in txt.split(\",\")]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return [w.strip() for w in txt.split()] if txt else ord('a') + 1", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    if txt.find(' ') == -1:\n        return [txt]\n    else:\n        return txt.split(' ')", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    # Reminder: list is mutable, so you can use append\n    # to create a new list with the same items as the old list\n    # but with additional items added to the end\n    # you can use list comprehension to create a new list with\n    # the same items as the old list, but with different items\n    # at the end\n    # you can use a for loop to iterate through a list\n    # and you can use a while loop to iterate through a list\n    # and return a value after the loop has been iterated through\n    # you can use the len() function to get the length of a list\n    # you can use the index() function to get the index of an item\n    # in a list\n    # you can use the append() function to add items to the end\n    # of a list\n    # you can use the remove() function to remove items from the\n    # beginning or the end of a list\n    # you can use the pop() function to remove and return\n    # an item from the end of a list\n    # you can use the extend() function to add items to the\n    # end of a list\n    # you can use the sort() function to sort a list\n    #", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # split on whitespace\n    words = txt.split()\n    # if no words were split, return the number of letters with odd order in the alphabet\n    if len(words) == 1:\n        return ord(words[0]) % 2\n    # if no whitespaces were split, split on commas\n    else:\n        words = words[0].split(',')\n        # if no commas were split, return the number of letters with odd order in the alphabet\n        if len(words) == 1:\n            return ord(words[0]) % 2\n        # if commas were split, split on whitespaces\n        else:\n            return words[0].split()", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    return list(filter(None, re.split('([,\\s]+)', txt.lower())))", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # check if the string contains any whitespace\n    if \" \" in txt:\n        # split on whitespace\n        return txt.split()\n    else:\n        # split on commas if no whitespace\n        if \",\" in txt:\n            return txt.split(\",\")\n        else:\n            # check if the string contains any lower-case letters with odd order\n            if any(ord(c) % 2 for c in txt):\n                return txt\n            else:\n                return int(txt.lower())\n</s>", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    def split_on_comma(txt):\n        return [word.split(',') for word in txt.split(' ')]\n    def split_on_whitespace(txt):\n        return [word.split(' ') for word in txt.split(',')]\n    def odd_order_letters(txt):\n        return sum([ord(letter) % 26 for letter in txt])\n    return split_on_comma(txt) if ',' in txt else split_on_whitespace(txt) if'' in txt else odd_order_letters(txt)", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    # 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25\n    odd_letters = 0\n    words = txt.split(' ')\n    for word in words:\n        if word.lower() not in [',', '.', '!', '?']:\n            odd_letters += sum(ord(c) % 2 for c in word)\n    return words", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Write your code here\n    return []", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''\n    # write your code here\n    if txt == '':\n        return []\n    else:\n        return txt.split(',') if txt.find(',') > -1 else [ord(c) % 26 for c in txt.lower()]", "def split_words(txt):\n    '''\n    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you\n    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the\n    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n    Examples\n    split_words(\"Hello world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"Hello,world!\") \u279e [\"Hello\", \"world!\"]\n    split_words(\"abcdef\") == 3 \n    '''    # Implement your function here\n    words = txt.split()\n    return words"]]