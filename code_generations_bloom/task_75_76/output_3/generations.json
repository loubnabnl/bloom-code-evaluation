[["def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # write your code here\n    #return bool(a % 2 == 0 and a % 3 == 0 and a % 5 == 0)\n    if a == 1:\n        return False\n    if a < 1:\n        return False\n    if a <= 3:\n        return True\n    for i in range(2, a - 1, 2):\n        if a % i == 0 or a % (i + 1) == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    # TODO: You will need to check all numbers up to 100. If they are not multiples of prime numbers, \n    # then they are not multiples of 3 prime numbers either.\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a % 2 == 0 or a % 3 == 0 or a % 5 == 0:\n        return False\n    elif a == 4:\n        return True\n    elif a % 2 == 0 or a % 3 == 0:\n        return False\n    elif a == 6:\n        return True\n    elif a % 2 == 0 or a % 3 == 0 or a % 5 == 0:\n        return False\n    elif a == 8:\n        return True\n    elif a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or a % 7 == 0:\n        return False\n    elif a == 10:\n        return True\n    elif a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or a % 7 == 0:\n        return False\n    elif a == 12:\n        return True\n    elif a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or a % 7 == 0 or a % 11 == 0:\n        return False\n    elif a == 14:\n        return True\n    elif a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or a % 7 == 0 or a % 11 == 0 or a % 13 == 0:\n        return False\n    elif", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    return all(is_multiply_prime(b) for b in range(2, a+1))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Answer:\n    # def is_multiply_prime(a):\n    #     factors = []\n    #     prime = False\n    #     # Let's start with the first prime number (2)\n    #     for i in range(2,a):\n    #         if a % i == 0:\n    #             factors.append(i)\n    #             prime = True\n    #             break\n    #     # If prime == False, it means that (a) is not the multiplication of 2 prime numbers\n    #     if prime == False:\n    #         # Let's try the next prime number (3)\n    #         for i in range(3,a):\n    #             if a % i == 0:\n    #                 factors.append(i)\n    #                 prime = True\n    #                 break\n    #     # If prime == False, it means that (a) is not the multiplication of 2 prime numbers\n    #     if prime == False:\n    #         # Let's try the next prime number (5)\n    #         for i in range(5,a):\n    #             if a % i == 0:\n    #                 factors.append(i)\n    #                 prime = True\n    #                 break\n    #     # If prime == False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n    def is_multiply_prime_imp(n):\n        if n < 2:\n            return False\n        elif n == 2:\n            return True\n        elif n % 2 == 0:\n            return False\n        else:\n            return is_multiply_prime_imp(n//2)\n\n    #@timeit\n    def is_multiply_prime_slow(n):\n        if n < 2:\n            return False\n        if n == 2:\n            return True\n        if n % 2 == 0:\n            return False\n        for i in range(3,int(math.sqrt(n))+1,2):\n            if n % i == 0:\n                return False\n        return True\n\n    #@timeit\n    def is_multiply_prime_slow2(n):\n        if n < 2:\n            return False\n        if n == 2:\n            return True\n        if n % 2 == 0:\n            return False\n        for i in range(3,int(math.sqrt(n))+1,2):\n            if n % i == 0:\n                return False\n        for i in range(3,int(math.sqrt(n))+1,2):\n            if n % (i*i) == 0:\n                return False\n        return True\n\n    #@time", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert a < 100\n    i = 2\n    while i < a - 1:\n        if is_prime(a - i) and is_prime(i) and is_prime(a - i - i):\n            return True\n        i += 1\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    a_list = []\n    #to_string = str(a)\n\n    for i in range(0, len(str(a))):\n        if a[i]!= '0':\n            a_list.append(int(a[i]))\n            \n    if len(a_list) > 1:\n        for i in range(0, len(a_list) - 1):\n            for j in range(0, len(a_list) - 1 - i):\n                if a_list[j]!= a_list[j + i]:\n                    if is_multiply_prime(a_list[j] * a_list[j + i]):\n                        return True\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(num):\n        \"\"\"Write a function that returns true if the given number is prime\n        and false otherwise.\n        Knowing that (num) is less then 100. \n        Example:\n        is_prime(30) == True\n        is_prime(5) == False\n        \"\"\"\n        if num == 1:\n            return False\n\n        if num < 2:\n            return False\n\n        if num < 4:\n            return True\n\n        if num % 2 == 0:\n            return False\n\n        if num < 9:\n            return True\n\n        if num % 3 == 0:\n            return False\n\n        if num < 27:\n            return True\n\n        if num % 5 == 0:\n            return False\n\n        if num % 7 == 0:\n            return False\n\n        return True\n\n    return a == 1 or (a > 1 and not any(is_prime(i) for i in range(a)))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Written By : Harsh Wardhan Neekanta\n    # Date : 27th February 2017\n    # Modification : Add the code to find 3 prime factors of the given number\n    # Problem Link : http://codeforces.com/problemset/problem/231/A\n    # Output Format: True if a is a multiply of 3 primes, False otherwise\n    # \n    # Notes:\n    # A number is said to be multiply of primes if it can be divided by\n    # at least one of the 3 primes 2, 3, 5 without remainder.\n    #\n    # Some examples\n    # is_multiply_prime(30) == True\n    # 30 = 2 * 3 * 5\n    # is_multiply_prime(40) == False\n    # 40 = 2 * 5\n    # is_multiply_prime(20) == True\n    # 20 = 2 * 2\n    # is_multiply_prime(30) == False\n    # 30 = 3\n    # is_multiply_prime(1) == False\n    # 1 = 1\n    # is_multiply_prime(45) == True\n    # 45 = 3 * 3 * 5\n    # is_multiply_prime(20) == False\n    # 20 = 2", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n    numbers = range(2, a)\n    for number in numbers:\n        if a % number == 0:\n            return False\n    primes = []\n    for number in numbers:\n        if number == 2 or number == 3 or number == 5 or number == 7:\n            primes.append(number)\n    if len(primes) == 0:\n        return False\n    if len(primes) == 1:\n        return True\n    return False\n\na = int(input())", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    if a == 2:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 3:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 5:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 7:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 11:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 13:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 17:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 19:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 23:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 29:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 31:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 37:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 41:\n        return True\n    if a % 2 == 0:\n        return False\n    if a == 43:\n        return True\n    if a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a%2 == 0:\n        return False\n    elif a%3 == 0 or a%5 == 0 or a%7 == 0:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # write code here", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime_set = set([2,3,5,7,11,13,17,19,23,29,31])\n    if a not in prime_set:\n        return False\n    num = a\n    for i in range(1,100):\n        if num % i == 0 or i in prime_set:\n            return False\n        if i in prime_set:\n            num = num / i\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        n = 2\n        while n < a:\n            while a%n == 0:\n                if n < 100:\n                    n += 2\n                else:\n                    return False\n            if n < 100:\n                n += 2\n            else:\n                return False\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(n):\n        for i in range(2, n):\n            if n % i == 0:\n                return False\n        return True\n    print(is_prime(a))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    from math import sqrt\n    def is_prime(n):\n        if n == 1:\n            return False\n        if n == 2:\n            return True\n        for x in range(2, int(sqrt(n)) + 1):\n            if n % x == 0:\n                return False\n        return True\n    \n    def is_prime_n(n):\n        i = 2\n        while i <= int(sqrt(n)):\n            if n%i == 0:\n                return False\n            else:\n                i += 1\n        return True\n\n    if is_multiply_prime(a) == True:\n        print(a, \" = \", *map(str, map(is_prime, map(is_prime_n, range(1,a)))))\n\n    else:\n        print(a, \" is not a multiply prime number\")", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 1:\n        return False\n    elif a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a % 2 == 0:\n        return False\n    i = 3\n    while i < 100:\n        if isprime(a / i):\n            if isprime(a / i / i):\n                if isprime(a / i / i / i):\n                    return True\n        i += 2\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    from math import sqrt,ceil\n    if a % 3 == 0 or a % 5 == 0 or a % 7 == 0:\n        return False\n    if a <= 1:\n        return False\n    if a % 2 == 0:\n        return False\n    if a < 100:\n        if a >= 40:\n            if a % 13 == 0 or a % 17 == 0 or a % 19 == 0 or a % 23 == 0 or a % 29 == 0:\n                return False\n        for x in range(3,ceil(sqrt(a)+2),2):\n            if a % x == 0:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    # This function returns True if a is the product of three prime numbers, and returns False otherwise\n    # a = 30\n    # a % 2 == 0\n    # a % 3 == 0\n    # a % 5 == 0\n    # Is a divisible by the square of any prime number?\n    # check prime numbers up to sqrt(a)\n    # check if a is a perfect square\n    # check if a is the product of any 2 prime numbers\n    # check if a is the product of 3 prime numbers\n    # return True or False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    primes = get_primes(100)\n    for i in range(100):\n        if a % primes[i] == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not a or a <= 0:\n        return False\n    else:\n        count = 0\n        while True:\n            if not (a % 2 or a % 3 or a % 5):\n                if a % 2 == 0:\n                    a /= 2\n                elif a % 3 == 0:\n                    a /= 3\n                elif a % 5 == 0:\n                    a /= 5\n                else:\n                    return True\n            else:\n                count += 1\n                if count == 100:\n                    return False\n                else:\n                    continue", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert a < 100, 'Error: a must be less than 100'\n    max = 100000\n    l = list(range(2, max))\n    prime = set()\n    for i in l:\n        if i not in prime:\n            if all(i % j for j in l if j!= i and j not in prime):\n                prime.add(i)\n                print(i)\n    if a in prime:\n        return True\n    else:\n        return False\n\n\na = int(input(\"Enter a number: \"))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    isPrime = [True]*a\n    for i in range(2, a):\n        if all(isPrime[i]):\n            for j in range(i + 2, a):\n                if i * j > a:\n                    isPrime[i] = False\n                    break\n                elif isPrime[i] and isPrime[j]:\n                    if (i + j) > a:\n                        isPrime[i] = False\n                        break\n            else:\n                break\n    return all(isPrime)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    number = int(input())\n    if number == 0:\n        return False\n    for i in range(2, number):\n        for j in range(i, number):\n            for k in range(j, number):\n                if number % i == 0 and number % j == 0 and number % k == 0:\n                    return False\n        if number!= 1:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    from math import sqrt\n    \n    if a < 2:\n        return False\n\n    for n in range(2, int(sqrt(a)) + 1):\n        if not is_prime(a % n):\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(a):\n        \"\"\"Write a function that returns true if the given number is prime and false otherwise.\n        Knowing that a number less than 100.\n        Example:\n        is_prime(5) == True\n        is_prime(8) == False\n        \"\"\"\n        for i in range(2, a):\n            if a % i == 0:\n                return False\n        return True\n    \n    def is_multiply_prime(a):\n        \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n        and false otherwise.\n        Knowing that (a) is less then 100. \n        Example:\n        is_multiply_prime(30) == True\n        30 = 2 * 3 * 5\n        \"\"\"\n        def is_prime(a):\n            \"\"\"Write a function that returns true if the given number is prime and false otherwise.\n            Knowing that a number less than 100.\n            Example:\n            is_prime(5) == True\n            is_prime(8) == False\n            \"\"\"\n            for i in range(2, a):\n                if a % i == 0:\n                    return False\n            return True\n        \n        prime = []\n        for i in range(1, a/2):\n            if is_prime(a - i) == True:\n                prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    print(a, 'is multiply prime' if is_multiply_prime(a) else 'is not multiply prime')", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # write your code here\n    prime = {}\n    for i in range(2,100):\n        if i in prime:\n            prime[i] = True\n        else:\n            prime[i] = False\n\n    primelist = []\n    for i in range(3,101):\n        if prime[i] == True:\n            primelist.append(i)\n    if a % primelist[-1]!= 0:\n        return False\n    else:\n        for i in primelist:\n            if a % i == 0:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #Write your code here\n\n    def is_prime(a):\n        \"\"\"Write a function that returns true if the given number is prime and false otherwise.\n        Knowing that (a) is less then 100. \n        \"\"\"\n        #Write your code here\n\n        for i in range(2, 101):\n            if a % i == 0:\n                return False\n        return True\n\n    def is_multiply_prime(a):\n        \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n        and false otherwise.\n        Knowing that (a) is less then 100. \n        Example:\n        is_multiply_prime(30) == True\n        30 = 2 * 3 * 5\n        \"\"\"\n        #Write your code here\n\n        if a < 3:\n            return False\n\n        if a == 3:\n            return True\n\n        for i in range(2, a):\n            if is_prime(i) == False:\n                return False\n\n        for i in range(2, a):\n            if is_prime(i) == True:\n                if a % i == 0:\n                    return False\n                if a / i == i:\n                    return False\n\n        for i in range(2, a):\n            if a % i == 0:\n                return False\n\n        for", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def check(a):\n        while True:\n            if not is_multiply_prime(a):\n                return False\n            a = a // 10\n            if a == 0:\n                return True\n\n    return check(a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n    \"\"\"\n    a = 0\n    b = 1\n    while a!= 9:\n        if not is_multiply_prime(a):\n            a = b\n            b = a + b\n        else:\n            a = a + b\n    return a\n    \"\"\"\n    max = 100\n    sqrt = int(math.sqrt(max))\n    while sqrt > 0:\n        for i in range(3, int(sqrt) + 1):\n            if a % i == 0:\n                if is_multiply_prime(a):\n                    return True\n                else:\n                    return False\n            else:\n                a = a * i\n        sqrt -= 1\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #Write your code here\n    if a < 100:\n        for i in range(1, a/2, 2):\n            if is_prime(i):\n                return is_multiply_prime(a/2 * i)\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert a < 100\n    for x in range(2, int(math.sqrt(a))+1):\n        if a%x!= 0 and is_multiply_prime(a/x):\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    if a < 1:\n        return False\n    if a % 2 == 0:\n        return False\n    if a == 4:\n        return True\n    if a == 3:\n        return True\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n    if a % 11 == 0:\n        return False\n    if a % 13 == 0:\n        return False\n    if a % 17 == 0:\n        return False\n    if a % 19 == 0:\n        return False\n    if a % 23 == 0:\n        return False\n    if a % 29 == 0:\n        return False\n    if a % 31 == 0:\n        return False\n    if a % 37 == 0:\n        return False\n    if a % 41 == 0:\n        return False\n    if a % 43 == 0:\n        return False\n    if a % 47 == 0:\n        return False\n    if a % 53 == 0:\n        return False\n    if a % 59 == 0:\n        return False\n    if a % 61 == 0:\n        return False\n    if a % 67 == 0:\n        return False\n    if a % 71 == 0:\n        return False\n    if a % 73 == 0:\n        return False\n    if a % 79 == 0:\n        return False\n    if a %", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #return not prime_factors(a) or is_multiply_prime(prime_factors(a))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    #Algorithm\n    if len(a) < 3:\n        return False\n    return all(a%i for i in range(2,int(a**0.5)+1))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    print (a)\n    prime = 2\n    n = 1\n    is_prime = True\n    while prime <= a and n <= 100:\n        while n <= a and is_prime:\n            if a % n == 0:\n                is_prime = False\n            n += 1\n        if is_prime:\n            prime = n\n        else:\n            n += 1\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime_factors = []\n    while a > 1:\n        prime_factors.append(a)\n        a /= 2\n    return len(prime_factors) > 1 and all(prime_factors) and 3 in prime_factors", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(n):\n        \"\"\"Return true if n is a prime number and false otherwise.\"\"\"\n        if n < 2:\n            return False\n        if n == 2:\n            return True\n        if n % 2 == 0:\n            return False\n        for i in range(3, int(n ** 0.5) + 1, 2):\n            if n % i == 0:\n                return False\n        return True\n\n    def is_multiply_prime_2(a):\n        \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n        and false otherwise.\n        Knowing that (a) is less then 100. \n        Example:\n        is_multiply_prime_2(30) == True\n        30 = 2 * 3 * 5\n        \"\"\"\n        def is_prime(n):\n            \"\"\"Return true if n is a prime number and false otherwise.\"\"\"\n            if n < 2:\n                return False\n            if n == 2:\n                return True\n            if n % 2 == 0:\n                return False\n            for i in range(3, int(n ** 0.5) + 1, 2):\n                if n % i == 0:\n                    return False\n            return True\n\n        if a < 2:\n            return False\n        if a == 2:\n            return", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime = [3, 5, 7]\n    for i in range(len(prime)):\n        if a % prime[i] == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime = []\n    for i in range(2, 100):\n        if a % i == 0:\n            if i!= a / i:\n                prime.append(i)\n    if len(prime) == 3:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return True # test cases only for a < 100", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = isprime(a)\n    if is_prime == False:\n        return False\n    elif is_prime == True:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 2:\n        return False\n    if a % 2 == 0:\n        return False\n    if a < 4:\n        return False\n    if a % 3 == 0:\n        return False\n    if a < 9:\n        return False\n    if a % 5 == 0:\n        return False\n    if a < 27:\n        return False\n    if a % 7 == 0:\n        return False\n    if a < 99:\n        return False\n    if a % 11 == 0:\n        return False\n    if a % 13 == 0:\n        return False\n    if a % 17 == 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def is_prime(n):\n        \"\"\"Write a function that returns true if the given number is prime and false otherwise\"\"\"\n        # If n == 1 or n == 2, the number is prime\n        if n <= 1:\n            return True\n        # If n is divisible by two, the number is not prime\n        if n % 2 == 0:\n            return False\n        # The number is not prime so it must have at least one factor\n        factors = factors(n)\n        # Since n is divisible by itself, one of the factors is n\n        if n in factors:\n            factors.remove(n)\n        # Check if the number is divisible by any other factors\n        if not any(n % i == 0 for i in factors):\n            return True\n        # If the number is not prime, return false\n        return False\n\n    def factors(n):\n        \"\"\"Returns a list of factors of the given number\"\"\"\n        factors = []\n        # Check all divisors from 2 to the square root of n\n        for divisor in range(2, int(n**0.5) + 1):\n            # If the divisor is equal to the given number, it is a factor\n            if n % divisor == 0:\n                factors.append(divisor)\n        # Return", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    # Method 2\n    def is_multiply_prime_2(a):\n        # dictionary to keep the prime numbers and their factors\n        primes = {2:2}\n        while a > 1:\n            if a in primes:\n                for factor in primes[a]:\n                    if factor * a in primes:\n                        return False\n                if a * a == a and a not in primes.values():\n                    primes[a].append(a)\n                    return True\n                if a * a in primes:\n                    primes[a].append(a)\n            a = a - 1\n        return False\n\n    # Method 3\n    def is_multiply_prime_3(a):\n        # list for prime numbers\n        primes = list(range(2, a+1))\n\n        # checking if number is a prime\n        for i in primes:\n            if a % i == 0:\n                return False\n\n        # if number is not a prime, it should be the product of at least 3 prime numbers\n        for i in primes:\n            if i * i == a and a not in primes:\n                return True\n\n        # if all the above fails\n        return False\n\n    # Method 4\n    def is_multiply_prime_4(a):\n        primes = []\n        for i in range(2, 100):", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    is_prime = True\n    number = a\n    for i in range(2, number - 1):\n        if number % i == 0:\n            is_prime = False\n            break\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert a >= 2\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n\n    factors = []\n    limit = 5\n    while limit * limit <= a:\n        limit *= limit\n        for number in range(limit):\n            if a % (limit * limit) == 0:\n                break\n            factors.append(limit * limit)\n    return len(factors) == 3", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    if a<2:\n        return False\n    if a==2:\n        return True\n    if a%2==0:\n        return False\n    for i in range(3,int(a**0.5)+1,2):\n        if a%i==0:\n            return False\n    for i in range(3,int(a**0.5)+1,2):\n        if a%(i*i*i)==0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import time\n    start_time = time.time()\n\n    def is_prime(n):\n        \"\"\"Write a function that returns True if the given number is prime, and False otherwise.\n        Knowing that (n) is less than 100. \n        Example:\n        is_prime(30) == True\n        is_prime(70) == False\n        \"\"\"\n        if n < 2:\n            return False\n        if n == 2:\n            return True\n        if n % 2 == 0:\n            return False\n        max = int(n ** 0.5) + 1\n        for i in range(3, max, 2):\n            if n % i == 0:\n                return False\n        return True\n\n    def is_multiply_prime(n):\n        \"\"\"Write a function that returns True if the given number is the multiplication of 3 prime numbers\n        and False otherwise.\n        Knowing that (n) is less than 100. \n        Example:\n        is_multiply_prime(30) == True\n        30 = 2 * 3 * 5\n        \"\"\"\n        if n == 1:\n            return False\n        if n % 2 == 0:\n            return False\n        if n % 3 == 0:\n            return False\n        if n % 5 == 0:\n            return False\n        if n % 7 == 0:\n            return False\n        if n %", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return True\n\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n\n    number_list = []\n    while a > 1:\n        number_list.append(a % 10)\n        a /= 10\n\n    for number in number_list:\n        if number == 2 or number == 3 or number == 5 or number == 7:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # write your code here\n    a = int(a)\n    while a % 2!= 0:\n        a = a / 2\n    while a % 3!= 0:\n        a = a / 3\n    while a % 5!= 0:\n        a = a / 5\n    return a == 1", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 2 == 0 and a % 3 == 0:\n        return False\n    if a % 5 == 0 and a % 7 == 0:\n        return False\n    if a % 2 == 0 or a % 3 == 0 or a % 5 == 0 or a % 7 == 0:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 2:\n        return False\n    if a == 2:\n        return True\n    factors = []\n    while a > 1:\n        if a % 2 == 0:\n            if a > 1:\n                factors.append(a//2)\n            a = a//2\n        else:\n            if a % 3 == 0:\n                if a > 1:\n                    factors.append(a//3)\n                a = a//3\n            else:\n                if a % 5 == 0:\n                    if a > 1:\n                        factors.append(a//5)\n                    a = a//5\n    if len(factors) == 3 and all(i > 1 for i in factors):\n        return True\n    else:\n        return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = False\n    num = 0\n    while num < a:\n        if is_prime == False:\n            for i in range(2, int(math.sqrt(a)+1)):\n                if num % i == 0:\n                    is_prime = False\n        else:\n            for i in range(2, int(math.sqrt(a)+1)):\n                if num % i == 0:\n                    is_prime = False\n                    break\n        num += 1\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return is_prime(a) and \\\n        is_prime(a // 2) and \\\n        is_prime(a // 3)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    sieve = [True] * 100\n    for x in range(2, 100):\n        if sieve[x]:\n            for i in range(x * 2, 100, x):\n                sieve[i] = False\n    for i in range(2, 100):\n        if sieve[i]:\n            for x in range(i * 2, 100, i):\n                if sieve[x]:\n                    return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        for i in range(2, int(a ** 0.5) + 1):\n            for j in range(2, i + 1):\n                for k in range(2, j + 1):\n                    if a % (i * j * k) == 0:\n                        return False\n                        break\n        return True\n    else:\n        print('Error! The number is not less then 100.')", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    isPrimeNumber = [False] * 100\n    #the prime number list is initialized with 0 and 1 so that the first number in the list is 2\n    for i in range(2,100):\n        #if the number is not a prime number, then it is not the multiplication of 3 prime numbers\n        if isPrimeNumber[i] == True:\n            isPrimeNumber[i] = False\n            continue\n        for j in range(2,i+1):\n            if i % j == 0:\n                #in case the number is divisible by some number except 1, the number is not the multiplication of 3 prime numbers\n                isPrimeNumber[i] = False\n                break\n    return isPrimeNumber[a]", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a == 3:\n        return True\n    elif a == 4:\n        return True\n    elif a < 5:\n        return False\n    elif a % 2 == 0:\n        return is_multiply_prime(a / 2)\n    else:\n        left = 3\n        right = a - 1\n        while left < right:\n            if left % 2 == 0 and right % 2 == 0:\n                if is_multiply_prime(left * right):\n                    return True\n                else:\n                    return False\n            elif left % 2 == 0:\n                left = left * 2\n            else:\n                right = right * 2\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    from math import sqrt\n    def is_prime(a):\n        \"\"\"Write a function that returns true if the given number is prime and false otherwise.\n        Knowing that (a) is less then 100. \n        Example:\n        is_prime(2) == True\n        is_prime(3) == False\n        is_prime(5) == True\n        is_prime(6) == False\n        is_prime(7) == True\n        is_prime(8) == False\n        is_prime(9) == True\n        is_prime(11) == False\n        is_prime(101) == False\n        \"\"\"\n        b = 1\n        while b < a:\n            if a % b == 0:\n                return False\n            b += 1\n        return True\n\n    if a < 2:\n        return False\n\n    b = 2\n    while b < a:\n        if is_prime(a) == False:\n            return False\n        a += b\n        b += 1\n    if is_prime(a) == True:\n        return True\n    return False\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    if a < 2:\n        return False\n    if a == 2:\n        return True\n    if a % 2 == 0:\n        return False\n    for i in range(3, int(math.sqrt(a)) + 1, 2):\n        if a % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(1, a//3 + 1):\n        if a % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(2, a):\n        if a % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # write your code here\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = True\n    for i in range(2, int(a**0.5) + 1):\n        if a % i == 0:\n            is_prime = False\n            break\n    if is_prime:\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n    def is_prime(num):\n        \"\"\"function that will check if the number is prime\"\"\"\n        if num == 1:\n            return False\n        if num == 2:\n            return True\n        for i in range(3, int(math.sqrt(num) + 1), 2):\n            if num % i == 0:\n                return False\n        return True\n    if a!= 1:\n        prime_num = []\n        for i in range(2, int(math.sqrt(a) + 1), 2):\n            if is_prime(i) == True:\n                prime_num.append(i)\n        for i in range(2, int(math.sqrt(a) + 1), 2):\n            if a % i == 0:\n                if is_prime(i) == True:\n                    prime_num.append(i)\n        if len(prime_num) == 3:\n            return True\n        else:\n            return False\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    number = str(a)\n    print(number)\n    if number[len(number) - 1]!= '0':\n        if int(number) % 2 == 0 and int(number) % 3!= 0 and int(number) % 5!= 0:\n            return False\n    else:\n        if int(number) % 2 == 0 and int(number) % 3!= 0 and int(number) % 5!= 0:\n            return False\n\n    if number[0]!= '0':\n        if int(number) % 2 == 0 and int(number) % 3!= 0 and int(number) % 5!= 0:\n            return False\n    else:\n        if int(number) % 2 == 0 and int(number) % 3!= 0 and int(number) % 5!= 0:\n            return False\n\n    for i in range(1, len(number) - 1):\n        if number[i]!= '0' and number[i - 1]!= '0' and number[i + 1]!= '0':\n            if int(number) % 2 == 0 and int(number) % 3!= 0 and int(number) % 5!= 0:\n                return False\n        else:\n            if int(number) % 2 == 0 and int(", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not isinstance(a, int):\n        return False\n    if a <= 2:\n        return False\n    if a % 2 == 0 or a % 3 == 0 or a % 5 == 0:\n        return False\n    if a < 100:\n        for i in range(0, 10):\n            if i * 2 <= a < (i * 2) + 2:\n                if a % i == 0 or a % (i + 2) == 0 or a % (i + 6) == 0:\n                    return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    assert (a) < 100\n\n    num = a\n    # For each number in the list below do the following\n    # if the number is not a prime number, print it out\n    list_of_primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    # list_of_multiples = []\n    # for x in list_of_primes:\n        # num = num * x\n        # list_of_multiples.append(num)\n    # if a in list_of_multiples:\n        # return True\n    # return False\n\n    # print(list_of_multiples)\n    # print(a in list_of_multiples)\n\n    # num = a\n    # while num > 1:\n    #     if num % 2 == 0:\n    #         print(num)\n    #         num = num / 2\n    #     elif num % 3 == 0:\n    #         print(num)\n    #         num = num / 3\n    #     elif num % 5 == 0:\n    #         print(num)\n    #         num = num / 5\n    #", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    try:\n        if a == 2:\n            return False\n        elif a == 1:\n            return False\n        elif a % 2 == 0:\n            return False\n        else:\n            return True\n    except Exception as err:\n        print(err)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    if a < 100:\n        # returns True if the number is a perfect square\n        if a % 9 == 0:\n            return False\n        # returns True if the number is a perfect cube\n        if a % 27 == 0:\n            return False\n        # returns True if the number is a perfect fourth power\n        if a % 81 == 0:\n            return False\n        # returns True if the number is a perfect fifth power\n        if a % 243 == 0:\n            return False\n\n        # builds a list of primes less than the square root of the number\n        primes = getPrimesLessThanSquareRoot(a)\n\n        # if the number is the product of three primes\n        if a == primeProduct(primes):\n            return True\n        return False\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n\n    def factorize(number):\n        prime_list = []\n        for i in range(2, number + 1):\n            if number % i == 0:\n                prime_list.append(i)\n                break\n\n        prime_list.sort(reverse=True)\n\n        if len(prime_list) == 2:\n            return False\n\n        if len(prime_list) > 3:\n            return False\n\n        return prime_list\n\n    number = int(math.floor(a))\n    if number < 1:\n        return False\n\n    prime_list = factorize(number)\n    if not prime_list:\n        return False\n\n    while len(prime_list) < 3:\n        prime_list.append(1)\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Note: need to start with division by 2, as 3 * 3 is not prime\n    if a % 2 == 0:\n        return False\n    for i in range(3, a // 2 + 1, 2):\n        if not a % i:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_multiply_prime = True\n    for i in range(2,a):\n        if a % i == 0:\n            is_multiply_prime = False\n            break\n    return is_multiply_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def check_prime(num):\n        factors = []\n        for i in range(2, num):\n            if num % i == 0:\n                factors.append(i)\n        return len(factors) == 1\n\n    if a % 2 == 0 or a % 3 == 0 or a % 5 == 0:\n        return False\n    return check_prime(a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return a == 2*a or a == 3*a or a == 5*a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 1:\n        return False\n    if a < 2:\n        return False\n    if a % 2 == 0 and a % 3 == 0 and a % 5 == 0:\n        return False\n    if a % 3 == 0 or a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n    if a == 7:\n        return False\n    for i in range(1, 10000, 2):\n        if a % i == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i % 3 == 0 or i % 5 == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i % 7 == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i % 11 == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i % 13 == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i % 17 == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i % 19 == 0:\n            return False\n    for i in range(1, 10000, 2):\n        if i %", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    count = 0\n    if a == 1:\n        return False\n    while count < a:\n        count += 1\n        if a % count!= 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = True\n    for i in range(2, 100):\n        if a % i == 0:\n            is_prime = False\n            break\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = True\n    for i in range(2,a/2):\n        if a%i==0:\n            is_prime = False\n            break\n    if is_prime:\n        is_prime = False\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    # Get the factors of a\n    factors = []\n    for factor in range(2, a):\n        if a % factor == 0:\n            factors.append(factor)\n\n    # Return false if a = 1\n    if a == 1:\n        return False\n\n    # return true if a = 2\n    if a == 2:\n        return True\n\n    # return false if a has one factor\n    if len(factors) == 1:\n        return False\n\n    # return false if a is divisible by 3\n    if factors.count(3) == 1:\n        return False\n\n    # Return false if a is divisible by 2 or 5\n    if factors.count(2) == 1 or factors.count(5) == 1:\n        return False\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    \"\"\"\n    :param a: The number to check\n    :type a: int\n    :return: True if a is the multiplication of 3 prime numbers and False otherwise.\n    :rtype: bool\n    \"\"\"\n    from math import sqrt\n    from collections import defaultdict\n    primes = defaultdict(list)\n    primes[0] = set()\n    for i in range(2, a + 1):\n        if not i in primes[0]:\n            primes[0].add(i)\n            for prime in primes[0]:\n                for j in range(i * prime, a + 1, prime):\n                    primes[1].add(j)\n    for prime in primes[1]:\n        if sqrt(prime) == prime:\n            for i in range(prime, a + 1, prime):\n                primes[2].add(i)\n    if len(primes[2]) == 3:\n        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # check that the input is a valid integer\n    if not(isinstance(a, int)):\n        return False\n\n    # check that the input number is not greater than 100\n    if a > 100:\n        return False\n\n    # the variable that will store the result\n    result = False\n\n    # try to factorize the number\n    try:\n        factors = a**0.5\n    except Exception as e:\n        return False\n\n    if not(isinstance(factors, int)):\n        return False\n\n    # check that there are at least 3 factors\n    if factors < 3:\n        return False\n\n    # find all prime factors of the number\n    factors_list = list(factorint(factors))\n\n    if len(factors_list) < 3:\n        return False\n\n    # check if all factors are prime\n    for f in factors_list:\n        if not(is_prime(f)):\n            return False\n\n    # there are exactly 3 prime factors\n    result = True\n\n    # check that the factors are all different\n    factors_list = list(set(factors_list))\n\n    if len(factors_list)!= 3:\n        result = False\n\n    return result", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(2,101):\n        if a % i == 0:\n            break\n        if i == 100:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not isinstance(a, int):\n        raise TypeError(\"a is not an integer\")\n    if not a > 0:\n        raise ValueError(\"a must be a positive integer\")\n    if not (a <= 100):\n        raise ValueError(\"a must be less than 100\")\n    if not (a % 2 == 0):\n        a = a - 1\n    if not (a % 3 == 0):\n        a = a - 1\n    if not (a % 5 == 0):\n        a = a - 1\n    if a == 1:\n        return True\n    if a == 3:\n        return True\n    if a == 5:\n        return True\n    if a == 7:\n        return True\n    if a == 11:\n        return True\n    if a == 13:\n        return True\n    if a == 17:\n        return True\n    if a == 19:\n        return True\n    if a == 23:\n        return True\n    if a == 29:\n        return True\n    if a == 31:\n        return True\n    if a == 37:\n        return True\n    if a == 41:\n        return True\n    if a == 43:\n        return True\n    if a == 47:\n        return True\n    if a == 53:\n        return True\n    if a == 59:\n        return True\n    if a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    if a < 2:\n        return False\n    if a <= 100:\n        for i in range(2, a//2):\n            if is_prime(a//i):\n                return False\n        for i in range(1, a//2):\n            if is_prime(a//i) and is_prime(a-i):\n                return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    primes = [2, 3, 5]\n    if a < 2:\n        return False\n    if is_multiply_prime(a % 2) and is_multiply_prime(a // 2):\n        return True\n    if a > 100:\n        return False\n    if a < 5:\n        return False\n    for i in primes:\n        if a % i == 0:\n            return False\n    for i in primes:\n        for j in primes:\n            if a % (i * j) == 0:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 2 == 0:\n        return False\n\n    if a == 1:\n        return False\n\n    if a < 2:\n        return False\n\n    if a > 100:\n        return False\n\n    factors = list()\n    if a < 4:\n        factors.append(2)\n    for i in range(3, int(math.sqrt(a)) + 1, 2):\n        if a % i == 0:\n            factors.append(i)\n\n    if len(factors) > 0:\n        if is_multiply_prime(factors[0]) and is_multiply_prime(factors[1]) and is_multiply_prime(factors[2]):\n            return True\n        else:\n            return False\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    elif a == 2:\n        return True\n    elif a % 2 == 0:\n        return is_multiply_prime(a/2)\n    elif a == 3:\n        return True\n    elif a % 3 == 0:\n        return is_multiply_prime(a/3)\n    elif a == 5:\n        return True\n    elif a % 5 == 0:\n        return is_multiply_prime(a/5)\n    else:\n        prime = list(range(3, a/2))\n        prime.append(a)\n        for number in prime:\n            if is_multiply_prime(a * number):\n                return True\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def multiply_primes(a, b):\n        if (a % b) == 0:\n            return False\n        if b == 2:\n            if a == 2:\n                return False\n            if a == 3:\n                return False\n            return True\n        if a % b == 0:\n            return False\n        if a < b:\n            return multiply_primes(a, b - 1)\n        return multiply_primes(a, b + 1)\n    def check(n):\n        if n == 0:\n            return False\n        if n < 2:\n            return False\n        if n == 2:\n            return False\n        if n == 3:\n            return False\n        if n == 5:\n            return False\n        if n % 2 == 0:\n            return False\n        if n % 3 == 0:\n            return False\n        if n % 5 == 0:\n            return False\n        if n % 7 == 0:\n            return False\n        return multiply_primes(n, 7) and multiply_primes(n, 11) and multiply_primes(n, 13)\n    return check(a)\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    print(a)\n    i = 0\n    while i < 100:\n        a = int(a)\n        if isprime(a):\n            i += 1\n            continue\n        i += 1\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n    def is_prime(num):\n        for i in range(2, math.ceil(math.sqrt(num))):\n            if num%i == 0:\n                return False\n        return True\n    def is_multiply(num1,num2,num3):\n        if num1 == num2 == num3:\n            return True\n        if num1 == num2 or num1 == num3 or num2 == num3:\n            return False\n        if is_prime(num1) and is_prime(num2) and is_prime(num3):\n            return True\n        return False\n    return is_multiply(a,a,a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # add other test cases\n    # if a is divisible by 1 or a number which is the sum of two prime numbers\n    # return False\n    # I have used the following algorithm to solve it\n    # while a not prime\n    #    if a % 2 == 0\n    #        a = a / 2\n    #    else\n    #        a = 3 * a + 1\n\n    a = int(input())\n    if a == 0:\n        return False\n    if a == 1:\n        return False\n    # print(a)\n    if a == 2:\n        return True\n    # print(a)\n    if a == 3:\n        return True\n    # print(a)\n    if a == 5:\n        return True\n    # print(a)\n    if a == 7:\n        return True\n    # print(a)\n    if a == 11:\n        return True\n    # print(a)\n    if a == 13:\n        return True\n    # print(a)\n    if a == 17:\n        return True\n    # print(a)\n    if a == 19:\n        return True\n    # print(a)\n    if a == 23:\n        return True\n    # print(a)\n    if a == 29:\n        return True\n    # print(a)\n    if a == 31:\n        return True\n    # print(a)\n    if a == 37:", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n    a = int(a)\n\n    if not a % 2:\n        return False\n\n    if not a % 3:\n        return False\n\n    if not a % 5:\n        return False\n\n    if not a % 7:\n        return False\n\n    sqrt = math.sqrt(a)\n    i = 2\n    while (i <= sqrt):\n        if a % i:\n            return False\n        i += 2\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def is_prime(a):\n        if a < 2:\n            return False\n        if a < 4:\n            return True\n        for n in range(3, int(a**0.5)+1, 2):\n            if a % n == 0:\n                return False\n        return True\n\n    def is_multiply_prime(a):\n        if a < 3:\n            return False\n        if is_prime(a) == True:\n            return False\n\n        for i in range(3, a):\n            if is_prime(a) == True:\n                break\n            if a % i == 0:\n                break\n\n        return is_prime(a)\n\n    return is_multiply_prime(a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def is_prime(a):\n        for i in range(2, a // 2):\n            if a % i == 0:\n                return False\n        return True\n\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    for i in range(7, a, 7):\n        if not is_prime(i):\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert a <= 100\n    prime = [2]\n    for x in range(2, a/2):\n        if not isPrime(x):\n            continue\n        prime.append(x)\n    return prime[0] * prime[1] * prime[2] == a", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_multiply_prime(a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    from math import sqrt, log10, ceil, isinteger\n    try:\n        if not isinteger(a):\n            raise TypeError('Incorrect type')\n        if not 0 < a < 100:\n            raise ValueError('Incorrect range')\n    except Exception:\n        print('ERROR')\n    if a == 1:\n        return False\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n    i = 3\n    while i <= sqrt(a):\n        if a % i == 0 and a % (i + 2) == 0:\n            return False\n        i += 2\n    if a <= 100:\n        i = 5\n        while i <= sqrt(a):\n            if a % i == 0 and a % (i + 2) == 0:\n                return False\n            i += 2\n    i = 7\n    while i <= sqrt(a):\n        if a % i == 0 and a % (i + 2) == 0:\n            return False\n        i += 2\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if not a:\n        return False\n    else:\n        if a <= 2:\n            return False\n        else:\n            for i in range(3, a, 2):\n                if is_prime(i):\n                    if is_prime(i * 2):\n                        if is_prime(i * 3):\n                            return True\n                            break\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    from math import sqrt\n    if (a < 2):\n        return False\n    if (a == 2):\n        return True\n    # True if all divisors are prime number\n    divisors = []\n    divisors.append(int(a))\n    for d in range(1, int(sqrt(a)) + 1):\n        if (a % d == 0):\n            divisors.append(d)\n    return is_multiply_prime(a) and all(is_multiply_prime(divisor) for divisor in divisors)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    while True:\n        if a % 3 == 0 or a % 5 == 0 or a % 7 == 0:\n            if a % 3 == 0 and a % 5 == 0:\n                return False\n            elif a % 3 == 0 and a % 7 == 0:\n                return False\n            elif a % 5 == 0 and a % 7 == 0:\n                return False\n            else:\n                return True\n        else:\n            a += 1", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    if a == 2:\n        return False\n    if a == 3:\n        return False\n    if a == 5:\n        return False\n    if a == 6:\n        return False\n    if a == 7:\n        return False\n    if a == 9:\n        return False\n    if a == 10:\n        return False\n    if a == 11:\n        return False\n    if a == 13:\n        return False\n    if a == 14:\n        return False\n    if a == 15:\n        return False\n    if a == 16:\n        return False\n    if a == 17:\n        return False\n    if a == 18:\n        return False\n    if a == 19:\n        return False\n    if a == 21:\n        return False\n    if a == 22:\n        return False\n    if a == 23:\n        return False\n    if a == 25:\n        return False\n    if a == 27:\n        return False\n    if a == 28:\n        return False\n    if a == 29:\n        return False\n    if a == 31:\n        return False\n    if a == 33:\n        return False\n    if a == 34:\n        return False\n    if a == 35:\n        return False\n    if a == 37:\n        return False\n    if a == 38:\n        return False\n    if a == 40:\n        return False\n    if a == 4", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = is_prime_knuth(a)\n    if is_prime == True:\n        print('true')\n    else:\n        print('false')", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # your code here\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    from math import sqrt\n    n = int(a)\n    for i in range(2, int(sqrt(n) + 1)):\n        if not n % i:\n            if not n % (i * i):\n                if not n % (i * i * i):\n                    return False\n                else:\n                    return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a <= 2:\n        return False\n    elif not is_multiply_prime(a // 2):\n        return False\n    elif not is_multiply_prime(a // 3):\n        return False\n    elif not is_multiply_prime(a // 5):\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    # use backtracking\n    a = list(map(int, input().split()))\n    len_a = len(a)\n\n    # print(a)\n\n    is_prime = [False] * len_a\n\n    # print(is_prime)\n\n    def is_multiply_prime(a, i, j):\n        \"\"\"\n        :param a: list of numbers\n        :param i: current number, i >= j\n        :param j: current number, i < j\n        :return: True if a[i] is equal to a[j] * k (k is a prime number) otherwise False\n        \"\"\"\n        if i > j:\n            return True\n        if a[i] == a[j] * k and k in is_prime and is_prime[k] is True:\n            return True\n        else:\n            return is_multiply_prime(a, i + 1, j + 1)\n\n    if is_multiply_prime(a, 0, len_a - 1) is True:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    b = a\n    while not b % 10:\n        b //= 10\n    if b!= 0:\n        return False\n    b = a\n    while not b % 5:\n        b //= 5\n    if b!= 0:\n        return False\n    b = a\n    while not b % 3:\n        b //= 3\n    if b!= 0:\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(input())\n\n    is_prime = False\n    if a < 4:\n        return is_prime\n\n    for i in range(3, int(sqrt(a))+1, 2):\n        if a % i == 0:\n            return is_prime\n\n    is_prime = True\n    for i in range(3, int(sqrt(a))+1, 2):\n        if a % i == 0:\n            is_prime = False\n            break\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    # Write your code here\n    prime = False\n    if isprime(a) == True:\n        for i in range(2, a):\n            if a % i == 0:\n                prime = False\n    return prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(a):\n        \"\"\"A function that check if the number is prime\"\"\"\n        if a < 2:\n            return False\n        if a == 2:\n            return True\n        if a < 4:\n            return True\n        if a % 2 == 0:\n            return False\n        else:\n            for i in range(3, a / 2, 2):\n                if a % i == 0:\n                    return False\n            return True\n\n    def is_divisible(a):\n        \"\"\"A function that checks if the number is divisible\"\"\"\n        for i in range(3, a / 2, 2):\n            if a % i == 0:\n                return True\n        return False\n\n    if a == 0:\n        return False\n    if a < 0:\n        return False\n    if not is_multiply_prime(a):\n        return False\n\n    return is_prime(a) and not is_divisible(a)\n\na = int(input())", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    while True:\n        if a % 2 == 0:\n            a = a // 2\n            continue\n        if a % 3 == 0:\n            a = a // 3\n            continue\n        if a % 5 == 0:\n            a = a // 5\n            continue\n        if a % 7 == 0:\n            a = a // 7\n            continue\n        if a % 11 == 0:\n            a = a // 11\n            continue\n        if a % 13 == 0:\n            a = a // 13\n            continue\n        if a % 17 == 0:\n            a = a // 17\n            continue\n        if a % 19 == 0:\n            a = a // 19\n            continue\n        if a % 23 == 0:\n            a = a // 23\n            continue\n        if a % 29 == 0:\n            a = a // 29\n            continue\n        if a % 31 == 0:\n            a = a // 31\n            continue\n        if a % 37 == 0:\n            a = a // 37\n            continue\n        if a % 41 == 0:\n            a = a // 41\n            continue\n        if a % 43 == 0:\n            a = a // 43\n            continue\n        if a % 47 == 0:\n            a = a // 47\n            continue\n        if a % 53 == 0:\n            a = a // 53\n            continue\n        if a % 59 == 0:\n            a = a // 59", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_multiply_prime(a):\n        if a == 1:\n            return True\n        elif a == 0:\n            return False\n        else:\n            if is_multiply_prime(a // 2) and is_multiply_prime(a % 2):\n                return True\n            else:\n                return False\n    return is_multiply_prime(a)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert(isinstance(a, int))\n    if(a < 2):\n        return False\n    if(a == 2):\n        return True\n    if(a % 2 == 0):\n        return False\n    if(a == 3):\n        return True\n    if(a % 3 == 0):\n        return False\n    number = list(range(1, a))\n    prime = False\n    for n in number:\n        if(n % a!= 0):\n            continue\n        if(is_multiply_prime(n)):\n            if(prime == False):\n                prime = True\n            else:\n                return False\n    return prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(input(\"Enter a number: \"))\n    is_prime = False\n    for i in range(2, a):\n        if a%i == 0:\n            is_prime = False\n            break\n        else:\n            is_prime = True\n    return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # (a) = a\n    if a <= 100:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    num = a\n    max_value = 100\n\n    if num <= 1:\n        return False\n    else:\n        i = 2\n\n        while i <= max_value:\n            if i * i > num:\n                break\n\n            if i <= 3:\n                if num % i == 0:\n                    return False\n\n            else:\n                if num % i == 0:\n                    return False\n\n            i += 1\n\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for x in range(2,100):\n        if is_prime(x):\n            if (a % x) == 0:\n                return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(a):\n        \"\"\"Write a function that returns true if the given number is prime and false otherwise. \n        Knowing that (a) is less then 100.\n        Example:\n        is_prime(30) == True\n        is_prime(10) == False\n        \"\"\"\n        for i in range(2, a):\n            if a % i == 0:\n                return False\n        return True\n\n    def is_multiply_prime(a):\n        for i in range(3, int(a/2), 2):\n            if is_prime(i):\n                if is_prime(a/i):\n                    if is_prime(a/i*i):\n                        return True\n        return False\n    return is_multiply_prime(a)\n\n</s>", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = True\n    if a == 1:\n        return False\n    else:\n        for i in range(2, a/2):\n            if a % i == 0:\n                is_prime = False\n        if a == 2:\n            return True\n        else:\n            return is_prime", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return None", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    assert 1 <= a <= 100\n    if a % 2 == 0:\n        return False\n    if a <= 10:\n        return True\n    primes = []\n    for n in range(3,int(a**0.5)+1,2):\n        if a % n == 0:\n            continue\n        if n > 100:\n            break\n        primes.append(n)\n    if len(primes) == 3:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 100:\n        for i in range(1, 100):\n            for j in range(i + 1, 100):\n                for k in range(j + 1, 100):\n                    if (a % (i * j * k) == 0):\n                        return False\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    from math import sqrt\n    if int(sqrt(a))!= int(sqrt(a)):\n        return False\n    elif a == 1:\n        return False\n    elif a <= 2:\n        return True\n    else:\n        b = 3\n        while b * b < a:\n            if is_multiply_prime(b * b):\n                if is_multiply_prime(a % b * b):\n                    return True\n                else:\n                    return False\n            else:\n                return False\n            b = b + 1", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    n = int(input('Please enter the number to check: '))\n    check_prime(n)\n    return check_multiply(n)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    b = a\n    c = 0\n    while b % 2 == 0:\n        b /= 2\n        c += 1\n    print(c)\n\n    d = a\n    e = 0\n    while d % 3 == 0:\n        d /= 3\n        e += 1\n    print(e)\n\n    f = a\n    g = 0\n    while f % 5 == 0:\n        f /= 5\n        g += 1\n    print(g)\n\n    if c + e + g == 2:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return (a % (a - 1)) == 0", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    if a < 100:\n        is_prime = [True] * 100\n        is_prime[0] = False\n        is_prime[1] = False\n        for i in range(2, 100):\n            if a % i == 0:\n                is_prime[i] = False\n                break\n        for i in range(2, 100):\n            if is_prime[i]:\n                continue\n            for j in range(i, 100):\n                if is_prime[j] == False:\n                    continue\n                for k in range(j, 100):\n                    if is_prime[k] == False:\n                        continue\n                    if a % (i * j * k) == 0:\n                        return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    if a % 7 == 0:\n        return False\n    if a % 11 == 0:\n        return False\n    if a % 13 == 0:\n        return False\n    if a % 17 == 0:\n        return False\n    if a % 19 == 0:\n        return False\n    if a % 23 == 0:\n        return False\n    if a % 29 == 0:\n        return False\n    if a % 31 == 0:\n        return False\n    if a % 37 == 0:\n        return False\n    if a % 41 == 0:\n        return False\n    if a % 43 == 0:\n        return False\n    if a % 47 == 0:\n        return False\n    if a % 53 == 0:\n        return False\n    if a % 59 == 0:\n        return False\n    if a % 61 == 0:\n        return False\n    if a % 67 == 0:\n        return False\n    if a % 71 == 0:\n        return False\n    if a % 73 == 0:\n        return False\n    if a % 79 == 0:\n        return False\n    if a % 83 == 0:\n        return False\n    if a % 89 == 0:\n        return False\n    if a % 97 == 0:\n        return False\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Don't forget to import math module\n    import math\n\n    def is_prime(n):\n        \"\"\"Return True if n is prime, False otherwise\"\"\"\n        # Don't forget to import math module\n        import math\n\n        if n < 2:\n            return False\n\n        if n < 4:\n            return True\n\n        if n % 2 == 0 or n % 3 == 0:\n            return False\n\n        sqrt_n = int(math.sqrt(n))\n\n        for i in range(5, sqrt_n + 1, 6):\n            if n % i == 0:\n                return False\n\n        return True\n\n    # Method to check if number is multiply of 3 prime numbers\n    def is_multiply_prime_m(a):\n        if a % 2 == 0 or a % 3 == 0 or a % 5 == 0:\n            return False\n        sqrt_n = int(math.sqrt(a))\n        for i in range(7, sqrt_n + 1, 6):\n            if a % i == 0:\n                return False\n        return True\n\n    # Method to check if number is multiply of 3 prime numbers\n    def is_multiply_prime_p(a):\n        if a % 2 == 0 or a % 3 == 0 or a % 5 == 0:\n            return False\n        sqrt_n = int(", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import math\n    \n    if int(math.sqrt(a))!= int(math.sqrt(a)):\n        return False\n    \n    if a == 1:\n        return False\n    elif a == 2:\n        return False\n    elif a % 2 == 0:\n        return False\n    elif a % 3 == 0:\n        return False\n    elif a % 5 == 0:\n        return False\n    elif a % 7 == 0:\n        return False\n    elif a % 11 == 0:\n        return False\n    elif a % 13 == 0:\n        return False\n    elif a % 17 == 0:\n        return False\n    elif a % 19 == 0:\n        return False\n    elif a % 23 == 0:\n        return False\n    elif a % 29 == 0:\n        return False\n    elif a % 31 == 0:\n        return False\n    elif a % 37 == 0:\n        return False\n    elif a % 41 == 0:\n        return False\n    elif a % 43 == 0:\n        return False\n    elif a % 47 == 0:\n        return False\n    elif a % 53 == 0:\n        return False\n    elif a % 59 == 0:\n        return False\n    elif a % 61 == 0:\n        return False\n    elif a % 67 == 0:\n        return False\n    elif a % 71 == 0:\n        return False\n    elif a % 73 == 0:\n        return False\n    elif a %", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a < 2:\n        return False\n    elif a == 2:\n        return True\n    elif a % 2 == 0:\n        return False\n    else:\n        return is_multiply_prime(a//2) and is_multiply_prime(a*2)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    result = False\n    for i in range(2, a/2):\n        if is_multiply_prime(a/i) and is_multiply_prime(i):\n            result = True\n    return result", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    answer = False\n    if a % 2 == 0 and a % 3 == 0:\n        answer = True\n    elif a % 5 == 0 and a % 3 == 0:\n        answer = True\n    elif a % 2 == 0 and a % 5 == 0:\n        answer = True\n    elif a % 7 == 0 and a % 5 == 0:\n        answer = True\n    elif a % 2 == 0 and a % 7 == 0:\n        answer = True\n    elif a % 3 == 0 and a % 7 == 0:\n        answer = True\n    return answer", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n\n    def is_prime(num):\n        \"\"\" \n        Returns true if num is a prime number and false otherwise\n        num: number to check\n        \"\"\"\n        if num == 1:\n            return False\n        elif num == 2:\n            return True\n        elif num % 2 == 0:\n            return False\n        num_sqrt = int(num**0.5)\n        i = 3\n        while i <= num_sqrt:\n            if num % i == 0:\n                return False\n            i += 2\n        return True\n    return not(is_multiply_prime(a))", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = abs(a)\n    if a < 2:\n        return False\n    if a == 2:\n        return True\n\n    if a % 2 == 0:\n        return False\n\n    if a < 4:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n\n    count = 1\n    while True:\n        count += 1\n        if count > 100:\n            break\n        if count % 3 == 0:\n            continue\n        if count % 5 == 0:\n            continue\n        if count % 7 == 0:\n            continue\n        if count % 11 == 0:\n            continue\n        if count % 13 == 0:\n            continue\n        if count % 17 == 0:\n            continue\n        if count % 19 == 0:\n            continue\n        if count % 23 == 0:\n            continue\n        if count % 29 == 0:\n            continue\n        if count % 31 == 0:\n            continue\n        if count % 37 == 0:\n            continue\n        if count % 41 == 0:\n            continue\n        if count % 43 == 0:\n            continue\n        if count % 47 == 0:\n            continue\n        if count % 53 == 0:\n            continue\n        if count % 59 == 0:\n            continue\n        if count % 61 == 0:\n            continue\n        if count % 67 == 0:\n            continue\n        if count % 71 == 0:\n            continue\n        if count % 73 ==", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # write your code here\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(2, a):\n        if is_prime(a):\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return False\n    if a == 2:\n        return True\n    if a % 2 == 0 and not is_multiply_prime(a // 2):\n        return False\n    if a % 3 == 0 and not is_multiply_prime(a // 3):\n        return False\n    if a % 5 == 0 and not is_multiply_prime(a // 5):\n        return False\n    if a % 7 == 0 and not is_multiply_prime(a // 7):\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    is_prime = True\n    while is_prime:\n        is_prime = False\n        for i in range(1, a):\n            if a % i == 0:\n                is_prime = True\n        if is_prime:\n            return True\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    primes = [3,5,7]\n    if len(primes)==0:\n        return False\n    if a%primes[0]==0:\n        return False\n    for i in range(1,len(primes)):\n        if a%primes[i]==0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import time\n    start = time.time()\n    \n    a = int(a)\n    if a < 2:\n        return False\n\n    is_prime = True\n\n    for i in range(2, a):\n        if a % i == 0:\n            is_prime = False\n            break\n\n    if is_prime:\n        for i in range(2, a):\n            for j in range(i + 1, a):\n                if a % j == 0:\n                    is_prime = False\n                    break\n    print(is_multiply_prime(a), time.time() - start)", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Your code here\n    a = int(a)\n    b = 3\n    c = 5\n    if (a % b == 0 and a % c == 0) or (a % b == 0 and a % c == 0 and a % c == 0):\n        return False\n    else:\n        return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    pass", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    import itertools\n    count = 0\n    for i in itertools.product(range(2,10), repeat=3):\n        if a == i[0] * i[1] * i[2]:\n            count += 1\n    return count == 3", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    if a == 1:\n        return True\n    if not is_multiply_prime(a//2):\n        return False\n    if not is_multiply_prime(a//3):\n        return False\n    if not is_multiply_prime(a//5):\n        return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    def is_prime(n):\n        for i in range(2, n):\n            if n % i == 0:\n                return False\n        return True\n\n    if is_prime(a) and is_prime(a//2) and is_prime(a//3):\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    for i in range(2, a):\n        if not is_multiply_prime(a//i):\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # Write your code here\n    def is_prime(n):\n        \"\"\"Returns true if n is a prime number.\"\"\"\n        if n == 2:\n            return True\n        elif n % 2 == 0:\n            return False\n        for i in range(3, n + 1, 2):\n            if n % i == 0:\n                return False\n        return True\n\n    if is_prime(a)!= True:\n        return False\n    if a < 2:\n        return False\n\n    is_prime_set = set()\n    for i in range(2, a):\n        if is_prime(a) == True:\n            is_prime_set.add(a)\n        elif is_prime(a-1) == True:\n            is_prime_set.add(a-1)\n\n    for i in range(2, a):\n        if i in is_prime_set:\n            return False\n\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    # check the number of divisors. If the number of divisors is not 2,3,5,7 then the number is not prime\n    if a <= 100:\n        if a == 1:\n            return False\n        else:\n            if a % 2 == 0 and a > 2:\n                return False\n            if a % 3 == 0 and a > 3:\n                return False\n            if a % 5 == 0 and a > 5:\n                return False\n            if a % 7 == 0 and a > 7:\n                return False\n\n            # number of divisors are 2,3,5,7. The number is prime\n            if a == 2:\n                return True\n            if a % 2 == 0 and a > 2:\n                return False\n            if a == 3:\n                return True\n            if a % 3 == 0 and a > 3:\n                return False\n            if a == 5:\n                return True\n            if a % 5 == 0 and a > 5:\n                return False\n            if a == 7:\n                return True\n            if a % 7 == 0 and a > 7:\n                return False\n            # number of divisors are 2,3,5,7. The number is not prime\n            return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    a = int(a)\n    is_prime = False\n    p = []\n    for i in range(2, a):\n        if a % i == 0:\n            is_prime = True\n            break\n    if is_prime:\n        return True\n    else:\n        return False", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    prime_sieve = [True] * 100\n    for i in range(2, 100):\n        if prime_sieve[i]:\n            for j in range(i * 2, 100, i):\n                prime_sieve[j] = False\n    if a == 1:\n        return False\n    if a % 2 == 0:\n        return False\n    if a % 3 == 0:\n        return False\n    if a % 5 == 0:\n        return False\n    for i in range(2, int(a / 2)):\n        if a % i == 0:\n            return False\n    for i in range(3, int(a / 3)):\n        if a % i == 0:\n            return False\n    for i in range(5, int(a / 5)):\n        if a % i == 0:\n            return False\n    for i in range(7, int(a / 7)):\n        if a % i == 0:\n            return False\n    return True", "def is_multiply_prime(a):\n    \"\"\"Write a function that returns true if the given number is the multiplication of 3 prime numbers\n    and false otherwise.\n    Knowing that (a) is less then 100. \n    Example:\n    is_multiply_prime(30) == True\n    30 = 2 * 3 * 5\n    \"\"\"\n    print(a)\n    if a==1:\n        return True\n    if not is_multiply_prime(a // a) and not is_multiply_prime(a % a):\n        return False\n    return is_multiply_prime(a // a) or is_multiply_prime(a % a)"]]