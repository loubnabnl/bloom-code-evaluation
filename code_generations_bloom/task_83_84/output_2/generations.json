[["def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # write your code here\n    result = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1:\n            result += 1\n        if i % 10 == n:\n            result += 1\n    return result\n\nstarts_one_ends(2)\nstarts_one_ends(3)\nstarts_one_ends(4)\nstarts_one_ends(5)\nstarts_one_ends(6)\nstarts_one_ends(7)\nstarts_one_ends(8)\nstarts_one_ends(9)\nstarts_one_ends(10)\nstarts_one_ends(11)\nstarts_one_ends(12)\nstarts_one_ends(13)\nstarts_one_ends(14)\nstarts_one_ends(15)\nstarts_one_ends(16)\nstarts_one_ends(17)\nstarts_one_ends(18)\nstarts_one_ends(19)\nstarts_one_ends(20)\nstarts_one_ends(21)\nstarts_one_ends(22)\nstarts_one_ends(23)\nstarts_one_ends(24)\nstarts_one_ends(25)\nstarts_one_ends(26)\nstarts_one_", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return n * (n - 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n):\n        if i % 10 == 1:\n            count += 1\n        if i % 10 == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(1, 10**n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(n):\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        if n % 2 == 0:\n            return count(n//2) + count(n//2 - 1)\n        return count(n//2) + count(n//2 + 1)\n    return count(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 3\n    else:\n        return n * (n - 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([(n - 1 - (i % n)) % n for i in range(1, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def f(x):\n        if x == 1:\n            return 1\n        if x % 10 == 1:\n            return f(x // 10) + f(x // 10 - 1)\n        return f(x // 10)\n    return f(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    res = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1:\n            res += 1\n        if i % 10 == 0:\n            res += 1\n    return res", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n, count):\n        if n == 1:\n            return count\n        elif n % 2 == 1:\n            return helper(n - 1, count + 1)\n        else:\n            return helper(n - 1, count)\n\n    return helper(n, 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 2:\n        return 0\n    return sum([starts_one_ends(n - 1) for _ in range(n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Create a list of numbers that start with 1\n    numbers_starting_with_1 = []\n    for i in range(n):\n        numbers_starting_with_1.append(1 * i)\n\n    # Create a list of numbers that end with 1\n    numbers_ending_with_1 = []\n    for i in range(n):\n        numbers_ending_with_1.append(1 * (n - i))\n\n    # Calculate the count\n    return len(set(numbers_starting_with_1).union(numbers_ending_with_1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n):\n        if n == 0:\n            return 1\n        elif n == 1:\n            return 0\n        else:\n            return helper(n - 1) + helper(n - 2)\n    return helper(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # base case\n    if n <= 1:\n        return 0\n\n    # inductive step\n    return 1 + starts_one_ends(n - 1) + starts_one_ends(n - 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n, start=0):\n        if n == 0:\n            return 0\n        return helper(n-1, start+1) + helper(n-1, start)\n    return helper(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([count(n) for count in range(0,n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n):\n        if n == 0:\n            return 0\n        if n == 1:\n            return 1\n        return helper(n-1) + helper(n-2)\n    return helper(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(10**n):\n        if i%10 == 1 or i%10 == 9 or i%10 == 0:\n            count += 1\n    return count\n\nstarts_one_ends(1) == 1\nstarts_one_ends(2) == 1\nstarts_one_ends(3) == 3\nstarts_one_ends(4) == 3\nstarts_one_ends(5) == 4\nstarts_one_ends(6) == 5\nstarts_one_ends(7) == 7\nstarts_one_ends(8) == 7\nstarts_one_ends(9) == 7\nstarts_one_ends(10) == 7\nstarts_one_ends(11) == 7\nstarts_one_ends(12) == 7\nstarts_one_ends(13) == 7\nstarts_one_ends(14) == 7\nstarts_one_ends(15) == 7\nstarts_one_ends(16) == 7\nstarts_one_ends(17) == 7\nstarts_one_ends(18) == 7\nstarts_one_ends(19) == 7\nstarts_one_ends", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n_digit_numbers = n_digit_numbers = n**n\n    count = 0\n    for i in range(n_digit_numbers):\n        if (i % 10) == 1:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def d(n, k):\n        if n < 10:\n            return 0\n        elif n == 10:\n            return 1\n        else:\n            return d(n - 1, k) + d(n - 1, k - 1) + d(n - 1, k - 2)\n    return d(n, n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(10**n):\n        if (i % 10) == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10):\n        for j in range(i, 10):\n            for k in range(j, 10):\n                for l in range(k, 10):\n                    for m in range(l, 10):\n                        for n in range(m, 10):\n                            for o in range(n, 10):\n                                if n == o:\n                                    continue\n                                if n == 10 and o == 1:\n                                    continue\n                                if n == 1 and o == 10:\n                                    continue\n                                if n == 10 and o == 10:\n                                    continue\n                                if (n % i == 0 or n % j == 0 or n % k == 0 or\n                                    n % l == 0 or n % m == 0 or n % n == 0 or\n                                    n % o == 0) and (o % i == 0 or o % j == 0 or\n                                    o % k == 0 or o % l == 0 or o % m == 0 or\n                                    o % n == 0 or o % o == 0):\n                                    count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def _count(n):\n        count = 0\n        for i in range(1, 10):\n            for j in range(1, 10):\n                for k in range(1, 10):\n                    if i + j + k == n:\n                        count += 1\n        return count\n\n    return _count(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 1\n    return sum(1 for i in range(10**n) if (i % 10) == 1) + \\\n           sum(1 for i in range(10**n) if (i % 10) == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(n):\n        return n * (n - 1) // 2\n\n    def starts_one(n):\n        return n * (n - 1) // 2\n\n    def ends_one(n):\n        return n * (n + 1) // 2\n\n    return count(n) + starts_one(n) + ends_one(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    return sum(starts_one_ends(i) for i in range(n, 0, -1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10 ** n):\n        if (i % 10) == 1 or (i % 10) == n:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(1, 10):\n            if n - i + j == 1:\n                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 1\n\n    result = 0\n    for i in range(1, n + 1):\n        result += (n - i) * (i ** 2) * (n - i + 1) / 2\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # https://leetcode.com/problems/starts-one-ends/description/\n    def count(n):\n        if n == 1:\n            return 1\n        else:\n            return sum(count(i) for i in range(n, 1, -1))\n    return count(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return sum(starts_one_ends(i) for i in range(2, n+1)) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # write code here\n    ans = 0\n    if n == 1:\n        ans = 1\n    elif n == 2:\n        ans = 2\n    elif n == 3:\n        ans = 3\n    else:\n        for i in range(2, n + 1):\n            ans += (n - i) * (n - i - 1) // 2\n    return ans", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    while n >= 1:\n        count += 1 if n % 10 == 1 else 0\n        n //= 10\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(2, n+1):\n        if (i % 10) == 1:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    cnt = 0\n    if n == 0:\n        return cnt\n    else:\n        cnt += 1 if n % 10 == 1 else 0\n        n //= 10\n        cnt += 1 if n % 10 == 1 else 0\n        return cnt", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return starts_one_ends(n-1) + starts_one_ends(n-2) + starts_one_ends(n-3)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def recurse(n, count):\n        if n == 0:\n            return count\n        if n % 10 == 1:\n            count += recurse(n/10, 0)\n        if n % 10 == 0:\n            count += recurse(n/10, 0)\n        return count\n    return recurse(n, 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # write your code here\n    result = 0\n    for i in range(10,10+n):\n        if(i%10==1 and i%10!=n%10):\n            result += 1\n        elif(i%10==n%10 and i%10!=1):\n            result += 1\n        elif(i%10!=1 and i%10!=n%10):\n            result += 0\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 0:\n        return 0\n\n    # Initialize the count to zero\n    count = 0\n\n    # Iterate over all numbers from 2 to n\n    for i in range(2, n + 1):\n        # If the number ends with 1, increment the count\n        if n % i == 0:\n            count += 1\n\n        # If the number starts with 1, increment the count\n        if i == n:\n            count += 1\n\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(n):\n        for j in range(10):\n            if (i+j)%n == 0:\n                if j == 1:\n                    count += 1\n                else:\n                    pass\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def check(num):\n        if num[0] == '1':\n            return 1\n        if num[-1] == '1':\n            return 1\n        return 0\n\n    return sum([(10**i)**n for i in range(1, 10)]) - sum([(10**i)**n for i in range(0, 10)]) - sum([(10**i)**n for i in range(1, 10)])*check(str(10**i)) for i in range(1, 10)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # return 0 if n <= 0\n    # return 1 if n = 1\n    if n == 1:\n        return 1\n    # print(n)\n    # return n if n is a multiple of 10\n    # return n - 1 if n is not a multiple of 10\n    if n % 10 == 0:\n        return n\n    else:\n        return n - 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return 1 + sum(starts_one_ends(n - 1) for i in range(1, 10))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    return sum(1 for x in xrange(10**n) if x[0] == 1 or x[-1] == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n):\n        if (i % 10) == 1:\n            if i == 1:\n                count += 1\n            else:\n                if (i / 10) % 10 == 1:\n                    count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return sum(starts_one_ends(i) for i in range(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1 or i % 10 == n:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n_digit = len(str(n))\n    count = 0\n    for i in range(10**n_digit):\n        if i % 10 == 1:\n            if i > n:\n                count += 1\n            else:\n                count += n_digit\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # here we use the fact that n-digit numbers end with n-1 zeros\n    return sum([(n - digit) * (n - digit - 1) // 2 for digit in range(1, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(2, 10):\n        count += sum(1 for x in range(i ** n, 10 ** n) if x % i == 1)\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 0\n    else:\n        return n * (n - 1) // 2 + sum(starts_one_ends(n - i) for i in range(2, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # print(\"starts_one_ends(\", n, \")\")\n    # if n == 1:\n    #     return 1\n    # if n == 2:\n    #     return 2\n    # if n == 3:\n    #     return 3\n    # if n == 4:\n    #     return 4\n    # if n == 5:\n    #     return 5\n    # if n == 6:\n    #     return 6\n    # if n == 7:\n    #     return 7\n    # if n == 8:\n    #     return 8\n    # if n == 9:\n    #     return 9\n    # if n == 10:\n    #     return 10\n    # if n == 11:\n    #     return 11\n    # if n == 12:\n    #     return 12\n    # if n == 13:\n    #     return 13\n    # if n == 14:\n    #     return 14\n    # if n == 15:\n    #     return 15\n    # if n == 16:\n    #     return 16\n    # if n == 17:\n    #     return 17\n    # if n == 18:\n    #     return 18\n    # if n == 19:\n    #     return 19\n    # if n == 20:\n    #     return 20\n    # if n == 21:\n    #     return 21\n    # if n == 22:", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    digits = [int(d) for d in str(n)]\n    count = 0\n    for i in range(len(digits)):\n        if digits[i] == 1:\n            if digits[i-1] == 1 or digits[i+1] == 1:\n                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * n - n", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    return int(n * (n + 1) / 2) + (n - 1) * starts_one_ends(n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    total = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1 or i % 10 == n:\n            total += 1\n    return total", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    nums = list(range(n + 1))\n    return sum(nums[i] for i in (0, len(nums) - 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n, a, b):\n        if n == 1:\n            return a + b\n        else:\n            return helper(n - 1, a + b, a) + helper(n - 1, b, b + a)\n\n    return helper(n, 0, 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([sum([int(k) == 1 for k in str(i)]) for i in range(10**n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10 ** n + 1):\n        if i % 10 == 1:\n            count += 1\n        if i % 10 == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # start with a one digit number\n    count = 1\n    # check if the number can be extended to a two digit number\n    while n > 0:\n        # check if the number can be extended to a three digit number\n        if n % 10 == 0:\n            count += 1\n            n //= 10\n        # otherwise, add one to the count\n        else:\n            count += 1\n        # decrement the number\n        n -= 1\n    # return the count\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n):\n        if n == 1:\n            return 1\n        return n*(n - 1)//2 + helper(n-1)\n\n    return helper(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # noinspection PyUnresolvedReferences\n    from collections import defaultdict\n\n    # noinspection PyTypeChecker\n    a = defaultdict(int)\n    for n in range(1, 10**n + 1):\n        if n % 10!= 0:\n            a[n % 10] += 1\n        if n % 10 == 1:\n            a[n] += 1\n\n    return sum(a.values())", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(n):\n        return n + 1\n\n    def count2(n):\n        return n + n\n\n    return sum(count(n) for n in range(2, n + 1)) + sum(count2(n) for n in range(2, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 1\n    return n * (starts_one_ends(n-1) - 1) + (n % 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return n * (n - 1) // 2 + starts_one_ends(n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def f(n):\n        def g(n):\n            if n == 0:\n                return 0\n            if n == 1:\n                return 1\n            if n % 2 == 0:\n                return g(n / 2) + f(n / 2)\n            return g(n / 2) + f(n / 2) + 1\n        return g(n)\n    return f(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    nums = []\n    for i in range(10**n):\n        nums.append(i)\n    for i in range(10**n):\n        if nums[i] == 1:\n            nums[i] = 0\n        else:\n            nums[i] = nums[i] + 1\n    return len(nums)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for x in range(1,10**n + 1) if x % 10 == 1 or x % 10 == n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in range(1, 10 ** n) if (i % 10) == 1) + \\\n           sum(1 for i in range(10 ** n) if (i % 10) == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n, res):\n        if n == 1:\n            res.append(1)\n        if n % 2 == 0:\n            helper(n // 2, res)\n        else:\n            helper(3 * n + 1, res)\n\n    res = []\n    helper(n, res)\n    return res", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    return (n * (n + 1)) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(n):\n        count += sum([int(j) for j in str(i)])\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Base case\n    if n == 1:\n        return 1\n\n    # Use a recursive approach\n    return 1 + sum(starts_one_ends(i) for i in range(2, n+1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    return sum(starts_one_ends(n - 1) for i in range(2, 10)) + \\\n        starts_one_ends(n - 1) + starts_one_ends(n - 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * n // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    return n * (n + 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 1\n    if n == 1:\n        return 1\n    count = 0\n    for digit in range(2, 10):\n        count += n * (10**n) * (10**n - digit) / (10**(n - 1) - 1)\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n + 1):\n        if (i % 10 == 1) or (i % 10 == n):\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def f(n):\n        if n == 1:\n            return 1\n        elif n == 2:\n            return 2\n        else:\n            return sum(f(i) for i in range(1, n))\n    return f(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10):\n        for j in range(1, 10):\n            for k in range(1, 10):\n                for l in range(1, 10):\n                    if i+j+k+l == n:\n                        count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    one_count = 1\n    for i in range(2, n + 1):\n        one_count += 1 + (n - i) * (one_count - 1)\n    return one_count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # if n is 1, return 0\n    if n == 1:\n        return 0\n    # if n is 0, return 1\n    if n == 0:\n        return 1\n    # if n is 2, return 1\n    if n == 2:\n        return 1\n    # if n is 3, return 2\n    if n == 3:\n        return 2\n    # if n is 4, return 3\n    if n == 4:\n        return 3\n    # if n is 5, return 5\n    if n == 5:\n        return 5\n    # if n is 6, return 7\n    if n == 6:\n        return 7\n    # if n is 7, return 9\n    if n == 7:\n        return 9\n    # if n is 8, return 10\n    if n == 8:\n        return 10\n    # if n is 9, return 11\n    if n == 9:\n        return 11\n    # if n is 10, return 11\n    if n == 10:\n        return 11\n    # if n is 11, return 12\n    if n == 11:\n        return 12\n    # if n is 12, return 13\n    if n == 12:\n        return 13\n    # if n is 13, return 13\n    if n == 13:\n        return 13\n    # if n is 14, return 14\n    if n == 14:\n        return 14", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(n) if _ == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(i for i in range(1, 10**n) if i % 10 == 1 or i % 10 == n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return n * (n - 1) // 2\n    else:\n        return (n - 1) * (n - 2) // 2 + 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    res = 0\n    for i in range(1, 10 ** n + 1):\n        if i % 10 == 1:\n            res += 1\n        if i % 10 == n:\n            res += 1\n    return res", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for digit in range(n):\n        if digit == 0:\n            count += 1\n        elif digit == n-1:\n            count += 1\n        else:\n            count += 0\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    return (10**n) - (10**(n-1)) + (10**(n-2)) - (10**(n-3)) + (10**(n-4)) - (10**(n-5)) + (10**(n-6)) - (10**(n-7)) + (10**(n-8)) - (10**(n-9)) + (10**(n-10))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count_one(n):\n        \"\"\"\n        n-digit positive integers that start or end with 1.\n        \"\"\"\n        return (n + 1) * (n + 2) // 2\n\n    if n <= 1:\n        return 0\n    else:\n        return count_one(n - 1) + count_one(n - 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([1 if n % i == 1 else 0 for i in range(2, n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1 and i >= 100:\n            count += 1\n        if i % 10 == 1 and i < 100:\n            count += 1\n        if i % 10 == 0 and i >= 100:\n            count += 1\n        if i % 10 == 0 and i < 100:\n            count += 1\n    return count\n\nstarts_one_ends(int(input()))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Base Case\n    if n == 0:\n        return 0\n\n    # Recursive Case\n    return n + starts_one_ends(n-1) + starts_one_ends(n-2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n == 2:\n        return 2\n    if n % 2 == 0:\n        return n * (n - 1) // 2\n    return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    while n > 0:\n        count += 1 if n % 10 == 1 else 0\n        n /= 10\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return (n**2-1)//2 + (n**2+2)//4", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(n):\n        count = 0\n        for i in range(1, n+1):\n            if n%i == 0:\n                count += n//i\n        return count\n    return count(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return starts_one_ends(n - 1) + starts_one_ends(n - 1 + 10) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # 1, 11, 111, 1111, 11111, 111111, 1111111, 11111111\n    count = 0\n    for i in range(1, 10):\n        for j in range(1, 10):\n            for k in range(1, 10):\n                for l in range(1, 10):\n                    for m in range(1, 10):\n                        for n in range(1, 10):\n                            if i + j + k + l + m + n == n:\n                                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    # This function is called with an n-digit number, so n > 1\n    result = 0\n    while n > 0:\n        result += n % 10\n        n //= 10\n    return result + starts_one_ends(n - 1) - 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    return sum(starts_one_ends(n - 1) + starts_one_ends(n - 2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(digits):\n        count = 0\n        for digit in digits:\n            if digit == 1:\n                count += 1\n            elif digit == 0:\n                count += 1\n            else:\n                count += 0\n        return count\n    return count(str(n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    return sum(1 for i in range(10**n) if (i % 10) == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return sum(starts_one_ends(n - i) for i in range(n - 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    nums = []\n    for i in range(1, 10):\n        for j in range(1, 10):\n            for k in range(1, 10):\n                nums.append(i*10 + j*10 + k)\n    count = 0\n    for i in nums:\n        if (i % 10 == 1) or (i % 10 == n):\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    return sum([\n        1 + starts_one_ends(n - digit) + starts_one_ends(digit)\n        for digit in range(2, n + 1)\n    ])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 1\n    else:\n        return (n + 1) * starts_one_ends(n - 1) + n * (1 + starts_one_ends(n - 2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1:\n            count += 1\n        if i % 10 == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    return (n + 1) * (n + 2) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Base cases\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n\n    # Compute the result for n-digit numbers\n    result = 0\n    for i in range(1, 10 ** n + 1):\n        if i % 10 == 1:\n            result += 1\n        if i % 10 == 0:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n_digits = n * 10\n    return sum([(n_digits - i + 1) * (10**i - 1) for i in range(1, n)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    if n == 1:\n        return 1\n    count = 0\n    for i in range(2, n+1):\n        count += 1 + starts_one_ends(i)\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    else:\n        return sum(starts_one_ends(n - i) for i in range(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for n in range(1, 10**n + 1) if 1 in str(n) or n in str(1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return (n * (n + 1)) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in range(10**n) if (i[:n] == '1') or (i[n:] == '1'))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 0\n    else:\n        return (n**(n-2) - (n-2)**(n-2) - 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    elif n == 3:\n        return 3\n    elif n == 4:\n        return 4\n    elif n == 5:\n        return 5\n    elif n == 6:\n        return 7\n    elif n == 7:\n        return 8\n    elif n == 8:\n        return 9\n    else:\n        return sum(starts_one_ends(n-1) + starts_one_ends(n-2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([\n        int(nth_digit(n) == 1) for nth_digit in range(n + 1)\n    ])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # BEGIN YOUR CODE HERE\n    # i am using two for loop to print the result\n    result = 0\n    for i in range(1, 10):\n        for j in range(1, 10):\n            if(i == 1 or j == 1):\n                result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 0\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n % 2 == 0:\n        return starts_one_ends(n // 2) + starts_one_ends(n // 2 - 1)\n    else:\n        return starts_one_ends(n - 1) + starts_one_ends(n - 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    assert n > 0\n    if n == 1:\n        return 1\n    return n * (n + 1) / 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # write your code here\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n    else:\n        return n*n - 2 * (n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    one_count = 0\n    for i in range(1, n + 1):\n        one_count += n - i + 1\n        if one_count == n:\n            break\n    return one_count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 0\n    else:\n        return n * (n - 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if i % 10 == 1:\n            count += 1\n        if i % 10 == n - 1:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return (n - 1) * starts_one_ends(n - 1) + 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n + 1):\n        if i == 1:\n            count += 1\n        if i % 10 == 1:\n            count += 1\n        if i % 10 == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in range(10**n) if '1' in str(i))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Write your code here\n    total = 0\n    for i in range(10, n+1):\n        if (i % 10) == 1:\n            total += 1\n        else:\n            total += 0\n    return total", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Solution 1\n    # using itertools.groupby\n    def helper(n):\n        if n == 0:\n            return 0\n        return sum(1 for i, digit in enumerate(str(n)) if i % 2 == 0 and digit == 1)\n    return sum(helper(n) for n in xrange(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10 ** n):\n        if i % 10 == 1 or i % 10 == 0:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Input validation\n    assert n > 0\n    # Base cases\n    if n == 1:\n        return 1\n    if n == 2:\n        return 2\n    # Recurrence\n    return (n * (n - 1) + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        for j in range(1, 10):\n            if i*10+j == n:\n                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    res = 0\n    for i in range(1, n + 1):\n        for j in range(i, n + 1):\n            if i == j or i + j == n:\n                res += 1\n    return res", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    while n > 0:\n        if n % 10 == 1:\n            count += 1\n        n //= 10\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 0\n    else:\n        return n * (starts_one_ends(n-1) + starts_one_ends(n-2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return n*(n-1)//2 + starts_one_ends(n-1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    #n = str(n)\n    count = 0\n    for i in range(n):\n        if i == 0:\n            if n[i] == '1':\n                count += 1\n        elif i == n-1:\n            if n[i] == '1':\n                count += 1\n        else:\n            if n[i] == '1':\n                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n_digits = n - 1\n    return sum(x * y for x in range(n_digits) for y in range(2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(10, 10**n, 10):\n        if i % 10 == 1:\n            count += 1\n        else:\n            break\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Complete this function\n    if n < 2:\n        return 0\n    return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 2:\n        return 0\n    if n == 2:\n        return 1\n    return (n - 1) * starts_one_ends(n - 1) + starts_one_ends(n - 2)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Do not use any built-in functions\n    pass", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 2\n    if n == 4:\n        return 3\n    if n == 5:\n        return 4\n    if n == 6:\n        return 5\n    if n == 7:\n        return 6\n    if n == 8:\n        return 7\n    if n == 9:\n        return 8\n    if n == 10:\n        return 9\n    if n == 11:\n        return 10\n    if n == 12:\n        return 11\n    if n == 13:\n        return 12\n    if n == 14:\n        return 13\n    if n == 15:\n        return 14\n    if n == 16:\n        return 15\n    if n == 17:\n        return 16\n    if n == 18:\n        return 17\n    if n == 19:\n        return 18\n    if n == 20:\n        return 19\n    if n == 21:\n        return 20\n    if n == 22:\n        return 21\n    if n == 23:\n        return 22\n    if n == 24:\n        return 23\n    if n == 25:\n        return 24\n    if n == 26:\n        return 25\n    if n == 27:\n        return 26\n    if n == 28:\n        return 27\n    if n == 29:\n        return 28\n    if n == 30:\n        return 29\n    if n == 31:\n        return 30", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 0\n    count = 0\n    for i in range(1, 10):\n        for j in range(1, 10):\n            for k in range(1, 10):\n                for l in range(1, 10):\n                    for m in range(1, 10):\n                        count += int(str(i) + str(j) + str(k) + str(l) + str(m) + str(n))\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return (n * (n + 1)) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(n % (10**i) == 1 for i in range(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count(n, count):\n        if n == 1:\n            return count\n        return count + count(n - 1, count)\n\n    return count(n, 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # count the number of digits in n\n    digits = int(n ** 0.5)\n    count = 0\n\n    # for every digit, count the number of numbers that start or end with it\n    for i in range(0, digits):\n        count += (n - 1) ** i\n\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for x in range(n) if x % 2 == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n):\n        if n == 0:\n            return 0\n        return helper(n-1) + helper(n-2)\n    return helper(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n+1):\n        if (n-i) % 10 == 1:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 1\n    return n + sum(starts_one_ends(i) for i in range(2, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    one_count = 0\n    for i in range(1, 10**n):\n        if i % 10 == 1:\n            one_count += 1\n        elif i % 10 == n - 1:\n            one_count += 1\n        else:\n            pass\n    return one_count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n):\n        if n == 1:\n            return 1\n        if n % 2 == 0:\n            return helper(n // 2) + helper(n // 2 + 1)\n        else:\n            return helper(n // 2 + 1) + helper(n // 2)\n\n    return helper(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # 1. Special case\n    if n == 1:\n        return 1\n\n    # 2. Base case\n    if n == 0:\n        return 0\n\n    # 3. Recursive case\n    return n * (starts_one_ends(n - 1) + starts_one_ends(n - 2))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for n in range(2, n+1):\n        for i in range(1, 10):\n            for j in range(1, 10):\n                if n % (i*j) == 0:\n                    count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 2\n    else:\n        return n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for digit in range(2, n+1):\n        for i in range(n-digit+1):\n            if i == 0 or i == n-digit:\n                count += int(str(digit)+str(i))\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in range(10 ** n) if i % 10 == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    if n == 3:\n        return 1\n    if n == 4:\n        return 1\n    if n == 5:\n        return 1\n    if n == 6:\n        return 1\n    if n == 7:\n        return 1\n    if n == 8:\n        return 1\n    if n == 9:\n        return 1\n    if n == 10:\n        return 1\n    if n == 11:\n        return 1\n    if n == 12:\n        return 1\n    if n == 13:\n        return 1\n    if n == 14:\n        return 1\n    if n == 15:\n        return 1\n    if n == 16:\n        return 1\n    if n == 17:\n        return 1\n    if n == 18:\n        return 1\n    if n == 19:\n        return 1\n    if n == 20:\n        return 1\n    if n == 21:\n        return 1\n    if n == 22:\n        return 1\n    if n == 23:\n        return 1\n    if n == 24:\n        return 1\n    if n == 25:\n        return 1\n    if n == 26:\n        return 1\n    if n == 27:\n        return 1\n    if n == 28:\n        return 1\n    if n == 29:\n        return 1\n    if n == 30:\n        return 1\n    if n == 31:\n        return 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 1\n    else:\n        return (n - 1) * (n - 2) / 2 + starts_one_ends(n - 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in range(1, 10**n) if (i % 10) in (1, 9))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, int(n**0.5) + 1):\n        if i % 10 == 1 or i % 10 == n:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # cache the first few values\n    if n <= 1:\n        return n\n    if n <= 4:\n        return n + 1\n    if n <= 6:\n        return n + 2\n    if n <= 9:\n        return n + 3\n    if n <= 12:\n        return n + 4\n\n    # not cached, calculate it\n    count = 0\n    for i in range(1, 10):\n        for j in range(10, n + 1, i):\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for i in range(10**n) if (i % 10) == 1 or (i % 10) == n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    cnt = 0\n    for i in range(1, 10**(n-1)):\n        if str(i)[0] == '1':\n            cnt += 1\n        if str(i)[-1] == '1':\n            cnt += 1\n    return cnt", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def helper(n, a):\n        if n == 0:\n            return a\n        return helper(n-1, a+1) + helper(n-1, a)\n\n    return helper(n, 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return 0 if n == 0 else n * (n + 1) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Consider only numbers that are not multiples of 10\n    return sum(n % i == 1 for i in range(2, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n < 1:\n        return 0\n    return sum([1 for _ in range(n + 1)])", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    result = 0\n    for i in range(1, 10 ** n):\n        if (1 * i) % 10!= 0 and (i * 10) % 10!= 0:\n            result += 1\n    return result", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    return (n*(n + 1))//2 - 1", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return n * sum(range(1, n + 1)) + sum(range(n + 1, 0, -1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 1\n    else:\n        return (n * (n + 1)) // 2", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # The range of numbers we are looking at is 1 to n*10^(n-1) + 1.\n    # That means that there are n*10^(n-1) numbers in the range.\n    # The number we are looking for is the number of numbers in the range that\n    # start or end with 1.\n    # So we just need to count the number of 1's in the range.\n    # We can do this by counting the number of 1's in the range 1 to n*10^(n-1).\n    # Then we can subtract that number from the total number of numbers in the\n    # range.\n\n    # The number of 1's in the range 1 to n*10^(n-1) is just the number of\n    # numbers in the range 1 to n*10^(n-1) that start with 1.\n    # That is, we can just take the number of n-digit numbers that start with 1\n    # and subtract the number of n-digit numbers that do not start with 1.\n    # The number of n-digit numbers that do not start with 1 is just the number\n    # of n-digit numbers that end in 0.\n\n    # The number of n-digit numbers that start with 1 is just the number of\n    # numbers in the", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Simplify to a base case\n    if n == 1:\n        return 1\n\n    # Base case\n    if n == 2:\n        return 3\n\n    # Iterate over each number\n    count = 0\n    for digit in range(1, 10):\n        # Calculate the number of numbers ending with 1\n        end_count = 0\n        for i in range(0, n):\n            if digit * 10 ** i + 1 == n:\n                end_count += 1\n\n        # Calculate the number of numbers starting with 1\n        start_count = 0\n        for i in range(0, n):\n            if digit * 10 ** i == n:\n                start_count += 1\n\n        # Increment the total count\n        count += end_count + start_count\n\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 0\n    return sum(starts_one_ends(n - 1) + 1 for x in range(n))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n == 1:\n        return 1\n    else:\n        return n * starts_one_ends(n-1) + sum(1 for i in range(n) if i == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def add(n):\n        count = 0\n        for i in range(n):\n            count += 10**i\n        return count\n    def sub(n):\n        count = 0\n        for i in range(n):\n            count -= 10**i\n        return count\n    def start(n):\n        count = 0\n        for i in range(n):\n            count += 10**i * (i + 1)\n        return count\n    def end(n):\n        count = 0\n        for i in range(n):\n            count += 10**i * (n - i)\n        return count\n    return add(n) - sub(n) + start(n) - end(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    while n > 0:\n        if n % 10 == 1:\n            count += 1\n        n //= 10\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    one_digit_nums = 0\n    two_digit_nums = 0\n    three_digit_nums = 0\n    four_digit_nums = 0\n    for i in range(10):\n        one_digit_nums += 1\n        two_digit_nums += 1 + i\n        three_digit_nums += 1 + i + i\n        four_digit_nums += 1 + i + i + i\n    for i in range(10):\n        one_digit_nums += 1 + i\n        two_digit_nums += 1 + i + i\n        three_digit_nums += 1 + i + i + i\n        four_digit_nums += 1 + i + i + i + i\n    for i in range(10):\n        one_digit_nums += 1 + i + i\n        two_digit_nums += 1 + i + i + i\n        three_digit_nums += 1 + i + i + i + i\n        four_digit_nums += 1 + i + i + i + i + i\n    for i in range(10):\n        one_digit_nums += 1 + i + i + i\n        two_digit_nums += 1 + i + i + i + i\n        three", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    n = int(n)\n    count = 0\n    for i in range(n + 1):\n        if i == 1 or i == n:\n            count += 1\n        else:\n            for j in range(2, n + 1):\n                if i % j == 0:\n                    count += 1\n        if count > 0:\n            break\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    if n <= 1:\n        return 0\n    return sum(starts_one_ends(i) for i in range(1, n + 1))", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    #\n    # 1. Represent n-digit number as a sum of two digits, one of them is 1.\n    #\n    # 2. Count the numbers that start with 1 and end with 1.\n    #\n    # 3. Count the numbers that start with 1 and end with 2.\n    #\n    # 4. Count the numbers that start with 1 and end with 3.\n    #\n    # 5. Count the numbers that start with 1 and end with 4.\n    #\n    # 6. Count the numbers that start with 1 and end with 5.\n    #\n    # 7. Count the numbers that start with 1 and end with 6.\n    #\n    # 8. Count the numbers that start with 1 and end with 7.\n    #\n    # 9. Count the numbers that start with 1 and end with 8.\n    #\n    # 10. Count the numbers that start with 1 and end with 9.\n    #\n    # 11. Count the numbers that start with 1 and end with 0.\n    #\n    # 12. Count the numbers that start with 1 and end with 10.\n    #\n    # 13. Count the numbers that start with 1 and end with 11.\n    #\n    # 14. Count the numbers that start with 1 and end with 12.\n    #\n    # 15. Count the numbers that start with", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    # Do not use this function directly. Use solve(n) instead.\n    #\n    # Hint:\n    # 1. Use the fact that n-digit numbers that start with 1 are\n    #    equivalent to n-1-digit numbers that end with 1.\n    # 2. Use the fact that a number is either a multiple of 10 or a\n    #    multiple of 100, but not both.\n    # 3. Consider the case when n = 1. In this case, the answer is 0.\n    # 4. Consider the case when n = 2. In this case, the answer is 2.\n    # 5. Consider the case when n = 3. In this case, the answer is 6.\n    # 6. Consider the case when n = 4. In this case, the answer is 16.\n    # 7. Consider the case when n = 5. In this case, the answer is 60.\n    # 8. Consider the case when n = 6. In this case, the answer is 120.\n    # 9. Consider the case when n = 7. In this case, the answer is 252.\n    # 10. Consider the case when n = 8. In this case, the answer is 560.\n    # 11. Consider the case when n = 9. In this case,", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, n + 1):\n        for j in range(1, n + 1):\n            if i + j == n:\n                count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    for i in range(1, 10**n + 1):\n        if i % 10 == 1 or i % 10 == n:\n            count += 1\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    count = 0\n    if n == 1:\n        count += 1\n    if n == 2:\n        count += 2\n    if n >= 3:\n        for i in range(3, n + 1):\n            count += i * (n - i)\n        count += sum([(i + 1) * (n - i - 1) for i in range(2, n + 1)])\n    return count", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for x in xrange(10**n) if x[0] == 1 or x[-1] == 1)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    cnt = 0\n    for i in range(1, 10**n):\n        cnt += (i % 10) == 0\n        cnt += (i // 10) == 0\n    return cnt", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    def count_one(n):\n        if n == 0:\n            return 0\n        else:\n            return n * count_one(n-1) + count_one(n-2)\n    return count_one(n)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum(1 for _ in range(n + 1) if _ % 2 == 0)", "def starts_one_ends(n):\n    \"\"\"\n    Given a positive integer n, return the count of the numbers of n-digit\n    positive integers that start or end with 1.\n    \"\"\"\n    return sum([(n - i) // 10**(len(str(n - i)) - 1) for i in range(n + 1)])"]]