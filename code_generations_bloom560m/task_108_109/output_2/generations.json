[["def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # A list of integers\n    arr = [int(x) for x in arr]\n    count_nums = function(arr):\n        sum = 0\n        for i in range(len(arr)):\n            sum += arr[i]\n        if sum > 0:\n            return sum\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # First check whether the number is a positive integer.\n    # If so, return the number of positive integers.\n    if isinstance(arr, int):\n        return arr\n    else:\n        return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return nums.count(0)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return sum(arr) > 0\n    return sum(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    if len(arr) > 1:\n        sum = 0\n        for i in range(len(arr)):\n            sum += arr[i]\n        return sum\n    if len(arr) == 1:\n        return count_nums(arr)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # number of digits\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n        if arr[i] >= 0:\n            nums.append(arr[i])\n        else:\n            nums.append(0)\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        Returns a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([1, 1, 2], -1) == 1\n        >>> count_nums([1, 1, 2], -2) == 2\n        >>> count_nums([1, 1, 2], -3) == 3\n        >>> count_nums([1, 1, 2], -4) == 3\n        >>> count_nums([1, 1, 2], -5) == 3\n        >>> count_nums([1, 1, 2], -6) == 3\n        >>> count_nums([1, 1, 2], -7) == 3\n        >>> count_nums([1, 1, 2], -8) == 3\n        >>> count_nums([1, 1, 2], -9) == 3", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    for i in range(len(arr)):\n        sum = 0\n        for j in range(len(arr)):\n            if arr[i][j] == -1:\n                sum += arr[i][j]\n            else:\n                sum += arr[i][j] * arr[i][j]\n        return sum\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Find the number of elements in the array\n    nums = []\n    for i in range(arr.shape[0]):\n        nums.append(arr[i])\n    for i in range(arr.shape[1]):\n        nums.append(arr[i])\n    if nums.sum(0) < 0:\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)\n        nums.append(0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count = 0\n    while len(arr) > 0:\n        count += arr[count]\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # first sign of the first digit is negative\n    if len(arr) == 0:\n        return -1\n    # count_nums(arr) == 0\n    # count_nums(arr) == 1\n    # count_nums(arr) == 3\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return sum(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr[0]\n    if isinstance(arr, list):\n        return len(arr)\n    if isinstance(arr, basestring):\n        return int(arr)\n    if isinstance(arr, long):\n        return int(arr)\n    if isinstance(arr, float):\n        return int(arr)\n    if isinstance(arr, double):\n        return int(arr)\n    if isinstance(arr, bool):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, long):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, long):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance(arr, int):\n        return int(arr)\n    if isinstance", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    try:\n        count_nums = (int(arr[0]) * int(arr[1]) + int(arr[2]) * int(arr[3]))\n    except ValueError:\n        count_nums = 0\n    count_nums = count_nums / 1024\n\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr.sum(0)\n    else:\n        return arr.count(0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i + 1\n    return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # check if the input array is an array of integers\n    if isinstance(arr, int):\n        return arr.count_nums()\n    else:\n        return arr.count_nums(0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = 0\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            result += arr[i]\n        else:\n            result = result + 1\n    if result < 0:\n        result = 0\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Create a list of all the digits in the array\n    digits = []\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            digits.append(arr[i])\n    return count_nums(digits)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError('array must be a list')\n    return count_nums(arr.split(','))[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum([int(x) for x in nums])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i] * 100)\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr.count()\n    if isinstance(arr, long):\n        return arr.count('+')\n    if isinstance(arr, longlong):\n        return arr.count('+', '.')\n    if isinstance(arr, list):\n        return count_nums(arr)\n    else:\n        raise TypeError(\"expected an integer, not an array or list: %s\" % type(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not arr:\n        return 0\n    n = len(arr)\n    if n % 2 == 0:\n        return 0\n    return n / 2", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return int(arr[0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        for j in range(i, j + 1):\n            if arr[i][j] == 0:\n                return j\n            else:\n                return -1\n\n    if len(arr) == 0:\n        return 0\n    else:\n        return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(0 <= i for i in range(arr.count()))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(arr):\n        print 'ERROR: array must be a list of integers'\n        raise ValueError('array must be a list of integers')\n    if arr[0] < 0:\n        return 0\n    if arr[1] < 0:\n        return 1\n    if arr[2] < 0:\n        return 2\n    if arr[3] < 0:\n        return 3\n    return sum(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr.count(0) == 0:\n        return 0\n    elif arr.count(0) > 0:\n        return arr.count(0) - 1\n    elif arr.count(0) < 0:\n        return arr.count(0) + 1\n    else:\n        return arr.count(0) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # write a function count_nums which takes an array of integers and returns\n    # the number of elements which has a sum of digits > 0.\n    if len(arr)!= len(arr):\n        raise TypeError(\"array must have length %d, not %d\" % (len(arr), len(arr)))\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i, a in enumerate(arr):\n        if a >= 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            count += 1\n        else:\n            count += 1\n    count_nums(arr, count)\n\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    for i in range(0, len(arr), 1):\n        if arr[i] > 0:\n            return i\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError(\"array must be an array.\")\n    if not isinstance(arr, tuple):\n        raise TypeError(\"array must be an array of tuples.\")\n    return sum(range(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return 0\n    count = 0\n    for i in range(0, len(arr), 1):\n        if arr[i] > 0:\n            count += 1\n        elif arr[i] < 0:\n            count -= 1\n    count_nums(arr)\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] == -1:\n            if arr[i] == -1:\n                arr[i] = 0\n        else:\n            if arr[i] >= 0:\n                arr[i] = arr[i] - 1\n            else:\n                arr[i] = 0\n    return arr[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if len(arr) == 0:\n            return 0\n        elif len(arr) == 1:\n            return 1\n        elif len(arr) == 2:\n            return 2\n        elif len(arr) == 3:\n            return 3\n        else:\n            raise ValueError('Expected an integer array, got %d or %d (%d is expected)' % (len(arr), len(arr)-1, len(arr)-2))\n        count_nums = 0\n        for i in range(len(arr)):\n            count_nums += 1\n            if i == 0:\n                count_nums -= 1\n            else:\n                count_nums -= arr[i]\n            if arr[i] > 0:\n                count_nums += arr[i]\n        return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise ValueError('Number must be an array.')\n    for i in range(0, len(arr)):\n        if arr[i] < 0:\n            return i\n        else:\n            return arr[i]\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        for j in range(0, i + 1):\n            if arr[i][j] < 0:\n                return j\n            else:\n                return i + 1 + j\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    nums = []\n    for i in range(len(arr)):\n        nums[i] = arr[i]\n        if nums[i] < 0:\n            nums.append(i)\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 3:\n        return 0\n    for i in range(0, len(arr)):\n        if arr[i] < 0:\n            return i\n        else:\n            return i + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        arr = list(arr)\n    elif isinstance(arr, int):\n        arr = int(arr)\n    else:\n        raise TypeError(\"Expected list or int.\")\n\n    if len(arr)!= 0:\n        raise TypeError(\"Expected array or int.\")\n\n    if len(arr)!= 1 or arr[0]!= 0:\n        raise TypeError(\"Expected array or int.\")\n\n    return sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if i % 2 == 0:\n            return i\n        if i % 10 == 0:\n            return i\n        if i % 100 == 0:\n            return i\n        if i % 1000 == 0:\n            return i\n    if i < 0:\n        return -1\n    else:\n        return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(map(int, arr)) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return count_nums(arr)\n    elif isinstance(arr, int):\n        return count_nums(arr)\n    elif isinstance(arr, str):\n        return count_nums(arr)\n    else:\n        raise TypeError('Expected an int, string, or list.')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = {}\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            count_nums[i] = -1\n        elif arr[i] > 0:\n            count_nums[i] = arr[i]\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if i > 0:\n            return arr[i]\n        else:\n            return -1\n    count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return len(arr) - 1\n    elif isinstance(arr, int):\n        return int(arr)\n    else:\n        raise TypeError(\"Number must be an integer or list of integers\")\n\n    if len(arr)!= 1:\n        raise ValueError(\"Expected one element for list\")\n\n    if isinstance(arr, list):\n        return count_nums(arr[0])\n    elif isinstance(arr, int):\n        return count_nums(arr[1])\n\n    # No need to check the digits in the first element, because we\n    # have to add up all the digits in the list.\n    return sum(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 3:\n        return 0\n    for i in range(0, len(arr)):\n        if arr[i] == 0:\n            return 0\n        else:\n            return i + 1\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i]!= 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        return 0\n\n    for i in range(0, len(arr)):\n        sum = 0\n        for j in range(0, len(arr)):\n            sum += arr[j] * arr[i]\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            return i\n        else:\n            return arr[i]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return 0\n    if len(arr) == 1:\n        return 0\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(ord(i)) for i in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 2:\n        raise ValueError('Expected an array of integers and got %s' % arr)\n    return sum([ord(i) for i in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        raise ValueError('Expected array of integers, got %s.' % arr)\n    return int(count_nums(arr)) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(len(arr)):\n        result.append(arr[i] * arr[i])\n    return sum(result) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return int(count_nums(arr)) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if len(arr) == 0:\n            return 0\n        if not isinstance(arr, int):\n            return 0\n        if arr[0] == '-':\n            return -1\n        if arr[0] < 0:\n            return -1\n        if arr[0] > 0:\n            return 1\n        if arr[0] == '+':\n            return -1\n        if arr[0] == 0:\n            return 0\n        if arr[0] >= 1:\n            return -1\n        if arr[0] <= 1:\n            return 1\n        return 0\n\n    count_nums(arr = [])\n    count_nums(arr = [1, 1, 2])\n    count_nums(arr = [1, 1, 0])\n    count_nums(arr = [1, 0, 0])\n    count_nums(arr = [1, 0, 1])\n    count_nums(arr = [1, 0, 2])\n    count_nums(arr = [1, 1, 0])\n    count_nums(arr = [1, 1, 1])\n    count_nums(arr = [1, 1, 1])\n    count_nums(arr = [1, 1, 2])\n    count_nums(arr = [1, 1, 0])\n    count_nums(arr = [1, 0, 0])\n    count_nums(arr = [1, 0, 1])\n    count_n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # The first digit of the sum of digits is negative\n    if len(arr)!= 3:\n        return -1\n    # The second digit of the sum of digits is negative\n    if len(arr)!= 2:\n        return -1\n    # The third digit of the sum of digits is negative\n    if len(arr)!= 1:\n        return -1\n    # The fourth digit of the sum of digits is negative\n    if len(arr)!= 0:\n        return -1\n    # The fifth digit of the sum of digits is negative\n    if len(arr)!= 0:\n        return -1\n\n    # If the sum of digits is negative, then the first signed digit will be negative:\n    if len(arr)!= -1:\n        if arr[0] == -1:\n            return -1\n        else:\n            return -1\n\n    # If the sum of digits is negative, then the first signed digit will be negative:\n    if len(arr)!= -1:\n        if arr[0] == -1:\n            return -1\n        else:\n            return -1\n\n    # If the sum of digits is negative, then the first signed digit will be negative:\n    if len(arr)!= -1:\n        if arr[0] == -1:\n            return -1\n        else:\n            return -1\n\n    # If the sum of digits is negative, then the", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    if arr[0] < 0:\n        return -1\n    if arr[0] > 0:\n        return 1\n    if arr[1] < 0:\n        return -1\n    if arr[1] > 0:\n        return 2\n    if arr[2] < 0:\n        return -1\n    if arr[2] > 0:\n        return 3\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            return i\n        else:\n            return arr[i] + 1\n\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        arr = int(arr)\n    if len(arr)!= len(arr):\n        raise ValueError(\"Expected a number of elements. Got %d\" % len(arr))\n    return sum([ord(i) for i in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    if len(arr) == 1:\n        return count_nums(arr[0])\n    else:\n        return count_nums(arr[1:]) / len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([ord(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count_nums = 0\n    for i in range(0, len(arr)):\n        if arr[i]!= 0:\n            count_nums += 1\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([1, 1, 2], 1) == 3\n        >>> count_nums([1, 1, 2], -1) == -1\n        >>> count_nums([1, 1, 2], -1, 1) == -1\n        >>> count_nums([1, 1, 2], -1, -1) == -1\n        >>> count_nums([1, 1, 2], -1, -1) == -1\n        >>> count_nums([1, 1, 2], -1, -1) == -1\n        >>> count_nums([1, 1, 2], -1, -1, -1) == -1\n        >>> count_nums([1, 1, 2], -1, -1, -1) == -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if len(arr) == 0:\n            return 0\n        if len(arr) > 1:\n            return count_nums(arr[0])\n        else:\n            return count_nums(arr)\n    count_nums(arr)\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        return 0\n    if arr[0] < 0:\n        return -arr[0]\n    if arr[1] < 0:\n        return -arr[1]\n    if arr[2] < 0:\n        return -arr[2]\n    if arr[3] < 0:\n        return -arr[3]\n    if arr[4] < 0:\n        return -arr[4]\n    if arr[5] < 0:\n        return -arr[5]\n    if arr[6] < 0:\n        return -arr[6]\n    if arr[7] < 0:\n        return -arr[7]\n    return arr[0] + arr[1] + arr[2] + arr[3] + arr[4] + arr[5] + arr[6] + arr[7]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return sum([int(i) for i in arr])\n    else:\n        return sum([int(i) for i in arr])\n\n    def _count_nums(arr):\n        \"\"\"\n        Count the number of elements in the array.\n        >>> count_nums([]) == 0\n        >>> count_nums([-1, 11, -11]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([1, 1, 2]) == 2\n        >>> count_nums([1, 1, 2]) == 0\n        >>> count_nums([1, 1, 2]) == 1\n        >>> count_nums([1, 1, 2]) == 2\n        >>> count_nums([1, 1, 2]) == 0\n        >>> count_nums([1, 1, 2]) == 1\n        >>> count_nums([1, 1, 2]) == 0\n        >>> count_nums([1, 1, 2]) == 1\n        >>> count_nums([1, 1, 2]) == 0\n        >>> count_nums([1, 1, 2]) == 1\n        >>> count_nums([1, 1, 2]) == 2\n        >>>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr, -1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # make sure the number of digits is positive\n    if not isinstance(arr, int):\n        raise TypeError(\"Expected an integer array\")\n    if not isinstance(arr, long):\n        raise TypeError(\"Expected a long array\")\n    if not isinstance(arr, int) or not isinstance(arr, long):\n        raise TypeError(\"Expected an int or long array\")\n    # make sure the number of digits is positive\n    if not isinstance(arr, int):\n        raise TypeError(\"Expected an integer array\")\n    if not isinstance(arr, long):\n        raise TypeError(\"Expected a long array\")\n    if not isinstance(arr, int) or not isinstance(arr, long):\n        raise TypeError(\"Expected an int or long array\")\n\n    count_nums = []\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            count_nums.append(count_nums.index(arr[i]))\n        else:\n            count_nums.append(count_nums.index(arr))\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i, num in enumerate(arr):\n        if num > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr.count(0)\n    if isinstance(arr, list):\n        return count_nums(arr)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(arr) > 0 and (arr[0] > 0 and arr[1] > 0 and arr[2] > 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(0, len(arr)):\n        if arr[i]!= 0:\n            return arr[i]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return int(arr[0])\n    if len(arr) == 2:\n        return int(arr[1])\n    if len(arr) == 3:\n        return int(arr[2])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return -1\n    for i in range(0, len(arr), 1):\n        if arr[i] > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = 0\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            n += 1\n        else:\n            n += arr[i]\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return 0\n    for i in range(0, len(arr)):\n        if i!= 0:\n            return 0\n        if arr[i] > 0:\n            return count_nums(arr[i]) - 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    if not isinstance(arr, int):\n        arr = int(arr)\n    if not isinstance(arr, float):\n        arr = float(arr)\n    if not isinstance(arr, double):\n        arr = double(arr)\n    return int(count_nums(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return arr[0]\n    if len(arr) == 2:\n        return arr[1]\n    if len(arr) == 3:\n        return arr[2]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i] * arr[i + 1])\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr)!= len(arr):\n        raise TypeError('array must be of type int')\n    return sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    # If the number is negative, then its first signed digit will be negative:\n    if (arr[0] < 0):\n        return -1\n    for i in range(0, len(arr)):\n        sum = arr[i]\n        if sum > 0:\n            return sum\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr)\n    if isinstance(arr, bool):\n        return count_nums(arr)\n    if isinstance(arr, float):\n        return count_nums(arr)\n    if isinstance(arr, bool):\n        return count_nums(arr)\n    if isinstance(arr, float32):\n        return count_nums(arr)\n    if isinstance(arr, bool):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr)\n    if isinstance(arr, bool):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr)\n    if isinstance(arr, bool):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr)\n    if isinstance(arr, bool):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # if no digits, return 0\n    if len(arr) == 0:\n        return 0\n    result = 0\n    for i in range(len(arr)):\n        result += arr[i]\n    return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        if len(arr)!= 3:\n            raise ValueError(\"Array must be a list.\")\n        if len(arr[0])!= 1:\n            raise ValueError(\"Number must be a list.\")\n        if len(arr[1])!= 11:\n            raise ValueError(\"Number must be a list.\")\n        if len(arr[2])!= 11:\n            raise ValueError(\"Number must be a list.\")\n        for i in range(len(arr)):\n            if arr[i] < 0:\n                raise ValueError(\"Number must be a list.\")\n        if len(arr)!= len(arr[0]):\n            raise ValueError(\"Number must be a list.\")\n        if len(arr)!= len(arr[1]):\n            raise ValueError(\"Number must be a list.\")\n        if len(arr)!= len(arr[2]):\n            raise ValueError(\"Number must be a list.\")\n        return count_nums(arr)\n\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return (count_nums(arr) < 0) & (arr.count(1) == 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # XXX: This is not exactly the same as count_nums, but we can still\n    # do it in a similar way.\n    if isinstance(arr, list):\n        for i in range(len(arr)):\n            if arr[i] == -1:\n                arr[i] = -1\n            if arr[i] > 0:\n                arr[i] += 1\n    else:\n        if isinstance(arr, int):\n            for i in range(len(arr)):\n                if arr[i] > 0:\n                    arr[i] -= 1\n        else:\n            for i in range(len(arr)):\n                if arr[i] < 0:\n                    arr[i] += 1\n\n    # XXX: This is not exactly the same as count_nums, but we can still\n    # do it in a similar way.\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return -1\n    if len(arr) == 2:\n        return 0\n    if len(arr) < 3:\n        return 1\n    if len(arr) == 3:\n        return 2\n    if len(arr) == 3:\n        return 3\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 3:\n        raise ValueError('count_nums() must return an array of integers')\n    return sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if len(arr)!= 1:\n            raise ValueError(\"Expected one argument to count_nums()\")\n        if arr[0]!= -1:\n            return arr[0]\n        if arr[1]!= -1:\n            return arr[1]\n        if arr[2]!= -1:\n            return arr[2]\n        return 0\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1, 1, 2]) + 1\n    count_nums([1,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    if len(arr) == 0:\n        return 0\n    if len(arr) == 1:\n        return 1\n    if len(arr) == 2:\n        return 2\n    if len(arr) == 3:\n        return 3\n    return sum(arr) < 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return count_nums(arr)\n    if isinstance(arr, int):\n        return count_nums(arr, 0)\n    if isinstance(arr, float):\n        return count_nums(arr, 1)\n    if isinstance(arr, str):\n        return count_nums(arr, 2)\n    if isinstance(arr, bool):\n        return count_nums(arr, 3)\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, (int, long)):\n        return arr.count_nums()\n    if isinstance(arr, basestring):\n        return arr.count_nums()\n    if isinstance(arr, list):\n        return arr.count_nums()\n    if isinstance(arr, tuple):\n        return arr.count_nums()\n    if isinstance(arr, bool):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, float):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, long):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, float):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr.count_nums()\n    if isinstance(arr, int):\n        return arr", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num > 0:\n            return num\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if len(arr) < 1 else count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        \"\"\"\n        if len(arr) > 0:\n            return int(arr[0]) + int(arr[1]) + int(arr[2])\n        return int(count_nums(arr))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append((arr[i] / 2) + 1)\n    return sum([ord(d) for d in nums])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 1 if len(arr) == 0 else count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if arr[0] < 0 else arr[0] + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # the first sign of a negative number is -1\n    if not (arr[0] == -1):\n        return 0\n    else:\n        return int(arr[0] + arr[1] + arr[2])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        for i in range(len(arr)):\n            if arr[i]!= 0:\n                return i\n    else:\n        return len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([int(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(arr):\n        raise ValueError('Expected array to be of length'+ str(len(arr)) +'but got'+ str(len(arr)) + '.')\n\n    if arr[0] < 0:\n        return -1\n    else:\n        return arr[0] + (arr[1:] - arr[0]) * (arr[0] + arr[1:] - arr[0]) + (arr[1:] - arr[0]) * (arr[0] + arr[1:] - arr[0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(arr.count):\n        if arr[i] > 0:\n            print(\"  \" + arr[i])\n            return arr[i]\n    return -1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum([ord(x) for x in arr]) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) > 0:\n        return count_nums(arr)\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n > 0:\n        n = int(n * 1000)\n        if n % 1000 == 0:\n            return n\n        else:\n            return n\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            nums.append(arr[i])\n        else:\n            nums.append(0)\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise ValueError(\"Expected a number of elements, got %r\" % len(arr))\n    if len(arr)!= 2:\n        raise ValueError(\"Expected a number of elements, got %r\" % len(arr))\n    if arr[0] < 0:\n        raise ValueError(\"Expected a negative number, got %r\" % arr[0])\n    if arr[1] < 0:\n        raise ValueError(\"Expected a negative number, got %r\" % arr[1])\n    if arr[2] < 0:\n        raise ValueError(\"Expected a negative number, got %r\" % arr[2])\n    if arr[3] < 0:\n        raise ValueError(\"Expected a negative number, got %r\" % arr[3])\n    if arr[4] < 0:\n        raise ValueError(\"Expected a negative number, got %r\" % arr[4])\n    return count_nums(arr)[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum(nums) / len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    return sum([ord(x) for x in arr])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(count_nums(arr)) >= 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return -1\n    for i in range(0, len(arr)):\n        if arr[i]!= -1:\n            return i\n    count_nums(arr)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = []\n    for i in range(len(arr)):\n        count_nums.append(arr[i] + arr[i+1])\n    return count_nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) < 2:\n        return 0\n    if len(arr)!= 1:\n        return 0\n    count = 0\n    for i in range(len(arr)):\n        if arr[i] == 0:\n            count += 1\n        else:\n            count += arr[i]\n    return count", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr)!= 1:\n        raise ValueError(\"expected one array, got %d.\" % len(arr))\n    nums = []\n    for i in range(0, len(arr)):\n        nums.append(arr[i] * arr[i+1])\n    if nums[0] == -1:\n        nums[0] = 1\n    return nums.count(0)\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    if len(arr) > 2:\n        return int(arr[0]) + int(arr[1]) + int(arr[2])\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 1:\n        return 0\n    return sum(arr) + 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr is None:\n        return 0\n    if len(arr)!= 2:\n        raise ValueError('Expected two elements, got %s' % arr)\n    nums = []\n    for i in range(0, len(arr)):\n        nums[i] = int(arr[i])\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr) == 0:\n        return 0\n    count_nums = []\n    for i in range(0, len(arr)):\n        num = arr[i]\n        if num > 0:\n            count_nums.append(num)\n    if len(count_nums) > 0:\n        return count_nums[0]\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for num in arr:\n        if num >= 0:\n            return num + 1\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Convert the array to an array of integers\n    arr = arr.astype(int)\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    # Return the number of elements in the array\n    return sum(nums) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        print 'ERROR: array length %d is not a positive integer.' % len(arr)\n    if not (arr[0] == 0):\n        return 0\n    count_nums(arr)\n    return sum(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Loop over the elements of arr\n    for i in range(len(arr)):\n        if arr[i]!= 0:\n            if arr[i] < 0:\n                return i\n            elif arr[i] > 0:\n                return i\n        else:\n            return i", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if arr == []:\n        return 0\n    if arr[0] < 0:\n        return arr[0]\n    if arr[0] > 0:\n        return arr[0]\n    if arr[1] < 0:\n        return arr[1]\n    if arr[1] > 0:\n        return arr[1]\n    if arr[2] < 0:\n        return arr[2]\n    if arr[2] > 0:\n        return arr[2]\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # make a new array\n    new_arr = []\n    for i in range(arr.shape[0]):\n        new_arr.append(arr[i])\n    return count_nums(new_arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    nums = []\n    for i in range(0, len(arr)):\n        nums.append(arr[i] * 10)\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        raise ValueError(\"Expected an array of integers, got \" + str(len(arr)))\n\n    for i in range(0, len(arr)):\n        if arr[i] == -1:\n            arr[i] = 0\n        else:\n            arr[i] += arr[i] % 2\n\n    count_nums(arr)\n    return arr[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        nums.append(arr[i])\n    return sum([int(x) for x in nums])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        sum = arr[i]\n        if sum >= 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        return arr\n    elif isinstance(arr, list):\n        return list(arr)\n    else:\n        raise TypeError(\"count_nums must be either an int or a list.\")", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return int(count_nums(arr)) / len(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if len(arr) > 1:\n        return sum(arr) > 0\n    return count_nums(arr) - sum(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        arr = [arr]\n    if not isinstance(arr, tuple):\n        arr = [(i, i) for i in arr]\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    count_nums = 0\n    for i in range(len(arr)):\n        if arr[i] == -1:\n            count_nums += 1\n        else:\n            count_nums += 1 if arr[i] > 0 else 0\n    return count_nums\n</s>", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Get the first signed digit\n    num = arr[0]\n    if num < -1:\n        num += 1\n    return num", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        raise TypeError('array must be a list or a list of ints')\n    for i in range(len(arr)):\n        if arr[i] >= 0:\n            return arr[i]\n        else:\n            return 0\n\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        \"\"\"\n        Returns a function that counts the number of elements in an array\n        and returns the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        \"\"\"\n        return function(arr) > 0 and arr[count_nums(arr)] > 0:\n    #\n    # >>> count_nums([1, 1, 2]) == 3\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1, 2]) == -1\n    # >>> count_nums([1, 1,", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    if len(arr) > 2:\n        return 1\n    return sum(arr) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        result = arr[i]\n        if i > 0:\n            result = result / 10\n        return result\n    return sum(i for i in range(len(arr)))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(arr.count):\n        nums.append(arr.sum(i) > 0)\n    if nums == 0:\n        print('no elements in array')\n    else:\n        print('%d elements in array' % len(nums))", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(count_nums(arr) for arr in arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # If we have an array of integers, we can store the sum of all digits\n    if len(arr) == 0:\n        return 0\n    elif len(arr) == 1:\n        return sum(arr)\n    else:\n        return sum(arr) - sum(arr[0])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, list):\n        return count_nums(arr)\n    return count_nums(arr, 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(arr):\n        raise ValueError('array must be of length at least 1')\n    if arr[0]!= -1:\n        return arr[0]\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        result = 0\n        if arr[i] == -1:\n            result = -1\n        else:\n            result = int(arr[i])\n        return result", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, list):\n        return 0\n    if len(arr)!= 2:\n        return 0\n    if len(arr)!= 3:\n        return 0\n    for i in range(0, len(arr)):\n        if not arr[i] in (1, 2, 3):\n            return 0\n        sum = arr[i] + arr[i + 1]\n        if sum == 0:\n            return 0\n        return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(arr):\n        raise ValueError(\"Expected array to be length %d\" % len(arr))\n    for i in range(len(arr)):\n        if arr[i] > 0:\n            return arr[i]\n        else:\n            return 0\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    n = 0\n    for i in range(0, len(arr)):\n        if arr[i] > 0:\n            n += 1\n    return n", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    return sum(count_nums(arr), 1)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return -1\n    if len(arr) == 1:\n        return 11\n    if len(arr) == 2:\n        return 1\n    if len(arr) == 3:\n        return 3\n    return sum(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        if arr[i] == -1:\n            return i\n        if arr[i]!= 0:\n            sum = arr[i] - arr[i - 1]\n            if sum < 0:\n                return i + 1\n        if sum > 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        return 0\n    if arr[0]!= 0:\n        return 0\n    if arr[0] < 0:\n        return 0\n    if arr[1] < 0:\n        return 0\n    if arr[1] > 0:\n        return 0\n    if arr[2] < 0:\n        return 0\n    if arr[2] > 0:\n        return 0\n    if arr[3] < 0:\n        return 0\n    if arr[3] > 0:\n        return 0\n    if arr[4] < 0:\n        return 0\n    if arr[4] > 0:\n        return 0\n    if arr[5] < 0:\n        return 0\n    if arr[5] > 0:\n        return 0\n    if arr[6] < 0:\n        return 0\n    if arr[6] > 0:\n        return 0\n    if arr[7] < 0:\n        return 0\n    if arr[7] > 0:\n        return 0\n    if arr[8] < 0:\n        return 0\n    if arr[8] > 0:\n        return 0\n    if arr[9] < 0:\n        return 0\n    if arr[9] > 0:\n        return 0\n    if arr[10] < 0:\n        return 0\n    if arr[10] > 0:\n        return 0\n    if arr[11] < 0:\n        return 0\n    if arr[11] > 0:\n        return 0\n    if arr[12] < 0:\n        return 0\n    if arr[12] > 0:\n        return 0\n    if arr[13] < 0:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # Loop through all the elements of the array and count the sum of digits\n    for i in range(len(arr)):\n        if arr[i]!= -1:\n            sum = arr[i] * arr[i-1]\n            if sum > 0:\n                return sum\n        else:\n            return -1\n\n    # Return the first element of the array that has a sum of digits > 0\n    return arr[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise ValueError(\"count_nums() expects a number of elements.\")\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    count_nums = function(arr):\n        \"\"\"\n        Write a function count_nums which takes an array of integers and returns\n        the number of elements which has a sum of digits > 0.\n        If a number is negative, then its first signed digit will be negative:\n        e.g. -123 has signed digits -1, 2, and 3.\n        >>> count_nums([-1, 11, -11]) == 0\n        >>> count_nums([1, 1, 2]) == 1\n        >>> count_nums([1, 1, 2]) == 3\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -11]) == -1\n        >>> count_nums([-1, 11, -", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= len(arr):\n        print(\"Expected list of integers, got: \", arr)\n        raise ValueError(\"Expected list of integers, got: \", arr)\n    if len(arr) > 1:\n        print(\"Expected list of integers, got: \", arr)\n        raise ValueError(\"Expected list of integers, got: \", arr)\n    return len(arr) - 1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(map(int, arr), 0)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) < 2:\n        return 0\n    if len(arr) > 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) > 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) < 2:\n        return 0\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) < 2:\n        return 0\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) < 2:\n        return 0\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len(arr) < 2:\n        return 0\n    if len(arr) == 1:\n        return sum(arr) / (len(arr) - 1)\n    if len", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return sum(map(int, arr)) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return 0 if len(arr) < 1 else count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(len(arr)):\n        return sum([ord(x) for x in arr[i]])\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    n = len(arr)\n    if n > 0:\n        return n\n    else:\n        return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    for i in range(arr.count):\n        if i >= 0:\n            return i\n    return 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        return sum([ord(x) for x in arr])\n\n    count_nums([1, 1, 2])\n    count_nums([1, 1, 2])[0]\n    count_nums([1, 1, 2])[1]\n    count_nums([1, 1, 2])[2]\n    count_nums([1, 1, 2])[3]\n    count_nums([1, 1, 2])[4]\n    count_nums([1, 1, 2])[5]\n    count_nums([1, 1, 2])[6]\n    count_nums([1, 1, 2])[7]\n    count_nums([1, 1, 2])[8]\n    count_nums([1, 1, 2])[9]\n    count_nums([1, 1, 2])[10]\n    count_nums([1, 1, 2])[11]\n    count_nums([1, 1, 2])[12]\n    count_nums([1, 1, 2])[13]\n    count_nums([1, 1, 2])[14]\n    count_nums([1, 1, 2])[15]\n    count_nums([1, 1, 2])[16]\n    count_nums([1, 1, 2])[17]\n    count_nums([1", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if isinstance(arr, int):\n        if arr < 0 or arr > 1:\n            raise ValueError('Number must be positive')\n        return int(arr * 1000)\n\n    elif isinstance(arr, list):\n        if len(arr)!= 1:\n            raise ValueError('Number must be a list')\n        return int(arr) * 1000\n\n    elif isinstance(arr, float):\n        if arr < 0 or arr > 1:\n            raise ValueError('Number must be positive')\n        return int(arr * 1000)\n\n    elif isinstance(arr, bool):\n        if arr < 0 or arr > 1:\n            raise ValueError('Number must be positive')\n        return int(arr) * 1000\n\n    elif isinstance(arr, tuple):\n        if len(arr)!= 2:\n            raise ValueError('Number must be a tuple')\n        return int(arr) * 1000\n\n    else:\n        raise ValueError('Number must be a list or tuple')", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    # We have to check if the sum of digits is positive. This is a bit ugly,\n    # but it's the least we can do. For example, if the sum of digits is -1,\n    # then the first digit of the sum of digits will be -1.\n    if len(arr)!= 2:\n        raise ValueError('array must be of length 2')\n    return int(arr[0]) + int(arr[1])", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    if not isinstance(arr, int):\n        return arr\n    if len(arr) % 2:\n        return 0\n    nums = [arr[nums.index(ord(i))] for i in range(len(arr))]\n    return len(signed) > 0 and nums[0] > 0 and nums[-1] < 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    result = []\n    for i in range(len(arr)):\n        result.append(arr[i])\n    return sum(result) > 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    nums = []\n    for i in range(len(arr)):\n        if arr[i] < 0:\n            nums.append(i)\n        else:\n            nums.append(arr[i])\n    return sum(nums)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 1:\n        raise TypeError(\"Expected a list, got: %s\" % arr)\n    for i in range(len(arr)):\n        sum = 0\n        for j in range(1, len(arr)):\n            if arr[i][j] == -123:\n                sum += arr[i][j]\n            else:\n                sum += arr[i][j]\n        if sum == 0:\n            return 0\n        elif sum % 2 == 0:\n            return sum / 2\n    count_nums = function(arr, sum)\n    return sum", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr) == 0:\n        return 0\n    else:\n        return count_nums(arr)[0]", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    def count_nums(arr):\n        if len(arr) == 0:\n            return 0\n        if not isinstance(arr, int):\n            raise TypeError(\"Expected an integer to be an array\")\n        if len(arr) > 1:\n            raise TypeError(\"Expected a number to be an array\")\n        if not isinstance(arr, list):\n            raise TypeError(\"Expected a list to be an array\")\n        if len(arr) < 1:\n            raise TypeError(\"Expected a number to be an array\")\n        if not isinstance(arr, int):\n            raise TypeError(\"Expected an integer to be an array\")\n        if len(arr) == 0:\n            return 0\n        if not isinstance(arr, int):\n            raise TypeError(\"Expected an integer to be an array\")\n        return count_nums(arr)\n\n    def count_nums(arr, digits):\n        if len(arr) == 0:\n            return 0\n        if not isinstance(arr, int):\n            raise TypeError(\"Expected an integer to be an array\")\n        if len(arr) > 1:\n            raise TypeError(\"Expected a number to be an array\")\n        if not isinstance(arr, list):", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if not isinstance(arr, int):\n        return 0\n    return sum(arr) * count_nums(arr)", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return len(arr) - 1 if arr else 0", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    if len(arr)!= 0:\n        raise ValueError('Expected a list of integers, got {}'.format(len(arr)))\n    nums = []\n    for i in range(0, len(arr)):\n        nums.append(arr[i])\n    return nums", "def count_nums(arr):\n    \"\"\"\n    Write a function count_nums which takes an array of integers and returns\n    the number of elements which has a sum of digits > 0.\n    If a number is negative, then its first signed digit will be negative:\n    e.g. -123 has signed digits -1, 2, and 3.\n    >>> count_nums([]) == 0\n    >>> count_nums([-1, 11, -11]) == 1\n    >>> count_nums([1, 1, 2]) == 3\n    \"\"\"\n    return count_nums(arr) > 0"]]