[["def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) < 2:\n        raise TypeError('Expected list, got %s' % l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) > 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for item in l:\n        if item > max_element([1, 2, 3]):\n            max_element([1, 2, 3])\n        elif item > max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]):\n            max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda l: len(l)\n    for k, v in l.items():\n        if k < 0:\n            return 0\n        if k >= max_element(v):\n            return max_element(v)\n    max_element = lambda l: len(l)\n    for k, v in l.items():\n        if k < 0:\n            return 0\n        if k >= max_element(v):\n            return max_element(v)\n    max_element = lambda l: len(l)\n    for k, v in l.items():\n        if k < 0:\n            return 0\n        if k >= max_element(v):\n            return max_element(v)\n\n    max_element = lambda l: len(l)\n    for k, v in l.items():\n        if k < 0:\n            return 0\n        if k >= max_element(v):\n            return max_element(v)\n\n    max_element = lambda l: max_element(l)\n    for k, v in l.items():\n        if k < 0:\n            return 0\n        if k >= max_element(v):\n            return max_element(v)\n\n    max_element = lambda l: max_element(l)\n    for k, v in l.items():\n        if k < 0:\n            return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list) and len(l) == 2:\n        return max_element(l[0], l[1])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element(l)\n    if len(l) == 5:\n        return max_element(l)\n    if len(l) == 5:\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([l[0] for l in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # do not allow the max element to be less than the length of the list\n    if len(l) > 0:\n        return max_element(l)\n    # return 0 if no element found\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for x in l:\n        if x > max:\n            max = x\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x\n    if len(l) == 1:\n        return max_element(l[0])\n    if len(l) == 2:\n        return max_element(l[1])\n    if len(l) == 3:\n        return max_element(l[2])\n    if len(l) == 4:\n        return max_element(l[3])\n    if len(l) == 5:\n        return max_element(l[4])\n    if len(l) == 6:\n        return max_element(l[5])\n    if len(l) == 7:\n        return max_element(l[6])\n    if len(l) == 8:\n        return max_element(l[7])\n    if len(l) == 9:\n        return max_element(l[8])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l[0])\n    elif len(l) == 2:\n        return max_element(l[1])\n    elif len(l) == 3:\n        return max_element(l[2])\n    elif len(l) == 4:\n        return max_element(l[3])\n    elif len(l) == 5:\n        return max_element(l[4])\n    elif len(l) == 6:\n        return max_element(l[5])\n    elif len(l) == 7:\n        return max_element(l[6])\n    elif len(l) == 8:\n        return max_element(l[7])\n    elif len(l) == 9:\n        return max_element(l[8])\n    else:\n        raise ValueError('max_element: not a valid function')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for element in l:\n        if element >= max:\n            max = element\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)[1]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i in range(len(l)):\n        if i > max_element(l[i]):\n            max_element(l[i])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # FIXME: This should be a function for the list elements\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element([1, 2, 3])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    else:\n        raise ValueError('Expected list of integers.')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in range(len(l)):\n        if i < max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l) + 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        max = 0\n    else:\n        max = len(l)\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l) + 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for x in l:\n        if x == 3:\n            max_element = max_element + 1\n        elif x == 5:\n            max_element = max_element + 1\n        elif x == 3:\n            max_element = max_element + 1\n        elif x == 5:\n            max_element = max_element + 1\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) if len(l) == 1 else max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, int):\n        return max_element(l)\n    if isinstance(l, float):\n        return max_element(l)\n    if isinstance(l, long):\n        return max_element(l)\n    if isinstance(l, str):\n        return max_element(l)\n    if isinstance(l, unicode):\n        return max_element(l)\n    if isinstance(l, bool):\n        return max_element(l)\n    if isinstance(l, dict):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 2:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 1:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 0:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    else:\n        raise TypeError('max_element() expects a list of elements or a tuple of elements.')\n\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if max <= i:\n            max = max + 1\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for x in l:\n        if max < x[0]:\n            max = x[0]\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l.iteritems())[0]\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l) - 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i >= max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if len(l) == 1:\n        return l[0]\n    elif len(l) > 1:\n        return max_element(l[0])\n    else:\n        raise TypeError('max_element() expects a list of elements and not a list of integers')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, int):\n        return max_element(l)\n    if isinstance(l, float):\n        return max_element(l)\n    if isinstance(l, tuple):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, str):\n        return max_element(l)\n    if isinstance(l, unicode):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, tuple):\n        return max_element(l)\n    if isinstance(l, str):\n        return max_element(l)\n    if isinstance(l, unicode):\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = None\n    for i in range(len(l)):\n        if max_element is None or i < max_element:\n            max_element = i\n        else:\n            max_element = max_element + 1\n\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in range(len(l)):\n        if i == len(l):\n            max = max_element(l)\n        elif i == max(l):\n            return i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x\n    for element in l:\n        if element > max_element(element):\n            max_element(element)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x[0]\n    if len(l) == 1:\n        return max_element(l[0])\n    elif len(l) == 2:\n        return max_element(l[1])\n    elif len(l) == 3:\n        return max_element(l[2])\n    elif len(l) == 4:\n        return max_element(l[3])\n    elif len(l) == 5:\n        return max_element(l[4])\n    elif len(l) == 6:\n        return max_element(l[5])\n    elif len(l) == 7:\n        return max_element(l[6])\n    elif len(l) == 8:\n        return max_element(l[7])\n    elif len(l) == 9:\n        return max_element(l[8])\n    elif len(l) == 10:\n        return max_element(l[9])\n    elif len(l) == 11:\n        return max_element(l[10])\n    elif len(l) == 12:\n        return max_element(l[11])\n    elif len(l) == 13:\n        return max_element(l[12])\n    elif len(l) == 14:\n        return max_element(l[13])\n    elif len(l) == 15:\n        return max_element(l[14])\n    elif len(l) == 16:\n        return max_element(l[15])\n    elif len(l) == 17:", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        max_element(l)\n    else:\n        max_element([l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for element in l:\n        if element in (0, 1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10:):\n            return element\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123, 1, -10])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for i in l:\n        if i > max_element:\n            max_element = i\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(range(len(l)))\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element([l for l in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return None\n    return max_element(l[0])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l) == 1:\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, tuple):\n        return max_element(l)\n    else:\n        raise TypeError(\"Expected a list or tuple to be an element\")", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = []\n    for i in range(len(l)):\n        if i > max_element:\n            max_element.append(i)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([l.first for l in l if l.first])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = None\n    for i in range(len(l)):\n        if i > max_element:\n            max_element = i\n\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    return len(l) - max_element(l) - 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l, lambda x: x[0])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for a in l:\n        if a > max:\n            max = a\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return l[0]\n    elif len(l) == 2:\n        return l[1]\n    elif len(l) == 3:\n        return l[2]\n    elif len(l) == 5:\n        return l[3]\n    elif len(l) == 3:\n        return l[4]\n    elif len(l) == 9:\n        return l[5]\n    elif len(l) == 123:\n        return l[6]\n    else:\n        raise ValueError(\"List must have at least 3 elements.\")", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return l[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return l[0]\n    elif len(l) == 3:\n        return max_element(l)\n    elif len(l) == 5:\n        return max_element(l)\n    elif len(l) == 3:\n        return max_element(l)\n    elif len(l) == 3:\n        return max_element(l)\n    elif len(l) == 1:\n        return max_element(l)\n    else:\n        raise ValueError('List must be a list')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: max(x)\n    for x in l:\n        if x >= max_element(l):\n            max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: max(x for x in l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return l\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(l)\n    # return max_element(", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = -1\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x\n    for i in range(len(l)):\n        if max_element(l[i]):\n            return i\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) > 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    return max_element([-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x[0] if x[0] else x[-1]\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1,", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = list(max_element)\n    max_element.reverse()\n    for i in range(len(l)):\n        if l[i] > max_element[i]:\n            max_element[i] = l[i]\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element(l)\n    elif len(l) == 5:\n        return max_element(l)\n    elif len(l) == 5:\n        return max_element(l)\n    elif len(l) == 123:\n        return max_element(l)\n    else:\n        return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for element in l:\n        if element >= max_element(element):\n            return element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = max(l)\n    if len(l) > max_element:\n        max_element = l[-1]\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l)\n    if len(l) == 2:\n        return max_element(l)\n    if len(l) == 3:\n        return max_element(l)\n    if len(l) == 5:\n        return max_element(l)\n    if len(l) == 3:\n        return max_element(l)\n    if len(l) == 9:\n        return max_element(l)\n    if len(l) == 0:\n        return max_element(l)\n    if len(l) == 123:\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) > 1:\n        return max_element(l[0])\n    else:\n        return max_element(l[0])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element in max_element:\n            max_element = element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element.count('*') == 1:\n            max_element = max_element(element)\n        else:\n            max_element = max_element(element)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l) + 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element > max_element:\n            max_element = element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return l[0]\n    if len(l) == 2:\n        return l[1]\n    if len(l) == 3:\n        return l[2]\n    if len(l) == 4:\n        return l[3]\n    if len(l) == 5:\n        return l[4]\n    if len(l) == 6:\n        return l[5]\n    if len(l) == 7:\n        return l[6]\n    if len(l) == 8:\n        return l[7]\n    if len(l) == 9:\n        return l[8]\n    if len(l) == 10:\n        return l[9]\n    return max_element([1, 2, 3, 5, 3, 9, 0, 123, 1, -10])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element > max_element:\n            max_element = element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l) if len(l) == 1 else l[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l[0])\n    elif len(l) == 2:\n        return max_element(l[1])\n    elif len(l) == 3:\n        return max_element(l[2])\n    elif len(l) == 5:\n        return max_element(l[3])\n    elif len(l) == 3:\n        return max_element(l[4])\n    elif len(l) == 9:\n        return max_element(l[5])\n    elif len(l) == 123:\n        return max_element(l[6])\n    elif len(l) == -1:\n        return max_element(l[7])\n    elif len(l) == 123:\n        return max_element(l[8])\n    elif len(l) == 123:\n        return max_element(l[9])\n    elif len(l) == 123:\n        return max_element(l[10])\n    elif len(l) == 123:\n        return max_element(l[11])\n    elif len(l) == 123:\n        return max_element(l[12])\n    elif len(l) == 123:\n        return max_element(l[13])\n    elif len(l) == 123:\n        return max_element(l[14])\n    elif len(l) == 123:\n        return max_element(l[15])\n    elif len(l", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x : len(x)\n    for i in l:\n        if i < max_element(i):\n            max_element(i)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for element in l:\n        if element in max_element:\n            max = max_element(element)\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element([1, 2, 3])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 3:\n        return max_element([1, 2, 3])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 3:\n        return max_element([1, 2, 3])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 3:\n        return max_element([1, 2, 3])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    elif len(l) == 3:\n        return max_element([1, 2, 3])\n    elif len(l) == 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: x[0]\n    for (i, x) in enumerate(l):\n        if x[0] > max_element(x):\n            return x[0]\n    return max_element(l)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if max < i:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(range(len(l)))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = max(l)\n    if len(l)!= 3:\n        raise TypeError(\"Expected list to have at least 3 elements.\")\n    if l[0] > max_element:\n        return l[0]\n    if l[0] < max_element:\n        return l[-1]\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for i in l:\n        if i >= max_element:\n            max_element = i\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    else:\n        return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for x in l:\n        if x > max_element(x):\n            return x\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return None\n    max_element = max(l)\n    if len(l) == 1:\n        return max_element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 1\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) > 1:\n        return max_element(l[0])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 2:\n        return max_element([1, 2, 3])\n    elif len(l) == 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    else:\n        raise ValueError(\"Expected list to be of type (1, 2, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for l in l:\n        if len(l) > max_element:\n            max_element = len(l)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element(123)\n    max_element(5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)\n    max_element(123, 5, 3, -5, 2, -3, 3, 9, 0,", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: max(x, list(range(len(l)))\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = list(range(len(l)))\n    max_element.append(0)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for element in l:\n        if element >= max:\n            max = element\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # FIXME: this is not correct\n    return max_element(l) if l else 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        max_element(l)\n    else:\n        max_element(l.min())\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l)\n    else:\n        max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return 0\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = -1\n    for i in l:\n        if i > max_element:\n            max_element = i\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for i in l:\n        if i == 3:\n            max_element = max_element + 1\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, tuple):\n        return max_element(l)\n    elif isinstance(l, list) and len(l) == 2:\n        return max_element(l[0], l[1])\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list) and len(l) == 3:\n        return max_element(l[0], l[1], l[2])\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for item in l:\n        if item.isdigit():\n            return int(item)\n    raise ValueError('max_element() is not supported')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) < 3:\n        return len(l)\n    max_element = l[0]\n    for element in l[1:]:\n        if element == max_element:\n            return element\n    raise ValueError('Invalid list length: %r' % len(l))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda: max(l)\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element(123)\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element(123, 1, -10)\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element(123, 1, -10, 1)\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element(123, 1, -10, 1, 1)\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element(123, 1, -10, 1, 1)\n    max_element([1, 2, 3])\n    max_element([5, 3,", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for l in l:\n        if l.count() == 3:\n            max_element = max_element(l)\n        elif l.count() == 5:\n            max_element = max_element(l)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list[int]):\n        return max_element(l)\n    elif isinstance(l, list[float]):\n        return max_element(l)\n    elif isinstance(l, list[long]):\n        return max_element(l)\n    elif isinstance(l, list[str]):\n        return max_element(l)\n    elif isinstance(l, list[unicode]):\n        return max_element(l)\n    elif isinstance(l, list[unicode_tail]):\n        return max_element(l)\n    elif isinstance(l, list[unicode_tail[int]):\n        return max_element(l)\n    elif isinstance(l, list[unicode_tail[float]):\n        return max_element(l)\n    elif isinstance(l, list[unicode_tail[long]):\n        return max_element(l)\n    elif isinstance(l, list[unicode_tail[str]):\n        return max_element(l)\n    elif isinstance(l, list[unicode_tail[unicode_tail[unicode_tail[unicode_tail[unicode_tail]]]):\n        return max_element(l)\n    elif isinstance(l, list", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = -1\n    for i in l:\n        if i.index(max) == 0:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) < 2:\n        return None\n    max_element = []\n    for i in l:\n        if i >= max_element:\n            max_element.append(i)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l) if len(l) > 0 else 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for l in l:\n        if l[0] == '.':\n            max = max + 1\n        elif l[0] == '!':\n            max = max + 1\n        elif l[0] == '*':\n            max = max + 1\n        elif l[0] == '?':\n            max = max + 1\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for element in l:\n        if element >= 5:\n            return element\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123, 1, -10])\n    max_element([123", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = None\n    for element in l:\n        if element not in max_element:\n            max_element = element\n        if element < 0:\n            max_element = element\n        if element > max_element:\n            max_element = element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([l[0]])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: (x > 0 and x <= len(l)) or 0\n    for x in l:\n        max_element(x)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 2:\n        return len(l[1])\n    if len(l) == 3:\n        return len(l[0])\n    if len(l) == 5:\n        return len(l[3])\n    if len(l) == 3:\n        return len(l[2])\n    if len(l) == 9:\n        return len(l[5])\n    if len(l) == 123:\n        return len(l[0])\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in list:\n        if element not in list:\n            max_element = max_element(element)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    return max_element([l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = max(l)\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for x in l:\n        if x < max:\n            max = x\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 3:\n        return max_element(l)\n    if len(l) == 5:\n        return max_element(l)\n    if len(l) == 3:\n        return max_element(l)\n    if len(l) == 5 and l[0] == '123':\n        return max_element(l)\n    if len(l) == 5 and l[0] == '123':\n        return max_element(l)\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i in range(len(l)):\n        if i < 5:\n            return i\n        if i < 0:\n            return i\n        if i >= len(l):\n            return i\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l) if l else 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i > max:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # Find the maximum element\n    max_element = 0\n    for element in l:\n        if element > max_element:\n            max_element = element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    return max(l, 0)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l)\n    if len(l) == 2:\n        return max_element(l)\n    if len(l) == 3:\n        return max_element(l)\n    if len(l) == 5:\n        return max_element(l)\n    if len(l) == 3 or len(l) == 5:\n        return max_element(l)\n    if len(l) == 9 or len(l) == 5:\n        return max_element(l)\n    if len(l) == 123 or len(l) == 5:\n        return max_element(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i in l:\n        return max(i)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, tuple):\n        return max_element(l)\n    elif isinstance(l, float):\n        return max_element(l)\n    elif isinstance(l, int):\n        return max_element(l)\n    elif isinstance(l, bool):\n        return max_element(l)\n    else:\n        raise TypeError('Expected a list or tuple to be returned.')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) > 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = None\n    for i in l:\n        if i[0] > max_element:\n            max_element = i[0]\n    return max_element"]]