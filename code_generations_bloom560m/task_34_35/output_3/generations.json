[["def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # A list of integers\n    l = [int(x) for x in l]\n    # A list of lists of integers\n    l = [(1L * int(x)) for x in l]\n    return sorted(l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 1:\n        return l[0]\n    for i in range(len(l)):\n        if l[i] == i:\n            return i\n    return -1", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([l.get(i) for i in unique(l)], key=lambda x: x.get(i) if x.get(i)])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted([unique(x) for x in l])\n    if isinstance(l, list):\n        return list(map(unique, l))\n    return list(map(unique, l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    sorted = sorted(l)\n    return sorted(unique(sorted), key=unique(sorted))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def get_sorted_unique_elements(l: list):\n        elements = []\n        for element in l:\n            elements.append(element)\n        return elements\n\n    def to_string(list: list):\n        \"\"\"Create a string representation of the list\n        >>> to_string([5, 3, 5, 2, 3, 3, 3, 9, 0, 123])\n        [(5, 3), (3, 5), (9, 0), (12, 3), (0, 2)]\n        \"\"\"\n        return \"\\n\".join(sorted(list, key=unique))\n\n    def __str__(self):\n        return self.__class__.__name__\n\n    def __unicode__(self):\n        return self.__class__.__name__", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([(x, x!= x) for x in l], key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def sorted(l: list) -> list:\n        return sorted(l.sort(), key=unique(l))[0]\n\n    def sorted_map(l: list) -> list:\n        return sorted(l.sort_map(), key=unique(l))[0]\n\n    if l is None:\n        return []\n    else:\n        def new_order(l: list) -> list:\n            # ignore values from self.list\n            l = l.pop()\n            # merge\n            if l!= self.list:\n                return l\n            # add self.list to list\n            new_order = self.push(new_order)\n            if not isinstance(new_order, list):\n                new_order = new_order + self.list\n            if new_order!= self.list:\n                return new_order\n        return sorted([new_order for new_order in new_order])\n    return sorted_map(l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        for i in l:\n            if i < 0:\n                return None\n            if i > len(l):\n                return None\n    return sorted(unique(l))[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for i in range(len(l)):\n        if not i in l:\n            return i\n    return (0, 2, 3, 5, 9, 12)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # the algorithm is\n    #   1. Iterate over the elements, and add them in the list\n    #   2. If the list contains an element whose key is not in the list,\n    #   3. Return it\n\n    def counter(self):\n        # get an iterator to sort the list\n\n        # list of lists\n        list = self._list\n        # iteration\n        iterator = list.__iter__()\n        # return a new list\n        return iterator\n\n    def sort(self, from_prev: int) -> None:\n        # sort by first element in the list\n        self._sort(from_prev)\n\n    def _sort(self, from_prev: int) -> None:\n        # sort by last element in the list\n\n        # list of lists\n        list = self._list\n        # iteration\n        iterator = list.__iter__()\n\n        # return the sorted list\n        return list[iterator.key()]\n\n    def __repr__(self) -> str:\n        # return the string representation\n\n        # list of lists\n        list = self._list\n        # iteration\n        iterator = list.__iter__()\n\n        # return the string representation\n\n        # list of lists\n        list = self._list\n        # iteration\n        iterator = list.__iter__()\n\n        # return", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for i in l:\n        if i!= 5 and i!= 3:\n            result.append(i)\n    result.reverse()\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) <= 1:\n        return []\n    return sorted(l.reverse())", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [count(x) for x in l]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, (list, tuple)):\n        return list(range(len(l)))\n    return list(range(len(l)))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set([unique(x) for x in l]))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    items = []\n    for i in range(len(l)):\n        if i % 2 == 0:\n            items.append(i)\n        else:\n            items.append(l[i])\n    return tuple(items)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(l, key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(unique(l))\n    return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    r = []\n    for i in range(len(l)):\n        r.append(unique(l[i]))\n    return r", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    else:\n        return tuple(map(unique, l.items()))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def subsort(l: list):\n        \"\"\"Return sorted unique elements in a list\n        >>> subsort([5, 3, 5, 2, 3, 3, 9, 0, 123])\n        [-5, -3, 5, 2, 3, 9, 0, 123]\n        \"\"\"\n        return [(x.compare(x.begin()) > 0) for x in l]\n\n    def sorted(l: list):\n        \"\"\"Return sorted unique elements in a list\n        >>> sorted([5, 3, 5, 2, 3, 3, 9, 0, 123])\n        [(0, 2, 3, 5, 9, 123], 0, 0, 0, 123]\n        \"\"\"\n        return [(x.compare(x.begin()) < 0) for x in l]\n\n    def zip(l: list):\n        \"\"\"Return sorted unique elements in a list\n        >>> zip([5, 3, 5, 2, 3, 3, 9, 0, 123])\n        [5, -3, 5, 2, 3, 9, 123]\n        \"\"\"\n        return [(x.compare(x.begin()) > 0) for x in l]\n\n    def to_f(l: list):", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return [unique(*sorted(l.keys())) for i in xrange(len(l))]\n    else:\n        return [unique(*sorted(l)) for i in xrange(len(l))]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [item for item in l if item not in unique([None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None, None", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for item in l:\n        result.append(result[0] + int(item[0]))\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def sort(l: list):\n        if len(l) < 1:\n            return None\n        return l.sort()\n    return sort(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([l[0] for l in l])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [\n        element for element in l if element not in [0, 2, 3, 5, 9, 123]\n    ]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = sort(l)\n    return s.sort()[::-1]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    else:\n        return [unique(l) for l in l]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(unique(l))\n    return list(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l.sort(key=lambda x: x[0])\n    return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 3:\n        return [l[0], l[1], l[2]]\n    if len(l) == 2:\n        return [l[1], l[2]]\n    if len(l) == 1:\n        return [l[0], l[1]]\n    return [unique(l)]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(unique(l))\n    return list([unique(i) for i in l])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # If the list is empty, return 0\n    if len(l) == 0:\n        return 0\n    return sorted(unique(l), key=lambda x: x[0])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [one for one in l if one!= None]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique(l), reverse=True)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for i in range(len(l)):\n        if len(l[i]) == 1:\n            yield i\n    for i in range(len(l)):\n        if l[i] == 5:\n            yield i", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    ret = []\n    for i in l:\n        ret.append(i)\n    return ret", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique._key, reverse=True)[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique.item)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    key = lambda x: x[0]\n    return sorted(list(key(l)), key=lambda x: x[0])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sort(l)[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for val in l:\n        return val if val else []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    r = []\n    for i in l:\n        r.append(unique(i))\n    return r", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([(i, i + 1) for i in l if not i in self])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    try:\n        return sorted(l)\n    except ValueError:\n        # No unique elements found.\n        return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = [\n        x for x in l\n    if len(x) == 3:\n        return result\n    result.sort()\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return l.sort(key=unique)\n    return l.sort(key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    elif isinstance(l, basestring):\n        return l\n    raise TypeError(\"Unexpected type of list: %s\" % type(l))\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    try:\n        return itertools.chain(sorted(l))\n    except ValueError:\n        return itertools.chain([l for l in l if not l.isdigit()])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique.reverse)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    elif isinstance(l, (list, tuple)):\n        return l.to_set()\n    raise TypeError('sorted is not a valid type for unique')", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # If the list was really large, it could be split in 4 groups\n    if len(l) > 1 * (1 + i for i in range(4)):\n        return [l[i:2] for i in range(4)]\n    return [(i + 1) % len(l) for i in range(4)]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(l, key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=lambda x: x[0])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return l.sort()[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    try:\n        return sorted(unique(l))\n    except ValueError:\n        pass\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique([l.first for l in l]))[0]\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for element in l:\n        if isinstance(element, int):\n            return element\n        if isinstance(element, list):\n            for (i, item) in enumerate(element):\n                if isinstance(item, int):\n                    return element[i], item\n                if isinstance(item, list):\n                    for (i, item) in enumerate(item):\n                        if isinstance(item, int):\n                            return element[i], item\n                return element, item\n    return [None] * len(l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    keys = ['A', 'B', 'C', 'D', 'E', 'F', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V']\n\n    keys.sort(reverse)\n    return sorted(unique(keys))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique(l), reverse=True)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    else:\n        return list(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        l.sort()\n    return l.sort()", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def s = []\n    for i in l:\n        s.append(i)\n    return s", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    r = l.sort(key=unique)\n    if r:\n        return [(r[0], r[1]), r[2]]\n    return []\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return list(set(unique(l)))\n    return list(set(unique(l)))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for i in range(len(l)):\n        result.append(unique(l[i]))\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l, key=unique)\n    return l.__getitem__(0) + l.__getitem__(1) + l.__getitem__(2)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for l in l:\n        if isinstance(l, list):\n            return sorted(unique(l))\n        elif isinstance(l, (list, tuple)):\n            return sorted(unique(l))\n        elif isinstance(l, (tuple, list)):\n            return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def arg(l: list) -> List[Tuple[(int, int)]]:\n        \"\"\"Construct arg for a tuple (r, s)\"\"\"\n        r = l.r\n        s = l.s\n        return tuple([(int(r), int(s)) for r, s in zip(r, s)])\n\n    # Arg takes a list of tuples and a random string\n    def arg(l: list) -> List[Tuple[(int, int)]]:\n        l.sort()\n        for t in l:\n            # TODO not sure how to make arg for a random string\n            arg = unique(arg)\n            arg(t)\n        return tuple([(int(r), int(s)) for r, s in zip(r, s)])\n\n    # Arg takes a list of tuples and a random string\n    def arg(l: list) -> List[Tuple[(int, int)]]:\n        l.sort()\n        for t in l:\n            # TODO not sure how to make arg for a random string\n            arg = unique(arg)\n            arg(t)\n        return tuple([(int(r), int(s)) for r, s in zip(r, s)])\n\n    # Arg", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(l)[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [(i, l[i]) for i in l if i in range(len(l))]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))[0].split()[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for item in l:\n        return item[0], item[1], item[2], item[3], item[4]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(map(unique, l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    else:\n        return []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=lambda x: x[1])\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return list([unique(x) for x in l])\n    return list(range(len(l)))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return l.sort(key=unique)\n    return l.sort(key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([unique(l[i]) for i in l])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # Get the first element in the list.\n    return (l.index(0) + l.index(1)) % len(l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([unique(l) for l in l])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    a = 0\n    while a!= len(l):\n        a = a + 1\n    return [a for a in l]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return map(unique, [l[0]][l[1]])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique = []\n    for i in range(len(l)):\n        if i % 2:\n            unique.append(l[i%2])\n    return unique", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return {k: v for k, v in list(unique(l)) if k not in v}", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for element in l:\n        if element in [0, 2, 3, 5, 9, 12]:\n            return element\n    return []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # The following methods are somewhat similar to\n    # the above.\n    def all(l: list):\n        return sorted(set(l))\n    def unique(l: list):\n        return set(unique(l))\n    def unique_empty(l: list):\n        return set(all(l))\n    def unique_empty_sorted(l: list):\n        return set(set(unique(l)))\n    def unique_empty_sorted_n(l: list):\n        return set(set(unique(l, -1))\n    def unique_empty(l: list):\n        return set(set(unique(l)))\n    def unique_n(l: list):\n        return set(unique(l, -1))\n    def unique_n_sorted(l: list):\n        return set(set(unique(l, -1)))\n    def unique_n_sorted_n(l: list):\n        return set(set(unique(l, -1, -1)))\n    def unique_n_n(l: list):\n        return set(set(unique(l, -1, -1)))\n    def unique_n_n_sorted(l: list):\n        return set(set(unique(l, -1, -1, -1)))\n    def unique_n_n_sorted_n(l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return zip(*sorted(l, key=unique))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return l.sort(key=unique)\n    if isinstance(l, (tuple, list)):\n        return l.sort(key=unique)\n    if isinstance(l, list):\n        return l\n    if isinstance(l, list):\n        return l.sort(key=unique)\n    if isinstance(l, list):\n        return l.sort(key=unique)\n    if isinstance(l, list):\n        return l.sort(key=unique)\n    if isinstance(l, list):\n        return l\n    return sorted(l.sort(key=unique).reverse())", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return (min(l) for l in l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        if len(l) > 2:\n            return l[1]\n    for l in l:\n        if len(l) < 2:\n            return l[0]\n    return list(range(len(l) - 1))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l.keys()), key=unique, reverse=True)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique.unique_key)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted([unique(x) for x in l])\n    if isinstance(l, tuple):\n        return sorted([unique(x) for x in l])\n    if isinstance(l, list) and len(l) == 2:\n        return sorted([unique(x) for x in l])\n    if isinstance(l, list) and len(l) == 3:\n        return sorted([unique(x) for x in l])\n    if isinstance(l, list) and len(l) == 4:\n        return sorted([unique(x) for x in l])\n    if isinstance(l, list) and len(l) == 5:\n        return sorted([unique(x) for x in l])\n    return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def key(v):\n        \"\"\"Return the element key in the list\n        >>> key([5, 3, 5, 2, 3, 3, 9, 0, 123])\n        [9, 0, 123]\n        \"\"\"\n        return str(v.index('.') + 1)\n    return unique(sorted(l, key=key))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for item in l:\n        if item[0].startswith('0123456789'):\n            return tuple(unique([item]))\n        else:\n            raise ValueError, \"Unable to parse unique of list %s\" % item\n\n    return tuple(unique(l))</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [(x, y) for (x, y) in zip(l, range(len(l)) - 1)]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return list(map(unique, l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) > 1:\n        return sorted(l, key=unique)\n    return l[0], l[1], l[2], l[3]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [item for item in list(l) for item in l if item not in unique(item)]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([max(x) for x in l], key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return reverse(lambda x: x[0] == 5 and x[1] == 3 and x[2] == 5 and x[3] == 3 and x[4] == 9 and x[5] == 0 and x[6] == 12, l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l), key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for i in range(len(l)):\n        if (i % 4 == 0):\n            return []\n        if i % 2 == 0:\n            return l[i]\n        if i % 3 == 0:\n            return l[i]\n        if i % 9 == 0:\n            return l[i]\n        if i % 12 == 0:\n            return l[i]\n    return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = [None, None, None, None, None, None, None, None, None]\n    for i in range(len(l)):\n        if i % 2:\n            s.append(s[1:] * 4)\n        s.append(s[1:] * 3)\n    return [s[1:] * 4 for s in s]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [l.next() for l in l]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def _recurse(old, new):\n        for r in l:\n            r.reverse()\n        return [(new, r) for (new, r) in zip(old, r)]\n\n    def _find_unique(l: list):\n        for _ in l:\n            return _.unique()\n    return _find_unique", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return itertools.chain(range(len(l)), l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = []\n    for a in l:\n        s.append(unique([a, a]))\n    return s", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def uniq(x, y: list):\n        return x[0] < y[0]\n\n    return uniq", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return list(range(0, len(l)))\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    r = []\n    for x in l:\n        if x not in r:\n            r.append(x)\n    return r", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return [(len(i), i.sort(reverse)[1]) for i in l]\n    return list(map(unique, l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([(i, j) for i, j in l], key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l.sort()\n    return sorted(l.items(), key=unique, reverse=True)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [(elem, elem.ordinal) for elem in l]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique, reverse=True)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique([l[0], l[1], l[2], l[3], l[4]], key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    u = list(l)\n    for e in u:\n        if e in (1, 3, 9, 12):\n            return (u[e-1], u[e+1])\n    return ([], [])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return [len(x) for x in l]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        # list-like types\n        list = l\n    else:\n        list = []\n    for i in range(len(l)):\n        if not l[i] in list or l[i] not in list[l[i-1]]:\n            list.append(l[i])\n    return list", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for element in l:\n        result.append(unique(element))\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([(s,i) for s,i in l if i not in range(1,len(l))])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(unique(l))\n    return map(unique, l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return map(unique, l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return list(map(unique, l))\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for (x, y) in l:\n        if isinstance(y, int):\n            return (x, y)\n    return (0, 0)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def l_id(l: list):\n        return l[id]\n    return l_id", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 0:\n        return list()\n    return l[0], l[1], l[2], l[3], l[4], l[5]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    first = 0\n    for i in l:\n        if i[0] == 5:\n            first += 1\n    return first", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    from itertools import groupby\n\n    # for each unique element\n    for i in l:\n        if i[0] == 0:\n            return groupby(groupby(tuple(i), key=lambda x: x[1]))\n        elif i[0] == 1:\n            return groupby(groupby(tuple(i), key=lambda x: x[0]))\n        elif i[0] == 2:\n            return groupby(groupby(tuple(i), key=lambda x: x[0]))\n        elif i[0] == 3:\n            return groupby(groupby(tuple(i), key=lambda x: x[0]))\n        elif i[0] == 4:\n            return groupby(groupby(groupby(tuple(i), key=lambda x: x[0])))\n\n    return list(unique())", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for x in l:\n        if not x.isnull():\n            return x\n\n    return []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    return (sorted(l).unique()).astype(str)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([unique(elem) for elem in l], key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, (list, tuple)):\n        return l[0]\n    return l.sort(key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for n in range(len(l)):\n        if l[n].startswith(l[n]):\n            result.append(l[n])\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique.key)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return list(l)\n    if len(l) == 1:\n        return l[0]\n    return []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def sorted(elem: list):\n        for i in range(len(elem)):\n            return sorted(elem[i])\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 0:\n        return []\n    for item in l:\n        if len(item) > 1:\n            return list(unique(item))\n    return []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([unique(x) for x in l])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for (i, j) in enumerate(l):\n        if i == j:\n            return (i, j)\n    raise RuntimeError(\"unique() is not a method\")\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 0:\n        return None\n    if len(l)!= 1:\n        return list(sorted(l, key=unique, reverse=True))\n    if len(l)!= 2:\n        return list(sorted(l, key=unique, reversed=False))\n    if len(l)!= 3:\n        return list(sorted(l, key=unique, reverse=False))\n    return list(sorted(l, key=unique, reverse=True, reverse=True, reverse=True))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) > 1:\n        return l.sort(key=unique)\n    return l.sort(key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l), key=unique.descending)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l)!= 5:\n        return []\n    if len(l)!= 3:\n        return []\n    if len(l)!= 0:\n        return []\n    # if any element is greater than 0, then it is a duplicate\n    if l[0] >= 0:\n        return [l[0]]\n    return [l for l in l if l[0] < 0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return list(map(unique, list(range(l.count()))))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([unique(x) for x in l], key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(unique(l))\n    else:\n        for i in range(len(l)):\n            return sorted(unique(l[i]))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([max(i) for i in l], key=lambda k: k[0])[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    elements = list()\n    for i in range(len(l)):\n        if (i % 2 == 1) and (i % 2 == 0):\n            elements.append((i, 1))\n        elements.append((i, 0))\n    return elements", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    assert l.__len__() == 0\n    return l.__rbegin__()[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # Sort by number first, then by value\n    print(sorted(unique([5, 3, 5, 2, 3, 3, 3, 9, 0, 123])))\n    # Sort by value first, then by number\n    print(sorted(unique([2, 3, 5, 5, 2, 3, 3, 9, 0, 123])))\n    print(sorted(unique([3, 3, 5, 5, 2, 3, 3, 9, 0, 123])))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted(l)\n    else:\n        return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return sorted([(i, j) for i, j in l])\n    return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for key in l:\n        if key[0] == 0:\n            result.append([key[1], key[2]])\n        elif key[0] == 2:\n            result.append([key[1], key[2, 3]])\n        elif key[0] == 3:\n            result.append([key[1], key[2, 3, 3]])\n    return result\n</s>", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return l.items()\n    if len(l) > 1:\n        return l.items()\n    for i in range(0, len(l)):\n        if l[i] < l[i+1]:\n            if i%2 == 0:\n                return l.items()[:i]\n            elif i%2 == 1:\n                return l.items()[i:]\n            else:\n                return l.items()[i]\n    return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    keys = l.keys()\n    new_keys = []\n    for key in keys:\n        if key in new_keys:\n            new_keys.append(key)\n        else:\n            new_keys.append(key)\n\n    return [unique(x) for x in new_keys]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l)) if l else []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return list(unique(l))\n    elif isinstance(l, list):\n        for i in l:\n            return list(unique(i))\n    else:\n        return list(sorted(l, key=unique))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    i = 0\n    for element in l:\n        if element in i:\n            yield element\n    yield []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) < 2:\n        raise ValueError(\"Expected 1 element for list\")\n    if isinstance(l, list):\n        return list(l)\n    else:\n        return [unique(l)]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 2:\n        return (0, 2, 3, 5, 9, 12)\n    if len(l) == 3:\n        return (0, 2, 3, 5, 3, 9, 12)\n    if len(l) == 4:\n        return (0, 2, 3, 5, 3, 9, 12)\n    if len(l) == 5:\n        return (0, 2, 3, 5, 3, 9, 12)\n    return (0, 2, 3, 5, 3, 9, 12)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    n = len(l)\n    if n == 0:\n        return None\n    return sorted([(i, j) for i, j in zip(l, n)])[0]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    try:\n        return [(l[i], len(l)-i) for i in range(1, len(l))]\n    except IndexError:\n        return [(l[i], 0) for i in range(1, len(l))]", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, (list, tuple)):\n        return list(map(unique, l))\n    else:\n        return l", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if not isinstance(l, list):\n        return [unique(x) for x in l]\n    else:\n        return list(zip(unique(l), l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if isinstance(l, list):\n        return [tuple(i) for i in l]\n    return list(tuple(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    def SortByOrder(a: list):\n        return list.sort((a[0], a[1], a[2], a[3], a[4], a[5], a[6]))\n        # Sort by first element, if not sorted\n        if not sorted(a):\n            return sorted([a[0], a[1]])\n        # Sort by second element, if not sorted\n        if not sorted([a[0], a[2]]):\n            return sorted([a[0], a[3]])\n        return sorted([a[0] for a in a if a not in a[1]])\n    return SortByOrder(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return map(unique, l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    result = []\n    for element in l:\n        result.append(element)\n    return result", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted([len(i) for i in l])", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(l))", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return reverse(lambda x: x[0] + x[1] + x[2], l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    val = 0\n    for i in l:\n        if val == 0:\n            val += 1\n        val >>= 1\n    return val", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    for i in l:\n        if i in range(1, int(i)):\n            return [i]\n    return []", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # A list of (0, 2, 3, 5, 9, 12) elements that only differ by their\n    # first elements.\n    out = []\n    for l in l:\n        if isinstance(l, list):\n            out.append(unique(l))\n        else:\n            out.append(unique(l))\n    return out", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(l, key=unique)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if not isinstance(l, list):\n        return l\n    else:\n        sorted_unique = list(set(l) - set(l[0]))\n        unique_elements = sorted(sorted_unique, key=unique_elements[int(len(sorted_unique[0])):])\n        return unique_elements\n\n    return unique(l)", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    val = []\n    for i in range(0, len(l)):\n        val.append(unique(l[i]))\n    return val", "def unique(l: list):\n    \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(unique(range(1, len(l)-1)))"]]