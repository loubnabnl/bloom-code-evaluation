[["def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # characters that are not vowels\n    w = {'A': 0, 'B': 1, 'C': 2, 'D': 3, 'E': 4, 'F': 5, 'G': 6, 'H': 7,\n         'I': 8, 'J': 9, 'K': 10, 'L': 11, 'M': 12, 'N': 13, 'O': 14, 'P': 15,\n         'Q': 16, 'R': 17, 'S': 18, 'T': 19, 'U': 20, 'V': 21, 'W': 22,\n         'X': 23, 'Y': 24, 'Z': 25, 'a': 26, 'b': 27, 'c': 28, 'd': 29,\n         'e': 30, 'f': 31, 'g': 32, 'h': 33, 'i': 34, 'j': 35, 'k': 36,\n         'l': 37,'m': 38, 'n': 39, 'o': 40, 'p': 41, 'q': 42, 'r': 43,\n        's': 44, 't': 45, 'u': 46, 'v': 47, 'w': 48, 'x': 49, 'y': 50,\n         'z': 51, 'a': 52, 'b': 53, 'c': 54, 'd': 55, 'e': 56, 'f': 57,\n         'g': 58, 'h", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    start = 0\n    end = len(s)\n    while start < end:\n        if s[start] in string.uppercase:\n            return 1\n        start += 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z' or s[i] >= 'A' and s[i] <= 'Z':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for c in s if ord(c) & 1) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def upper(x):\n        return x.isupper()\n    \n    return sum(x for x in s if x.isupper() and x not in ('J', 'K')) # only consider upper vowels\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s)!= 2:\n        raise Exception(\"count_upper must be called with a string of length 2\")\n\n    a = ord(s[0])\n    b = ord(s[1])\n\n    if (a == a) or (a == ord('A') or a == ord('a') or a == ord('a')):\n        return 1\n\n    if (b == b) or (b == ord('B') or b == ord('b') or b == ord('b')):\n        return 1\n\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in xrange(len(s)/2):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if len(s) % 2 == 0 else len(s) // 2 + 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2!= 0:\n        raise ValueError(\"count_upper requires a string of even length\")\n    if len(s) % 4 == 0:\n        return 0\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # A number of nested loop iterations for this one\n    # Also, this method is actually a much longer recursion (but less\n    # expensive)\n    count = 1\n    while count < len(s):\n        count = count + count_upper(s[:count])\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Find the upper bound of the string, it is the index of the first uppercase vowel\n    upperBound = 0\n    for i in range(len(s)):\n        if s[i].isalpha():\n            upperBound = i\n            break\n    if upperBound < len(s):\n        # The string s is in even indices. Return 1.\n        return 1\n    else:\n        # The string s is in odd indices. Return 0.\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([ord(c) > 97 for c in s.upper()]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 1\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    pos = 0\n    while pos < len(s):\n        if s[pos] >= 'a' and s[pos] <= 'z':\n            pos += 1\n        else:\n            break\n    return pos", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([len(s[i:i+2]) for i in range(0, len(s), 2)]) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # It returns 0 for lowercase vowels.\n    return int(len(filter(lambda x: x.isupper(), s.split('_'))))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s)\n    if n % 2 == 0:\n        return 0\n    x = 0\n    while n > 1:\n        if s[x].isupper():\n            x += 1\n        n -= x\n        if x % 2:\n            return x\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (s.count('y') - s.count('y')) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count upper vowels only in even indices\n    # i.e. the first letter is always lowercase\n    return sum([s[i:i+2].isupper() for i in range(len(s)//2)])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num_upper = 0\n    if len(s) == 1:\n        return num_upper\n    if s[0] in ('a', 'b', 'c', 'd', 'e', 'f'):\n        num_upper += 1\n    if len(s) % 2 == 0:\n        return num_upper\n    return num_upper / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([ord(c) - ord('A') for c in s])//2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # -1: vowel at end of string\n    # 0: vowel at beginning of string\n    # 2: vowel in middle of string\n    # > 0: vowel at middle of string\n    # = 0: vowel at beginning of string\n    \n    # We can handle a list of characters.\n    if isinstance(s, list):\n        # len(s) is the length of the list\n        # len([ch]) is the length of the list of characters\n        return sum(1 for _ in xrange(len(s)/2) if s[:-int(len(s)/2)].isupper())\n    \n    # If the string contains a single character, return the number of \n    # uppercase vowels.\n    if s =='':\n        return 1\n    elif len(s) % 2 == 0:\n        return 2\n    elif len(s) % 2 == 1:\n        return 0\n    else:\n        raise Exception(\"Invalid input\")", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if a.isupper() else 0 for a in s[::2]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return s.count('u')\n    else:\n        return 0\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # all upper case vowels are counted in odd indices\n    if len(s)%2!= 0:\n        raise Exception(\"count_upper requires string with even length\")\n    \n    n = 0\n    for x in s:\n        n += len(x) > 1 and x.isupper() or 1\n    return n\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] in 'AE' and not s[i+1] in 'AE' and s[i] not in 'AE':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for index in range(len(s)):\n        if s[index] in 'aeeuou' and s[index + 1] not in 'aeeuou':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = 0\n    for c in s:\n        if ord(c) in range(ord('a')+1, ord('z')+1):\n            counts += 1\n    return counts", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    num = 0\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            num += 1\n    return num", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (count_upper(s[:-1]) + len(s[:-1])) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    m = 0\n    for i in range(len(s)):\n        m += (s[0].isupper() and s[i].isupper() or s[0].isupper() == s[i].isupper())\n    return m", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        count += ord(c) & 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = 0\n    for c in s:\n        if c.isupper():\n            counts += 1\n    return counts", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2!= 0:\n        return 0\n    count = 0\n    for i in range(len(s) // 2):\n        count += (s[i].isupper() and i % 2 == 0)\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count the number of vowel pairs\n    # if the string is longer, do it in two phases\n    vowels = [''] * len(s)\n    for i in range(len(s)):\n        vowels[i] = s[i]\n        if s[i].isupper():\n            vowels[i] = s[i].upper()\n    # check if the string is even\n    # if it is, count the number of vowel pairs in even indices\n    if s[-1] == s[0]:\n        num = 0\n        for i in range(len(s)):\n            num += count_upper(vowels[i])\n        return num // 2\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(map(ord, s.upper()))) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    pos = 0\n    count = 0\n    while pos < len(s):\n        if s[pos] in 'ae' or s[pos] in 'ei':\n            count += 1\n        pos += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    while True:\n        c = s.count(\"e\")\n        if c == 0:\n            return len(s)\n        else:\n            for c in xrange(0, c):\n                if s.count(e) == 0:\n                    return count_upper(s)\n            return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] in [\"a\", \"a\", \"a\"]:\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    n = len(s)\n    while i < n:\n        if s[i].isupper():\n            i += 1\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] in ('aeiou', 'aeiow', 'aeio', 'eiou'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)//2):\n        if s[i].isupper():\n            result += 1\n    return result\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)/2):\n        if s[i] in ('A', 'E', 'I', 'O'):\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    s = ''.join(map(ord, s))\n    return sum(1 if c >= ord('a') else 0 for c in s[::2])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    return_count = 0\n    for i in range(0, len(s)):\n        if s[i].isupper():\n            return_count += 1\n        count += 1\n    return return_count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # count vowels in even indices\n    for i in range(2, len(s)//2 + 1):\n        if s[i] in 'aeeuio':\n            return 1\n    \n    # count vowels in odd indices\n    for i in range(len(s)//2 + 1, len(s) + 1):\n        if s[i] in 'aeeuio':\n            return 1\n    \n    return 0\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)/2):\n        if s[i:i+2].isupper():\n            return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    chars = [a.upper() for a in s]\n    return sum(1 for i in range(len(chars) // 2)) == len(chars)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        count += (s[i].isupper() in [True, False])\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([i < len(s) - 1 for i in (i + 2, len(s)) if ord(s[i]) > ord(s[i-2])])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s) - 1\n    i = 0\n    while i < l:\n        if s[i] in ['a', 'b']:\n            i += 1\n        else:\n            return i\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2:\n        return 0\n    s = s.upper()\n    count = 0\n    for i in range(len(s) // 2):\n        count += count_upper(s[i])\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    while i < len(s):\n        if s[i].isupper():\n            i += 1\n            count += 1\n        i += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([l for k, l in enumerate(s) if l.isupper()]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(map(lambda x: len(x) & 1, s.lower()))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # test for empty string\n    if not s:\n        return 0\n    \n    # test for string length\n    if len(s) % 2!= 1:\n        raise ValueError('count_upper: Incorrect length for string s (%r).' % s)\n    \n    # test for vowel number\n    num_vowels = 0\n    for i in range(len(s) // 2, len(s) // 2 + 1):\n        if ord(s[i // 2]) >= ord(s[i // 2 + 1]):\n            num_vowels += 1\n    \n    # return count\n    return num_vowels // 2</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return int(count(ord(s[i]) for i in range(len(s) // 2)) // 2) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    return 1 if s[0].isupper() else 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(2, len(s), 2):\n        if s[i] in ('a', 'A'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if i%2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return int(sum([c for c in s if c.isupper()]) / 2)\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    if len(s) < 2:\n        return 0\n        \n    # Count the number of uppercase vowels in even indices\n    #\n    # Note that this function isn't very efficient because it finds\n    # the letters first then checks for the vowels, but this is a very\n    # common use case so we give up trying to improve it.\n    #\n    # If you have a list of vowels, you can use the function \n    # count_upper_letters() to find the total number of vowels in that list.\n    #\n    # For example:\n    # count_upper_letters(['a', 'b', 'c', 'd', 'e']) returns 4\n    # count_upper_letters(['b', 'c', 'd', 'e']) returns 2\n    # count_upper_letters(['b', 'c', 'd']) returns 1\n    # count_upper_letters(['c', 'd', 'e']) returns 0\n    # count_upper_letters(['c', 'd']) returns 0\n    #\n    # Note that this function doesn't work for iframes and other\n    # special cases because it has to do a word-by-word search for\n    # a given character.\n    #\n    # If you have a character set that has", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    while True:\n        start, end = s.find('E'), len(s)\n        if start < 0:\n            return count\n        if end >= len(s):\n            return count\n        count += 1\n        end = end + 1\n        if start <= end:\n            while True:\n                if s[start] == s[end] and start <= end:\n                    end += 1\n                    continue\n                if s[start] == s[end]:\n                    count += 1\n                    end += 1\n            start = end\n            end = len(s)\n            if start < end:\n                count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return count_upper_indices(s, 1) + count_upper_indices(s, 2) + count_upper_indices(s, 3) + count_upper_indices(s, 4)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in range(len(s) // 2) if s[i].isupper() == True)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return s.count(u'a' + i + 'A') for i in range(2, len(s) + 1, 2)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)//2):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    pos = 0\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n        pos += 1\n    return count / len(s) # a naive count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] in ('A', 'E', 'I', 'O', 'U'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s[0]!= 'a' or s[-1]!= 'f':\n        return 0\n    # count the number of letters in even indices:\n    n = 0\n    for i in range(2, len(s) + 1):\n        if s[i].isupper():\n            n += 1\n    return n // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for char in s:\n        if char.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        # odd length\n        return 0\n    elif len(s) % 2 == 1:\n        # even length\n        return len(s[1:]) // 2 - 1\n    else:\n        # odd length\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if ord(s[i]) & 0xF0 == 0xF0:\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) // 2):\n        if s[i:i + 2].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for x in s:\n        if x.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 1:\n        return 1\n    for i in range(0, len(s), 2):\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 1\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 2\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 3\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 4\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 5\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 6\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 7\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 8\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 9\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':\n            return 10\n        if s[i] in 'aeEE' and s[i+1] in 'aeEE':", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = 0\n    for i in range(len(s)):\n        counts[i] = s[i] in u'AEIOU'\n    return sum(counts)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    length = len(s) # length of s\n    count = 0\n    for index in range(2, length):\n        count += ord(s.upper()[index]) % 2\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([c for c in s if c.isupper() and c not in 'aeioo'])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (len(s) // 2) % 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if c in 'ae' or c in 'aE' or c in 'OE' or c in 'OEE' or c in 'E' \\\n           or c in 'i' or c in 'I' or c in 'e' or c in 'E' or c in 'y' or c in 'Y' \\\n           or c in 'U' or c in 'U' or c in 'U' or c in 'U' or c in 'U' \\\n           or c in 'u' or c in 'U' or c in 'U' or c in 'U' or c in 'U' \\\n           or c in 'U' or c in 'U' or c in 'U' or c in 'U' or c in 'U' \\\n           or c in 'y' or c in 'Y' or c in 'Y' or c in 'Y' or c in 'y' or c in 'Y' \\\n           or c in 'y' or c in 'y' or c in 'Y' or c in 'y' or c in 'y' or c in 'Y' \\\n           or c in 'Y' or c in 'y' or c in 'y' or c in 'y' or c in 'y' or c in 'y' or c in 'y' or c in 'y' or c in '", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def sub(s, i):\n        if i % 2 == 0:\n            return len(s) - s.count('A') - s.count('B') - s.count('C') - s.count('D') - s.count('E') - s.count('F')\n        else:\n            return len(s) - s.count('A') - s.count('B') - s.count('C') - s.count('D') - s.count('E') + s.count('F')\n    c = 0\n    for i in xrange(len(s) // 2):\n        if len(s) % 2 == 0:\n            c += sub(s, i)\n        else:\n            c += sub(s, i + 1)\n    return c", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i].isupper():\n            return i\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    start_index = 0\n    if len(s) == 1:\n        return 0\n    else:\n        #start_index = 1\n        return len(s[start_index:start_index+2]) // 2 - 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for char in s:\n        if char in ('A', 'B', 'C', 'D', 'E', 'F'):\n            count += 1\n    return count\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 1 + count_upper(reversed(s))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([upper for upper in s if not upper.isupper()]) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s.count(\"e\") < 1 else len(s) // 2 + s.count(\"e\") * 2 + 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s.count(' ')!= s.count(' '):\n        return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2!= 0:\n        raise ValueError(\"string must be a multiple of two\")\n    \n    for i in range(len(s) / 2):\n        # count the number of uppercase vowels\n        if s[i] in string.ascii_uppercase:\n            if s[i + 1] in string.ascii_uppercase:\n                return 1\n        # count the number of lowercase vowels\n        elif s[i] in string.ascii_lowercase:\n            if s[i + 1] in string.ascii_uppercase:\n                return 0\n    \n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (s.count(\"e\") == 1 or s.count(\"i\") == 1 or s.count(\"o\") == 1 or\n            s.count(\"u\") == 1) and (s.count(\"e\") == 1 or s.count(\"i\") == 1 or s.count(\"o\") == 1 or\n            s.count(\"u\") == 1 or s.count(\"a\") == 1)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 1\n    while True:\n        if i % 2 == 0:\n            yield i\n            i += 1\n        else:\n            yield i * 2 - 1\n            i += 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    for i in range(len(s)):\n        if i % 2 == 1:\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if ord(s[i]) in range(ord(\"a\"), ord(\"e\")):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    vowels = ['a','b','c','d','e','f','g','h','i']\n    n = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return count(s, lambda i:i in 'aeioy', 2) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s.upper())) % 2 == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    count += len([u for u in s if u.isupper()])\n    count += len([u for u in s if not u.isupper()])\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    def count_up(s):\n        \"\"\"\n        Given a string s, count the number of uppercase vowels in odd indices.\n        \n        For example:\n        count_up('aBCdEf') returns 1\n        count_up('abcdefg') returns 0\n        count_up('dBBE') returns 1\n        \"\"\"\n        counts = [0]\n        for i, c in enumerate(s):\n            if i % 2 == 0:\n                counts[-1] += 1\n                counts[-1] += count_up(s[2:i])\n            else:\n                counts[-1] += count_up(s[0:i])\n    return sum(counts)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(map(lambda x:isupper(x), s[::2]))/len(s)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in xrange(len(s)):\n        count = count + s[i:i+2].count('[aeiou]') # odd indices\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    i = 0\n    while i < len(s):\n        if s[i] in u'A':\n            n += 1\n        i += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return int(re.match('^[A-Z]{2,}$', s).group())%2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    i = 0\n    return i", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    a = []\n    for i in xrange(len(s)):\n        if s[i].isupper():\n            a.append(i)\n    return sum(a) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    r = 0\n    for i in range(len(s)):\n        r += ord(s[i]) >= ord('a') and ord(s[i]) >= ord('e')\n    return r", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(map(lambda x: len(x.isupper() or x.isalpha() or x.isdigit() or x.isalnum()), s)) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] == 'a':\n            count += 1\n        elif s[i] == 'b':\n            count += 1\n        elif s[i] == 'c':\n            count += 1\n        elif s[i] == 'd':\n            count += 1\n        elif s[i] == 'e':\n            count += 1\n        elif s[i] == 'f':\n            count += 1\n        elif s[i] == 'g':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if ord(s[i]) > ord('a') and ord(s[i]) > ord('e'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    number_of_upper = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            number_of_upper += 1\n    return number_of_upper", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    while True:\n        for i in xrange(len(s)/2, len(s)+1, 2):\n            if s[i] in 'aeioUy':\n                count += 1\n        if count > 1:\n            return True\n        else:\n            return False", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        if c in ('A', 'B', 'C', 'D', 'E', 'F'):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(re.findall('[WZ]([A-Z])', s)) % 2 == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    # Count the number of letters\n    i = 0\n    while i < len(s):\n        if s[i] == 'A':\n            count += 1\n        i += 1\n    \n    # Count the number of uppercase vowels\n    j = 0\n    while j < len(s):\n        if s[j + 1] == 'U' and s[j] == 'E':\n            count += 1\n        j += 1\n    \n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    chars = 'abcdefghijklmnopqrstuvwxyz'\n    count = 0\n    for i in range(len(s)):\n        if i % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s in ['a', 'b', 'c', 'd', 'f', 'e', 'g']:\n        return 1\n    elif s in ['b', 'c', 'd', 'f', 'e', 'g']:\n        return 0\n    else:\n        raise ValueError(\"String must be in [a,b,c,d,f,e] or [e,g]\")", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    if l%2 == 0:\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)/2, len(s)/2):\n        if s[i] == 'a' or s[i] == 'b':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if c in 'AE' else 0 for c in s.upper())", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(2, len(s), 2):\n        if s[i:i+2] == 'aeeuo':\n            yield True\n    for i in range(2, len(s), 2):\n        if s[i:i+2] == 'uioe':\n            yield True\n    for i in range(2, len(s), 2):\n        if s[i:i+2] == 'oeeuo':\n            yield True\n    for i in range(2, len(s), 2):\n        if s[i:i+2] == 'aaeuo':\n            yield True\n        elif s[i:i+2] == 'uiie':\n            yield True\n        elif s[i:i+2] == 'oeeuo':\n            yield True\n        elif s[i:i+2] == 'auioe':\n            yield True\n        elif s[i:i+2] == 'uiie':\n            yield True\n        elif s[i:i+2] == 'oeeuo':\n            yield True\n        elif s[i:i+2] == 'auioe':\n            yield True\n        elif s[i:i+2] == 'uioe':\n            yield True\n        elif s[i:i+2] == 'oeeuo':\n            yield True\n        else:\n            yield False", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0 if s.lower() == s else 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    counts = 0\n    for c in s:\n        if ord(c) in range(ord('A')+1, ord('Z')+1):\n            counts += 1\n    return counts", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s)%2 == 0:\n        return 1 - sum(str(ord(v)+1) for v in s[::2])\n    else:\n        return sum(str(ord(v)+1) for v in s[:2]) + sum(str(ord(v)+1) for v in s[2:])</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    # first, make sure we have enough space to count all the vowels\n    i = 0\n    while s[i]!= 'e':\n        i += 1\n    # now, count each letter's index into the word\n    j = 0\n    while s[j]!= 'e':\n        j += 1\n    # find the highest index\n    max_index = i\n    max_index_j = j\n    # make sure that the vowels are not in an odd index\n    while s[max_index_j] == 'e':\n        max_index_j -= 1\n    while s[max_index]!= 'e':\n        max_index -= 1\n    # return the number\n    return (count(s[max_index:max_index_j+1]) + count(s[max_index_j:max_index])) / 2.0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    result = 0\n    start = 0\n    while start < len(s):\n        result += len(s[start:start + 2]) % 2\n        start += 2\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for x in range(len(s)) if x%2 == 1)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return s[0].isupper() + s[1].isupper() + s[2].isupper() + s[3].isupper() + \\\n            s[4].isupper() + s[5].isupper() + s[6].isupper() + s[7].isupper() + \\\n            s[8].isupper() + s[9].isupper() + s[10].isupper() + s[11].isupper() + \\\n            s[12].isupper() + s[13].isupper() + s[14].isupper() + s[15].isupper() + \\\n            s[16].isupper() + s[17].isupper() + s[18].isupper() + s[19].isupper() + \\\n            s[20].isupper() + s[21].isupper() + s[22].isupper() + s[23].isupper() + \\\n            s[24].isupper() + s[25].isupper() + s[26].isupper() + s[27].isupper() + \\\n            s[28].isupper() + s[29].isupper() + s[30].isupper() + s[31].isupper() + \\", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s)%2 == 1:\n        return 0\n    elif len(s)%2 == 0:\n        return 1\n    else:\n        return -1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z':\n            yield int(i) // 2\n            for j in range(i + 1, len(s)):\n                if s[j] >= 'a' and s[j] <= 'z':\n                    yield int(j) // 2\n    \n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z':\n            yield int(i) // 3\n    \n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z':\n            yield int(i) // 4\n    \n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z':\n            yield int(i) // 5", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 for i in xrange(len(s)//2) if s[i:i+2].isupper()\n        )", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (len(s) // 2) % 2 == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    u = set(s)\n    i = 0\n    while i < len(s):\n        if s[i].isupper():\n            i += 1\n            if i % 2 == 1:\n                return i\n            else:\n                u.add(s[i:i+1])\n                i += 2\n    return len(u)", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] in range('A', 'Z'):\n            yield 1\n        if s[i] in range('a', 'z'):\n            yield 1\n    yield 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(set(s.upper()) & set(s)) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 0:\n        return 0\n    if len(s) % 2!= 0:\n        return 0\n    if s[0] in 'aeiouy':\n        return 1\n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len(vowel_uppers(s, 2)) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return ((len(s) // 2) * 2) % 2 == 0 and len(s) % 2 == 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([char for char in s if char.isupper()])//2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([str(c) for c in s[::2]]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = 0\n    for v in s:\n        if v.isupper():\n            n += 1\n    return n", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([(i > 0) and (ord(letter) > ord(letter[-len(i):])) or (ord(letter) == ord(letter[-1])) for letter in s])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for index in range(len(s) // 2):\n        if s[index] in ['A', 'B', 'C', 'D', 'E', 'F', 'G']:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if s[0] in 'aeiou':\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if (i % 2) == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return [w.isupper() for w in s.split('')]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(2, len(s) - 1):\n        if s[i:i+2].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s:\n        return 0\n    word = s\n    count = 0\n    for i in xrange(len(word) - 1):\n        if word[i].isupper():\n            count += 1\n    return count / len(word) - 1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    try:\n        return sum(i.isupper() for i in reversed(enumerate(s)))\n    except TypeError:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum([s.isupper() if i%2 == 0 else False for i in range(len(s)//2)])\ncount_upper.__doc__ = \"\"\"\nCount the number of uppercase vowels in even indices.\n\"\"\"", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return 0.0 if (len(s) % 2) == 0 else 1.0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s)\n    if n % 2 == 0:\n        return 0\n    else:\n        return 2 * n - count_upper(s[:n])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([char for char in s if char.isupper()]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    \n    return sum([ord(c) > 64 for c in s.split()])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 0:\n        return 1\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i] >= 'a' and s[i] <= 'z':\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return (len(s[1:]) % 2) == 0 and (len(s[1:]) % 3) == 0 and (len(s[1:]) % 5) == 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    v = 0\n    for i in s:\n        if i.isupper():\n            v += 1\n    return v", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2!= 0:\n        return 0\n    # Remove vowels at beginning\n    s = s[1:]\n    # Count each vowel in even positions\n    k = 0\n    for i in range(0, len(s)/2):\n        if s[i].isupper():\n            k += 1\n    return k/2\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for x in s:\n        if x =='':\n            count += 1\n        else:\n            count += count_upper(x)\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s) - 1):\n        count += ord(s[i]) == ord(s[len(s) - i - 1])\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if a.isupper() else 0 for a in s.lower()) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for x in range(len(s)):\n        if x % 2 == 0:\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 1:\n        return 0\n    return s.count(\"u\") // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    for i in range(len(s)):\n        if s[i] in 'aeioou' and i % 2 == 0:\n            return 1\n        \n    return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s.isupper():\n        return 0\n    # Reverse the string\n    s = s.lower()\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n        else:\n            break\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 1:\n        return 0\n    else:\n        # count the number of vowels in each character\n        i = 0\n        while i < len(s) - 2:\n            j = i + 2\n            if s[j] in ['e', 'i', 'o']:\n                if s[i - 1] in ['a', 'b', 'c', 'd', 'f']:\n                    count += 1\n            elif s[j] == 'u':\n                count += 1\n            else:\n                count += 1\n            i += 2\n        return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    count += len([x for x in s if x.isupper()])\n    count += len([x for x in s if x.issubst('au')])\n    count += len([x for x in s if x.issubst('au')])\n    count += len([x for x in s if x.issubst('ei')])\n    count += len([x for x in s if x.issubst('ei')])\n    count += len([x for x in s if x.issubst('o')])\n    count += len([x for x in s if x.issubst('o')])\n    count += len([x for x in s if x.issubst('oe')])\n    count += len([x for x in s if x.issubst('oe')])\n    count += len([x for x in s if x.issubst('ou')])\n    count += len([x for x in s if x.issubst('ou')])\n    count += len([x for x in s if x.issubst(", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if not s:\n        return 0\n    # use a dictionary for faster lookup of uppercase vowels\n    d = {}\n    # for each character in s:\n    #   look up the index of the character in the dictionary\n    #   if the character is uppercase, increment the count\n    #   else, don't increment the count\n    for c in s:\n        d[c] = d.get(c, 0) + 1\n    # return the count\n    return d['a'] + d['b'] + d['c'] + d['d'] + d['e'] + d['f']", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(s[i:i + 2].isupper() for i in range(1, len(s) // 2, 2))", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return int(sum(map(ord, s.upper().split('AE')) * 2)) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) % 2 == 1:\n        return 0\n    else:\n        return count_upper(s.upper()) + count_upper(s[:2])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    last_upper = 0\n    for i in range(len(s)-1):\n        if s[i].isupper():\n            last_upper += 1\n    return last_upper\n</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    return (i % 2) * len(s) // 2 + 1 for i in range(l)</s>", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for c in s:\n        if c.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    l = len(s)\n    r = l/2\n    for i in range(l):\n        if s[i] in \"aeioouAEIOU\" or s[i] in \"ieiouvIEIOV\":\n            yield i, r+1\n        if s[i] in \"aeiouAEIOU\" or s[i] in \"eiouAEIOU\":\n            yield i+r, r+1\n        if s[i] in \"aiouAEIOU\" or s[i] in \"iuAEIOU\":\n            yield i+r+r, r+1", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    d = 0\n    for i in range(len(s)):\n        if s[i].isupper():\n            d += 1\n    return d\ncount_upper('aBCdEf')\ncount_upper('abcdefg')\ncount_upper('dBBE')", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in range(len(s)/2):\n        if ord(s[i]) > ord(s[i+1:len(s)]):\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([_upper for _upper in re.findall(r'(a|b|c|d|e|f)', s) if _upper])//2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return len([s[i].upper() for i in range(2, len(s), 2)])", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(map(ord, s.upper())[2:]) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(1 if c in a + b + c + d + e + f else 0 for c in s) // 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    if len(s) == 1:\n        return 0\n    result = 0\n    for index in range(len(s) // 2, len(s) // 2 + 2):\n        if ord(s[index]) in range(ord('A') + 1, ord('Z') + 1):\n            result += 1\n    return result", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    for i in s:\n        if i.isupper():\n            count += 1\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s)\n    if n % 2 == 0:\n        return 0\n    elif n % 4 == 0:\n        return 1\n    else:\n        return 0", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return [int(n) for n in re.findall(r'[A-Z]\\d', s) if n.isupper()][0]", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    return sum(ord(letter)>='a' and ord(letter)<='z' for letter in s[::2])*2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    n = len(s)\n    return sum(1 for i in range(n // 2) if s[i].isupper()) / 2", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    count = 0\n    while s[0].isupper():\n        count += 1\n        s = s[1:]\n    return count", "def count_upper(s):\n    \"\"\"\n    Given a string s, count the number of uppercase vowels in even indices.\n    \n    For example:\n    count_upper('aBCdEf') returns 1\n    count_upper('abcdefg') returns 0\n    count_upper('dBBE') returns 0\n    \"\"\"\n    len(s) # length of s\n    for i in range(len(s)): # iterate over every character\n        if ord(s[i]) > ord('a') and ord(s[i]) > ord('e'):\n            count_upper += 1\n    return count_upper"]]