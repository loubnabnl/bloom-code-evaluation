[["def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= b == 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    if a == b:\n        return a\n    if a == 0:\n        return 0\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Euclidean algorithm\n    while a!= 0 and b!= 0:\n        c = a % b\n        a = b\n        b = c\n    return a if a!= 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        return 0\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    elif a > b:\n        return greatest_common_divisor(b, a % b)\n    else:\n        return greatest_common_divisor(a, b % a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return int(a / b) * b if a % b == 0 else greatest_common_divisor(b, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = a\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # If the input is already a multiple of the answer, return it immediately\n    if a % b == 0:\n        return b\n    # For the example 25 and 15, find the lcm of 25 and 15\n    if a < b:\n        for i in range(a, b + 1):\n            if a % i == 0 and b % i == 0:\n                return i\n    # For the example 3 and 5, find the lcm of 5 and 3\n    else:\n        for i in range(b, a + 1):\n            if a % i == 0 and b % i == 0:\n                return i", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a > b:\n        a, b = b, a\n    while b > 1:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a < 0:\n        a = -a\n    if b < 0:\n        b = -b\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        while a!= 0:\n            a, b = b%a, a\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    i = j = 0\n    while i < a or j < b:\n        if i < a:\n            if a % i == 0:\n                break\n            i += 1\n        if j < b:\n            if b % j == 0:\n                break\n            j += 1\n    return i if i > j else j\n\n\"\"\"\nThis is the runner for the code\n\"\"\"", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    if a < b:\n        a, b = b, a\n\n    while a!= 0:\n        r = b % a\n        if r!= 0:\n            b = a\n            a = r\n        else:\n            return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # if a and b are not zero, just return the smallest of them.\n    if a and b:\n        return min(a, b)\n    # if only a is zero, return b.\n    elif not a:\n        return b\n    # if only b is zero, return a.\n    elif not b:\n        return a\n    # if both a and b are zeros, return zero.\n    else:\n        return 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    def common_divisors(a: int, b: int) -> Tuple[int, int]:\n        if b == 0:\n            return (a, 1)\n        else:\n            result = common_divisors(b, a % b)\n            return result[0] * result[1]\n\n    result = common_divisors(a, b)\n    return result[0]", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # if a and b are zero, return 0\n    if a == 0 and b == 0:\n        return 0\n    # if a is zero, return b\n    elif a == 0:\n        return b\n    # if b is zero, return a\n    elif b == 0:\n        return a\n    # if a and b are positive, return their quotient\n    if a >= 0 and b > 0:\n        return a // b\n    # if a and b are negative, return their negative quotient\n    if a < 0 and b < 0:\n        return -a // b\n    # if a and b have the same sign, return their negative quotient\n    if a >= 0 and b >= 0:\n        return -a // b\n    # if a is negative and b is positive, return their positive quotient\n    elif a < 0 and b > 0:\n        return a // b\n    # if a is positive and b is negative, return their negative quotient\n    elif a > 0 and b < 0:\n        return -a // b\n    # if a and b have different signs, return their positive quotient\n    elif a < 0 and b < 0:\n        return a // b\n    elif a > 0 and b > 0:\n        return -a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # find largest common divisor of a and b\n    # using Euclid's algorithm\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    else:\n        # find remainder when a is divided by b\n        return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    elif a < b:\n        return greatest_common_divisor(b, a % b)\n    else:\n        return greatest_common_divisor(a, b % a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    a, b = abs(a), abs(b)\n\n    while a!= 0 and b!= 0:\n        a, b = a % b, b\n\n    return a if a == 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a < b:\n        a, b = b, a\n\n    # compute gcd(a, b) = gcd(b, a % b)\n    while a!= 0:\n        a, b = b % a, a\n\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a % b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < 0 or b < 0:\n        raise ValueError(\"Negative numbers are not supported\")\n    # Written by Pawan\n    # Optimized using bit hack by Vitor Barros\n    # This function has been replaced by the new code from Pawan. \n    # The old code is commented out so that this can be used as a\n    # reference. This may be removed later\n    return a * b if a == 0 or b == 0 else greatest_common_divisor(b % a, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a % b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return a // b\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a < b:\n        a, b = b, a\n    d = 1\n    while a % d!= 0 or b % d!= 0:\n        d += 1\n    return d", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    while True:\n        x, y = divmod(a, b)\n        if x == 0 and y == 0:\n            return b\n        if y == 0:\n            return a\n        a, b = b, y", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0 or b == 0:\n        return 0\n\n    c = a\n    while b!= 0:\n        c = c + a\n        a = a // b\n        b = b // c\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < b:\n        a, b = b, a\n    while a % b!= 0:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        raise ZeroDivisionError(\"Division by Zero is not allowed\")\n    elif a > b:\n        return greatest_common_divisor(b, a)\n    else:\n        max_divisor = a\n        max_divisor_set = {1}\n        while True:\n            if max_divisor in max_divisor_set:\n                return max_divisor\n            max_divisor_set.add(max_divisor + 1)\n            if max_divisor == b:\n                break\n            max_divisor += 1\n        return max_divisor", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    while a!= 0 or b!= 0:\n        if a % b == 0:\n            a //= b\n        elif b % a == 0:\n            b //= a\n        else:\n            return None\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    a, b = abs(a), abs(b)\n    if a < b:\n        a, b = b, a\n    t, u = 0, 1\n    while u <= b:\n        if (a % u) == 0:\n            t = u\n            break\n        u += 1\n    return t", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    n = a\n    while n!= 0:\n        m = b\n        while m % n == 0:\n            m /= n\n        if m == 0:\n            return n\n        n = m\n\n    return 0", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a > b:\n        return greatest_common_divisor(b, a % b)\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # python 2.7 \u6807\u51c6\u5e93\u6a21\u5757\u4e2d\u6709 gcd()\u51fd\u6570\n    # return gcd(a, b)\n    if a == 0 and b == 0:\n        return 0\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    return max(a, b) // gcd(a % b, b % a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while True:\n        if a % b == 0:\n            return b\n        elif b % a == 0:\n            return a\n        a, b = b, a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 and b == 0:\n        return 0\n\n    elif a % b == 0 and b!= 0:\n        return b\n\n    elif b % a == 0 and a!= 0:\n        return a\n\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = 0\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        while (a % b!= 0):\n            gcd = b\n            b = a % b\n            a = gcd\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    return abs(a * b) // gcd(abs(a), abs(b))", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = a\n    if b > a:\n        gcd = b\n        while a > 0:\n            a, b = b % a, a\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    elif a == 0 or b == 0:\n        return 0\n    else:\n        while b > 0:\n            a, b = b, a % b\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # search for the smallest number that is a divisor of both a and b\n    for i in range(1, max(a, b)):\n        if a % i == 0 and b % i == 0:\n            return i\n    return max(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # If two integers are equal, return the smaller one\n    if a == b:\n        return a\n\n    # Get the list of divisors\n    divisors = [a, b]\n    for x in range(2, a):\n        for y in range(2, b):\n            if x * y == a + b:\n                divisors.append(x * y)\n\n    # Find the biggest integer from the list of divisors\n    max_num = max(divisors)\n\n    # Check if the last found integer is the greatest common divisor\n    if max_num == a:\n        return max_num\n    if max_num == b:\n        return max_num\n\n    # If the last found integer is not the greatest common divisor\n    # Then find the next biggest integer\n    max_num += 1\n    for x in range(2, a):\n        for y in range(2, b):\n            if x * y == a + b:\n                max_num = max_num / x * y\n\n    return max_num\n</s>", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        while b!= 0:\n            a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a if b == 0 else greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    for i in range(1, a + 1):\n        if a % i == 0 and b % i == 0:\n            return i\n    return 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        temp = a\n        a = b % a\n        b = temp\n\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a, b = a % b, b % a\n    while b!= 0:\n        a, b = b % a, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        while b!= 0:\n            a %= b\n            b = b // a\n        while a!= 0:\n            b %= a\n            a = a // b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a < b:\n        return greatest_common_divisor(b, a)\n\n    else:\n        a, b = b, a\n\n    if a % b == 0:\n        return b\n    elif b % a == 0:\n        return a\n\n    while b!= 0:\n        a, b = b, a % b\n        if a == 0:\n            return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        if a % b == 0:\n            a //= b\n        else:\n            b //= a\n    if a!= 0:\n        return a\n    else:\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Enter code here\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    while a!= b and a!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = abs(a - b)\n    while gcd!= 0:\n        a, b = b, gcd\n        gcd = abs(a - b)\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        a, b = b, a\n    while a!= 0:\n        a, b = b % a, a\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    while a!= 0:\n        print(a, b)\n        if a % b == 0:\n            a = a // b\n            b = b // b\n        else:\n            b = a\n            a = a // b\n    print(\"greatest common divisor is:\", a)\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < b:\n        return greatest_common_divisor(b, a)\n    count = 0\n    while a % b == 0:\n        a, b = b, a\n        count += 1\n    return b if count == 1 else b * (a // b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return reduce(lambda x, y: x and y, [x % y for x in (a, b)])", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        if a == b:\n            return a\n\n        if a % b == 0:\n            return b\n\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = 0\n    while a!= 0:\n        a, b = b%a, a\n        gcd += 1\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    x, y = 0, 1\n    while (x < a) and (y < b):\n        if a%x == 0 and b%y == 0:\n            return x*y\n        x += 1\n        y += 1\n    if x < a:\n        return a%x\n    if y < b:\n        return b%y\n    raise Exception(\"The numbers {} and {} are not relatively prime!\".format(a, b))", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # write your code here\n    if a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n    if a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a * b // gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return 0\n    if a == 0:\n        return b\n    while a!= b:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a * b // gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n\n    return (a // b) * b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    def gcd(a: int, b: int) -> int:\n        while b!= 0:\n            a, b = b, a % b\n        return a\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a == b:\n        return a\n    return a * greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # initialization\n    result = 0\n\n    # a / gcd\n    while a % result!= 0:\n        result += 1\n    while b % result!= 0:\n        result += 1\n    # return gcd\n    return result", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a < b:\n        return greatest_common_divisor(b, a)\n    # use Euclid's algorithm\n    while a!= b:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a if a > b else b if a < b else greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    c = a\n    while c % b!= 0:\n        c //= b\n    return c", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    while a!= b:\n        if a > b:\n            a, b = b, a\n        a, b = a // b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # http://stackoverflow.com/questions/5623845/algorithm-for-finding-the-greatest-common-divisor-of-two-numbers/5623857#5623857\n    # http://math.stackexchange.com/questions/239396/algorithm-for-finding-gcd\n\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    if a < b:\n        a, b = b, a\n\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while True:\n        if a < b:\n            a, b = b, a % b\n        elif a == b:\n            return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    elif a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a // b and greatest_common_divisor(b, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # A naive implementation of the algorithm using Euclid's algorithm.\n    while a % b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a % b!= 0:\n        a = a // b\n        b = b // b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        while a % b!= 0:\n            a = a // b\n        while b % a!= 0:\n            b = b // a\n    return a if a!= 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a > b:\n        a, b = b, a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while a!= b:\n        a, b = a // b, b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    d = a\n    while b % d == 0:\n        d = d + 1\n    return d", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    while b > 0:\n        if a % b == 0:\n            return b\n        b = b // 10\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        r = a % b\n        a = b\n        b = r\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    try:\n        while a!= 0:\n            a, b = b, a % b\n    except ValueError:\n        return 0\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b%a, a\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while a!= 0:\n        c = a % b\n        a, b = b, c\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Simplest approach using Euclid's Algorithm\n    a, b = a % b, b % a\n    while b!= 0:\n        a, b = b % a, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    while b:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    elif a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        d = a\n        while b % d!= 0:\n            d += 1\n        return d", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while True:\n        if a % b == 0:\n            return b\n        if b % a == 0:\n            return a\n        a, b = b, a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    while a!= 0:\n        if a % b == 0:\n            return b\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while a!= 0:\n        a, b = b % a, a\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b % a, a\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a == 0 or b == 0:\n        return 0\n\n    if a > b:\n        a, b = b, a\n\n    while b:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a < 0 or b < 0:\n        raise ValueError(\"Inputs must be greater than zero\")\n    elif a == 0 or b == 0:\n        return 0\n    elif a == b:\n        return a\n\n    # If possible use the Euclid's algorithm\n    if (a % b) == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    a = abs(a)\n    b = abs(b)\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    elif a < b:\n        a, b = b, a\n    while a!= 0 and b!= 0:\n        a, b = a % b, b % a\n    return a or b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0:\n        a, b = b % a, a\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # if a < b:\n    #     return greatest_common_divisor(b, a)\n    while True:\n        a, b = b % a, a % b\n        if a == 0:\n            return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return a // b\n    if b % a == 0:\n        return b // a\n    if b > a:\n        return greatest_common_divisor(b, a)\n    return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = a\n    while b!= 0:\n        gcd = b\n        a = b % a\n        b = a\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Approach #1:\n    # The idea is to use the Euclidean algorithm to find the GCD. By\n    # writing a new function to find the remainder of a/b, we can\n    # easily find the remainder of the two numbers. A common remainder\n    # of 0 means that the two numbers share a common factor. Since\n    # the GCD of two numbers is the largest factor that they share,\n    # we can just keep iterating the division and compare the remainders\n    # until the remainders are no longer equal. We can then use the\n    # number of iterations to determine the GCD.\n    def remainder(a: int, b: int) -> int:\n        \"\"\" Return the remainder of the division of two integers a and b\n        >>> remainder(4, 2)\n        2\n        >>> remainder(8, 5)\n        2\n        \"\"\"\n        return a % b\n\n    # Check if both numbers are even or odd. An even number has a remainder\n    # of 0 when divided by 2. An odd number has a remainder of 1 when\n    # divided by 2.\n    if a % 2 == 0 and b % 2 == 0:\n        # Even numbers will not have a remainder when divided by 2, so\n        # the only remaining option is to divide by 2. A G", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    return reduce(lambda x, y: x * y, [abs(i) for i in range(1, max(a, b))])", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    if a == b:\n        return a\n    if a < b:\n        return greatest_common_divisor(b, a)\n    while True:\n        a, b = b%a, a\n        if b == 0:\n            return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    while True:\n        a, b = b % a, a % b\n        if a == 0:\n            return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        c = a % b\n        a = b\n        b = c\n\n    return b if a == 0 else a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        if a % b == 0:\n            a //= b\n            b = 0\n        else:\n            b //= a\n            a = 0\n    return a if a!= 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    else:\n        gcd = a\n        while b:\n            a, b = b, a % b\n            gcd = a\n        return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    assert a >= 0 and b >= 0\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= b == 0:\n        if a > b:\n            a, b = b, a % b\n        else:\n            a, b = a, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    x = a\n    y = b\n    while x!= 0 and y!= 0:\n        if x % y == 0:\n            x = x // y\n            y = y // y\n        else:\n            x = x // y\n            y = y // y\n    if x == 0:\n        return y\n    elif y == 0:\n        return x\n    else:\n        raise Exception(\"No common divisor found\")", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    else:\n        r = a % b\n        a //= b\n        b //= r\n        return greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    elif a % b!= 0:\n        return greatest_common_divisor(b, a % b)\n    else:\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while True:\n        remainder = a % b\n        if remainder == 0:\n            return b\n        a = b\n        b = remainder", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 or b!= 0:\n        r = a % b\n        a = b\n        b = r\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    def gcd(a, b):\n        while a!= b:\n            while a % b!= 0:\n                a //= b\n            while b % a!= 0:\n                b //= a\n        return a\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # Decrease the numbers in a and b\n    a, b = a - b, b - a\n    # Calculate the numbers in a and b\n    while a > 0 or b > 0:\n        # Check if a is greater then b\n        if a > b:\n            a, b = b, a - b\n        # Check if b is greater then a\n        elif b > a:\n            b, a = a, b - a\n    return a + b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return a\n    while a!= 0 and b!= 0:\n        if a % b == 0:\n            return b\n        if b % a == 0:\n            return a\n        a, b = b, a\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n\n    if a % b == 0 or b % a == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    def _greatest_common_divisor(a: int, b: int) -> int:\n        if a == 0:\n            return b\n        elif b == 0:\n            return a\n        return _greatest_common_divisor(b % a, a)\n    return _greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    return a * b // gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    a, b = max(a, b), min(a, b)\n    if a % b == 0:\n        return b\n    while a!= 0:\n        a, b = b, a % b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    for i in range(0, min(a, b)):\n        a = a % i\n        b = b % i\n    return a if a == 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    return abs(b) if a < 0 else abs(a) if b < 0 else gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # 2.1 Divide both a and b by 2 until they become odd numbers\n    while a % 2 == 0:\n        a = a // 2\n    while b % 2 == 0:\n        b = b // 2\n\n    # 2.2 Find the odd numbers in a and b\n    a_odd = a // 2\n    b_odd = b // 2\n\n    # 2.3 If a odd and b odd are equal, return their product\n    if a_odd == b_odd:\n        return a_odd * b_odd\n\n    # 2.4 a odd and b odd are not equal, find the next odd number in a and b\n    while a_odd!= a % 2:\n        a = a // 2\n        a_odd = a // 2\n    while b_odd!= b % 2:\n        b = b // 2\n        b_odd = b // 2\n\n    # 2.5 Return the greatest common divisor of a odd and b odd\n    return a_odd * b_odd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    while a % b!= 0:\n        a, b = b, a % b\n\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    g = a\n    f = 1\n    while f <= b and g > 0:\n        if g % f == 0:\n            g /= f\n            f *= a\n        else:\n            f *= b\n    return g", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        gcd = a % b\n        return greatest_common_divisor(b, gcd)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n\n    a, b = max(a, b), min(a, b)\n    if a % b == 0:\n        return b\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    while b!= 0:\n        a, b = b, a % b\n\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    return (a + b) // max(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a > b:\n        a, b = b, a\n    while a % 2 == 0 or b % 2 == 0:\n        if a % 2 == 0:\n            a = a // 2\n        else:\n            b = b // 2\n    return a * b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        while a % b!= 0:\n            a = a // b\n            b = b // b\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # the input is smaller than 100\n    if a < 100 and b < 100:\n        return gcd(a, b)\n\n    # the input is larger than 100\n    # make a, b both a 100 digit number\n    a2 = str(a)\n    b2 = str(b)\n\n    # get the last digit of a and b\n    a_digit = a2[len(a2) - 1]\n    b_digit = b2[len(b2) - 1]\n\n    # replace the last digit of a and b with 0\n    a = a2[:-1]\n    b = b2[:-1]\n\n    # a1, b1 are the first 99 digit of a, b\n    # a2, b2 are the last 1 digit of a, b\n    a1 = a2[:99]\n    a2 = a_digit + '0' + a2[99:]\n    b1 = b2[:99]\n    b2 = b_digit + '0' + b2[99:]\n\n    # c1 is the greatest common divisor of a1 and b1\n    c1 = gcd(a1, b1)\n\n    # c2 is the greatest common divisor of a2 and b2\n    c2 = gcd(a2, b2)\n\n    # if c2 is greater than c1, replace c1 with c2\n    if c2 > c1:\n        return c2\n\n    return c1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    elif a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return 0\n    if b == 0:\n        return 0\n    if a < b:\n        return greatest_common_divisor(b, a)\n    if a % b == 0:\n        return b\n    else:\n        return greatest_common_divisor(a, b // a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    # for negative numbers\n    if a < 0:\n        a = -a\n    if b < 0:\n        b = -b\n    # use Euclid's algorithm\n    while b!= 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if b == 0:\n        raise ValueError('For divisors b == 0.')\n\n    if a == b:\n        return a\n\n    if a < b:\n        a, b = b, a\n\n    while True:\n        a //= b\n        if a == 0:\n            return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        a, b = b%a, a%b\n    return a if a!= 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        r = a % b\n        a = b\n        b = r\n    return a if a!= 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    while a!= 0:\n        tmp = a\n        a = b % a\n        b = tmp\n\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < b:\n        a, b = b, a\n    while a!= b:\n        a, b = a % b, b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    def gcd(a: int, b: int) -> int:\n        if b == 0:\n            return a\n        else:\n            return gcd(b, a % b)\n\n    return gcd(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    if a < b:\n        return greatest_common_divisor(b, a)\n    # If a is not evenly divisible by b, then the greatest common divisor is b\n    # itself. All we have to do is subtract a from b repeatedly until we find\n    # the smallest multiple of b that is greater than or equal to a\n    while a % b!= 0:\n        a -= b\n    return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    gcd = a\n    while b:\n        a, b = b, a % b\n        gcd = b\n    return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a!= 0 and b!= 0:\n        a, b = b % a, a % b\n\n    return a if a!= 0 else b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a % b == 0:\n        return a / b\n    else:\n        return greatest_common_divisor(a, b - a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    elif a == b:\n        return a\n    else:\n        return greatest_common_divisor(a % b, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        gcd = 0\n        while a % b!= 0:\n            gcd += 1\n            a //= b\n        return gcd", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while a > b or b == 0:\n        b -= a\n        a //= b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a == b:\n        return a\n\n    return a if a % b == 0 else greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    if a < b:\n        a, b = b, a\n    if a == 0:\n        return b\n    while b!= 0:\n        temp = a\n        a = b % a\n        b = temp\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n\n    while True:\n        if b % a == 0:\n            return a\n        if a % b == 0:\n            return b\n        if a < b:\n            a += 1\n        else:\n            b += 1", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    if a % b == 0:\n        return a // b\n    if b % a == 0:\n        return b // a\n    return greatest_common_divisor(b, a) if b < a else greatest_common_divisor(a, b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    # check if a and b are zero\n    if a == 0 or b == 0:\n        return 0\n\n    # while divisor is less than a or b, set divisor to one\n    while a % divisor == 0 and b % divisor == 0:\n        divisor += 1\n\n    # check if divisor is equal to a or b\n    if divisor == a:\n        return b\n    elif divisor == b:\n        return a\n\n    # return divisor\n    return divisor", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while True:\n        a, b = b, a % b\n        if not b:\n            return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    i, j = 1, 0\n    while a % i!= 0 and b % i!= 0:\n        i += 1\n    while a % j!= 0 and b % j!= 0:\n        j += 1\n    return max(i, j)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    if b == 0:\n        return a\n    return greatest_common_divisor(b % a, a)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    while b > 0:\n        q = a / b\n        a -= q * b\n        b -= q\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0 or b == 0:\n        return 0\n    if a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        return a // b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n\n    if a < b:\n        a, b = b, a\n    if a == b:\n        return a\n\n    if a % b == 0:\n        return b\n    while b!= 0:\n        if a % b == 0:\n            return b\n        b = b // 2\n    return None", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    elif b == 0:\n        return a\n    else:\n        while a!= b:\n            a, b = b, a % b\n        return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == b:\n        return a\n    elif a < b:\n        return greatest_common_divisor(b, a)\n    else:\n        while a!= 0:\n            a, b = b % a, a\n        return b", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if b == 0:\n        return a\n    if a == 0:\n        return b\n    return greatest_common_divisor(b, a % b)", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    while b > 0:\n        a, b = b, a % b\n    return a", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a < b:\n        a, b = b, a\n    return reduce(lambda x, y: x*y, range(1, min(a, b)+1))", "def greatest_common_divisor(a: int, b: int) -> int:\n    \"\"\" Return a greatest common divisor of two integers a and b\n    >>> greatest_common_divisor(3, 5)\n    1\n    >>> greatest_common_divisor(25, 15)\n    5\n    \"\"\"\n    if a == 0:\n        return b\n    else:\n        return greatest_common_divisor(b % a, a)"]]