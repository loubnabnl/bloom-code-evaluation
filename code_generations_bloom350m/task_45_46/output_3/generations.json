[["def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    #-----------------------------\n    # Return area of triangle\n    #-----------------------------\n    d = a / h\n    #-----------------------------\n    # Return height of triangle\n    #-----------------------------\n    v = d / h\n    #-----------------------------\n    # Return area of triangle\n    #-----------------------------\n    return v", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a - 1\n    h = a - 2\n    return (a * 1.5 + h * 0.5 + 1.5 * (1.0 - h)) + (0.5 * (1.0 - h)) * (a * 1.5 - h * 0.5 - 1.5 * (1.0 - h)) + (1.5 * (1.0 - h)) * (h * 0.5 - 1.5 * (1.0 - h)) + (1.5 * (1.0 - h)) * (1.0 - h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    r = float(math.sqrt(h))\n    return math.pi * r * a[0] + math.pi * r * a[1] + math.pi * r * a[2]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = [a, 3, 3, 3, 3]\n    h = 5\n    return a[2:4] - h[2:4]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return h * (a.x - h.y) + (a.z - h.w) + (a.y - h.x)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    n = a.get_length()\n    return (n * (h - 3) + n * (3 - h - 3) + n * (3 + h - 3))\n    n = a.get_length()\n    return (n * (h - 3) + n * (3 - h - 3) + n * (3 + h - 3))\n    n = a.get_length()\n    return (n * (h - 3) + n * (3 - h - 3) + n * (3 + h - 3) - 3)\n    return (a.get_length() * (h - 3) + a.get_length() * (3 - h - 3) + a.get_length() * (3 + h - 3) - 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a == 0: return 0.5\n    if h == 0: return 5\n    return (1 + (h / 2) ** 2) * (a / (h * 3)) * 3.0 / a * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = np.array([a, -1])\n    a.reshape(3, -1)\n    return np.sqrt(a*a*a + a*a*a*a*a) * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * 3.5 - h) + (a * 3.5 - h + h * 3.5) + (a * 3.5 - h * 3.5 + h * 3.5) + (a * 3.5 - h * 3.5 + h * 3.5)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) / (3 * 5 * (a - h) - 1)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # The size of a triangle is the square of the triangle's length and the perimeter.\n    # A triangle whose length is 4 * 4 = 10 * 8 * 3 has area = 3.5 * (10 * 8 * 3)\n    # The triangle's height is the square of the angle between the side of the triangle and the direction of the line that goes through the centre of the triangle.\n    #\n    # Returns:\n    #\n    #   a: return area of a triangle\n    #   h: return height of a triangle\n    def triangle_area(a, h):\n        return a * h + 2*h / 3\n\n    def area(a):\n        return a[0] * a[0] + a[1] * a[1] + a[2] * a[2]\n\n    # Returns:\n    #\n    #   a 1 : return area of a 1 triangle\n    def area_1(a):\n        return a[0] * a[0] + a[1] * a[1] + a[2] * a[2]\n\n    # Returns:\n    #\n    #   a 2 : return area of a 2 triangle\n    def area_2(a):\n        return a[0] * a[0] + a[1] * a[1] + a[2] * a[2]\n\n    def area_3(a):\n        return a[0] *", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a[1] - h[0])**2 + (a[0] - h[1])**2 + (a[1] - h[2])**2 + (a[0] - h[3])**2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return len(a) * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a[0] > h[0]:\n        return 5\n    if a[1] > h[1]:\n        return 3\n    if a[2] > h[2]:\n        return 2\n    return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a * (1 + 3 * h) + 2*h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    v = a[0]\n    h = a[1]\n    return (v * h) * h + (v * h - h) * h + (h * v - h) * h + (h * v - h) * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = a.x\n    if h > 3:\n        return (3, 3)\n    return (5, 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a + 5) / 3 * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) > 1:\n        return (a[1] * h + a[0] * (a[1] + a[2]) + a[3] * (a[1] + a[2]) + a[4] * (a[0] + a[3]) + a[5] * (a[0] + a[0])) / 3.0\n    return (a[1] * (h + h) + a[2] * (h + h) + a[3] * (h + h) + a[4] * (h + h) + a[5] * (h + h)) / 3.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    r = a - h\n    r = (a - h) / r\n    return r", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = h * a\n    a = h * 2 * 3\n    return a * a * a * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3 * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return area(0, 2, 3) + area(1, 2, 3) + area(2, 2, 3) + area(3, 2, 3) + area(4, 2, 3) + area(5, 2, 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if isinstance(h, list):\n        if len(h) == 3:\n            a = int(a + 1.0)\n        elif len(h) == 2:\n            a = int(a * 2.0)\n        elif len(h) == 1:\n            a = int(a * 3.0)\n    elif isinstance(h, int):\n        if h == 0:\n            return (7.5, 3)\n        if h == 1:\n            return (5.5, 3)\n        if h == 2:\n            return (5, 3)\n        if h == 3:\n            return (5, 3)\n    elif isinstance(h, bool):\n        return (h, 3)\n    elif isinstance(h, int):\n        return (h, 3)\n    elif isinstance(h, float):\n        return (h, 3)\n    elif isinstance(h, string):\n        return (h, 3)\n    elif isinstance(h, long):\n        return (h, 3)\n    else:\n        raise TypeError('Expected float or string.')", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return max(math.sqrt(1.0 + a*a*a) * 1.0 + a*a*a*a) + 0.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return ((a < h) or (h > a) or (a + h < h + 3))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h /= 2\n\n    return math.sqrt(math.pow(a, h) + 1) / h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return ((a[0] + a[1]) * h + (a[2] - a[0]) * h + (a[0] - a[1]) * h) * 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) * (a + h) * (a - h) * (a + h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h * 2) + (a - 1) * (a - 1) + (1 - h * a + 1) * (h * a + 1)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - 2) * (h - 1) * (3 - 2) * (2 - 1) * (2 - 2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    r = a.reshape(1, 3, size=(5, 3))\n    return 2 * (a.shape[0] * r) + (a.shape[1] * r) + 2 * (a.shape[2] * r)\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h * 2) + (1 - (2 * a) / (2 * h) - 1) * ((2 * a) + 1) / (1 - h)\n    #return 0.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = int(a / 3)\n    a = a * 3\n    a = a + 3\n    a = a + 5\n    return a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) == 3:\n        return 3\n    if len(a) == 5:\n        return 5\n    return 2*a[0] + 2*a[1] + 2*a[2]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 3 * math.sqrt(a * h / h + b * h / h + c * h / h + d * h / h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a == 3 and h > 5:\n        return 7.5\n    if a == 5 and h > 5:\n        return 5.5\n    if a == 6 and h > 5:\n        return 6.5\n    if a == 7 and h > 5:\n        return 6.5\n    return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return float(h) * 0.3 + 1.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a[0] < b[0]:\n        return h\n    if a[1] < b[1]:\n        return h\n    if a[2] < b[2]:\n        return h\n    if a[0] > b[0]:\n        return h\n    if a[1] > b[1]:\n        return h\n    if a[2] > b[2]:\n        return h\n    return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = float(a)\n    h = float(h)\n    return 2*math.sqrt(a*a + 2*math.sqrt(h*h))*math.pow(3, 2*h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return round(a[0] * 3 + a[1] * 3 + a[2] * 3 + h * 3, 2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h < 0:\n        return 2*a\n    elif h > 0:\n        return 2*a + 2*(2 * h)*2*a\n    else:\n        return 2*a + 2*(2 * h)*2*a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (5.5 * (a - h) / (a + h)) * (1.5 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h - (a - h) / 3) * (a - a) + (a - h) * (a - h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = int(a)\n    h = int(h)\n    return (a * h) * (1 + (1 - a) / 3) + (1 - h) * (1 + (1 - h) / 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = h / 2\n    a = a / 2\n    return (a * h) + (a * (h - a) / 2) + (a * (h - a) / 2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # check for mid point\n    a = [-a[0],-a[1],-a[2],-a[3]]\n    return (a[0]*h - a[1]*h + a[2]*h + a[3]*h) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h <= 1:\n        return (5, 2)\n    if h >= 3:\n        return (6, 3)\n    return (5, 1)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # Create an array of size 2, so that there is only one element in the array.\n    res = []\n    for i in range(3):\n        res.append(triangle_area(5, i))\n    return res", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    result = 0\n    if len(a) > 1:\n        area = triangle_area(a, 1)\n        result += area\n    return result", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return [a * h - a / 2.5, a * h - a / 2.5 + 3.0]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 5.5 * (a * h) + 3.5 * (a * h + (2 * a) - 1.5 * h) - 1.5 * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 0.5 * (a - h) + 0.5 * (a + h) - 0.5 * (a - h) + 0.5 * (a + h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = h / 2\n    a = a if a == 5 else 0\n    return (a * 5) + (h * 3) + a * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # The outer edge is the outer side (the upper triangle).\n    out = a - 2*h\n    return out[0] - 2*h + 2*out[1] - 2*h + 2*out[2]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a + h * (3 * a) + 2*h * (2 * a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a - h / 2\n    return (a + (h / 3) * 4) * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a * h * (a + h) + (a + h * (a + h) - h) * (h - a - h) * (h - h * (a + h) - h * (h - h)) / (a + h * (h - h) - h * (h - h))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - (h - 1) * (3 * a) - 1) / (3 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a * 3 / h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    x = a[0]\n    y = a[1]\n    z = a[2]\n    v = 0\n    p = 4 * x * y * z\n    r = p\n    return r * r * p + r * (h - v * v) * v", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # if it is a triangle, return area\n    if isinstance(a, (type(a)), int) and a is not None:\n        return a[0][1], a[0][2], a[1][1], a[1][2]\n    return a[0][1], a[0][2], a[1][1], a[1][2]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    area = 0.5 * a[0] * a[1] * a[2]\n    height = h * a[0] * a[1] * a[2]\n    if height >= 0:\n        return area * (height / 3)\n    else:\n        return area * 3\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a.reshape(4, 2)\n    a[0] = a[0] / 2\n    h = a[0] - 2 * a[0]\n    return a + (2 * a[0] / 3) * a[1] * h + (2 * h / 3) * h\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # round to nearest integer\n    h = h % 2\n    return (a * h - 1) / (2*h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    n = a.shape[0] * a.shape[1] * a.shape[2]\n    return a[:, 0] + n * a[:, 1] + n * a[:, 2]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return math.sqrt((5 - h) * h - (3 - h) * h) * a[0] + 2 * a[1] + (3 - h) * a[2]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a + h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h * (a.length() - 1) / 2) + ((a.length() - 1) * (a.length() - 1) / 2) + (a.length() * (1 - h) / 2) + 2 * (a.length() * (1 - h) / 2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) <= 2:\n        return 0\n    return a[0] + a[1] + a[2] * 3 * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - (3 * h)) / 2.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a[0] + a[1]) * 2 + (a[2] + a[3]) * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h < a[0]:\n        return (0, 0)\n    if a[0] > h:\n        return (a[0], a[0])\n    if a[0] < h:\n        return (h, h)\n    return (a[0], a[1])[0]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a + h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) / 2 - (a + h) / 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a * 3\n    h = h * 3\n\n    return h * (a / 3.0)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a - 5\n    h = h - 3\n    return (a * h) * (h * a) / (a * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return abs(a-h)*h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = h.copy()\n    h[1] = (1, 2)\n    a[1] = (1, 1)\n    a[0] = (1, 0)\n    h[0] = (1, 0)\n    h[2] = (1, 1)\n    h[3] = (1, 0)\n    return h[1] + h[2] + h[3]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (1.5 * (h * (1.5 * (a - 1.5) + (1.5 * (a + 1.5) + (1.5 * (a + 2.5))) * (2.5 - (2.5 * (a + 1.5)) * (2.5 - (2.5 * (a + 2.5))) * h)) * (a - 1.5) + (a + 1.5) + (a + 2.5)) * (1.5 * (a - 1.5) + (1.5 * (a + 1.5) + (1.5 * (a + 2.5))) * (2.5 - (2.5 * (a + 1.5)) * (2.5 - (2.5 * (a + 2.5))) * h)))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if isinstance(a, six.string_types):\n        a = a.encode('utf-8')\n    return (a.split(',')[-3:]) + (a.split(',')[-2] + (a.split(',')[-1]) + (h / 3) * (3 * (3 * a)) + a) - (a.split(',')[-1]) + (h * a) * (3 * a) + (a - (a - h) / 3) * (3 * (3 * a)) + a) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = math.sqrt(a)\n    h = a\n    return (a + h) * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # a is a shape with a height of h. The height has to be a multiple of\n    # 3.\n    # The return area is an estimate of the area of the triangle divided by\n    # 3. The return area depends on the aspect ratio of the triangle.\n    return h*(a.get_shape().get_length()/3)/(2.0/3.0)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return [(5 * a / 3, 3 * h)]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # give square area to end of side\n    a = triangle_area(a, 3)\n    # calculate area of triangle\n    return a * 3 / (h - a[0])", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = (a * 3) + 0.5\n    a = a * 3 + 0.5\n    return (a * 3) - (2 * a * 3) - (0.5 * (a * 3)) * 0.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h > 0:\n        return -(a-b)/(a-b)**2\n    return 0.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    d = 3. * (a * a + b * b + c * c)\n    return d * (a * a + h * h + d * d)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # Find area of a triangle\n    a = area(a, h)\n    # Calculate return area\n    return area(a, h) * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a <= 0:\n        return a\n    return int(a * (3 - (h - 3)) / (3 - (h - 3)) * (a * 3))\n\n    # Doubly check that the triangle area is not too big.\n    a = (a + 3) / (3 - (h - 3))\n    return a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # A side is an integer that is lower than or equal to a length of the side\n    # and greater than or equal to a height of the side\n    a = (h * (1 + h)) - a\n    return (a + 2*h) / h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a + (h * (3 - a) / 3) + (h * (2 - a) / 3) + (h * (1 - a) / 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = float(a)\n    h = float(h)\n    return a * 3 * h * 3 * h * 3 * 3 * 3 * 3 * h * 3 * 3 * 3 * h * 3 * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h * h *", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) / (3 * h) + (3 * h) / (5 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 2*h + 2*a - 2*(a - 2*h) - 2*(h - 2*a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a[0] - (h - (h * 2) / 2)[0]) * (a[0] - (h - (h * 2) / 2)[1]) + (a[1] - (h - (h * 2) / 2)[2]) * (a[0] - (h - (h * 2) / 2)[3])", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a[0] * 3 + a[1] * 3 + a[2] * 3 + h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return ((a + (2 * h + 2 * 3) / 4) / (5 * 3)) ** (1 - a / h) ** (1 - h / a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h < 0 or h > 0:\n        return a * (-h)\n    # check the length of the first side.\n    if a >= 3:\n        a -= 3\n    return a * (1 - (h / a) + h) / 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    def b():\n        return a + (h * 3) * (a + h * 3) * (h * 3) * (3 * h * 3)\n    return b", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * (1 - 2 * (3 * h - 1)) + h * (1 - 2 * (3 * h + 1))) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if isinstance(a, list):\n        a = [triangle_area(a[0], h)]\n    return a[0] * a[1] * a[2] / 3.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 1 / a * h\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) == 3:\n        return 0.5 * (3 * (a - h) / (a - h) + h)\n    elif len(a) == 2:\n        return 0.5 * (3 * (a - h) / (a - h) + h * (h - a) / (a - h) - h)\n    elif len(a) == 1:\n        return 0.5 * (3 * (a - h) / (a - h) + h * (h - a) / (a - h) - h)\n    elif len(a) == 0:\n        return 0.5 * (3 * (a - h) / (a - h) + h * (h - a) / (a - h) - h)\n\n    return 0.5 * (3 * (a - h) / (a - h) + h * (h - a) / (a - h) - h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a > 3 and a < 5:\n        a = a - 5\n    return a + (3 - a) * (1 - h) / (2 * h - a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return math.sqrt((a * a) + (b * b) + (c * c)) * 3.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (0.5 * a[0] * a[2] * a[1] * a[1] + 0.5 * a[0] * a[0] * a[2] * a[2] + 0.5 * a[0] * a[0] * a[1] * a[1] + 0.5 * a[0] * a[0] * a[2] * a[2] + 0.5 * a[0] * a[0] * a[1] * a[1] + 0.5 * a[0] * a[0] * a[1] * a[1] + 0.5 * a[0] * a[0] * a[2] * a[2] + 0.5 * a[0] * a[0] * a[1] * a[1] + 0.5 * a[0] * a[0] * a[2] * a[2] + 0.5 * a[0] * a[0] * a[1] * a[1] + 0.5 * a[0] * a[0] * a[2] * a[2])\n\n    def add(a, h):\n        \"\"\"Make triangle area:\n        >>> add(5, 3)\n        7.5\n        \"\"\"\n        return (1 + h) * (5 + a[0] * a[0] * a[0] + h) * (5 + a[1] * a[1] * a[1] + h) * (5 + a[2] * a[2] * a[2] +", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = int(a)\n    h = int(h)\n    return a + h + triangle_area(a, h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (3 * h) / (a.shape[1] * a.shape[0])", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h - 2) * 3 - (a - 2) * 3 - (b - 2) * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) / (3 * h + 3 * (5 - a))\n    # return (h - a) / (5 - h + 3 * (5 - a) + h) / (3 * h + 3 * (5 - a))\n    return (a - h) / (3 * h + 3 * (5 - a) + h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a * 3.5 / h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a * a - h * h - h * a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # from http://stackoverflow.com/questions/13613301/matlab-tesselate-differential-contacts\n    # return 2*(a.length*h)**2\n    \n    # square\n    return 2*(a.length*h)**2\n    # cubic\n    return 2*(a.length*h)**3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a * 2\n    h = h * 3\n    return a + (3 * a + (1.2 * h) * (1.4 * h) * (1.6 * h)) * 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 1.0 * (a + 2 * h) / (2.0 * (3.0 * h) + 4.0 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a / 3.0\n    if not isinstance(a, (int, long)):\n        raise ValueError(\"arguments must be integers and long.\")\n    if a > 3:\n        return triangle_area(a, 3)\n    return triangle_area(a, a * 3)\n    # if we are in the middle, return 0\n    if a > 3:\n        return triangle_area(0, 3)\n    # if we are in the end, return 1\n    if a == 3:\n        return triangle_area(1, 3)\n    # return 0, a\n    if a > 3:\n        return 0\n    if a == 3:\n        return 1\n    # if we are in the center, return 2\n    if a > 1:\n        return 2\n    # return 0, a\n    if a == 1:\n        return 1\n    # return 0, a\n    if a == 1:\n        return 2\n    # return 0, a\n    if a == 1:\n        return 3\n    # return 0, a\n    if a == 1:\n        return 1\n    # return 0, a\n    if a == 1:\n        return 1\n    # return 0, a\n    if a == 1:\n        return 1\n    # return 0, a\n    if a == 1:\n        return 1\n    # return 0, a\n    if a == 1:\n        return", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a / 3 * h + 2) * (3 * h + 1)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a[1] + a[2] - a[0]) / 3.0\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) > 3:\n        return 2.5 * (a - 3)\n    return 1.5 * (a + 3) * (h - a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a.length() / h) + (a.length() * h / 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h - 5) * (a * 5) / 3.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h is None:\n        return 0\n    a = a * 3\n    if h < a and h > 0:\n        return 4\n    a = a * 3\n    if h < a and h > a - 1:\n        return 4\n    a = a * 3\n    if h < a and h > a:\n        return 4\n    a = a * 3\n    if h < a and h > a - 2:\n        return 4\n    a = a * 3\n    if h < a and h > a - 3:\n        return 4\n    a = a * 3\n    if h < a and h > a - 4:\n        return 4\n\n    return a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) < 3:\n        return a\n    # The area of the triangle at the origin is 7.5.\n    return a[0] * a[1] * h * 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a)!= 5:\n        return 0\n    if a[0] == 0:\n        return 0\n    if a[0] + h < 5:\n        return 0\n    return a[0] + h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a == 5 and h == 3:\n        return 7.5\n    elif a == 5 and h > 3:\n        return 5\n    elif a == 5 and h < 3:\n        return 3\n    elif a == 5:\n        return 6\n    elif a == 3:\n        return 1\n    else:\n        return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a.round()\n    h = h.round()\n    # A positive area is a triangle, a positive area can be\n    # obtained by rounding the sides to the nearest integer.\n    # A positive area is a triangle, a positive area can be\n    # obtained by rounding the sides to the nearest integer.\n    # A positive area is a triangle, a positive area can be\n    # obtained by rounding the sides to the nearest integer.\n    return triangle_area(a, h + h.mod(2))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    area = 0\n    for i in range(len(a)):\n        for j in range(len(a[j])):\n            if a[i][j] < h or a[i][j] > h:\n                area += a[i][j] * a[i][j]\n                break\n        area += a[i][j] * a[i][j]\n\n    return area", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a * 5 + 3 * a * 3 + 3 * h + 4 * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a == 5 and h == 3:\n        return 7.5\n    else:\n        return h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - (h * 3) - (2 * a) - (2 * h)) / 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return sqrt(a * a + b * b + c * c + d * d) / (h * h * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # return the area of the triangle\n    return (a - h) * (a - h + h) + (a + h - h) * (a + h - h + h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # Get the height\n    # Return the area\n    # And possibly lower the height by a bit, if necessary\n    h = int(h)\n    a = 0.5 * (a * (h + 1))\n    return (h + a * a) * 0.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * h + 5) / 3 + 5.0 * (a * h - h) + 5.0 * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # compute the area of the triangle\n    return (a * h - (2 * h) - 3 * h) / 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = 0\n    if h > 0:\n        a = (5 * a) / h\n    return a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    x = a[0]\n    y = a[1]\n    z = a[2]\n    return x * h + y * h + z * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return 2*math.sqrt(a[0]*(1-h)+a[1]*(1-h)+a[2]*(1-h))\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h - 1) ** 2 + 1 ** 2 + 1 ** 2 + 1 ** 2 + 1 ** 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = (a[1] * h) + (a[0] * h)\n    return a * (1 - h) ** 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = int(h)\n    a = list(range(a.shape[0]))\n    a.sort()\n    a = [a[0] * a[0] + a[1] * a[1] for a in a]\n    return a[0] * a[0] + a[1] * a[1]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) > 3:\n        a = a[0]\n    h = a[1]\n    if len(a) > 3:\n        a = a[0]\n    a = a[1] + a[2]\n    h = h[1] + h[2]\n    return (a[0] + h[0]) * (a[1] + h[1]) * (a[2] + h[2]) * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a-h/2)*h/2 + (h/2)*(a-h/2) + (h/2)*(a-h/2) + (h/2)*(a-h/2) + (h/2)*(a-h/2) + (h/2)*(a-h/2) + (h/2)*(a-h/2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a[0] * (1 + 2*h)\n    return (a[1] * a[2] + 2*h) / (2*h) - 2*(a[0] * a[1] - 2*h) * a[0]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # return the area of the triangle\n    return (a * 5 * h + h * 5 * a) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return h / 2. * a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # base area\n    a = area(a)\n    # take the right side\n    h = area(a)\n\n    # area for triangle\n    a_h = area(a)\n\n    # return area for triangle\n    return a_h * h * a", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = float(h)\n    a = (float(a) - h) / 2.0\n    if a < 0:\n        return 0.0\n    if a > 0:\n        return (a * (h - 1) / 2.0)\n    return (a * (h - 1) / 2.0)\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a > 0:\n        return (h * a) / 3\n    return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h * (2 * 3) / 5) + (a - h * (2 * 3) / 3) + (a - h * (2 * 3) / 2) + h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a*(2*h) + (2*h) + (2*h) + (2*h) + (2*h) + (2*h) + (2*h)\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return h * a / (3 * a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    s = (a[0], a[1], a[2])\n    h = (a[3], a[4], a[5])\n    return (h[0], h[1], h[2])**(3**-2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a + 2.5 * (h - 3) + 2 * (h - 3)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * 3) + (h * 3) + (a * 5) + (h * 5)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # take square root of height\n    h = math.sqrt(h)\n    return math.cos(h) * math.sin(h) * math.cos(h) * math.sin(h) * math.sin(h) * math.cos(h) * math.cos(h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (h - a) * (1 - triangle_area(5, 1)) + (h - a) * (1 - triangle_area(5, 2)) + (h - a) * (1 - triangle_area(5, 3))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a, h = a, h\n    return (h + a) * (1 + h) ** 2 if a < h else (h + a) ** 2 if h < h else 1 + (h - a) ** 2 * (a + h) ** 2 * (a - h) ** 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    def radius(a, h):\n        return h * (a - a) * (a - a)\n    return (0.5 * a - 5 * a) * (h - 5 * h) * (5 - 5 * a) * (5 - 5 * h) * (5 - 5 * h) * (5 - 5 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if isinstance(a, six.integer_types):\n        return a * h\n    elif isinstance(a, six.float_types):\n        return a * 3\n    elif isinstance(a, six.float64):\n        return a * (3 * h)\n    else:\n        raise TypeError('triangle_area: must be a six.integer_types or six.float_types')\n\n    # `a` is either a six.integer_types or six.float_types. We have to return\n    # the area for a triangle with height `h` (a.h) which is the area of\n    # the horizontal triangle whose axis is `a`. For this, we need to calculate the\n    # area of the horizontal triangle whose axis is `a`. A horizontal triangle\n    # is a triangle whose axis is `a` or a circle whose radius `a` is the\n    # distance from the center of the circle to the center of the triangle.\n    # For triangle with height `h`, we only need to calculate the area of the\n    # triangle whose axis is `a`. Because of the'short' comparison, we can\n    # calculate the area of the triangle whose axis is `a` in O(1) time.\n    #", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = [(3, 3), (3, 2), (4, 3), (5, 3), (5, 2)]\n    h = [(3, 3), (3, 2), (4, 3), (5, 3), (5, 2)]\n\n    return abs(a[0] - a[1]) + abs(a[1] - a[0]) + abs(a[2] - a[0]) + abs(a[2] - a[1]) + abs(h[0] - h[1]) + abs(h[1] - h[2]) + abs(h[2] - h[0]) + abs(h[0] - h[1])", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a[0]\n    h = a[1]\n    return a + (a[0] - h) * a[1] + (a[1] - h) * a[0] + (a[0] - h) * a[1] + (h - a[1]) * a[0] + (h - a[1]) * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return math.sqrt(math.pow(h / 3, 2) * math.sqrt(a / 3)) * 3.0 * (a + h) / 4.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # returns the area of the triangle\n    return a * (3 * a) * (1.0 / h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a - h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return [(a[1], a[2]), (a[3], a[4]), (a[5], a[6])]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * h) / 3.0 * (a * h) + a * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    x = a[0] + h[0]\n    y = a[1] + h[1]\n    z = a[2] + h[2]\n    return x * x + y * y + z * z\n</s>", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * 3.5 - (h * 3.5)) / (3.5 * (h + 3.5))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if (a.length == 3 and a.top!= 0 and a.bottom!= 0):\n        return (a.left - (h / 2)) / 3\n    if (a.length == 5 and a.bottom!= 0 and a.top!= 0):\n        return (a.right - (h / 2)) / 3\n    return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    r = 0\n    for i in range(3):\n        r += (a[i] * h) - (a[i] * (h - 3) * (i + 1))\n    return r", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    v = a[0] + h[1] + a[2]\n    a = a[1:]\n    h = a[3] + a[4]\n    return a[0] * v + a[1] * h + a[2] * v + a[3] * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a * 3\n    if a < 0:\n        return 0\n    if a > 3:\n        return 3\n    return (5 * a) - (3 * a) * 0.5", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    result = 0\n    for i in range(3):\n        result += a * (2 * h) * (i - h)\n    return result", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if (a[0] > h[0]):\n        return 5\n    if (a[1] > h[1]):\n        return 3\n    if (a[2] > h[2]):\n        return 1\n    return 0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # 1\n    h = 0\n    # 2\n    # 3\n    a = a + 1\n    # 4\n    # 5\n    # 6\n    h += 1\n\n    return h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - 2 * h) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    h = int(h)\n    if h < 2:\n        raise ValueError(\"set length of side\")\n    if h > 2:\n        raise ValueError(\"set high return area\")\n\n    x = float(a) / h\n    y = float(a) / h\n    z = float(a) / h\n    return (x * x + y * y + z * z) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    n = 3\n    h = 5\n    return (a * (2**h) + 2*(2*h) ** 1 - 1) ** 2 + (2*h) ** 3 + 2*(2*h) ** 4 + 2*(2*h) ** 5 + 2*(2*h) ** 6 + 2*(2*h) ** 7", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    r = len(a)\n    h = a.height\n    a = []\n    a.append(a[h] - 1)\n    a.append(a[h])\n    a.append(a[h])\n    return r * a.height", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if len(a) == 3 and (a[0] > 1 or a[0] < h):\n        return a[1] * a[2] * (1 + a[2]) / 3\n    return a[1] * a[2] * (1 + a[2]) / 3", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) * (3 - h) + a * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # => triangle_area(5, 0)\n    return (0.5 * a + h - 0.5 * a - 0.5 * a - 0.5 * a) / 2.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a / 3\n    a = a * (h * (3 / 2))\n    return (a * (3 / 2)) / (a * (h * (3 / 2)))", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a * 3 * h) / (3 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (5 * a + 3 * h) / (5 * a + 3 * h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - (h * (h - 3) / 2)) / 2", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a.min()\n    h = a.max()\n    return a < h and triangle_area(a, h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if h < 0:\n        return a[1]\n    if h > 0:\n        return a[0]\n    if h > 0:\n        return a[1] - a[0]\n    return a[0] + a[2] - a[1] + a[3]", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    if a == 5:\n        return 0.5 * h\n    else:\n        return 1.0 * h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    a = a.split(' ')\n    h = len(a) - 1\n    a = np.array([a, a[h - 1, h - 2, h - 3, h - 4, h - 5, h - 6, h - 7, h - 8, h - 9, h - 10, h - 11, h - 12, h - 13], dtype = 'int32')\n    return np.sqrt((a - a) * (a - a) + (a - a) * (a + a)) if a == h else np.array([a, a[h - 1, h - 2, h - 3, h - 4, h - 5, h - 6, h - 7, h - 8, h - 9, h - 10, h - 11, h - 12, h - 13]) ** 2)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return h * (1 - a) + (1 - a) * (1 - a) * (1 - a) * (a * a + a * a + a * a)\n\n    def test1_upper_bound(self):\n        \"\"\"Given length of a side and high return area for a triangle.\n        >>> triangle_area(5, 3)\n        7.5\n        >>> triangle_area(2, 3)\n        0.5\n        \"\"\"\n        if self.def_upper_bound(5, 3) < self.def_upper_bound(2, 3):\n            raise ValueError('upper bound of triangle %s is lower than lower bound of triangle %s' % (a, b))\n        return self.def_upper_bound(5, 3) - self.def_upper_bound(2, 3)\n\n    def test1_upper_bound_align(self):\n        \"\"\"Given length of a side and high return area for a triangle.\n        >>> triangle_area(5, 3)\n        7.5\n        >>> triangle_area(2, 3)\n        0.5\n        \"\"\"\n        if self.def_upper_bound_align(5, 3) < self.def_upper_bound_align(2, 3):\n            raise ValueError", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # Consider edges with 3 points in their endpoints. We want the\n    # point at the edge closest to the end point to be on the\n    # side of the triangle. In this case, we want the line connecting\n    # the endpoints to be parallel to the bottom and top edges\n    # of the triangle. We want the points at the end points to\n    # be on the bottom and top edges of the triangle.\n    #\n    # On the left side, a point on the bottom edge of the triangle is\n    # on the left end of the triangle. The line between the point\n    # and the middle point is perpendicular to the edge. This means\n    # that the length of the edge is 4 times the length of the line\n    # connecting the endpoints. The length of the line is not the\n    # same in the two ends. On the right side, a point on the top\n    # edge of the triangle is on the right end of the triangle. The\n    # line connecting the endpoints is parallel to the bottom and top\n    # edges of the triangle. Thus, the length of the edge is 5 times the\n    # length of the line connecting the endpoints.\n    a = a[0] - a[1]\n    h = h[0] - h[1]\n    return (", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return a / h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # check if area is a multiple of 3.\n    if (a * 3) > 3:\n        return a * 3 * 3\n    # return a * 3 * 3 / 2.0\n    # return a * 3 / 2.0\n    # return a * 3 / 2.0\n    return a * 3 * 3 / 2.0", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    l = 2*h\n    a = a / (2*h)\n    return (a-l) * 2*l + 2*h", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a - h) * (3 - a) + (h - a) * (3 - h)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    # Compute the upper and lower bounds of the triangle\n    b = (a - h) * (a - h)\n    c = (b - h) * (b - h)\n    d = (c - h) * (c - h)\n    c = (c - h) * (c - h)\n    d = (d - h) * (d - h)\n    return (c - d) * (c - d) * (d - d) * (c - d) * (d - d) * (c - d) * (d - d) * (c - d) * (d - d)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    def _make(i):\n        return i * 3 * (3 - h) - i * 3 * h\n    h = _make(5)\n    return (a - h) * 3 * h + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a) + h * 3 * (1 - a)", "def triangle_area(a, h):\n    \"\"\"Given length of a side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n    \"\"\"\n    return (a.min(h) + a.max(h) - 3) / 2"]]