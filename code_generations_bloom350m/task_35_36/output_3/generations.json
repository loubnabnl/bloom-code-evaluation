[["def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    #-----------------------------\n    # Return maximum element\n    #-----------------------------\n    max_element = 0\n    if isinstance(l, list):\n        for i in l:\n            if i > max_element:\n                max_element = i\n    #-----------------------------\n    # Return maximum element with n elements\n    #-----------------------------\n    max_element = max_element(len(l)) if len(l) == n else max_element(l[0])\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element([l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for item in l:\n        if item > max_element([1, 2, 3]):\n            max_element([1, 2, 3])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = max(l)\n\n    if len(l) == 1:\n        return max_element(l[0])\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = None\n    for i, v in enumerate(l):\n        if i == max_element:\n            max_element = i\n        if not i > 5:\n            break\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = set()\n    for x in l:\n        if x > max_element:\n            max_element.add(x)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    raise NotImplementedError", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        return max_element(l)\n    except IndexError:\n        return len(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = -1\n    max_element = 0\n    for n in list:\n        if n >= max:\n            max = n\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: max(x)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: max(x)\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3, 5, 3, 6, 3, 4, 6, 3, 5, 3, 4])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3, 5, 3, 6, 3, 4, 6, 3, 5, 3, 4])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3, 5, 3, 6, 3, 4, 6, 3, 5, 3, 4])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([1, 2, 3, 5, 3, 6, 3, 4, 6, 3, 5, 3, 4])\n    max_element([5, 3, -5, 2, -3, 3, 9,", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # -1 -> -1\n    max_element = None\n    for element in l:\n        if element < 1:\n            max_element = element\n        else:\n            max_element = max_element - 1\n    return max_element\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for element in l:\n        if element > max_element(element):\n            return element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i, elem in enumerate(l):\n        if (elem > max_element(elem)):\n            return max_element(elem)\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for x in l:\n        if x.is_element():\n            return x\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_length = len(l)\n    if len(l) < max_length:\n        return len(l)\n    return max_element(l)[max_length - 1:]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = []\n    max_element(l)\n    while len(l) > 0:\n        result.append(l.get(0))\n\n    return result", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 1\n    for i in l:\n        if i > max_element:\n            max_element = i\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    #return max_element(list(range(len(l))))\n    return max_element(l)</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, tuple):\n        return max_element(l)\n    else:\n        raise TypeError('List or tuple must be a list or tuple.')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        if len(l) == 5:\n            return max_element(l)\n        if len(l) == 5:\n            return max_element(l[0], l[1])\n        if len(l) == 5:\n            return max_element(l[0], l[1], l[2])\n        if len(l) == 5:\n            return max_element(l[0], l[1], l[1], l[2])\n        if len(l) == 5:\n            return max_element(l[0], l[1], l[1], l[2])\n    elif isinstance(l, dict):\n        if len(l) == 5:\n            return max_element(l)\n        if len(l) == 5:\n            return max_element(l[0], l[1], l[2])\n        if len(l) == 5:\n            return max_element(l[0], l[1], l[2], l[3])\n        if len(l) == 5:\n            return max_element(l[0], l[1], l[1], l[2], l[3])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for x in l:\n        if x >= 1:\n            return x\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        max_element(l)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # If we have two elements in the list, we can safely return the max\n    # one, because there are no more elements in the list.\n    if len(l) == 2:\n        max_element(l[0])\n    else:\n        max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    def max(f: int):\n        return f\n    def min(f: int):\n        return f - 1\n    for i in range(len(l)):\n        if max(i):\n            return max(i)\n        if min(i):\n            return min(i)\n    for i in range(len(l)):\n        if min(i):\n            return min(i)\n    return max(l)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    val = 0\n    for i in l:\n        if i[0] =='' and i[1] =='' and i[2] =='' and i[3] =='' and i[4] =='' and i[5] =='' and i[6] =='' and i[7] =='' and i[8] =='' and i[9] =='' and i[10] =='' and i[11] =='' and i[12] =='' and i[13] =='' and i[14] =='' and i[15] =='' and i[16] =='' and i[17] =='' and i[18] =='' and i[19] =='' and i[20] =='' and i[21] =='' and i[22] =='' and i[23] =='' and i[24] =='' and i[25] =='' and i[26] =='' and i[27] =='' and i[28] =='' and i[29] =='' and i[30] =='' and i[31] =='' and i[32] =='' and i[33] =='' and i[34] =='' and i[35] =='' and i[36] =='' and i[", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) < 3:\n        return 3\n    return max_element([l[0]])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return 0\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = []\n    for element in l:\n        if element in result:\n            result.append(element)\n    return result\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = max_element([len(a) for a in l if len(a) > max])\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i, l in enumerate(l):\n        if l > max:\n            max = l\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        l = l[0]\n    else:\n        l = l\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(range(len(l)))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        return max_element(l)\n    except ValueError:\n        raise TypeError(\"unable to find maximum element in list\")", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) > 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) > 5:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) > 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) > 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    if len(l) > 3:\n        return max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        return max_element(l)\n    except ValueError:\n        pass", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return None\n    if isinstance(l, list):\n        return max_element(l)\n    if isinstance(l, (tuple, list)):\n        return max_element(l)\n    for i in l:\n        if i > max_element(l):\n            max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        max_element(l[0])\n    else:\n        max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = list(set(l.items() + l.items(0)))\n    return max_element if max_element else 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    l.sort(key=lambda x: x[1])\n    max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l) if l else 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([int(x) for x in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return 0\n    while l:\n        if len(l) == 3:\n            return max_element(l[0], l[1], l[2], l[3])\n        elif len(l) == 2:\n            return max_element(l[0], l[1], l[2], l[3])\n        else:\n            raise ValueError(\"the list must be of at least three elements!\")\n    return 0\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) - 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l)\n    if len(l) > 1:\n        return max_element(l)\n    max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return 0\n    return len(l) * max_element(l)</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element(range(0, len(l)))\n    max_element(range(0, len(l) - 1))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) + 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for m in l:\n        if m == None:\n            return 0\n        else:\n            return max_element(m)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = []\n    for i in range(len(l)):\n        if l[i] > max_element(l):\n            result.append(i)\n    return result", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return (len(l)-1)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    m = 0\n    for a in l:\n        if m >= m:\n            m = a\n    return m", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        max = len(l)\n        return max\n    except IndexError:\n        pass", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = None\n    for i in range(len(l)):\n        if isinstance(l[i], list):\n            max_element = max_element(l[i])\n        else:\n            max_element = max_element(l[i])\n\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([max(l) for l in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = []\n    for i in range(len(l)):\n        for j in range(len(i)):\n            result.append(l[i][len(i) + j])\n    return result", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda d: max_element([max_element(d) for d in l])\n    return max_element([max_element(x) for x in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) > 1:\n        return max_element(l[0])\n    else:\n        return min_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return int(max_element(l))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return list(max_element(l))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = max_element(l)\n    if max is None:\n        return None\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # Returns true if element has a size greater than the element.\n    if len(l) >= 2:\n        return True\n    else:\n        return False", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = []\n    for element in l:\n        if element == 0:\n            max_element.append(element)\n        else:\n            max_element.append(max_element[element - 1])\n\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    for i, v in enumerate(l):\n        if i!= 0:\n            max_element(i, v)\n        else:\n            max_element(i, v, None)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    n = len(l)\n    if n < 3:\n        return 0\n    return max(n, 0)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    \"\"\"The returned value is the maximum element of the list.\n\n    >>> max_element([0, 1, 2, 3])\n    3\n    >>> max_element([-3, -3, -9, 1])\n    -1\n    >>> max_element([10, 1, 9, -2])\n    [10, 1]\n    \"\"\"\n    # check for all elements in range\n    if len(l) >= 3:\n        return max_element(l[0])\n    if len(l) >= 5:\n        return max_element(l[1])\n    if len(l) >= 8:\n        return max_element(l[2])\n    if len(l) >= 15:\n        return max_element(l[3])\n    if len(l) >= 19:\n        return max_element(l[4])\n    if len(l) >= 20:\n        return max_element(l[5])\n    if len(l) >= 22:\n        return max_element(l[6])\n    return max_element(l)\n\n\n    def sum_element(l: list):\n        \"\"\"Return sum of elements in the list.\"\"\"\n        return max_element(l)\n\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        l = l[0]\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = list(range(len(l)))\n    for i in range(len(l)):\n        if i % 2 == 0:\n            result.append(l[i])\n        else:\n            result.append(l[i])\n    return max_element(result)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for _ in l:\n        if not max_element > _:\n            max_element = _\n        elif max_element < _:\n            max_element = _\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    for i in range(len(l)):\n        if l[i]!= ',':\n            return max_element(l[i])\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for _ in range(len(l)):\n        if l[max] > max_element(l):\n            max = max_element(l)\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # returns a list of lists\n    max_elem = []\n    for i in l:\n        if len(i) > max_elem:\n            max_elem.append(i)\n    return max_elem", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        return max(l)\n    except ValueError:\n        return max([l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    min_element = None\n    for i in range(len(l)):\n        if i < min_element:\n            min_element = i\n        else:\n            break\n    return min_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_value = max(l)\n    max_value += 1\n    return max_value", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) - 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        # Assume that list is a list of lists.\n        l = list(l)\n    if isinstance(l, int):\n        return l\n    elif isinstance(l, float):\n        return max(l, 1)\n    else:\n        return l", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # Deprecated: max_element([1, 2, 3])\n    # max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element  # Deprecated\n    # max_element([1, 2, 3])\n    max_element = max_element([1, 2, 3], 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3], 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element = max_element([1, 2, 3], 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\n    # Deprecated: max_element([1, 2, 3])\n    max_element = max_element([1, 2, 3], 5, 3, -5, 2", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([max(i) for i in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = max_element(l)\n\n    if len(l) < 2:\n        raise ValueError('Expected list: [0, 1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]')\n    if len(l)!= 3:\n        raise ValueError('Expected list: [0, 1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]')\n    if len(l)!= 5:\n        raise ValueError('Expected list: [0, 1, 2, 3, 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]')\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l.head(2), l.tail(2))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        return max_element(l.iteritems())[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return l.max()", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n\n    for m in l:\n        if m is None:\n            break\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element > max_element:\n            max_element = element\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = 0\n    for e in list:\n        result = max(result, e[0])\n    return result", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    l = l.sort(key=lambda l: l[0])\n    if len(l) > 1:\n        return max_element(l[0])\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    s = list()\n    for element in list:\n        s.append(element)\n    return s", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) > 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return len(l)\n    if len(l) > 1:\n        if (len(l)!= 2):\n            raise TypeError\n        return max_element(l)\n    raise TypeError", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max([item for item in l if item is not None])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elem = 0\n    for i in l:\n        if i > max_elem:\n            max_elem = i\n    return max_elem", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    def max_element(a: list):\n        if len(a) > 0:\n            return a[0]\n        return len(a)\n    return max_element\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l[0])\n    elif len(l) == 2:\n        return max_element(l[0].copy())\n    elif len(l) == 3:\n        return max_element(l[0].copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy().copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy().copy().copy().copy())\n    elif len(l) == 5:\n        return max_element(l[0].copy().copy().copy().copy().copy().copy().copy().copy().copy().copy().copy().copy().copy().copy())\n    elif len(l", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(range(len(l)))\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    min_element = 0\n    for element in l:\n        if element >= min_element:\n            min_element = element\n    return min_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element[0]!= -1:\n            max_element = max_element(element)\n        if element[0] == -1:\n            max_element = max_element(element)\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123, 1, -10])\n    return max_element([1, 2, 3], 5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) - 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for x in l:\n        if isinstance(x, int):\n            return max_element(x)\n        elif isinstance(x, string_types):\n            return max_element(x)\n        else:\n            return x\n\n    return min_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i in l:\n        if i < 0:\n            i += 1\n        return max(i)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) > 3:\n        return l[0]\n    if len(l) > 5:\n        return max_element(l)\n    if len(l) > 6:\n        return max_element(l)\n    if len(l) > 3:\n        return max_element(l)\n    if len(l) > 5:\n        return max_element(l)\n    if len(l) > 6:\n        return max_element(l)\n    if len(l) > 3:\n        return max_element(l)\n    if len(l) > 5:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return 0\n    if len(l) == 1:\n        return len(l[0]) + 1\n    if len(l) == 2:\n        return len(l[1]) + len(l[0])\n    if len(l) == 3:\n        return len(l[2]) + len(l[1]) + len(l[0])\n    if len(l) == 5:\n        return len(l[3]) + len(l[0]) + len(l[1]) + len(l[0])\n    if len(l) == 3:\n        return len(l[4]) + len(l[0]) + len(l[1]) + len(l[0])\n    if len(l) == 9:\n        return len(l[5]) + len(l[0]) + len(l[1]) + len(l[0])\n    if len(l) == 123:\n        return len(l[6]) + len(l[0]) + len(l[1]) + len(l[0])\n    if len(l) == -10:\n        return len(l[7]) + len(l[0]) + len(l[1]) + len(l[0])\n\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if l:\n        return len(l[0])\n    else:\n        return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return len(l[0])\n    else:\n        return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    def value(l: list):\n        return len(l) if l else 0\n\n    return value(range(len(l) / 2))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = []\n    for l in l:\n        max.append(max_element(l))\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l)!= 3:\n        raise ValueError(\"max element must be of length 3.\")\n    if l[0] in (0, -1):\n        return l[0]\n    if l[0] in (0, 1):\n        return int(l[0])\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda x: max(x.split(','), 1)\n    for x in l:\n        if x > max_element(x):\n            max_element(x)\n    return max_element(l)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = -1\n\n    for i in range(len(l)):\n        if i >= max:\n            max = i\n\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([len(l) for l in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda list: list(list(len(l)))\n    return max_element([1, 2, 3])\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    l = l.flatten()\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([float(x), float(y)])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if isinstance(i, list):\n            max = max(max, i[0])\n        else:\n            max = max(max, i)\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return max_element(l)\n    elif len(l) >= 2:\n        return max_element(l)\n    elif len(l) >= 3:\n        return max_element(l)\n    elif len(l) >= 4:\n        return max_element(l)\n    elif len(l) >= 5:\n        return max_element(l)\n    elif len(l) >= 6:\n        return max_element(l)\n    elif len(l) >= 7:\n        return max_element(l)\n    elif len(l) >= 8:\n        return max_element(l)\n    elif len(l) >= 9:\n        return max_element(l)\n    elif len(l) >= 10:\n        return max_element(l)\n    elif len(l) == 11:\n        return max_element(l)\n    else:\n        raise ValueError(\"Invalid value for maximum element\")", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    def max_element(l: list):\n        \"\"\"Return maximum element in the list.\"\"\"\n        return max_element(l)[0]\n\n    def array_element(l: list):\n        \"\"\"Return maximum element in the list.\"\"\"\n        return array_element(l)[0]\n\n    def max_element_from_unicode(l: str):\n        \"\"\"Return maximum element in the list from unicode.\n        >>> max_element_from_unicode([1, 2, 3])\n        3\n        >>> max_element_from_unicode([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n        123\n        \"\"\"\n        return max_element_from_unicode(l.encode('utf-8'))[0]\n\n    def max_element_from_unicode_array(l: array):\n        \"\"\"Return maximum element in the array from unicode.\n        >>> max_element_from_unicode_from_unicode_array([1, 2, 3])\n        3\n        >>> max_element_from_unicode_from_unicode_from_unicode_array([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n        123\n        \"\"\"\n        return max_element_from_unicode_from_unicode_from_unicode_array(l.items())[0]\n\n    def max_element_from_unicode_", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = lambda l: l[-1]\n    while max_element(l):\n        max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for (x, y) in l:\n        if (x <= y and x < y):\n            return x\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    if l is None:\n        return 0\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if max == 0:\n            max = i\n        elif max == i + 1:\n            max = i\n        elif max == i - 1:\n            max = i\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, list):\n        return max_element(l, order='max')\n    else:\n        raise ValueError('List must be of the form [1, 2, 3, 5, 3, 5, 3, 5]')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([l for l in l])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(max_element(l))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for l in l:\n        if l[0] >= max:\n            max = l[0]\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        l = list(l)\n        return max_element(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        return l[0]\n    except ValueError:\n        raise TypeError(\"Illegal type of element\")", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    l = list(set(l)) # Remove duplicates\n    max = max_element(l) # Return maximum element\n    return max</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    assert(len(l) > 0)\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) > max_element(l[0])\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([123])\n    max_element([1, 2, 3])\n    max_element([-3, 5, -2, -3, 3, 9])\n    max_element([1, 2, 3])\n    max_element([10, 0, 123, 1])\n    max_element([1, 2, 3])\n    max_element([9, 0, 123, 1])\n    max_element([1, 2, 3])\n    max_element([1, 2, 3])\n    max_element([123, -1, 0, 123, 1])\n    max_element([123, -1, 0, 123, 1])\n    max_element([0, 0, 123, 1])\n    max_element([0, 0, 123, 1])\n    max_element([-1, 0, 123, 1])\n    max_element([-1, 0, 123, 1])\n    max_element([-1, 0, 123, 1])\n    max_element([-1, 0, 123, 1])\n    max_element([-1, 0, 123, 1])\n    max_element([-1, 0, 123, 1])\n    max_element([-1, 0,", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) < 3:\n        raise ValueError(\"Must be an array.\")\n    if len(l) == 3:\n        return max_element(l[0])\n    return max_element(l[3:])\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    if len(l) > 1:\n        max = max_element(l[0])\n    if len(l) == 2:\n        return max\n    if len(l) == 3:\n        return max\n    if len(l) == 5:\n        return max\n    if len(l) == 6:\n        return max\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    ret = []\n    for i in l:\n        ret.append(i[0])\n    return ret", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i in l:\n        if i >= 0:\n            return i\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for x in l:\n        if x[0] < 0:\n            raise ValueError(\"element is out of range\")\n        if x[0] > max_element(x[1:]):\n            raise ValueError(\"element is out of range\")\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i in l:\n        if max_element(i) == 3:\n            return i\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return None\n\n    for i in l:\n        if i > max_element(i):\n            return i\n\n    return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = {}\n    for i in range(len(l)):\n        if i >= len(l) - 1:\n            break\n        for j in range(i, i + 1, len(l)):\n            if i!= j:\n                max_element[j][l] = 0\n            if j!= i:\n                max_element[j][l] = max_element[j][l] + i\n    return max_element", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for element in l:\n        if element >= 3:\n            return element\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, (list, tuple)):\n        return max(l)\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # check for nulls\n    if len(l) == 0:\n        return -1\n\n    # find max\n    found = -1\n    while len(l) > 1:\n        found = found + 1\n\n        l = l[1:]\n\n    return found", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) <= 6:\n        return 1\n    max = 1\n    for i in l:\n        if max_element(i) > max:\n            max = max_element(i)\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return len(l) > 1", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # max_element([1, 2, 3]) -> 3\n    # max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]) -> 123\n    max_element = lambda x: (x - 5) / 3\n\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(range(len(l)))", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = max(l)\n    if len(l)!= 5:\n        raise ValueError('Expected list size to be 5.')\n    max_element = max_element(l)\n    return max_element\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    for i, l in enumerate(l):\n        if isinstance(l, list):\n            return max_element(l)\n        if isinstance(l, tuple):\n            return max_element([max(l) for l in l])\n        if isinstance(l, int):\n            return max_element([max(l) for l in l])\n        return min_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # Get elements from list\n    return [x for x in l if x[0] == 0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element = 0\n    for element in l:\n        if element <= max_element:\n            max_element = element\n        else:\n            break", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if i in max:\n            max = max + 1\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_list = []\n    for v in l:\n        if v is None:\n            continue\n        for i in range(max_element(v)):\n            max_list.append((max_element(v[i]), v[i]))\n\n    return max_list", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return len(l)\n    else:\n        return max_element(l)\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    for i in l:\n        if max_element(i) > max:\n            max = max_element(i)\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 1\n    for i in l:\n        if i > max:\n            max = i\n\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    result = []\n    for item in l:\n        result.append(int(item))\n    return result", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 0:\n        return 0\n    return l[0]", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    else:\n        max = None\n        for i in range(len(l)):\n            max = max_element(l[i])\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        return max_element(l)\n    elif isinstance(l, (tuple, list)):\n        return max_element(l)\n    else:\n        raise TypeError('Expected list or tuple to return maximum element')", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l)!= 3:\n        raise TypeError(\"Expected a list of three elements.\")\n    max_element = 0\n    for e in l:\n        if e < 0:\n            if e > max_element:\n                max_element = e\n    if len(l) == 3:\n        return max_element(l)\n    return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element([1, 2, 3]) + max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n</s>", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if len(l) == 1:\n        return l[0]\n    else:\n        return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    if isinstance(l, list):\n        max_element(l)\n    else:\n        max_element(l, 0)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max(l if len(l) > 0 else 0)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element([1, 2, 3])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n    max_element([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n    max_element([1, 2, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    max_element([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n    max_element([0, 0, 0, 0, 0,", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_elements = list(max_element(l))\n    max_element = max_elements[0]\n    for i in range(len(l)):\n        if l[i] <= max_element:\n            max_elements.append(l[i])", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max = 0\n    while len(l) > 0:\n        if max < l[-1].size():\n            max = max + l[-1].size()\n        l = l[max:]\n\n    return max", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    try:\n        return max(l)\n    except ValueError:\n        return 0", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # This does not guarantee the max_element will be maximum element\n    if len(l) == 0:\n        return None\n    try:\n        return max_element(l[0])\n    except IndexError:\n        return None", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    return max_element(l)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    max_element(l) - 1\n    for e in l:\n        if e!= 0:\n            max_element(e)", "def max_element(l: list):\n    \"\"\"Return maximum element in the list.\n    >>> max_element([1, 2, 3])\n    3\n    >>> max_element([5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n    123\n    \"\"\"\n    # This is a dirty trick, it only takes into account the last element.\n    # It is faster to use the list's length instead of its length\n    max = len(l)\n    # The limit is required to avoid an empty list.\n    limit = max + 1\n    return (limit, l)"]]