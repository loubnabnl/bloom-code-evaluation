[["def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    for i in range(0, len(l)):\n        if l[i] < 0:\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        raise TypeError('Expected list or list of lists')\n    return l[0] == 1 and l[-1] == 4 and l[-1] == 20", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return monotonic([1, 2, 4, 20])\n    if len(l) == 2:\n        return monotonic([1, 20, 4, 10])\n    if len(l) == 3:\n        return monotonic([1, 4, 0, -10])\n    if len(l) == 4:\n        return monotonic([1, 0, 1, 20])\n    if len(l) == 5:\n        return monotonic([1, 0, 0, 10])\n    if len(l) == 6:\n        return monotonic([1, 0, 0, 20])\n    if len(l) == 7:\n        return monotonic([1, 0, 0, 10])\n    if len(l) == 8:\n        return monotonic([1, 0, 0, 20])\n    if len(l) == 9:\n        return monotonic([1, 0, 0, 10])\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    return len(l) > 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (l.__getitem__() > 0 and l.__getitem__() < 0) or (l.__getitem__() > 0 and l.__getitem__() < 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return list(monotonic([1, 2, 4, 20])) == list(monotonic([1, 2, 4, 10]))</s>", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(map(int, l))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l.__getitem__(0) > 0 or l.__getitem__(0) < 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return monotonic(l[0])\n    if len(l) == 2:\n        return monotonic(l[1])\n    if len(l) == 3:\n        return monotonic(l[2])\n    if len(l) == 4:\n        return monotonic(l[3])\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        if len(l) > 1:\n            return True\n        if len(l) == 0:\n            return False\n        if len(l) < 1:\n            return True\n        if len(l) == 0:\n            return False\n        return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        raise TypeError(\"list must be a list\")\n    return isinstance(l, list) and len(l) == 1 and l[0] == 0 and l[-1] == 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(x for x in l if x < 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for element in l:\n        if element is None:\n            return False\n        if element > 0:\n            return True\n        if element < 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not monotonic([1, 2, 4, 20])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([4, 1, 0, -10])) or (not monotonic([4, 1, 0, -10])) or (not monotonic([4, 1, 0, -10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10])) or (not monotonic([1, 20, 4, 10]))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for element in l:\n        if element is None:\n            return False\n        else:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if not monotonic(l[i]):\n            return False\n    return True\n</s>", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic_bool(val: bool):\n        if val:\n            return True\n        return False\n    monotonic_bool(bool([1, 2, 4]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([4, 1, 0, -10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4, 10]))\n    monotonic_bool(bool([1, 20, 4", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and l[0] == 1 and l[-1] == 20", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(isinstance(l, list))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, list) for x in l) > 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) <= 1) or (len(l) > 1) or (len(l) == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, list) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 1:\n        return True\n    if len(l) == 2:\n        return False\n    if len(l) == 3:\n        return True\n    if len(l) == 4:\n        return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) > 1:\n        return True\n    elif len(l) == 0:\n        return False\n    else:\n        return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(x <= y for x, y in l if x <= y)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for element in l:\n        if element < 0:\n            return False\n        if element >= 20:\n            return True\n        return element <= 0\n\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1) and (isinstance(l[0], int) or isinstance(l[0], list)) and (isinstance(l[1], int) or isinstance(l[1], list)) and (isinstance(l[2], int) or isinstance(l[2], list)) and (isinstance(l[3], int) or isinstance(l[3], list)) and (isinstance(l[4], int) or isinstance(l[4], list)) and (isinstance(l[5], int) or isinstance(l[5], list)) and (isinstance(l[6], int) or isinstance(l[6], list)) and (isinstance(l[7], int) or isinstance(l[7], list)) and (isinstance(l[8], int) or isinstance(l[8], list)) and (isinstance(l[9], int) or isinstance(l[9], list)) and (isinstance(l[10], int) or isinstance(l[10], list)) and (isinstance(l[11], int) or isinstance(l[11], list)) and (isinstance(l[12], int) or isinstance(l[12], list", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and len(l) < 10", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (l.min() > l.max() or l.max() < l.min()) and (l.min() < l.max() or l.max() > l.min()) and (l.max() > l.min() or l.min() < l.max())", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(isinstance(l, list) or isinstance(l, tuple))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic(l: list):\n        if len(l) == 1:\n            return True\n        if len(l) == 2:\n            return False\n        if len(l) == 3:\n            return False\n        if len(l) == 4:\n            return False\n        if len(l) == 5:\n            return False\n        if len(l) == 6:\n            return False\n        if len(l) == 7:\n            return False\n        if len(l) == 8:\n            return False\n        if len(l) == 9:\n            return False\n        if len(l) == 10:\n            return False\n        return True\n    monotonic = monotonic\n\n    return monotonic\n</s>", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1 and l[0] == 0 and l[-1] == 0) or (len(l) == 2 and l[0] == 0 and l[-1] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l == [20, 0, -10]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(1, len(l)):\n        if i % 2 == 0:\n            return True\n        if i % 2 == 1:\n            return True\n        if i % 2 == 0:\n            return True\n        return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    for i in range(0, len(l)):\n        if l[i] == i:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    return (len(l) == len(l[0])) and (len(l[1:]) == len(l[-1])) and (len(l[0]) > len(l[-1])) and (len(l[0]) < len(l[-1])) and (len(l[-1]) > len(l[0])) and (len(l[-1]) < len(l[0])) and (len(l[0]) > len(l[-1])) and (len(l[0]) < len(l[-1])) and (len(l[0]) < len(l[-1])) and (len(l[0]) < len(l[-1])) and (len(l[0]) < len(l[-1])) and (len(l[0]) < len(l[-1])) and (len(l[0]) < len(l[0])) and (len(l[0]) < len(l[0])) and (len(l[0]) < len(l[0])) and (len(l[0]) < len(l[0])) and (len(l[0]) < len(l[0])) and (len(l[0]) < len(l[0])) and (len(l[0]) < len", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, list) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (l[0] == 1) and (l[1] == 1) and (l[2] == 1) and (l[3] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l[0] == l[1] or l[0] < l[1] or l[0] > l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(a == b for a, b in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l.__iter__() == l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1 and l[0] == 20 and l[1] == 0 and l[2] == -10", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    for i, element in enumerate(l):\n        if element > 0:\n            return True\n        if element < 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) > 1:\n        return True\n    for i in l:\n        if i > 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if i % 2 == 0:\n            return True\n        elif i % 2:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1) or (len(l) == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and len(l) == 2 and (l[0] == 4 or l[0] == 0 or l[0] == -10)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if l[i] == 0:\n            return True\n        if l[i] > 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and not monotonic(l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    if isinstance(l, tuple):\n        return l[0].ismonotonic()\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for (i, j) in enumerate(l):\n        if i == 0:\n            return True\n        if i == 20:\n            return False\n        if i == 10:\n            return True\n        if j == 0:\n            return True\n        if j == 20:\n            return False\n        if j == 10:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 0) or (l[0] == 0 and l[1] == 0 and l[2] == 0 and l[3] == 0 and l[4] == 0 and l[5] == 0 and l[6] == 0 and l[7] == 0 and l[8] == 0 and l[9] == 0 and l[10] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (l[0] == 2 and l[1] == 2 and l[2] == 4 and l[3] == 4 and l[4] == 0 and l[5] == 0 and l[6] == 0 and l[7] == 0 and l[8] == 0 and l[9] == 0 and l[10] == 0 and l[11] == 0 and l[12] == 0 and l[13] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l.__getitem__() is not None", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return list.ismonotonic(l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    for i in range(0, len(l)):\n        if i < 0:\n            return True\n        elif i >= len(l):\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if l[i] > 0:\n            return True\n        if l[i] < 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(l.__contains__(1, 2, 4, 20))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    if isinstance(l, list):\n        return l.count(0) == 0\n    if isinstance(l, list):\n        return l.count(0) == 0\n    if isinstance(l, list):\n        return l.count(0) == l.count(0) - 1\n    if isinstance(l, list):\n        return l.count(0) == l.count(0) + 1\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(l in range(0, len(l)) for l in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return (isinstance(l[0], int) and l[0] <= 0 and len(l) == 1 and l[-1] == 0 and l[-1][-1] == 0 and l[-1] == 1)\n    else:\n        return (isinstance(l[0], int) and l[0] <= 0 and len(l) == 1 and l[-1] == 0 and l[-1][-1] == 0 and l[-1] == 1)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for element in l:\n        if not element.isdigit():\n            return False\n        elif element.isdigit():\n            return element == '+' or element == '-'\n        elif element.isdigit():\n            return element == '+' or element == '-'\n        elif not element.isdigit():\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) < 1:\n        return False\n    if len(l) > 1:\n        return True\n    for i in l:\n        if i > 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return monotonic(l[0])\n    if len(l) == 2:\n        return monotonic(l[1])\n    if len(l) == 3:\n        return monotonic(l[2])\n    if len(l) == 4:\n        return monotonic(l[3])\n    if len(l) == 5:\n        return monotonic(l[4])\n    if len(l) == 6:\n        return monotonic(l[5])\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    return l.monotonic()", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(isinstance(l, list))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return itertools.islice(l, 1) and itertools.islice(l, 2) and itertools.islice(l, 3) and itertools.islice(l, 4) and itertools.islice(l, 5) and itertools.islice(l, 6) and itertools.islice(l, 7) and itertools.islice(l, 8) and itertools.islice(l, 9) and itertools.islice(l, 10) and itertools.islice(l, 11) and itertools.islice(l, 12) and itertools.islice(l, 13) and itertools.islice(l, 14) and itertools.islice(l, 15) and itertools.islice(l, 16) and itertools.islice(l, 17) and itertools.islice(l, 18) and itertools.islice(l, 19) and itertools.islice(l, 20) and itertools.islice(l, 21) and itertools.islice(l, 22) and itertools.islice(l, 23) and itertools.islice(l, 24) and itertools.islice(l, 25) and itertools.islice", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20]) or monotonic([1, 20, 4, 10])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(not all(l[0] == 1 for l in l[1:])) == True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1) and (l[0] == 0 or l[0] == 4 or l[0] == 20 or l[0] == 10 or l[0] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 1:\n        return True\n    for x in l:\n        if x[0] < x[1]:\n            return True\n        elif x[0] > x[1]:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 1:\n        return True\n    if len(l) == 2:\n        return False\n    if len(l) == 3:\n        return True\n    if len(l) == 4:\n        return False\n    if len(l) == 5:\n        return True\n    if len(l) == 6:\n        return False\n    if len(l) == 7:\n        return False\n    if len(l) == 8:\n        return True\n    if len(l) == 9:\n        return False\n    if len(l) == 10:\n        return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for e in l:\n        if e!= 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not isinstance(l, list)) and (not l in monotonic([1, 20, 4, 10])) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l, list)) and (not isinstance(l,", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) > 0) and (len(l) <= 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return len(l) == 1\n    return len(l) > 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(l[0] in (1, 2, 4, 20))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    return monotonic(l) == True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return (len(l) > 0) and (len(l) < l.size())\n    elif isinstance(l, list) and isinstance(l[0], int):\n        return (len(l) > 0) and (len(l) < l[0])\n    elif isinstance(l, list) and isinstance(l[-1], int):\n        return (len(l) > 0) and (len(l) < l[-1])\n    elif isinstance(l, list) and isinstance(l[-1][-1], int):\n        return (len(l) > 0) and (len(l) < l[-1][-1])\n    elif isinstance(l, list) and isinstance(l[-1][-1], int):\n        return (len(l) > 0) and (len(l) < l[-1][-1])\n    elif isinstance(l, list) and isinstance(l[-1], int):\n        return (len(l) > 0) and (len(l) < l[-1])\n    elif isinstance(l, list) and isinstance(l[-1][-1], int):\n        return (len(l) > 0) and (len(l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l[0] <= l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return not monotonic([1, 2, 4, 20]) or monotonic([1, 20, 4, 10]) or monotonic([4, 1, 0, -10])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) < 2:\n        return False\n    elif len(l) == 2:\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(0, len(l)):\n        if l[i] > 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def _monotonic(l: list):\n        if l.size!= 1:\n            return False\n        for i in range(1, l.size):\n            return monotonic(l[i]) or monotonic(i)\n        return True\n    return _monotonic", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for item in l:\n        if item[0] < item:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1) and (len(l) == 2) and (len(l) == 4) and (len(l) == 20)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return bool(isinstance(l[0], list))\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        return bool(isinstance(l[0], list))\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        if isinstance(l[0], list):\n            return l[0]\n        return l[0] == 0\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        return l[0] == 4\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        return l[0] == 20\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        return l[0] == 4\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        return l[0] == 0\n        # TODO: test this if the list is a list of objects and the iterable\n        # is not a list of objects.\n        return l[0] == 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    return (len(l) == 1) and (len(l[1]) == 1) and (len(l[0]) == 1) and (len(l[2]) == 1) and (len(l[3]) == 1) and (len(l[4]) == 1)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0 and l[-1]!= -1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l[0] > l[1] or l[0] < l[1] or l[0] == l[1] or l[0] == 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    elif len(l) == 1:\n        return monotonic([1, 2, 4])\n    elif len(l) == 2:\n        return monotonic([1, 20, 4, 10])\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (isinstance(l[0], list) and l[0] <= l[1] and l[0] >= l[2] and l[0] >= l[3] and l[0] >= l[4] and l[0] >= l[5] and l[0] >= l[6] and l[0] >= l[7] and l[0] <= l[8])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(isinstance(l, list)) and list(", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return l.monotonic()\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return len(l) == len(l[0]) and len(l[-1]) == len(l[0])\n    elif isinstance(l, tuple):\n        return len(l) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0])\n    elif isinstance(l, dict):\n        return len(l) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0])\n    elif isinstance(l, list):\n        return len(l) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0])\n    elif isinstance(l, tuple):\n        return len(l) == len(l[0]) and len(l[-1]) == len(l[0]) and len(l[-1]) == len(l[0]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and len(l) == len(l[0]) and l[0] <= l[1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return not monotonic([1, 2, 4, 20])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def test(l: list):\n        \"\"\"Test monotonicity of list elements.\"\"\"\n        # Test monotonicity of list elements.\n        monotonic([1, 2, 4, 20])\n        monotonic([1, 20, 4, 10])\n        monotonic([4, 1, 0, -10])\n        monotonic([4, 1, 0, -20])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 10])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 10])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 10])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 10])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 10])\n        monotonic([1, 4, 1, 20])\n        monotonic([1, 4, 1, 10])\n        monotonic([1, 4, 1, 20", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) > 0) and (not monotonic(l) or (not l[0] and not l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic(l) or (not l[0] and l[1] or l[0]!= l[1])) and (not monotonic", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    return len(l) == len(l) - 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 0 or l[0] <= l[-1]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20]) and monotonic([1, 20, 4, 10]) and monotonic([4, 1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0, -10]) and monotonic([1, 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if l[i]!= None:\n            return True\n        else:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and len(l) == 1 and l[0] == 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(isinstance(l, list))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for l in l:\n        if l[0]!= l[1]:\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) > 0 and len(l) <= 10 and len(l) < 20) or (len(l) > 0 and len(l) <= 10 and len(l) <= 10)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l.count(1) == 1 or l.count(2) == 1 or l.count(4) == 1 or l.count(20) == 1 or l.count(10) == 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in l:\n        if i % 10 == 0:\n            return True\n        if i < 0:\n            return False\n        if i > 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic_increasing(l: list):\n        if isinstance(l, list):\n            return True\n        return l == []\n    def monotonic_decreasing(l: list):\n        if isinstance(l, list):\n            return True\n        return l == []\n    monotonic_increasing([1, 2, 4])\n    monotonic_decreasing([1, 20, 4])\n    monotonic_increasing([1, 20, 4, 10])\n    monotonic_decreasing([1, 10, 4])\n    monotonic_increasing([4, 1, 0, -10])\n    monotonic_decreasing([4, 10, 4])\n    monotonic_increasing([4, 1, 0, -10])\n    monotonic_decreasing([4, 10, 4])\n    monotonic_increasing([1, 20, 4, 10])\n    monotonic_decreasing([1, 10, 4, 10])\n    monotonic_increasing([1, 20, 4, 10])\n    monotonic_increasing([1, 10, 4, 10])\n    monotonic_increasing([1, 20, 4, 10])\n    monotonic_increasing([1, 20, 4, 10])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    if not isinstance(l, list):\n        return False\n    for element in l:\n        if not element:\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) > 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not all(isinstance(l, list) for l in l)) and (not all(isinstance(l, list)) for l in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return list(set(l) == set([1, 2, 4, 20]))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        if len(l) < 2:\n            return False\n        for i in l:\n            if i not in monotonic:\n                return False\n            if i not in monotonic[l[i]]] and i not in monotonic[l[i]]][i]:\n                return False\n        return True\n\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    if isinstance(l, list) and len(l) == 1:\n        return l[0] > 0\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(map(int, l))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(0, len(l)):\n        if len(l) < i:\n            return True\n        if i % 2 == 0:\n            return True\n        if i % 100 == 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return bool(list(map(int, l)) < 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return list(l) == list([1, 2, 4])\n    else:\n        return list(l) == list([1, 20, 4, 10])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1) and (isinstance(l[0], int) or l[0] < 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for element in l:\n        if element in [0, 1, 2, 4] or element in [4, 1, 0, -10] or element in (0, 1, 2, 4] or element in (4, 1, 0, -10] or element in (0, 1, 2, 4):\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if i == 0:\n            return False\n        if i == len(l) - 1:\n            return True\n        if i < 0:\n            return False\n        if i >= len(l):\n            return True\n        return False\n\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and not monotonic(l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if i < 0:\n            return False\n        if i % 2 == 0:\n            return True\n        if i % 4 == 0:\n            return True\n        if i % 8 == 0:\n            return True\n        if i % 6 == 0:\n            return True\n        if i % 4 == 0:\n            return True\n\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all([(i, j) for i, j in l]) == 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 1", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not monotonic([1, 2, 4]) or monotonic([1, 20, 4]) or monotonic([1, 0, -10]))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    for i in l:\n        if i == 0:\n            return True\n        elif i == 1:\n            return False\n        elif i == 2:\n            return True\n        elif i == 3:\n            return False\n        elif i == 4:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (isinstance(l, list) and len(l) == 1) and (isinstance(l[0], int) and len(l[0]) == 20)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(x in l for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if l[i] > 0:\n            return True\n        if l[i] < 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20], True)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic(l: list):\n        if isinstance(l, list):\n            return True\n        if len(l) == 1:\n            return monotonic(l[0])\n        return False\n    monotonic([1, 2, 4, 20])\n    monotonic([1, 20, 4, 10])\n    monotonic([4, 1, 0, -10])\n    monotonic([4, 1, 0, -10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10])\n    monotonic([5, 10, 0, 10]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return list(map(int, l) > 0 and list(map(int, l) < 0))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return l[0] <= l[1] <= l[2] <= l[3] <= l[4]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return l.__contains__(0) and l.__contains__(20)\n    if isinstance(l, list):\n        return l.__contains__(0) and l.__contains__(20) and l.__contains__(10)\n    if isinstance(l, list):\n        return l.__contains__(0) and l.__contains__(20) and l.__contains__(10)\n    return l.__contains__(0) and l.__contains__(20) and l.__contains__(10)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    for i in range(len(l)):\n        if l[i] > 0:\n            return True\n        if l[i] < 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if i % 2 == 0:\n            return True\n        if i % 2 == 1:\n            return True\n        if i % 2 == 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (l[0] == 1) or (l[0] == 0) or (l[1] == 1) or (l[1] == 20)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for item in l:\n        if item < 0:\n            return False\n        else:\n            return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20]) and monotonic([1, 4, 20, 0, -10])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    for i in l:\n        if i[0] == 0:\n            return True\n        elif i[0] == 10:\n            return False\n        elif i[0] == 20:\n            return True\n        elif i[0] == 4:\n            return False\n        elif i[0] == 0:\n            return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 1:\n        return True\n    for i in l:\n        if i > 0:\n            return True\n        if i < 0:\n            return False\n    if len(l) == 3:\n        return False\n    for i in l:\n        if i > 0:\n            return False\n        if i < 0:\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return list(map(int, l)) == l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == len(l[0]) and len(l[1]) == len(l[2]) and len(l[3]) == len(l[4]) and len(l[5]) == len(l[6])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return len(l) == 1\n    return len(l) == 0", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for x in l:\n        if x < 0:\n            return False\n        if x > 10:\n            return True\n\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return True if len(l) == 1 else False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return (len(l) == 1 and l[0] == 4 and l[1] == 20 and l[2] == 10 and l[3] == 0)\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all([isinstance(x, list) for x in l]) and all(isinstance(y, list) for y in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        return False\n    for element in l:\n        if element in monotonic:\n            return True\n        else:\n            return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 20, 4, 10]) or monotonic([1, 20, -4]) or monotonic([1, 10, 0, -10])", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return l[0] == 0 and l[-1] == 0\n    elif isinstance(l, int):\n        return l[0] == 0 and l[-1] == 0\n    elif isinstance(l, str):\n        return l[0] == 0 and l[-1] == 0\n    else:\n        raise TypeError('Monotonic function must be a list or an int or a string.')", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    if len(l) == 1:\n        return True\n    if len(l) == 2:\n        return l[0] < l[1]\n    if len(l) == 3:\n        return l[0] <= l[1]\n    if len(l) == 4:\n        return l[0] >= l[1]\n    if len(l) == 5:\n        return l[0] > l[1]\n\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for x in l:\n        if x > 0:\n            return True\n        if x < 0:\n            return False\n        return False\n    return True", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic(self, l: list) -> bool:\n        if isinstance(l, list):\n            return l.__contains__(self)\n        else:\n            return l.__contains__(self) and l.__contains__(self[0]) and l.__contains__(self[1]) and l.__contains__(self[2]) and l.__contains__(self[3]) and l.__contains__(self[4]) and l.__contains__(self[5]) and l.__contains__(self[6]) and l.__contains__(self[7]) and l.__contains__(self[8]) and l.__contains__(self[9]) and l.__contains__(self[10]) and l.__contains__(self[11]) and l.__contains__(self[12]) and l.__contains__(self[13]) and l.__contains__(self[14]) and l.__contains__(self[15]) and l.__contains__(self[16]) and l.__contains__(self[17]) and l.__contains__(self[18]) and l.__contains__(self[19]) and l.__contains__(self[", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (len(l) == 1 or len(l) == 0) or (len(l) > 0 and l[0] == 1 or l[0] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        raise TypeError(\"List must be a list\")\n    for i in l:\n        if i not in (1, 2, 4, 20):\n            raise TypeError(\"List must be a list\")\n    return True\n</s>", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    for i in l:\n        if i == 0:\n            return True\n        if i == 1:\n            return True\n        if i == 4:\n            return True\n        if i == 0:\n            return True\n        if i == 0:\n            return True\n        return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if l[i] > l[i - 1] or l[i] < l[i + 1] or l[i] == -1:\n            return False\n    return True\n</s>", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(x, list) for x in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(len(l)):\n        if l[i] == 1:\n            return True\n        if l[i] == 0:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and len(l) == 1 and l[0] == 1 and l[1] == 4 and l[2] == 20 and l[3] == 10", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        raise TypeError(\"list must be a list\")\n    for i in l:\n        if i >= 0:\n            return True\n        else:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return all(a > 0 for a in l)\n    elif isinstance(l, tuple):\n        return all(a > 0 for a in l)\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 1:\n        return True\n    if len(l) == 2:\n        return False\n    if len(l) == 3:\n        return True\n    if len(l) == 4:\n        return False\n    if len(l) == 5:\n        return False\n    if len(l) == 6:\n        return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and l[0] == 2 and l[1] == 4 and l[2] == 20 and l[3] == 10", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (l.startswith(' ') and len(l) == 1 and l[0] == 4 and l[1] == 20 and l[2] == 10 and l[3] == 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not (isinstance(l, list) and len(l) == 1) and\n            len(l)!= 20 and len(l)!= 4 and len(l)!= 0)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if not isinstance(l, list):\n        raise TypeError('Expected list')\n    return all(map(int, l) == l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return len(l) == 1\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for l in l:\n        if not isinstance(l, list):\n            raise TypeError('Expected list to be list')\n        if isinstance(l[0], int):\n            return True\n        elif isinstance(l[0], long):\n            return True\n        elif isinstance(l[0], float):\n            return True\n        elif isinstance(l[0], float32):\n            return True\n        elif isinstance(l[0], int32):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], list):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l[0], bool):\n            return True\n        elif isinstance(l", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and len(l) == 1 and len(l[0]) == 2 and len(l[1]) == 4 and len(l[2]) == 20 and len(l[3]) == 4 and len(l[4]) == 0 and len(l[5]) == 0 and len(l[6]) == 0 and len(l[7]) == 0 and len(l[8]) == 0 and len(l[9]) == 0 and len(l[10]) == 0 and len(l[11]) == 0 and len(l[12]) == 0 and len(l[13]) == 0 and len(l[14]) == 0 and len(l[15]) == 0 and len(l[16]) == 0 and len(l[17]) == 0 and len(l[18]) == 0 and len(l[19]) == 0 and len(l[20]) == 0 and len(l[21]) == 0 and len(l[22]) == 0 and len(l[23]) and len(l[24]) and len(l[25]) and len(l[26]) and len(l[27]) and len(l[28]) and len(l[29]) and len", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if len(l) == 0:\n        return False\n    elif len(l) == 1:\n        return True\n    elif len(l) == 2:\n        return monotonic([1, 20, 4, 10])\n    elif len(l) == 3:\n        return monotonic([1, 20, 4, 10, 0, -10])\n    else:\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for (x, y) in l:\n        if y < x:\n            return True\n        else:\n            return False\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return len(l) == 2", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return all(isinstance(i, int) for i in l) and all(isinstance(j, int) for j in l)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    if isinstance(l, list) and len(l) == 2:\n        return l[0] == l[1]\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return itertools.islice(l, 1, 20) or itertools.islice(l, 10, -40) or itertools.islice(l, 0, 10) or itertools.islice(l, 20, 0) or itertools.islice(l, 0, 10) or itertools.islice(l, 10, 20)", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return isinstance(l, list) and l[0] == 20 and l[-1] == 4", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic_increasing(l: list):\n        \"\"\"Return True is list elements are monotonic increasing.\n        >>> monotonic_increasing([1, 2, 4, 20])\n        True\n        >>> monotonic_increasing([1, 20, 4, 10])\n        False\n        >>> monotonic_increasing([4, 1, 0, -10])\n        True\n        >>> monotonic_increasing([1, 20, 4, 10])\n        False\n        >>> monotonic_increasing([4, 1, 0, -10])\n        False\n        >>> monotonic_increasing([1, 20, 4, 10])\n        False\n        >>> monotonic_increasing([4, 1, 0, -10])\n        False\n        >>> monotonic_increasing([1, 20, 4, 10])\n        False\n        >>> monotonic_increasing([4, 1, 0, -10])\n        True\n        >>> monotonic_increasing([1, 20, 4, 10])\n        True\n        >>> monotonic_increasing([4, 1, 0, -10])\n        False\n        >>> monotonic_increasing([1, 20, 4, 10])\n        True\n        >>> monotonic_increasing([4, 1, 0, -10]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    for i in range(0, len(l)):\n        if i % 2 == 0:\n            return True\n        if i % 4 == 0:\n            return True\n        if i % 10 == 0:\n            return True\n        return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return (not isinstance(l[0], list)) and (not isinstance(l[1], list)) and (not isinstance(l[2], list)) and (not isinstance(l[3], list)) and (not isinstance(l[4], list)) and (not isinstance(l[5], list)) and (not isinstance(l[6], list)) and (not isinstance(l[7], list)) and (not isinstance(l[8], list)) and (not isinstance(l[9], list)) and (not isinstance(l[10], list)) and (not isinstance(l[11], list)) and (not isinstance(l[12], list)) and (not isinstance(l[13], list)) and (not isinstance(l[14], list)) and (not isinstance(l[15], list)) and (not isinstance(l[16], list)) and (not isinstance(l[17], list)) and (not isinstance(l[18], list)) and (not isinstance(l[19], list)) and (not isinstance(l[20], list)) and (not isinstance(l[21], list)) and (not isinstance(l[22], list)) and (not isinstance(l[23], list)) and (not isinstance(l[24]", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    if isinstance(l, list):\n        return True\n    for i in l:\n        if i in (1, 2, 4, 20):\n            return True\n    return False", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return list(set(map(int, l))).intersection(set(map(int, l))).issubset(set(map(int, l)))", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    def monotonic_compare(a: list, b: list):\n        \"\"\"Compare a list with another list.\"\"\"\n        if a!= b:\n            return True\n        return a > b\n\n    monotonic_compare([1, 2, 4], [1, 2, 4])\n    monotonic_compare([1, 4, 20], [1, 4, 4])\n    monotonic_compare([1, 20, 4, 10], [1, 20, 4, 10])\n    monotonic_compare([1, 10, 4, 4], [1, 10, 4])\n    monotonic_compare([1, 20, 4, 10], [1, 20, 4, 10])\n    monotonic_compare([1, 10, 4, 4], [1, 10, 4])\n    monotonic_compare([1, 20, 4, 10], [1, 20, 4, 10])\n    monotonic_compare([1, 20, 4, 10], [1, 20, 4, 10])\n    monotonic_compare([1, 20, 4, 10], [1, 20, 4, 10])\n    monotonic_compare([1, 10, 4, 4], [1, 10, 4])\n    monotonic_compare([1, 20, 4", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2, 4, 20]) or monotonic([1, 2, 4, 20]) == monotonic([1, 2,", "def monotonic(l: list):\n    \"\"\"Return True is list elements are monotonically increasing or decreasing.\n    >>> monotonic([1, 2, 4, 20])\n    True\n    >>> monotonic([1, 20, 4, 10])\n    False\n    >>> monotonic([4, 1, 0, -10])\n    True\n    \"\"\"\n    return monotonic([1, 2, 4, 20])"]]